--- a/home/whalien/codebase/cpp/mergebot/eva/output/duckdb/8e5b98eb-65cfcd58-e8610c85/src@parallel@pipeline_executor.no_comments_mergebot.cpp
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/duckdb/8e5b98eb-65cfcd58-e8610c85/src@parallel@pipeline_executor.no_comments_merged.cpp
@@ -30,0 +31,46 @@ PipelineExecutor::PipelineExecutor(ClientContext &context_p, Pipeline &pipeline_
+OperatorResultType PipelineExecutor::FlushCachingOperatorsPush() {
+ if (!started_flushing) {
+  started_flushing = true;
+  flushing_idx = IsFinished() ? idx_t(finished_processing_idx) : 0;
+ }
+ while (flushing_idx < pipeline.operators.size()) {
+  if (!pipeline.operators[flushing_idx].RequiresFinalExecute()) {
+   flushing_idx++;
+   continue;
+  }
+  auto &curr_chunk =
+   flushing_idx + 1 >= intermediate_chunks.size() ? final_chunk : *intermediate_chunks[flushing_idx + 1];
+  auto current_operator = pipeline.operators[flushing_idx];
+  OperatorFinalizeResultType finalize_result;
+  OperatorResultType push_result;
+  if (!blocked_on_have_more_output) {
+   StartOperator(current_operator);
+   finalize_result = current_operator.FinalExecute(context, curr_chunk, *current_operator->op_state,
+                      *intermediate_states[flushing_idx]);
+   EndOperator(current_operator, &curr_chunk);
+   push_result = ExecutePushInternal(curr_chunk, flushing_idx + 1);
+  } else {
+   blocked_on_have_more_output = false;
+   finalize_result = OperatorFinalizeResultType::HAVE_MORE_OUTPUT;
+   if (finalize_result_on_block == OperatorFinalizeResultType::FINISHED) {
+    auto &curr_chunk =
+        flushing_idx >= intermediate_chunks.size() ? final_chunk : *intermediate_chunks[flushing_idx];
+    push_result = ExecutePushInternal(curr_chunk, flushing_idx);
+   } else {
+    push_result = ExecutePushInternal(curr_chunk, flushing_idx + 1);
+   }
+  }
+  if (finalize_result == OperatorFinalizeResultType::FINISHED) {
+   flushing_idx++;
+  }
+  if (push_result == OperatorResultType::BLOCKED) {
+   finalize_result_on_block = finalize_result;
+   return OperatorResultType::BLOCKED;
+  }
+  if (push_result == OperatorResultType::FINISHED) {
+   break;
+  }
+ }
+ done_flushing = true;
+ return OperatorResultType::FINISHED;
+}
@@ -120,5 +165,0 @@ OperatorResultType PipelineExecutor::ExecutePushInternal(DataChunk &input, idx_t
-<<<<<<< HEAD
-   StartOperator(pipeline.sink);
-|||||||
-   StartOperator(pipeline.sink);
-=======
@@ -126 +166,0 @@ OperatorResultType PipelineExecutor::ExecutePushInternal(DataChunk &input, idx_t
->>>>>>> 65cfcd58745cf8bedb1ce4cccb4c1c8dccfc2cb7
@@ -129 +168,0 @@ OperatorResultType PipelineExecutor::ExecutePushInternal(DataChunk &input, idx_t
-<<<<<<< HEAD
@@ -132 +171 @@ OperatorResultType PipelineExecutor::ExecutePushInternal(DataChunk &input, idx_t
-   EndOperator(pipeline.sink, nullptr);
+   EndOperator(*pipeline.sink, nullptr);
@@ -139,9 +177,0 @@ OperatorResultType PipelineExecutor::ExecutePushInternal(DataChunk &input, idx_t
-|||||||
-   auto sink_result = pipeline.sink->Sink(context, *pipeline.sink->sink_state, *local_sink_state, sink_chunk);
-   EndOperator(pipeline.sink, nullptr);
-   if (sink_result == SinkResultType::FINISHED) {
-=======
-   auto sink_result = pipeline.sink->Sink(context, *pipeline.sink->sink_state, *local_sink_state, sink_chunk);
-   EndOperator(*pipeline.sink, nullptr);
-   if (sink_result == SinkResultType::FINISHED) {
->>>>>>> 65cfcd58745cf8bedb1ce4cccb4c1c8dccfc2cb7
@@ -157,76 +186,0 @@ OperatorResultType PipelineExecutor::ExecutePushInternal(DataChunk &input, idx_t
-OperatorResultType PipelineExecutor::FlushCachingOperatorsPush() {
-<<<<<<< HEAD
- if (!started_flushing) {
-  started_flushing = true;
-  flushing_idx = IsFinished() ? idx_t(finished_processing_idx) : 0;
- }
- while (flushing_idx < pipeline.operators.size()) {
-  if (!pipeline.operators[flushing_idx]->RequiresFinalExecute()) {
-   flushing_idx++;
-|||||||
- idx_t start_idx = IsFinished() ? idx_t(finished_processing_idx) : 0;
- for (idx_t op_idx = start_idx; op_idx < pipeline.operators.size(); op_idx++) {
-  if (!pipeline.operators[op_idx]->RequiresFinalExecute()) {
-=======
- idx_t start_idx = IsFinished() ? idx_t(finished_processing_idx) : 0;
- for (idx_t op_idx = start_idx; op_idx < pipeline.operators.size(); op_idx++) {
-  if (!pipeline.operators[op_idx].get().RequiresFinalExecute()) {
->>>>>>> 65cfcd58745cf8bedb1ce4cccb4c1c8dccfc2cb7
-   continue;
-  }
-  auto &curr_chunk =
-      flushing_idx + 1 >= intermediate_chunks.size() ? final_chunk : *intermediate_chunks[flushing_idx + 1];
-  auto current_operator = pipeline.operators[flushing_idx];
-  OperatorFinalizeResultType finalize_result;
-  OperatorResultType push_result;
-<<<<<<< HEAD
-  if (!blocked_on_have_more_output) {
-|||||||
-  do {
-   auto &curr_chunk =
-       op_idx + 1 >= intermediate_chunks.size() ? final_chunk : *intermediate_chunks[op_idx + 1];
-   auto current_operator = pipeline.operators[op_idx];
-=======
-  do {
-   auto &curr_chunk =
-       op_idx + 1 >= intermediate_chunks.size() ? final_chunk : *intermediate_chunks[op_idx + 1];
-   auto &current_operator = pipeline.operators[op_idx].get();
->>>>>>> 65cfcd58745cf8bedb1ce4cccb4c1c8dccfc2cb7
-   StartOperator(current_operator);
-<<<<<<< HEAD
-   finalize_result = current_operator->FinalExecute(context, curr_chunk, *current_operator->op_state,
-                                                    *intermediate_states[flushing_idx]);
-|||||||
-   finalize_result = current_operator->FinalExecute(context, curr_chunk, *current_operator->op_state,
-                                                    *intermediate_states[op_idx]);
-=======
-   finalize_result = current_operator.FinalExecute(context, curr_chunk, *current_operator.op_state,
-                                                   *intermediate_states[op_idx]);
->>>>>>> 65cfcd58745cf8bedb1ce4cccb4c1c8dccfc2cb7
-   EndOperator(current_operator, &curr_chunk);
-   push_result = ExecutePushInternal(curr_chunk, flushing_idx + 1);
-  } else {
-   blocked_on_have_more_output = false;
-   finalize_result = OperatorFinalizeResultType::HAVE_MORE_OUTPUT;
-   if (finalize_result_on_block == OperatorFinalizeResultType::FINISHED) {
-    auto &curr_chunk =
-        flushing_idx >= intermediate_chunks.size() ? final_chunk : *intermediate_chunks[flushing_idx];
-    push_result = ExecutePushInternal(curr_chunk, flushing_idx);
-   } else {
-    push_result = ExecutePushInternal(curr_chunk, flushing_idx + 1);
-   }
-  }
-  if (finalize_result == OperatorFinalizeResultType::FINISHED) {
-   flushing_idx++;
-  }
-  if (push_result == OperatorResultType::BLOCKED) {
-   finalize_result_on_block = finalize_result;
-   return OperatorResultType::BLOCKED;
-  }
-  if (push_result == OperatorResultType::FINISHED) {
-   break;
-  }
- }
- done_flushing = true;
- return OperatorResultType::FINISHED;
-}
@@ -400,2 +353 @@ SourceResultType PipelineExecutor::FetchFromSource(DataChunk &result) {
-<<<<<<< HEAD
- StartOperator(pipeline.source);
+ StartOperator(*pipeline.source);
@@ -406,7 +357,0 @@ SourceResultType PipelineExecutor::FetchFromSource(DataChunk &result) {
-|||||||
- StartOperator(pipeline.source);
- pipeline.source->GetData(context, result, *pipeline.source_state, *local_source_state);
-=======
- StartOperator(*pipeline.source);
- pipeline.source->GetData(context, result, *pipeline.source_state, *local_source_state);
->>>>>>> 65cfcd58745cf8bedb1ce4cccb4c1c8dccfc2cb7
@@ -421,6 +365,0 @@ SourceResultType PipelineExecutor::FetchFromSource(DataChunk &result) {
-<<<<<<< HEAD
- EndOperator(pipeline.source, &result);
- return res;
-|||||||
- EndOperator(pipeline.source, &result);
-=======
@@ -428 +367 @@ SourceResultType PipelineExecutor::FetchFromSource(DataChunk &result) {
->>>>>>> 65cfcd58745cf8bedb1ce4cccb4c1c8dccfc2cb7
+ return res;
