--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/192831ab-da52cc20-7f82d1a7/media@codec2@sfplugin@CCodec.no_comments_mergebot.cpp
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/192831ab-da52cc20-7f82d1a7/media@codec2@sfplugin@CCodec.no_comments_merged.cpp
@@ -9 +8,0 @@
-#include <android/IGraphicBufferSource.h>
@@ -17 +15,0 @@
-#include <media/omx/1.0/WGraphicBufferSource.h>
@@ -26 +23,0 @@
-#include "CCodec.h"
@@ -29 +25,0 @@
-#include "Omx2IGraphicBufferSource.h"
@@ -38,0 +35 @@ using namespace std::chrono_literals;
+using ::android::hardware::graphics::bufferqueue::V1_0::utils::H2BGraphicBufferProducer;
@@ -40,2 +36,0 @@ using android::base::StringPrintf;
-using ::android::hardware::graphics::bufferqueue::V1_0::utils::
-    H2BGraphicBufferProducer;
@@ -59 +54 @@ class CCodecWatchdog : public AHandler {
-  ~CCodecWatchdog()
+    ~CCodecWatchdog() = default;
@@ -107,5 +102,5 @@ class C2InputSurfaceWrapper : public InputSurfaceWrapper {
-      const std::shared_ptr<Codec2Client::InputSurface> &surface)
-      : mSurface(surface){}
-        () = delete;
-  status_t connect(
-      const std::shared_ptr<Codec2Client::Component> &comp) override {
+            const std::shared_ptr<Codec2Client::InputSurface> &surface) :
+        mSurface(surface) {
+    }
+    ~C2InputSurfaceWrapper() override = default;
+    status_t connect(const std::shared_ptr<Codec2Client::Component> &comp) override {
@@ -151,3 +149,2 @@ class GraphicBufferSourceWrapper : public InputSurfaceWrapper {
-  () = delete;
-  status_t connect(
-      const std::shared_ptr<Codec2Client::Component> &comp) override {
+    ~GraphicBufferSourceWrapper() override = default;
+    status_t connect(const std::shared_ptr<Codec2Client::Component> &comp) override {
@@ -171,3 +168 @@ class GraphicBufferSourceWrapper : public InputSurfaceWrapper {
-      ALOGD(
-          "GBSWrapper::disconnect: node is not configured with "
-          "OMXBufferSource.");
+            ALOGD("GBSWrapper::disconnect: node is not configured with OMXBufferSource.");
@@ -338,3 +327,3 @@ class Codec2ClientInterfaceWrapper : public C2ComponentStore {
-  virtual ~Codec2ClientInterfaceWrapper()
-      virtual c2_status_t
-      config_sm(const std::vector<C2Param *> &params,
+    virtual ~Codec2ClientInterfaceWrapper() = default;
+    virtual c2_status_t config_sm(
+            const std::vector<C2Param *> &params,
@@ -343,2 +332,3 @@ class Codec2ClientInterfaceWrapper : public C2ComponentStore {
-  }
-  virtual c2_status_t copyBuffer(std::shared_ptr<C2GraphicBuffer>,
+    };
+    virtual c2_status_t copyBuffer(
+            std::shared_ptr<C2GraphicBuffer>,
@@ -441 +433,2 @@ class CCodecCallbackImpl : public CCodecCallback {
-  explicit CCodecCallbackImpl(CCodec *codec) : mCodec(codec){}() = delete;
+    explicit CCodecCallbackImpl(CCodec *codec) : mCodec(codec) {}
+    ~CCodecCallbackImpl() override = default;
@@ -616,3 +608 @@ void CCodec::configure(const sp<AMessage> &msg) {
-        ALOGD(
-            "channel count is missing, which is required for audio "
-            "components.");
+                ALOGD("channel count is missing, which is required for audio components.");
@@ -646,3 +632 @@ void CCodec::configure(const sp<AMessage> &msg) {
-            ALOGD(
-                "quality is missing, which is required for video encoders in "
-                "CQ.");
+                        ALOGD("quality is missing, which is required for video encoders in CQ.");
@@ -658,5 +642,3 @@ void CCodec::configure(const sp<AMessage> &msg) {
-        if (!msg->findInt32(KEY_I_FRAME_INTERVAL, &i32) &&
-            !msg->findFloat(KEY_I_FRAME_INTERVAL, &flt)) {
-          ALOGD(
-              "I frame interval is missing, which is required for video "
-              "encoders.");
+                if (!msg->findInt32(KEY_I_FRAME_INTERVAL, &i32)
+                        && !msg->findFloat(KEY_I_FRAME_INTERVAL, &flt)) {
+                    ALOGD("I frame interval is missing, which is required for video encoders.");
@@ -1119 +1093,0 @@ void CCodec::start() {
-<<<<<<< HEAD
@@ -1122,6 +1095,0 @@ void CCodec::start() {
-||||||| 7f82d1a74e
-  err2 = mChannel->start(inputFormat, outputFormat);
-=======
-  (void)mSentConfigAfterResume.test_and_set();
-  err2 = mChannel->start(inputFormat, outputFormat);
->>>>>>> da52cc201ecf857b2f2ff1fb5596cc730d7bf47c
@@ -1341 +1311,0 @@ void CCodec::signalResume() {
-<<<<<<< HEAD
@@ -1353,10 +1322,0 @@ void CCodec::signalResume() {
-||||||| 7f82d1a74e
-  (void)mChannel->start(nullptr, nullptr);
-=======
-  mSentConfigAfterResume.clear();
-  {
-    Mutexed<Config>::Locked config(mConfig);
-    config->queryConfiguration(comp);
-  }
-  (void)mChannel->start(nullptr, nullptr);
->>>>>>> da52cc201ecf857b2f2ff1fb5596cc730d7bf47c
@@ -1533 +1486,0 @@ void CCodec::onMessageReceived(const sp<AMessage> &msg) {
-<<<<<<< HEAD
@@ -1537,7 +1489,0 @@ void CCodec::onMessageReceived(const sp<AMessage> &msg) {
-||||||| 7f82d1a74e
-      Mutexed<Config>::Locked config(mConfig);
-      bool changed = false;
-=======
-      Mutexed<Config>::Locked config(mConfig);
-      bool changed = !mSentConfigAfterResume.test_and_set();
->>>>>>> da52cc201ecf857b2f2ff1fb5596cc730d7bf47c
