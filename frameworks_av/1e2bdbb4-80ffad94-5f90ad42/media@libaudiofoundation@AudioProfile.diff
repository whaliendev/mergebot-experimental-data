diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/media@libaudiofoundation@AudioProfile.no_comments_mergebot.cpp b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/media@libaudiofoundation@AudioProfile.no_comments_merged.cpp
index 42acceb..b980c87 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/media@libaudiofoundation@AudioProfile.no_comments_mergebot.cpp
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/media@libaudiofoundation@AudioProfile.no_comments_merged.cpp
@@ -9 +9,2 @@ namespace android {
-bool operator==(const AudioProfile &left, const AudioProfile &right) {
+bool operator == (const AudioProfile &left, const AudioProfile &right)
+{
@@ -14,3 +15,4 @@ bool operator==(const AudioProfile &left, const AudioProfile &right) {
-sp<AudioProfile> AudioProfile::createFullDynamic(audio_format_t dynamicFormat) {
-  AudioProfile *dynamicProfile =
-      new AudioProfile(dynamicFormat, ChannelMaskSet(), SampleRateSet());
+sp<AudioProfile> AudioProfile::createFullDynamic(audio_format_t dynamicFormat)
+{
+    AudioProfile* dynamicProfile = new AudioProfile(dynamicFormat,
+            ChannelMaskSet(), SampleRateSet());
@@ -24,2 +26,4 @@ AudioProfile::AudioProfile(audio_format_t format,
-                           uint32_t samplingRate)
-    : mName(""), mFormat(format) {
+                           uint32_t samplingRate) :
+        mName(""),
+        mFormat(format)
+{
@@ -31,2 +35,2 @@ AudioProfile::AudioProfile(audio_format_t format,
-                           const SampleRateSet &samplingRateCollection)
-    : mName(""),
+                           const SampleRateSet &samplingRateCollection) :
+        mName(""),
@@ -36 +40,2 @@ AudioProfile::AudioProfile(audio_format_t format,
-void AudioProfile::setChannels(const ChannelMaskSet &channelMasks) {
+void AudioProfile::setChannels(const ChannelMaskSet &channelMasks)
+{
@@ -41 +46,2 @@ void AudioProfile::setChannels(const ChannelMaskSet &channelMasks) {
-void AudioProfile::setSampleRates(const SampleRateSet &sampleRates) {
+void AudioProfile::setSampleRates(const SampleRateSet &sampleRates)
+{
@@ -46 +52,2 @@ void AudioProfile::setSampleRates(const SampleRateSet &sampleRates) {
-void AudioProfile::clear() {
+void AudioProfile::clear()
+{
@@ -54,3 +61,3 @@ void AudioProfile::clear() {
-void AudioProfile::dump(std::string *dst, int spaces) const {
-  dst->append(base::StringPrintf("%s%s%s\n",
-                                 mIsDynamicFormat ? "[dynamic format]" : "",
+void AudioProfile::dump(std::string *dst, int spaces) const
+{
+    dst->append(base::StringPrintf("%s%s%s\n", mIsDynamicFormat ? "[dynamic format]" : "",
@@ -60,2 +67 @@ void AudioProfile::dump(std::string *dst, int spaces) const {
-    dst->append(
-        base::StringPrintf("%*s- name: %s\n", spaces, "", mName.c_str()));
+        dst->append(base::StringPrintf("%*s- name: %s\n", spaces, "", mName.c_str()));
@@ -65,2 +71 @@ void AudioProfile::dump(std::string *dst, int spaces) const {
-    dst->append(base::StringPrintf("%*s- format: %s\n", spaces, "",
-                                   formatLiteral.c_str()));
+        dst->append(base::StringPrintf("%*s- format: %s\n", spaces, "", formatLiteral.c_str()));
@@ -85,2 +90,4 @@ void AudioProfile::dump(std::string *dst, int spaces) const {
-bool AudioProfile::equals(const sp<AudioProfile> &other) const {
-  return other != nullptr && mName.compare(other->mName) == 0 &&
+bool AudioProfile::equals(const sp<AudioProfile>& other) const
+{
+    return other != nullptr &&
+           mName.compare(other->mName) == 0 &&
@@ -94 +101,2 @@ bool AudioProfile::equals(const sp<AudioProfile> &other) const {
-status_t AudioProfile::writeToParcel(Parcel *parcel) const {
+status_t AudioProfile::writeToParcel(Parcel *parcel) const
+{
@@ -104,2 +112 @@ status_t AudioProfile::writeToParcel(Parcel *parcel) const {
-  if ((status = parcel->writeBool(mIsDynamicChannels)) != NO_ERROR)
-    return status;
+    if ((status = parcel->writeBool(mIsDynamicChannels)) != NO_ERROR) return status;
@@ -109 +116,2 @@ status_t AudioProfile::writeToParcel(Parcel *parcel) const {
-status_t AudioProfile::readFromParcel(const Parcel *parcel) {
+status_t AudioProfile::readFromParcel(const Parcel *parcel)
+{
@@ -113,2 +121 @@ status_t AudioProfile::readFromParcel(const Parcel *parcel) {
-  if ((status = parcel->readUint32(reinterpret_cast<uint32_t *>(&mFormat))) !=
-      NO_ERROR) {
+    if ((status = parcel->readUint32(reinterpret_cast<uint32_t*>(&mFormat))) != NO_ERROR) {
@@ -126,2 +133 @@ status_t AudioProfile::readFromParcel(const Parcel *parcel) {
-  if ((status = parcel->readBool(&mIsDynamicChannels)) != NO_ERROR)
-    return status;
+    if ((status = parcel->readBool(&mIsDynamicChannels)) != NO_ERROR) return status;
@@ -131 +137,2 @@ status_t AudioProfile::readFromParcel(const Parcel *parcel) {
-ssize_t AudioProfileVector::add(const sp<AudioProfile> &profile) {
+ssize_t AudioProfileVector::add(const sp<AudioProfile> &profile)
+{
@@ -136 +143,2 @@ ssize_t AudioProfileVector::add(const sp<AudioProfile> &profile) {
-void AudioProfileVector::clearProfiles() {
+void AudioProfileVector::clearProfiles()
+{
@@ -146 +154,2 @@ void AudioProfileVector::clearProfiles() {
-sp<AudioProfile> AudioProfileVector::getFirstValidProfile() const {
+sp<AudioProfile> AudioProfileVector::getFirstValidProfile() const
+{
@@ -154,2 +163,2 @@ sp<AudioProfile> AudioProfileVector::getFirstValidProfile() const {
-sp<AudioProfile> AudioProfileVector::getFirstValidProfileFor(
-    audio_format_t format) const {
+sp<AudioProfile> AudioProfileVector::getFirstValidProfileFor(audio_format_t format) const
+{
@@ -163 +172,2 @@ sp<AudioProfile> AudioProfileVector::getFirstValidProfileFor(
-FormatVector AudioProfileVector::getSupportedFormats() const {
+FormatVector AudioProfileVector::getSupportedFormats() const
+{
@@ -172 +182,2 @@ FormatVector AudioProfileVector::getSupportedFormats() const {
-bool AudioProfileVector::hasDynamicChannelsFor(audio_format_t format) const {
+bool AudioProfileVector::hasDynamicChannelsFor(audio_format_t format) const
+{
@@ -180 +191,2 @@ bool AudioProfileVector::hasDynamicChannelsFor(audio_format_t format) const {
-bool AudioProfileVector::hasDynamicFormat() const {
+bool AudioProfileVector::hasDynamicFormat() const
+{
@@ -188 +200,2 @@ bool AudioProfileVector::hasDynamicFormat() const {
-bool AudioProfileVector::hasDynamicProfile() const {
+bool AudioProfileVector::hasDynamicProfile() const
+{
@@ -196 +209,2 @@ bool AudioProfileVector::hasDynamicProfile() const {
-bool AudioProfileVector::hasDynamicRateFor(audio_format_t format) const {
+bool AudioProfileVector::hasDynamicRateFor(audio_format_t format) const
+{
@@ -204 +218,2 @@ bool AudioProfileVector::hasDynamicRateFor(audio_format_t format) const {
-void AudioProfileVectorBase::dump(std::string *dst, int spaces) const {
+void AudioProfileVector::dump(std::string *dst, int spaces) const
+{
@@ -213 +228,2 @@ void AudioProfileVectorBase::dump(std::string *dst, int spaces) const {
-status_t AudioProfileVector::writeToParcel(Parcel *parcel) const {
+status_t AudioProfileVector::writeToParcel(Parcel *parcel) const
+{
@@ -223 +239,2 @@ status_t AudioProfileVector::writeToParcel(Parcel *parcel) const {
-status_t AudioProfileVector::readFromParcel(const Parcel *parcel) {
+status_t AudioProfileVector::readFromParcel(const Parcel *parcel)
+{
@@ -228,2 +245 @@ status_t AudioProfileVector::readFromParcel(const Parcel *parcel) {
-    this->at(i) = new AudioProfile(AUDIO_FORMAT_DEFAULT, AUDIO_CHANNEL_NONE,
-                                   0 );
+        this->at(i) = new AudioProfile(AUDIO_FORMAT_DEFAULT, AUDIO_CHANNEL_NONE, 0 );
@@ -237,3 +253,3 @@ status_t AudioProfileVector::readFromParcel(const Parcel *parcel) {
-bool AudioProfileVector::equals(const AudioProfileVector &other) const {
-  return std::equal(
-      begin(), end(), other.begin(), other.end(),
+bool AudioProfileVector::equals(const AudioProfileVector& other) const
+{
+    return std::equal(begin(), end(), other.begin(), other.end(),
