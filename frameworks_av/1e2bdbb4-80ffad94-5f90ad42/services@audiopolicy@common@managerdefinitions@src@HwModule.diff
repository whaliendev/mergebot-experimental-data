diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/services@audiopolicy@common@managerdefinitions@src@HwModule.no_comments_mergebot.cpp b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/services@audiopolicy@common@managerdefinitions@src@HwModule.no_comments_merged.cpp
index 4035f32..1520f81 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/services@audiopolicy@common@managerdefinitions@src@HwModule.no_comments_mergebot.cpp
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/services@audiopolicy@common@managerdefinitions@src@HwModule.no_comments_merged.cpp
@@ -7,3 +7,4 @@ namespace android {
-HwModule::HwModule(const char *name, uint32_t halVersionMajor,
-                   uint32_t halVersionMinor)
-    : mName(String8(name)), mHandle(AUDIO_MODULE_HANDLE_NONE) {
+HwModule::HwModule(const char *name, uint32_t halVersionMajor, uint32_t halVersionMinor)
+    : mName(String8(name)),
+      mHandle(AUDIO_MODULE_HANDLE_NONE)
+{
@@ -12 +13,2 @@ HwModule::HwModule(const char *name, uint32_t halVersionMajor,
-HwModule::~HwModule() {
+HwModule::~HwModule()
+{
@@ -20,4 +22,3 @@ HwModule::~HwModule() {
-status_t HwModule::addOutputProfile(const std::string &name,
-                                    const audio_config_t *config,
-                                    audio_devices_t device,
-                                    const String8 &address) {
+status_t HwModule::addOutputProfile(const std::string& name, const audio_config_t *config,
+                                    audio_devices_t device, const String8& address)
+{
@@ -25,12 +26,3 @@ status_t HwModule::addOutputProfile(const std::string &name,
-  profile->addAudioProfile(new AudioProfile(
-      config->format, config->channel_mask, config->sample_rate));
-<<<<<<< HEAD
-  sp<DeviceDescriptor> devDesc =
-      new DeviceDescriptor(device, "" , address.string());
-||||||| 5f90ad4290
-  sp<DeviceDescriptor> devDesc = new DeviceDescriptor(device);
-  devDesc->setAddress(address);
-=======
-  sp<DeviceDescriptor> devDesc = new DeviceDescriptor(device);
-  devDesc->setAddress(address.string());
->>>>>>> 80ffad94f2b41098bad4f35f2399eb05e8c5ee34
+    profile->addAudioProfile(new AudioProfile(config->format, config->channel_mask,
+                                              config->sample_rate));
+    sp<DeviceDescriptor> devDesc = new DeviceDescriptor(device, "" , address.string());
@@ -42 +34,2 @@ status_t HwModule::addOutputProfile(const std::string &name,
-status_t HwModule::addOutputProfile(const sp<IOProfile> &profile) {
+status_t HwModule::addOutputProfile(const sp<IOProfile> &profile)
+{
@@ -48 +41,2 @@ status_t HwModule::addOutputProfile(const sp<IOProfile> &profile) {
-status_t HwModule::addInputProfile(const sp<IOProfile> &profile) {
+status_t HwModule::addInputProfile(const sp<IOProfile> &profile)
+{
@@ -54 +48,2 @@ status_t HwModule::addInputProfile(const sp<IOProfile> &profile) {
-status_t HwModule::addProfile(const sp<IOProfile> &profile) {
+status_t HwModule::addProfile(const sp<IOProfile> &profile)
+{
@@ -65 +60,2 @@ status_t HwModule::addProfile(const sp<IOProfile> &profile) {
-void HwModule::setProfiles(const IOProfileCollection &profiles) {
+void HwModule::setProfiles(const IOProfileCollection &profiles)
+{
@@ -70 +66,2 @@ void HwModule::setProfiles(const IOProfileCollection &profiles) {
-status_t HwModule::removeOutputProfile(const std::string &name) {
+status_t HwModule::removeOutputProfile(const std::string& name)
+{
@@ -82,4 +79,3 @@ status_t HwModule::removeOutputProfile(const std::string &name) {
-status_t HwModule::addInputProfile(const std::string &name,
-                                   const audio_config_t *config,
-                                   audio_devices_t device,
-                                   const String8 &address) {
+status_t HwModule::addInputProfile(const std::string& name, const audio_config_t *config,
+                                   audio_devices_t device, const String8& address)
+{
@@ -87,12 +83,3 @@ status_t HwModule::addInputProfile(const std::string &name,
-  profile->addAudioProfile(new AudioProfile(
-      config->format, config->channel_mask, config->sample_rate));
-<<<<<<< HEAD
-  sp<DeviceDescriptor> devDesc =
-      new DeviceDescriptor(device, "" , address.string());
-||||||| 5f90ad4290
-  sp<DeviceDescriptor> devDesc = new DeviceDescriptor(device);
-  devDesc->setAddress(address);
-=======
-  sp<DeviceDescriptor> devDesc = new DeviceDescriptor(device);
-  devDesc->setAddress(address.string());
->>>>>>> 80ffad94f2b41098bad4f35f2399eb05e8c5ee34
+    profile->addAudioProfile(new AudioProfile(config->format, config->channel_mask,
+                                              config->sample_rate));
+    sp<DeviceDescriptor> devDesc = new DeviceDescriptor(device, "" , address.string());
@@ -102,2 +89,2 @@ status_t HwModule::addInputProfile(const std::string &name,
-  ALOGV("addInputProfile() name %s rate %d mask 0x%08x", name.c_str(),
-        config->sample_rate, config->channel_mask);
+    ALOGV("addInputProfile() name %s rate %d mask 0x%08x",
+          name.c_str(), config->sample_rate, config->channel_mask);
@@ -106 +93,2 @@ status_t HwModule::addInputProfile(const std::string &name,
-status_t HwModule::removeInputProfile(const std::string &name) {
+status_t HwModule::removeInputProfile(const std::string& name)
+{
@@ -118 +106,2 @@ status_t HwModule::removeInputProfile(const std::string &name) {
-void HwModule::setDeclaredDevices(const DeviceVector &devices) {
+void HwModule::setDeclaredDevices(const DeviceVector &devices)
+{
@@ -124,2 +113,2 @@ void HwModule::setDeclaredDevices(const DeviceVector &devices) {
-sp<DeviceDescriptor> HwModule::getRouteSinkDevice(
-    const sp<AudioRoute> &route) const {
+sp<DeviceDescriptor> HwModule::getRouteSinkDevice(const sp<AudioRoute> &route) const
+{
@@ -128,2 +117 @@ sp<DeviceDescriptor> HwModule::getRouteSinkDevice(
-    sinkDevice =
-        mDeclaredDevices.getDeviceFromTagName(route->getSink()->getTagName());
+        sinkDevice = mDeclaredDevices.getDeviceFromTagName(route->getSink()->getTagName());
@@ -133,2 +121,2 @@ sp<DeviceDescriptor> HwModule::getRouteSinkDevice(
-DeviceVector HwModule::getRouteSourceDevices(
-    const sp<AudioRoute> &route) const {
+DeviceVector HwModule::getRouteSourceDevices(const sp<AudioRoute> &route) const
+{
@@ -138,2 +126 @@ DeviceVector HwModule::getRouteSourceDevices(
-      sourceDevices.add(
-          mDeclaredDevices.getDeviceFromTagName(source->getTagName()));
+            sourceDevices.add(mDeclaredDevices.getDeviceFromTagName(source->getTagName()));
@@ -144 +131,2 @@ DeviceVector HwModule::getRouteSourceDevices(
-void HwModule::setRoutes(const AudioRouteVector &routes) {
+void HwModule::setRoutes(const AudioRouteVector &routes)
+{
@@ -148 +136,2 @@ void HwModule::setRoutes(const AudioRouteVector &routes) {
-void HwModule::refreshSupportedDevices() {
+void HwModule::refreshSupportedDevices()
+{
@@ -159,2 +148 @@ void HwModule::refreshSupportedDevices() {
-        ALOGE("%s: invalid source devices for %s", __FUNCTION__,
-              stream->getName().c_str());
+                ALOGE("%s: invalid source devices for %s", __FUNCTION__, stream->getName().c_str());
@@ -166,2 +154 @@ void HwModule::refreshSupportedDevices() {
-      ALOGE("%s: invalid source devices for %s", __FUNCTION__,
-            stream->getName().c_str());
+            ALOGE("%s: invalid source devices for %s", __FUNCTION__, stream->getName().c_str());
@@ -175,2 +162 @@ void HwModule::refreshSupportedDevices() {
-      sp<PolicyAudioPort> source =
-          findByTagName(route->getSources(), stream->getTagName());
+            sp<PolicyAudioPort> source = findByTagName(route->getSources(), stream->getTagName());
@@ -183,2 +169 @@ void HwModule::refreshSupportedDevices() {
-        ALOGE("%s: invalid sink device for %s", __FUNCTION__,
-              stream->getName().c_str());
+                ALOGE("%s: invalid sink device for %s", __FUNCTION__, stream->getName().c_str());
@@ -198,3 +183 @@ bool HwModule::supportsPatch(const sp<PolicyAudioPort> &srcPort,
-                             const sp<PolicyAudioPort> &dstPort,
-                             const sp<AudioPort> &srcPort,
-                             const sp<AudioPort> &dstPort) const {
+                             const sp<PolicyAudioPort> &dstPort) const {
@@ -208 +191,2 @@ bool HwModule::supportsPatch(const sp<PolicyAudioPort> &srcPort,
-void HwModule::dump(String8 *dst) const {
+void HwModule::dump(String8 *dst) const
+{
@@ -211,2 +195 @@ void HwModule::dump(String8 *dst) const {
-  dst->appendFormat("  - version: %u.%u\n", getHalVersionMajor(),
-                    getHalVersionMinor());
+    dst->appendFormat("  - version: %u.%u\n", getHalVersionMajor(), getHalVersionMinor());
@@ -231 +214,2 @@ void HwModule::dump(String8 *dst) const {
-sp<HwModule> HwModuleCollection::getModuleFromName(const char *name) const {
+sp <HwModule> HwModuleCollection::getModuleFromName(const char *name) const
+{
@@ -239,2 +223,3 @@ sp<HwModule> HwModuleCollection::getModuleFromName(const char *name) const {
-sp<HwModule> HwModuleCollection::getModuleForDeviceType(
-    audio_devices_t type, audio_format_t encodedFormat) const {
+sp <HwModule> HwModuleCollection::getModuleForDeviceType(audio_devices_t type,
+                                                         audio_format_t encodedFormat) const
+{
@@ -242,3 +227,2 @@ sp<HwModule> HwModuleCollection::getModuleForDeviceType(
-    const auto &profiles = audio_is_output_device(type)
-                               ? module->getOutputProfiles()
-                               : module->getInputProfiles();
+        const auto& profiles = audio_is_output_device(type) ?
+                module->getOutputProfiles() : module->getInputProfiles();
@@ -262,2 +246,3 @@ sp<HwModule> HwModuleCollection::getModuleForDeviceType(
-sp<HwModule> HwModuleCollection::getModuleForDevice(
-    const sp<DeviceDescriptor> &device, audio_format_t encodedFormat) const {
+sp<HwModule> HwModuleCollection::getModuleForDevice(const sp<DeviceDescriptor> &device,
+                                                     audio_format_t encodedFormat) const
+{
@@ -267 +252,2 @@ DeviceVector HwModuleCollection::getAvailableDevicesFromModuleName(
-    const char *name, const DeviceVector &availableDevices) const {
+        const char *name, const DeviceVector &availableDevices) const
+{
@@ -274,8 +260,9 @@ DeviceVector HwModuleCollection::getAvailableDevicesFromModuleName(
-sp<DeviceDescriptor> HwModuleCollection::getDeviceDescriptor(
-    const audio_devices_t deviceType, const char *address, const char *name,
-    const audio_format_t encodedFormat, bool allowToCreate,
-    bool matchAddress) const {
-  String8 devAddress =
-      (address == nullptr || !matchAddress) ? String8("") : String8(address);
-  if (device_distinguishes_on_address(deviceType) &&
-      (devAddress.length() == 0)) {
+sp<DeviceDescriptor> HwModuleCollection::getDeviceDescriptor(const audio_devices_t deviceType,
+                                                             const char *address,
+                                                             const char *name,
+                                                             const audio_format_t encodedFormat,
+                                                             bool allowToCreate,
+                                                             bool matchAddress) const
+{
+    String8 devAddress = (address == nullptr || !matchAddress) ? String8("") : String8(address);
+    if (device_distinguishes_on_address(deviceType) && (devAddress.length() == 0)) {
@@ -286,2 +273 @@ sp<DeviceDescriptor> HwModuleCollection::getDeviceDescriptor(
-    auto moduleDevice =
-        moduleDevices.getDevice(deviceType, devAddress, encodedFormat);
+        auto moduleDevice = moduleDevices.getDevice(deviceType, devAddress, encodedFormat);
@@ -301,2 +287,2 @@ sp<DeviceDescriptor> HwModuleCollection::getDeviceDescriptor(
-    ALOGV("%s: could not find HW module for device %s %04x address %s",
-          __FUNCTION__, name, deviceType, address);
+        ALOGV("%s: could not find HW module for device %s %04x address %s", __FUNCTION__,
+              name, deviceType, address);
@@ -307,3 +293,5 @@ sp<DeviceDescriptor> HwModuleCollection::getDeviceDescriptor(
-sp<DeviceDescriptor> HwModuleCollection::createDevice(
-    const audio_devices_t type, const char *address, const char *name,
-    const audio_format_t encodedFormat) const {
+sp<DeviceDescriptor> HwModuleCollection::createDevice(const audio_devices_t type,
+                                                      const char *address,
+                                                      const char *name,
+                                                      const audio_format_t encodedFormat) const
+{
@@ -312,2 +300,2 @@ sp<DeviceDescriptor> HwModuleCollection::createDevice(
-    ALOGE("%s: could not find HW module for device %04x address %s",
-          __FUNCTION__, type, address);
+        ALOGE("%s: could not find HW module for device %04x address %s", __FUNCTION__, type,
+              address);
@@ -318,6 +305,0 @@ sp<DeviceDescriptor> HwModuleCollection::createDevice(
-<<<<<<< HEAD
-||||||| 5f90ad4290
-  device->setAddress(String8(address));
-=======
-  device->setAddress(address);
->>>>>>> 80ffad94f2b41098bad4f35f2399eb05e8c5ee34
@@ -329,3 +311,2 @@ sp<DeviceDescriptor> HwModuleCollection::createDevice(
-  const auto &profiles =
-      (audio_is_output_device(type) ? hwModule->getOutputProfiles()
-                                    : hwModule->getInputProfiles());
+    const auto &profiles = (audio_is_output_device(type) ? hwModule->getOutputProfiles() :
+                                                             hwModule->getInputProfiles());
@@ -335,4 +316,2 @@ sp<DeviceDescriptor> HwModuleCollection::createDevice(
-          profile->getSupportedDevices().getDevice(type, String8(),
-                                                   AUDIO_FORMAT_DEFAULT);
-      device->importAudioPortAndPickAudioProfile(isoTypeDeviceForProfile,
-                                                 true );
+                profile->getSupportedDevices().getDevice(type, String8(), AUDIO_FORMAT_DEFAULT);
+            device->importAudioPortAndPickAudioProfile(isoTypeDeviceForProfile, true );
@@ -346 +325,2 @@ sp<DeviceDescriptor> HwModuleCollection::createDevice(
-void HwModuleCollection::cleanUpForDevice(const sp<DeviceDescriptor> &device) {
+void HwModuleCollection::cleanUpForDevice(const sp<DeviceDescriptor> &device)
+{
@@ -352,2 +332 @@ void HwModuleCollection::cleanUpForDevice(const sp<DeviceDescriptor> &device) {
-    if (audio_is_remote_submix_device(device->type()) &&
-        device->address() != "0") {
+        if (audio_is_remote_submix_device(device->type()) && device->address() != "0") {
@@ -363,3 +342,2 @@ void HwModuleCollection::cleanUpForDevice(const sp<DeviceDescriptor> &device) {
-    const IOProfileCollection &profiles = audio_is_output_device(device->type())
-                                              ? hwModule->getOutputProfiles()
-                                              : hwModule->getInputProfiles();
+        const IOProfileCollection &profiles = audio_is_output_device(device->type()) ?
+                    hwModule->getOutputProfiles() : hwModule->getInputProfiles();
@@ -375 +353,2 @@ void HwModuleCollection::cleanUpForDevice(const sp<DeviceDescriptor> &device) {
-void HwModuleCollection::dump(String8 *dst) const {
+void HwModuleCollection::dump(String8 *dst) const
+{
