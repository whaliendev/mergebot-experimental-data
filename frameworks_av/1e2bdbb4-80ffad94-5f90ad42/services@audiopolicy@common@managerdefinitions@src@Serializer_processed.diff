--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/services@audiopolicy@common@managerdefinitions@src@Serializer.no_comments_mergebot.cpp
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/1e2bdbb4-80ffad94-5f90ad42/services@audiopolicy@common@managerdefinitions@src@Serializer.no_comments_merged.cpp
@@ -165 +157,2 @@ class PolicySerializer {
-  PolicySerializer() : mVersion {
+    PolicySerializer() : mVersion{std::to_string(gMajor) + "." + std::to_string(gMinor)}
+    {
@@ -179,0 +171,6 @@ template <class T>
+constexpr void (*xmlDeleter)(T* t);
+template <>
+constexpr auto xmlDeleter<xmlDoc> = xmlFreeDoc;
+template <>
+auto xmlDeleter<xmlChar> = [](xmlChar *s) { xmlFree(s); };
+template <class T>
@@ -301,5 +289,3 @@ Return<AudioGainTraits::Element> AudioGainTraits::deserialize(
-  ALOGV(
-      "%s: adding new gain mode %08x channel mask %08x min mB %d max mB %d "
-      "UseForVolume: %d",
-      __func__, gain->getMode(), gain->getChannelMask(),
-      gain->getMinValueInMb(), gain->getMaxValueInMb(), useForVolume);
+    ALOGV("%s: adding new gain mode %08x channel mask %08x min mB %d max mB %d UseForVolume: %d",
+          __func__, gain->getMode(), gain->getChannelMask(), gain->getMinValueInMb(),
+          gain->getMaxValueInMb(), useForVolume);
@@ -419,14 +401 @@ Return<DevicePortTraits::Element> DevicePortTraits::deserialize(
-<<<<<<< HEAD
-  Element deviceDesc =
-      new DeviceDescriptor(type, name, address, encodedFormats);
-||||||| 5f90ad4290
-  if (!address.empty()) {
-    ALOGV("%s: address=%s for %s", __func__, address.c_str(), name.c_str());
-    deviceDesc->setAddress(String8(address.c_str()));
-  }
-=======
-  if (!address.empty()) {
-    ALOGV("%s: address=%s for %s", __func__, address.c_str(), name.c_str());
-    deviceDesc->setAddress(address);
-  }
->>>>>>> 80ffad94f2b41098bad4f35f2399eb05e8c5ee34
+    Element deviceDesc = new DeviceDescriptor(type, name, address, encodedFormats);
