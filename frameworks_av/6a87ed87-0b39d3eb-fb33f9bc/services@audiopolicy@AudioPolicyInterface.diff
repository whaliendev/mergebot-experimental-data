diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@AudioPolicyInterface.no_comments_mergebot.h b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@AudioPolicyInterface.no_comments_merged.h
index e2106eb..2278f5a 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@AudioPolicyInterface.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@AudioPolicyInterface.no_comments_merged.h
@@ -9 +9,2 @@ namespace android {
-class AudioPolicyInterface {
+class AudioPolicyInterface
+{
@@ -24,0 +26 @@ class AudioPolicyInterface {
+public:
@@ -31,2 +33,2 @@ class AudioPolicyInterface {
-  virtual audio_policy_dev_state_t getDeviceConnectionState(
-      audio_devices_t device, const char *device_address) = 0;
+    virtual audio_policy_dev_state_t getDeviceConnectionState(audio_devices_t device,
+                                                                          const char *device_address) = 0;
@@ -38,4 +40,2 @@ class AudioPolicyInterface {
-  virtual void setForceUse(audio_policy_force_use_t usage,
-                           audio_policy_forced_cfg_t config) = 0;
-  virtual audio_policy_forced_cfg_t getForceUse(
-      audio_policy_force_use_t usage) = 0;
+    virtual void setForceUse(audio_policy_force_use_t usage, audio_policy_forced_cfg_t config) = 0;
+    virtual audio_policy_forced_cfg_t getForceUse(audio_policy_force_use_t usage) = 0;
@@ -45,5 +45,9 @@ class AudioPolicyInterface {
-  virtual status_t getOutputForAttr(
-      const audio_attributes_t *attr, audio_io_handle_t *output,
-      audio_session_t session, audio_stream_type_t *stream, uid_t uid,
-      const audio_config_t *config, audio_output_flags_t *flags,
-      audio_port_handle_t *selectedDeviceId, audio_port_handle_t *portId,
+    virtual status_t getOutputForAttr(const audio_attributes_t *attr,
+                                        audio_io_handle_t *output,
+                                        audio_session_t session,
+                                        audio_stream_type_t *stream,
+                                        uid_t uid,
+                                        const audio_config_t *config,
+                                        audio_output_flags_t *flags,
+                                        audio_port_handle_t *selectedDeviceId,
+                                        audio_port_handle_t *portId,
@@ -55,5 +59,9 @@ class AudioPolicyInterface {
-  virtual status_t getInputForAttr(
-      const audio_attributes_t *attr, audio_io_handle_t *input,
-      audio_unique_id_t riid, audio_session_t session, uid_t uid,
-      const audio_config_base_t *config, audio_input_flags_t flags,
-      audio_port_handle_t *selectedDeviceId, input_type_t *inputType,
+    virtual status_t getInputForAttr(const audio_attributes_t *attr,
+                                     audio_io_handle_t *input,
+                                     audio_unique_id_t riid,
+                                     audio_session_t session,
+                                     uid_t uid,
+                                     const audio_config_base_t *config,
+                                     audio_input_flags_t flags,
+                                     audio_port_handle_t *selectedDeviceId,
+                                     input_type_t *inputType,
@@ -64 +72,2 @@ class AudioPolicyInterface {
-  virtual void initStreamVolume(audio_stream_type_t stream, int indexMin,
+    virtual void initStreamVolume(audio_stream_type_t stream,
+                                      int indexMin,
@@ -66 +75,2 @@ class AudioPolicyInterface {
-  virtual status_t setStreamVolumeIndex(audio_stream_type_t stream, int index,
+    virtual status_t setStreamVolumeIndex(audio_stream_type_t stream,
+                                          int index,
@@ -68 +78,2 @@ class AudioPolicyInterface {
-  virtual status_t getStreamVolumeIndex(audio_stream_type_t stream, int *index,
+    virtual status_t getStreamVolumeIndex(audio_stream_type_t stream,
+                                          int *index,
@@ -76,4 +87,4 @@ class AudioPolicyInterface {
-  virtual status_t getMaxVolumeIndexForAttributes(
-      const audio_attributes_t &attr, int &index) = 0;
-  virtual status_t getMinVolumeIndexForAttributes(
-      const audio_attributes_t &attr, int &index) = 0;
+    virtual status_t getMaxVolumeIndexForAttributes(const audio_attributes_t &attr,
+                                                    int &index) = 0;
+    virtual status_t getMinVolumeIndexForAttributes(const audio_attributes_t &attr,
+                                                    int &index) = 0;
@@ -82,2 +93 @@ class AudioPolicyInterface {
-  virtual audio_io_handle_t getOutputForEffect(
-      const effect_descriptor_t *desc) = 0;
+    virtual audio_io_handle_t getOutputForEffect(const effect_descriptor_t *desc) = 0;
@@ -85,2 +95,4 @@ class AudioPolicyInterface {
-                                  audio_io_handle_t io, uint32_t strategy,
-                                  int session, int id) = 0;
+                                    audio_io_handle_t io,
+                                    uint32_t strategy,
+                                    int session,
+                                    int id) = 0;
@@ -89,4 +101,2 @@ class AudioPolicyInterface {
-  virtual status_t moveEffectsToIo(const std::vector<int> &ids,
-                                   audio_io_handle_t io) = 0;
-  virtual bool isStreamActive(audio_stream_type_t stream,
-                              uint32_t inPastMs = 0) const = 0;
+    virtual status_t moveEffectsToIo(const std::vector<int>& ids, audio_io_handle_t io) = 0;
+    virtual bool isStreamActive(audio_stream_type_t stream, uint32_t inPastMs = 0) const = 0;
@@ -97,2 +107 @@ class AudioPolicyInterface {
-  virtual status_t setAllowedCapturePolicy(uid_t uid,
-                                           audio_flags_mask_t flags) = 0;
+    virtual status_t setAllowedCapturePolicy(uid_t uid, audio_flags_mask_t flags) = 0;
@@ -100,2 +109 @@ class AudioPolicyInterface {
-  virtual bool isDirectOutputSupported(
-      const audio_config_base_t &config,
+    virtual bool isDirectOutputSupported(const audio_config_base_t& config,
@@ -117,2 +125 @@ class AudioPolicyInterface {
-  virtual status_t setAudioPortConfig(
-      const struct audio_port_config *config) = 0;
+    virtual status_t setAudioPortConfig(const struct audio_port_config *config) = 0;
@@ -126,2 +133,2 @@ class AudioPolicyInterface {
-  virtual status_t setUidDeviceAffinities(
-      uid_t uid, const Vector<AudioDeviceTypeAddr> &devices) = 0;
+    virtual status_t setUidDeviceAffinities(uid_t uid, const Vector<AudioDeviceTypeAddr>& devices)
+            = 0;
@@ -131 +138,2 @@ class AudioPolicyInterface {
-                                    audio_port_handle_t *portId, uid_t uid) = 0;
+                                      audio_port_handle_t *portId,
+                                      uid_t uid) = 0;
@@ -135,2 +143,2 @@ class AudioPolicyInterface {
-  virtual float getStreamVolumeDB(audio_stream_type_t stream, int index,
-                                  audio_devices_t device) = 0;
+    virtual float getStreamVolumeDB(
+                audio_stream_type_t stream, int index, audio_devices_t device) = 0;
@@ -141,2 +149 @@ class AudioPolicyInterface {
-  virtual status_t setSurroundFormatEnabled(audio_format_t audioFormat,
-                                            bool enabled) = 0;
+    virtual status_t setSurroundFormatEnabled(audio_format_t audioFormat, bool enabled) = 0;
@@ -147,4 +154,3 @@ class AudioPolicyInterface {
-  virtual status_t listAudioProductStrategies(
-      AudioProductStrategyVector &strategies) = 0;
-  virtual status_t getProductStrategyFromAudioAttributes(
-      const AudioAttributes &aa, product_strategy_t &productStrategy) = 0;
+    virtual status_t listAudioProductStrategies(AudioProductStrategyVector &strategies) = 0;
+    virtual status_t getProductStrategyFromAudioAttributes(const AudioAttributes &aa,
+                                                           product_strategy_t &productStrategy) = 0;
@@ -152,2 +158,2 @@ class AudioPolicyInterface {
-  virtual status_t getVolumeGroupFromAudioAttributes(
-      const AudioAttributes &aa, volume_group_t &volumeGroup) = 0;
+    virtual status_t getVolumeGroupFromAudioAttributes(const AudioAttributes &aa,
+                                                       volume_group_t &volumeGroup) = 0;
@@ -155,6 +161,5 @@ class AudioPolicyInterface {
-  virtual status_t setPreferredDeviceForStrategy(
-      product_strategy_t strategy, const AudioDeviceTypeAddr &device) = 0;
-  virtual status_t removePreferredDeviceForStrategy(
-      product_strategy_t strategy) = 0;
-  virtual status_t getPreferredDeviceForStrategy(
-      product_strategy_t strategy, AudioDeviceTypeAddr &device) = 0;
+    virtual status_t setPreferredDeviceForStrategy(product_strategy_t strategy,
+                                                   const AudioDeviceTypeAddr &device) = 0;
+    virtual status_t removePreferredDeviceForStrategy(product_strategy_t strategy) = 0;
+    virtual status_t getPreferredDeviceForStrategy(product_strategy_t strategy,
+                                                   AudioDeviceTypeAddr &device) = 0;
@@ -162 +167,2 @@ class AudioPolicyInterface {
-class AudioPolicyClientInterface {
+class AudioPolicyClientInterface
+{
@@ -167 +173,2 @@ class AudioPolicyClientInterface {
-                              audio_io_handle_t *output, audio_config_t *config,
+                                audio_io_handle_t *output,
+                                audio_config_t *config,
@@ -171,2 +178 @@ class AudioPolicyClientInterface {
-  virtual audio_io_handle_t openDuplicateOutput(audio_io_handle_t output1,
-                                                audio_io_handle_t output2) = 0;
+    virtual audio_io_handle_t openDuplicateOutput(audio_io_handle_t output1, audio_io_handle_t output2) = 0;
@@ -177,2 +183,4 @@ class AudioPolicyClientInterface {
-                             audio_io_handle_t *input, audio_config_t *config,
-                             audio_devices_t *device, const String8 &address,
+                               audio_io_handle_t *input,
+                               audio_config_t *config,
+                               audio_devices_t *device,
+                               const String8& address,
@@ -182,3 +190 @@ class AudioPolicyClientInterface {
-  virtual status_t setStreamVolume(audio_stream_type_t stream, float volume,
-                                   audio_io_handle_t output,
-                                   int delayMs = 0) = 0;
+    virtual status_t setStreamVolume(audio_stream_type_t stream, float volume, audio_io_handle_t output, int delayMs = 0) = 0;
@@ -186,4 +192,2 @@ class AudioPolicyClientInterface {
-  virtual void setParameters(audio_io_handle_t ioHandle,
-                             const String8 &keyValuePairs, int delayMs = 0) = 0;
-  virtual String8 getParameters(audio_io_handle_t ioHandle,
-                                const String8 &keys) = 0;
+    virtual void setParameters(audio_io_handle_t ioHandle, const String8& keyValuePairs, int delayMs = 0) = 0;
+    virtual String8 getParameters(audio_io_handle_t ioHandle, const String8& keys) = 0;
@@ -194 +198,2 @@ class AudioPolicyClientInterface {
-  virtual void setEffectSuspended(int effectId, audio_session_t sessionId,
+    virtual void setEffectSuspended(int effectId,
+                                    audio_session_t sessionId,
@@ -201,2 +206 @@ class AudioPolicyClientInterface {
-  virtual status_t setAudioPortConfig(const struct audio_port_config *config,
-                                      int delayMs) = 0;
+    virtual status_t setAudioPortConfig(const struct audio_port_config *config, int delayMs) = 0;
@@ -208,2 +212,2 @@ class AudioPolicyClientInterface {
-  virtual void onRecordingConfigurationUpdate(
-      int event, const record_client_info_t *clientInfo,
+    virtual void onRecordingConfigurationUpdate(int event,
+                                                const record_client_info_t *clientInfo,
@@ -214 +218,2 @@ class AudioPolicyClientInterface {
-      audio_patch_handle_t patchHandle, audio_source_t source) = 0;
+                                                audio_patch_handle_t patchHandle,
+                                                audio_source_t source) = 0;
@@ -216,2 +221 @@ class AudioPolicyClientInterface {
-extern "C" AudioPolicyInterface *createAudioPolicyManager(
-    AudioPolicyClientInterface *clientInterface);
+extern "C" AudioPolicyInterface* createAudioPolicyManager(AudioPolicyClientInterface *clientInterface);
