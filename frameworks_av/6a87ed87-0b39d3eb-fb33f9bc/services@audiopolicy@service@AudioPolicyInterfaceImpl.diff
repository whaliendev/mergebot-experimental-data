diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@service@AudioPolicyInterfaceImpl.no_comments_mergebot.cpp b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@service@AudioPolicyInterfaceImpl.no_comments_merged.cpp
index f0403bc..9050570 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@service@AudioPolicyInterfaceImpl.no_comments_mergebot.cpp
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/6a87ed87-0b39d3eb-fb33f9bc/services@audiopolicy@service@AudioPolicyInterfaceImpl.no_comments_merged.cpp
@@ -8,4 +8,6 @@ namespace android {
-status_t AudioPolicyService::setDeviceConnectionState(
-    audio_devices_t device, audio_policy_dev_state_t state,
-    const char *device_address, const char *device_name,
-    audio_format_t encodedFormat) {
+status_t AudioPolicyService::setDeviceConnectionState(audio_devices_t device,
+                                                  audio_policy_dev_state_t state,
+                                                  const char *device_address,
+                                                  const char *device_name,
+                                                  audio_format_t encodedFormat)
+{
@@ -25,2 +27,2 @@ status_t AudioPolicyService::setDeviceConnectionState(
-  return mAudioPolicyManager->setDeviceConnectionState(
-      device, state, device_address, device_name, encodedFormat);
+    return mAudioPolicyManager->setDeviceConnectionState(device, state,
+                                                         device_address, device_name, encodedFormat);
@@ -29 +31,3 @@ audio_policy_dev_state_t AudioPolicyService::getDeviceConnectionState(
-    audio_devices_t device, const char *device_address) {
+                                                              audio_devices_t device,
+                                                              const char *device_address)
+{
@@ -34 +38,2 @@ audio_policy_dev_state_t AudioPolicyService::getDeviceConnectionState(
-  return mAudioPolicyManager->getDeviceConnectionState(device, device_address);
+    return mAudioPolicyManager->getDeviceConnectionState(device,
+                                                      device_address);
@@ -36,3 +41,5 @@ audio_policy_dev_state_t AudioPolicyService::getDeviceConnectionState(
-status_t AudioPolicyService::handleDeviceConfigChange(
-    audio_devices_t device, const char *device_address, const char *device_name,
-    audio_format_t encodedFormat) {
+status_t AudioPolicyService::handleDeviceConfigChange(audio_devices_t device,
+                                                  const char *device_address,
+                                                  const char *device_name,
+                                                  audio_format_t encodedFormat)
+{
@@ -48,2 +55,2 @@ status_t AudioPolicyService::handleDeviceConfigChange(
-  return mAudioPolicyManager->handleDeviceConfigChange(
-      device, device_address, device_name, encodedFormat);
+    return mAudioPolicyManager->handleDeviceConfigChange(device, device_address,
+                                                         device_name, encodedFormat);
@@ -51 +58,2 @@ status_t AudioPolicyService::handleDeviceConfigChange(
-status_t AudioPolicyService::setPhoneState(audio_mode_t state) {
+status_t AudioPolicyService::setPhoneState(audio_mode_t state)
+{
@@ -69 +77,2 @@ status_t AudioPolicyService::setPhoneState(audio_mode_t state) {
-audio_mode_t AudioPolicyService::getPhoneState() {
+audio_mode_t AudioPolicyService::getPhoneState()
+{
@@ -74 +83,2 @@ status_t AudioPolicyService::setForceUse(audio_policy_force_use_t usage,
-                                         audio_policy_forced_cfg_t config) {
+                                         audio_policy_forced_cfg_t config)
+{
@@ -93,2 +103,2 @@ status_t AudioPolicyService::setForceUse(audio_policy_force_use_t usage,
-audio_policy_forced_cfg_t AudioPolicyService::getForceUse(
-    audio_policy_force_use_t usage) {
+audio_policy_forced_cfg_t AudioPolicyService::getForceUse(audio_policy_force_use_t usage)
+{
@@ -104 +114,2 @@ audio_policy_forced_cfg_t AudioPolicyService::getForceUse(
-audio_io_handle_t AudioPolicyService::getOutput(audio_stream_type_t stream) {
+audio_io_handle_t AudioPolicyService::getOutput(audio_stream_type_t stream)
+{
@@ -116,6 +127,12 @@ audio_io_handle_t AudioPolicyService::getOutput(audio_stream_type_t stream) {
-status_t AudioPolicyService::getOutputForAttr(
-    audio_attributes_t *attr, audio_io_handle_t *output,
-    audio_session_t session, audio_stream_type_t *stream, pid_t pid, uid_t uid,
-    const audio_config_t *config, audio_output_flags_t flags,
-    audio_port_handle_t *selectedDeviceId, audio_port_handle_t *portId,
-    std::vector<audio_io_handle_t> *secondaryOutputs) {
+status_t AudioPolicyService::getOutputForAttr(audio_attributes_t *attr,
+                                              audio_io_handle_t *output,
+                                              audio_session_t session,
+                                              audio_stream_type_t *stream,
+                                              pid_t pid,
+                                              uid_t uid,
+                                              const audio_config_t *config,
+                                              audio_output_flags_t flags,
+                                              audio_port_handle_t *selectedDeviceId,
+                                              audio_port_handle_t *portId,
+                                              std::vector<audio_io_handle_t> *secondaryOutputs)
+{
@@ -130,2 +147 @@ status_t AudioPolicyService::getOutputForAttr(
-             "%s uid %d tried to pass itself off as %d", __func__, callingUid,
-             uid);
+                "%s uid %d tried to pass itself off as %d", __func__, callingUid, uid);
@@ -137,5 +153,3 @@ status_t AudioPolicyService::getOutputForAttr(
-  if (((attr->flags & (AUDIO_FLAG_BYPASS_INTERRUPTION_POLICY |
-                       AUDIO_FLAG_BYPASS_MUTE)) != 0) &&
-      !bypassInterruptionPolicyAllowed(pid, uid)) {
-    attr->flags &=
-        ~(AUDIO_FLAG_BYPASS_INTERRUPTION_POLICY | AUDIO_FLAG_BYPASS_MUTE);
+    if (((attr->flags & (AUDIO_FLAG_BYPASS_INTERRUPTION_POLICY|AUDIO_FLAG_BYPASS_MUTE)) != 0)
+            && !bypassInterruptionPolicyAllowed(pid, uid)) {
+        attr->flags &= ~(AUDIO_FLAG_BYPASS_INTERRUPTION_POLICY|AUDIO_FLAG_BYPASS_MUTE);
@@ -145,3 +159,5 @@ status_t AudioPolicyService::getOutputForAttr(
-  status_t result = mAudioPolicyManager->getOutputForAttr(
-      attr, output, session, stream, uid, config, &flags, selectedDeviceId,
-      portId, secondaryOutputs, &outputType);
+    status_t result = mAudioPolicyManager->getOutputForAttr(attr, output, session, stream, uid,
+                                                 config,
+                                                 &flags, selectedDeviceId, portId,
+                                                 secondaryOutputs,
+                                                 &outputType);
@@ -154,3 +170 @@ status_t AudioPolicyService::getOutputForAttr(
-          ALOGE(
-              "%s() permission denied: modify phone state not allowed for uid "
-              "%d",
+                ALOGE("%s() permission denied: modify phone state not allowed for uid %d",
@@ -163,3 +177 @@ status_t AudioPolicyService::getOutputForAttr(
-          ALOGE(
-              "%s() permission denied: modify audio routing not allowed for "
-              "uid %d",
+                ALOGE("%s() permission denied: modify audio routing not allowed for uid %d",
@@ -172,2 +184,2 @@ status_t AudioPolicyService::getOutputForAttr(
-        LOG_ALWAYS_FATAL("%s() encountered an invalid output type %d", __func__,
-                         (int)outputType);
+            LOG_ALWAYS_FATAL("%s() encountered an invalid output type %d",
+                __func__, (int)outputType);
@@ -177,2 +189,2 @@ status_t AudioPolicyService::getOutputForAttr(
-    sp<AudioPlaybackClient> client = new AudioPlaybackClient(
-        *attr, *output, uid, pid, session, *portId, *selectedDeviceId, *stream);
+        sp <AudioPlaybackClient> client =
+            new AudioPlaybackClient(*attr, *output, uid, pid, session, *portId, *selectedDeviceId, *stream);
@@ -183,3 +195,5 @@ status_t AudioPolicyService::getOutputForAttr(
-void AudioPolicyService::getPlaybackClientAndEffects(
-    audio_port_handle_t portId, sp<AudioPlaybackClient> &client,
-    sp<AudioPolicyEffects> &effects, const char *context) {
+void AudioPolicyService::getPlaybackClientAndEffects(audio_port_handle_t portId,
+                                                     sp<AudioPlaybackClient>& client,
+                                                     sp<AudioPolicyEffects>& effects,
+                                                     const char *context)
+{
@@ -195 +209,2 @@ void AudioPolicyService::getPlaybackClientAndEffects(
-status_t AudioPolicyService::startOutput(audio_port_handle_t portId) {
+status_t AudioPolicyService::startOutput(audio_port_handle_t portId)
+{
@@ -218 +233,2 @@ status_t AudioPolicyService::startOutput(audio_port_handle_t portId) {
-status_t AudioPolicyService::stopOutput(audio_port_handle_t portId) {
+status_t AudioPolicyService::stopOutput(audio_port_handle_t portId)
+{
@@ -226 +242,2 @@ status_t AudioPolicyService::stopOutput(audio_port_handle_t portId) {
-status_t AudioPolicyService::doStopOutput(audio_port_handle_t portId) {
+status_t AudioPolicyService::doStopOutput(audio_port_handle_t portId)
+{
@@ -246 +263,2 @@ status_t AudioPolicyService::doStopOutput(audio_port_handle_t portId) {
-void AudioPolicyService::releaseOutput(audio_port_handle_t portId) {
+void AudioPolicyService::releaseOutput(audio_port_handle_t portId)
+{
@@ -253 +271,2 @@ void AudioPolicyService::releaseOutput(audio_port_handle_t portId) {
-void AudioPolicyService::doReleaseOutput(audio_port_handle_t portId) {
+void AudioPolicyService::doReleaseOutput(audio_port_handle_t portId)
+{
@@ -259,2 +278,2 @@ void AudioPolicyService::doReleaseOutput(audio_port_handle_t portId) {
-    audioPolicyEffects->releaseOutputSessionEffects(client->io, client->stream,
-                                                    client->session);
+        audioPolicyEffects->releaseOutputSessionEffects(
+            client->io, client->stream, client->session);
@@ -266,6 +285,12 @@ void AudioPolicyService::doReleaseOutput(audio_port_handle_t portId) {
-status_t AudioPolicyService::getInputForAttr(
-    const audio_attributes_t *attr, audio_io_handle_t *input,
-    audio_unique_id_t riid, audio_session_t session, pid_t pid, uid_t uid,
-    const String16 &opPackageName, const audio_config_base_t *config,
-    audio_input_flags_t flags, audio_port_handle_t *selectedDeviceId,
-    audio_port_handle_t *portId) {
+status_t AudioPolicyService::getInputForAttr(const audio_attributes_t *attr,
+                                             audio_io_handle_t *input,
+                                             audio_unique_id_t riid,
+                                             audio_session_t session,
+                                             pid_t pid,
+                                             uid_t uid,
+                                             const String16& opPackageName,
+                                             const audio_config_base_t *config,
+                                             audio_input_flags_t flags,
+                                             audio_port_handle_t *selectedDeviceId,
+                                             audio_port_handle_t *portId)
+{
@@ -275,5 +300,5 @@ status_t AudioPolicyService::getInputForAttr(
-  if ((attr->source < AUDIO_SOURCE_DEFAULT) ||
-      (attr->source >= AUDIO_SOURCE_CNT &&
-       attr->source != AUDIO_SOURCE_HOTWORD &&
-       attr->source != AUDIO_SOURCE_FM_TUNER &&
-       attr->source != AUDIO_SOURCE_ECHO_REFERENCE)) {
+    if ((attr->source < AUDIO_SOURCE_DEFAULT)
+            || (attr->source >= AUDIO_SOURCE_CNT
+                && attr->source != AUDIO_SOURCE_HOTWORD
+                && attr->source != AUDIO_SOURCE_FM_TUNER
+                && attr->source != AUDIO_SOURCE_ECHO_REFERENCE)) {
@@ -286,2 +311 @@ status_t AudioPolicyService::getInputForAttr(
-             "%s uid %d tried to pass itself off as %d", __FUNCTION__,
-             callingUid, uid);
+                "%s uid %d tried to pass itself off as %d", __FUNCTION__, callingUid, uid);
@@ -294,2 +318,2 @@ status_t AudioPolicyService::getInputForAttr(
-             "%s uid %d pid %d tried to pass itself off as pid %d", __func__,
-             callingUid, callingPid, pid);
+                 "%s uid %d pid %d tried to pass itself off as pid %d",
+                 __func__, callingUid, callingPid, pid);
@@ -298,2 +322 @@ status_t AudioPolicyService::getInputForAttr(
-  if (!(recordingAllowed(opPackageName, pid, uid) ||
-        attr->source == AUDIO_SOURCE_FM_TUNER)) {
+    if (!(recordingAllowed(opPackageName, pid, uid) || attr->source == AUDIO_SOURCE_FM_TUNER)) {
@@ -324,2 +347,3 @@ status_t AudioPolicyService::getInputForAttr(
-      status = mAudioPolicyManager->getInputForAttr(
-          attr, input, riid, session, uid, config, flags, selectedDeviceId,
+            status = mAudioPolicyManager->getInputForAttr(attr, input, riid, session, uid,
+                                                         config,
+                                                         flags, selectedDeviceId,
@@ -343,3 +367 @@ status_t AudioPolicyService::getInputForAttr(
-            ALOGE(
-                "getInputForAttr() permission denied: modify audio routing not "
-                "allowed");
+                    ALOGE("getInputForAttr() permission denied: modify audio routing not allowed");
@@ -351,2 +373 @@ status_t AudioPolicyService::getInputForAttr(
-          LOG_ALWAYS_FATAL(
-              "getInputForAttr() encountered an invalid input type %d",
+                LOG_ALWAYS_FATAL("getInputForAttr() encountered an invalid input type %d",
@@ -363,3 +384,3 @@ status_t AudioPolicyService::getInputForAttr(
-    sp<AudioRecordClient> client = new AudioRecordClient(
-        *attr, *input, uid, pid, session, *portId, *selectedDeviceId,
-        opPackageName, canCaptureOutput, canCaptureHotword);
+        sp<AudioRecordClient> client = new AudioRecordClient(*attr, *input, uid, pid, session, *portId,
+                                                             *selectedDeviceId, opPackageName,
+                                                             canCaptureOutput, canCaptureHotword);
@@ -369,2 +390 @@ status_t AudioPolicyService::getInputForAttr(
-    status_t status =
-        audioPolicyEffects->addInputEffects(*input, attr->source, session);
+        status_t status = audioPolicyEffects->addInputEffects(*input, attr->source, session);
@@ -377,2 +397 @@ status_t AudioPolicyService::getInputForAttr(
-std::string AudioPolicyService::getDeviceTypeStrForPortId(
-    audio_port_handle_t portId) {
+std::string AudioPolicyService::getDeviceTypeStrForPortId(audio_port_handle_t portId) {
@@ -387 +406,2 @@ std::string AudioPolicyService::getDeviceTypeStrForPortId(
-status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
+status_t AudioPolicyService::startInput(audio_port_handle_t portId)
+{
@@ -400,2 +420,2 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-  if (!(startRecording(client->opPackageName, client->pid, client->uid) ||
-        client->attributes.source == AUDIO_SOURCE_FM_TUNER)) {
+    if (!(startRecording(client->opPackageName, client->pid, client->uid)
+            || client->attributes.source == AUDIO_SOURCE_FM_TUNER)) {
@@ -417,8 +437,4 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-    static constexpr char kAudioPolicyStatus[] =
-        "android.media.audiopolicy.status";
-    static constexpr char kAudioPolicyRqstSrc[] =
-        "android.media.audiopolicy.rqst.src";
-    static constexpr char kAudioPolicyRqstPkg[] =
-        "android.media.audiopolicy.rqst.pkg";
-    static constexpr char kAudioPolicyRqstSession[] =
-        "android.media.audiopolicy.rqst.session";
+        static constexpr char kAudioPolicyStatus[] = "android.media.audiopolicy.status";
+        static constexpr char kAudioPolicyRqstSrc[] = "android.media.audiopolicy.rqst.src";
+        static constexpr char kAudioPolicyRqstPkg[] = "android.media.audiopolicy.rqst.pkg";
+        static constexpr char kAudioPolicyRqstSession[] = "android.media.audiopolicy.rqst.session";
@@ -427,4 +443,2 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-    static constexpr char kAudioPolicyActiveSrc[] =
-        "android.media.audiopolicy.active.src";
-    static constexpr char kAudioPolicyActivePkg[] =
-        "android.media.audiopolicy.active.pkg";
+        static constexpr char kAudioPolicyActiveSrc[] = "android.media.audiopolicy.active.src";
+        static constexpr char kAudioPolicyActivePkg[] = "android.media.audiopolicy.active.pkg";
@@ -442,2 +456 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-        item->setCString(
-            kAudioPolicyRqstPkg,
+                item->setCString(kAudioPolicyRqstPkg,
@@ -446,2 +459 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-        item->setCString(kAudioPolicyRqstPkg,
-                         std::to_string(client->uid).c_str());
+                item->setCString(kAudioPolicyRqstPkg, std::to_string(client->uid).c_str());
@@ -449,2 +461,2 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-      item->setCString(kAudioPolicyRqstDevice,
-                       getDeviceTypeStrForPortId(client->deviceId).c_str());
+            item->setCString(
+                    kAudioPolicyRqstDevice, getDeviceTypeStrForPortId(client->deviceId).c_str());
@@ -462,2 +474 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-            item->setCString(
-                kAudioPolicyActivePkg,
+                        item->setCString(kAudioPolicyActivePkg,
@@ -486 +497,2 @@ status_t AudioPolicyService::startInput(audio_port_handle_t portId) {
-status_t AudioPolicyService::stopInput(audio_port_handle_t portId) {
+status_t AudioPolicyService::stopInput(audio_port_handle_t portId)
+{
@@ -503 +515,2 @@ status_t AudioPolicyService::stopInput(audio_port_handle_t portId) {
-void AudioPolicyService::releaseInput(audio_port_handle_t portId) {
+void AudioPolicyService::releaseInput(audio_port_handle_t portId)
+{
@@ -529,2 +542 @@ void AudioPolicyService::releaseInput(audio_port_handle_t portId) {
-    status_t status =
-        audioPolicyEffects->releaseInputEffects(client->io, client->session);
+        status_t status = audioPolicyEffects->releaseInputEffects(client->io, client->session);
@@ -542 +554,3 @@ status_t AudioPolicyService::initStreamVolume(audio_stream_type_t stream,
-                                              int indexMin, int indexMax) {
+                                            int indexMin,
+                                            int indexMax)
+{
@@ -559 +573,2 @@ status_t AudioPolicyService::setStreamVolumeIndex(audio_stream_type_t stream,
-                                                  audio_devices_t device) {
+                                                  audio_devices_t device)
+{
@@ -571 +586,3 @@ status_t AudioPolicyService::setStreamVolumeIndex(audio_stream_type_t stream,
-  return mAudioPolicyManager->setStreamVolumeIndex(stream, index, device);
+    return mAudioPolicyManager->setStreamVolumeIndex(stream,
+                                                    index,
+                                                    device);
@@ -575 +592,2 @@ status_t AudioPolicyService::getStreamVolumeIndex(audio_stream_type_t stream,
-                                                  audio_devices_t device) {
+                                                  audio_devices_t device)
+{
@@ -584 +602,3 @@ status_t AudioPolicyService::getStreamVolumeIndex(audio_stream_type_t stream,
-  return mAudioPolicyManager->getStreamVolumeIndex(stream, index, device);
+    return mAudioPolicyManager->getStreamVolumeIndex(stream,
+                                                    index,
+                                                    device);
@@ -586,2 +606,3 @@ status_t AudioPolicyService::getStreamVolumeIndex(audio_stream_type_t stream,
-status_t AudioPolicyService::setVolumeIndexForAttributes(
-    const audio_attributes_t &attributes, int index, audio_devices_t device) {
+status_t AudioPolicyService::setVolumeIndexForAttributes(const audio_attributes_t &attributes,
+                                                         int index, audio_devices_t device)
+{
@@ -596,2 +617 @@ status_t AudioPolicyService::setVolumeIndexForAttributes(
-  return mAudioPolicyManager->setVolumeIndexForAttributes(attributes, index,
-                                                          device);
+    return mAudioPolicyManager->setVolumeIndexForAttributes(attributes, index, device);
@@ -599,2 +619,3 @@ status_t AudioPolicyService::setVolumeIndexForAttributes(
-status_t AudioPolicyService::getVolumeIndexForAttributes(
-    const audio_attributes_t &attributes, int &index, audio_devices_t device) {
+status_t AudioPolicyService::getVolumeIndexForAttributes(const audio_attributes_t &attributes,
+                                                         int &index, audio_devices_t device)
+{
@@ -606,2 +627 @@ status_t AudioPolicyService::getVolumeIndexForAttributes(
-  return mAudioPolicyManager->getVolumeIndexForAttributes(attributes, index,
-                                                          device);
+    return mAudioPolicyManager->getVolumeIndexForAttributes(attributes, index, device);
@@ -609,2 +629,3 @@ status_t AudioPolicyService::getVolumeIndexForAttributes(
-status_t AudioPolicyService::getMinVolumeIndexForAttributes(
-    const audio_attributes_t &attributes, int &index) {
+status_t AudioPolicyService::getMinVolumeIndexForAttributes(const audio_attributes_t &attributes,
+                                                            int &index)
+{
@@ -618,2 +639,3 @@ status_t AudioPolicyService::getMinVolumeIndexForAttributes(
-status_t AudioPolicyService::getMaxVolumeIndexForAttributes(
-    const audio_attributes_t &attributes, int &index) {
+status_t AudioPolicyService::getMaxVolumeIndexForAttributes(const audio_attributes_t &attributes,
+                                                            int &index)
+{
@@ -627 +649,2 @@ status_t AudioPolicyService::getMaxVolumeIndexForAttributes(
-uint32_t AudioPolicyService::getStrategyForStream(audio_stream_type_t stream) {
+uint32_t AudioPolicyService::getStrategyForStream(audio_stream_type_t stream)
+{
@@ -637,2 +660,2 @@ uint32_t AudioPolicyService::getStrategyForStream(audio_stream_type_t stream) {
-audio_devices_t AudioPolicyService::getDevicesForStream(
-    audio_stream_type_t stream) {
+audio_devices_t AudioPolicyService::getDevicesForStream(audio_stream_type_t stream)
+{
@@ -649,2 +672,2 @@ audio_devices_t AudioPolicyService::getDevicesForStream(
-audio_io_handle_t AudioPolicyService::getOutputForEffect(
-    const effect_descriptor_t *desc) {
+audio_io_handle_t AudioPolicyService::getOutputForEffect(const effect_descriptor_t *desc)
+{
@@ -661 +684,3 @@ status_t AudioPolicyService::registerEffect(const effect_descriptor_t *desc,
-                                            audio_session_t session, int id) {
+                                audio_session_t session,
+                                int id)
+{
@@ -669 +694,2 @@ status_t AudioPolicyService::registerEffect(const effect_descriptor_t *desc,
-status_t AudioPolicyService::unregisterEffect(int id) {
+status_t AudioPolicyService::unregisterEffect(int id)
+{
@@ -677 +703,2 @@ status_t AudioPolicyService::unregisterEffect(int id) {
-status_t AudioPolicyService::setEffectEnabled(int id, bool enabled) {
+status_t AudioPolicyService::setEffectEnabled(int id, bool enabled)
+{
@@ -685,2 +712,2 @@ status_t AudioPolicyService::setEffectEnabled(int id, bool enabled) {
-status_t AudioPolicyService::moveEffectsToIo(const std::vector<int> &ids,
-                                             audio_io_handle_t io) {
+status_t AudioPolicyService::moveEffectsToIo(const std::vector<int>& ids, audio_io_handle_t io)
+{
@@ -694,2 +721,2 @@ status_t AudioPolicyService::moveEffectsToIo(const std::vector<int> &ids,
-bool AudioPolicyService::isStreamActive(audio_stream_type_t stream,
-                                        uint32_t inPastMs) const {
+bool AudioPolicyService::isStreamActive(audio_stream_type_t stream, uint32_t inPastMs) const
+{
@@ -706,2 +733,2 @@ bool AudioPolicyService::isStreamActive(audio_stream_type_t stream,
-bool AudioPolicyService::isStreamActiveRemotely(audio_stream_type_t stream,
-                                                uint32_t inPastMs) const {
+bool AudioPolicyService::isStreamActiveRemotely(audio_stream_type_t stream, uint32_t inPastMs) const
+{
@@ -718 +745,2 @@ bool AudioPolicyService::isStreamActiveRemotely(audio_stream_type_t stream,
-bool AudioPolicyService::isSourceActive(audio_source_t source) const {
+bool AudioPolicyService::isSourceActive(audio_source_t source) const
+{
@@ -726,2 +754,2 @@ bool AudioPolicyService::isSourceActive(audio_source_t source) const {
-status_t AudioPolicyService::getAudioPolicyEffects(
-    sp<AudioPolicyEffects> &audioPolicyEffects) {
+status_t AudioPolicyService::getAudioPolicyEffects(sp<AudioPolicyEffects>& audioPolicyEffects)
+{
@@ -740,3 +768,4 @@ status_t AudioPolicyService::getAudioPolicyEffects(
-status_t AudioPolicyService::queryDefaultPreProcessing(
-    audio_session_t audioSession, effect_descriptor_t *descriptors,
-    uint32_t *count) {
+status_t AudioPolicyService::queryDefaultPreProcessing(audio_session_t audioSession,
+                                                       effect_descriptor_t *descriptors,
+                                                       uint32_t *count)
+{
@@ -752,4 +781,7 @@ status_t AudioPolicyService::queryDefaultPreProcessing(
-status_t AudioPolicyService::addSourceDefaultEffect(
-    const effect_uuid_t *type, const String16 &opPackageName,
-    const effect_uuid_t *uuid, int32_t priority, audio_source_t source,
-    audio_unique_id_t *id) {
+status_t AudioPolicyService::addSourceDefaultEffect(const effect_uuid_t *type,
+                                                    const String16& opPackageName,
+                                                    const effect_uuid_t *uuid,
+                                                    int32_t priority,
+                                                    audio_source_t source,
+                                                    audio_unique_id_t* id)
+{
@@ -764,2 +796,2 @@ status_t AudioPolicyService::addSourceDefaultEffect(
-  return audioPolicyEffects->addSourceDefaultEffect(type, opPackageName, uuid,
-                                                    priority, source, id);
+    return audioPolicyEffects->addSourceDefaultEffect(
+            type, opPackageName, uuid, priority, source, id);
@@ -767,4 +799,7 @@ status_t AudioPolicyService::addSourceDefaultEffect(
-status_t AudioPolicyService::addStreamDefaultEffect(
-    const effect_uuid_t *type, const String16 &opPackageName,
-    const effect_uuid_t *uuid, int32_t priority, audio_usage_t usage,
-    audio_unique_id_t *id) {
+status_t AudioPolicyService::addStreamDefaultEffect(const effect_uuid_t *type,
+                                                    const String16& opPackageName,
+                                                    const effect_uuid_t *uuid,
+                                                    int32_t priority,
+                                                    audio_usage_t usage,
+                                                    audio_unique_id_t* id)
+{
@@ -779,2 +814,2 @@ status_t AudioPolicyService::addStreamDefaultEffect(
-  return audioPolicyEffects->addStreamDefaultEffect(type, opPackageName, uuid,
-                                                    priority, usage, id);
+    return audioPolicyEffects->addStreamDefaultEffect(
+            type, opPackageName, uuid, priority, usage, id);
@@ -782 +817,2 @@ status_t AudioPolicyService::addStreamDefaultEffect(
-status_t AudioPolicyService::removeSourceDefaultEffect(audio_unique_id_t id) {
+status_t AudioPolicyService::removeSourceDefaultEffect(audio_unique_id_t id)
+{
@@ -793 +829,2 @@ status_t AudioPolicyService::removeSourceDefaultEffect(audio_unique_id_t id) {
-status_t AudioPolicyService::removeStreamDefaultEffect(audio_unique_id_t id) {
+status_t AudioPolicyService::removeStreamDefaultEffect(audio_unique_id_t id)
+{
@@ -804,2 +841 @@ status_t AudioPolicyService::removeStreamDefaultEffect(audio_unique_id_t id) {
-status_t AudioPolicyService::setAllowedCapturePolicy(
-    uid_t uid, audio_flags_mask_t capturePolicy) {
+status_t AudioPolicyService::setAllowedCapturePolicy(uid_t uid, audio_flags_mask_t capturePolicy) {
@@ -818 +854,2 @@ status_t AudioPolicyService::setAllowedCapturePolicy(
-bool AudioPolicyService::isOffloadSupported(const audio_offload_info_t &info) {
+bool AudioPolicyService::isOffloadSupported(const audio_offload_info_t& info)
+{
@@ -827,2 +864,2 @@ bool AudioPolicyService::isOffloadSupported(const audio_offload_info_t &info) {
-bool AudioPolicyService::isDirectOutputSupported(
-    const audio_config_base_t &config, const audio_attributes_t &attributes) {
+bool AudioPolicyService::isDirectOutputSupported(const audio_config_base_t& config,
+                                                 const audio_attributes_t& attributes) {
@@ -840 +877,2 @@ status_t AudioPolicyService::listAudioPorts(audio_port_role_t role,
-                                            unsigned int *generation) {
+                                            unsigned int *generation)
+{
@@ -846,2 +884 @@ status_t AudioPolicyService::listAudioPorts(audio_port_role_t role,
-  return mAudioPolicyManager->listAudioPorts(role, type, num_ports, ports,
-                                             generation);
+    return mAudioPolicyManager->listAudioPorts(role, type, num_ports, ports, generation);
@@ -849 +886,2 @@ status_t AudioPolicyService::listAudioPorts(audio_port_role_t role,
-status_t AudioPolicyService::getAudioPort(struct audio_port *port) {
+status_t AudioPolicyService::getAudioPort(struct audio_port *port)
+{
@@ -858 +896,2 @@ status_t AudioPolicyService::createAudioPatch(const struct audio_patch *patch,
-                                              audio_patch_handle_t *handle) {
+        audio_patch_handle_t *handle)
+{
@@ -867,2 +906,2 @@ status_t AudioPolicyService::createAudioPatch(const struct audio_patch *patch,
-  return mAudioPolicyManager->createAudioPatch(
-      patch, handle, IPCThreadState::self()->getCallingUid());
+    return mAudioPolicyManager->createAudioPatch(patch, handle,
+                                                  IPCThreadState::self()->getCallingUid());
@@ -870 +909,2 @@ status_t AudioPolicyService::createAudioPatch(const struct audio_patch *patch,
-status_t AudioPolicyService::releaseAudioPatch(audio_patch_handle_t handle) {
+status_t AudioPolicyService::releaseAudioPatch(audio_patch_handle_t handle)
+{
@@ -879,2 +919,2 @@ status_t AudioPolicyService::releaseAudioPatch(audio_patch_handle_t handle) {
-  return mAudioPolicyManager->releaseAudioPatch(
-      handle, IPCThreadState::self()->getCallingUid());
+    return mAudioPolicyManager->releaseAudioPatch(handle,
+                                                     IPCThreadState::self()->getCallingUid());
@@ -884 +924,2 @@ status_t AudioPolicyService::listAudioPatches(unsigned int *num_patches,
-                                              unsigned int *generation) {
+        unsigned int *generation)
+{
@@ -890,2 +931 @@ status_t AudioPolicyService::listAudioPatches(unsigned int *num_patches,
-  return mAudioPolicyManager->listAudioPatches(num_patches, patches,
-                                               generation);
+    return mAudioPolicyManager->listAudioPatches(num_patches, patches, generation);
@@ -893,2 +933,2 @@ status_t AudioPolicyService::listAudioPatches(unsigned int *num_patches,
-status_t AudioPolicyService::setAudioPortConfig(
-    const struct audio_port_config *config) {
+status_t AudioPolicyService::setAudioPortConfig(const struct audio_port_config *config)
+{
@@ -905,3 +945,4 @@ status_t AudioPolicyService::setAudioPortConfig(
-status_t AudioPolicyService::acquireSoundTriggerSession(
-    audio_session_t *session, audio_io_handle_t *ioHandle,
-    audio_devices_t *device) {
+status_t AudioPolicyService::acquireSoundTriggerSession(audio_session_t *session,
+                                       audio_io_handle_t *ioHandle,
+                                       audio_devices_t *device)
+{
@@ -913,2 +954 @@ status_t AudioPolicyService::acquireSoundTriggerSession(
-  return mAudioPolicyManager->acquireSoundTriggerSession(session, ioHandle,
-                                                         device);
+    return mAudioPolicyManager->acquireSoundTriggerSession(session, ioHandle, device);
@@ -916,2 +956,2 @@ status_t AudioPolicyService::acquireSoundTriggerSession(
-status_t AudioPolicyService::releaseSoundTriggerSession(
-    audio_session_t session) {
+status_t AudioPolicyService::releaseSoundTriggerSession(audio_session_t session)
+{
@@ -925,2 +965,2 @@ status_t AudioPolicyService::releaseSoundTriggerSession(
-status_t AudioPolicyService::registerPolicyMixes(const Vector<AudioMix> &mixes,
-                                                 bool registration) {
+status_t AudioPolicyService::registerPolicyMixes(const Vector<AudioMix>& mixes, bool registration)
+{
@@ -928,3 +968,2 @@ status_t AudioPolicyService::registerPolicyMixes(const Vector<AudioMix> &mixes,
-  bool needModifyAudioRouting = std::any_of(
-      mixes.begin(), mixes.end(),
-      [](auto &mix) { return !is_mix_loopback_render(mix.mRouteFlags); });
+    bool needModifyAudioRouting = std::any_of(mixes.begin(), mixes.end(), [](auto& mix) {
+            return !is_mix_loopback_render(mix.mRouteFlags); });
@@ -934,3 +973,2 @@ status_t AudioPolicyService::registerPolicyMixes(const Vector<AudioMix> &mixes,
-  bool needCaptureMediaOutput = std::any_of(
-      mixes.begin(), mixes.end(),
-      [](auto &mix) { return mix.mAllowPrivilegedPlaybackCapture; });
+    bool needCaptureMediaOutput = std::any_of(mixes.begin(), mixes.end(), [](auto& mix) {
+            return mix.mAllowPrivilegedPlaybackCapture; });
@@ -939,2 +977 @@ status_t AudioPolicyService::registerPolicyMixes(const Vector<AudioMix> &mixes,
-  if (needCaptureMediaOutput &&
-      !captureMediaOutputAllowed(callingPid, callingUid)) {
+    if (needCaptureMediaOutput && !captureMediaOutputAllowed(callingPid, callingUid)) {
@@ -953,2 +990,2 @@ status_t AudioPolicyService::registerPolicyMixes(const Vector<AudioMix> &mixes,
-status_t AudioPolicyService::setUidDeviceAffinities(
-    uid_t uid, const Vector<AudioDeviceTypeAddr> &devices) {
+status_t AudioPolicyService::setUidDeviceAffinities(uid_t uid,
+        const Vector<AudioDeviceTypeAddr>& devices) {
@@ -976,3 +1013,4 @@ status_t AudioPolicyService::removeUidDeviceAffinities(uid_t uid) {
-status_t AudioPolicyService::startAudioSource(
-    const struct audio_port_config *source,
-    const audio_attributes_t *attributes, audio_port_handle_t *portId) {
+status_t AudioPolicyService::startAudioSource(const struct audio_port_config *source,
+                                              const audio_attributes_t *attributes,
+                                              audio_port_handle_t *portId)
+{
@@ -985,2 +1023 @@ status_t AudioPolicyService::startAudioSource(
-  return mAudioPolicyManager->startAudioSource(source, attributes, portId,
-                                               callingUid);
+    return mAudioPolicyManager->startAudioSource(source, attributes, portId, callingUid);
@@ -988 +1025,2 @@ status_t AudioPolicyService::startAudioSource(
-status_t AudioPolicyService::stopAudioSource(audio_port_handle_t portId) {
+status_t AudioPolicyService::stopAudioSource(audio_port_handle_t portId)
+{
@@ -996 +1034,2 @@ status_t AudioPolicyService::stopAudioSource(audio_port_handle_t portId) {
-status_t AudioPolicyService::setMasterMono(bool mono) {
+status_t AudioPolicyService::setMasterMono(bool mono)
+{
@@ -1007 +1046,2 @@ status_t AudioPolicyService::setMasterMono(bool mono) {
-status_t AudioPolicyService::getMasterMono(bool *mono) {
+status_t AudioPolicyService::getMasterMono(bool *mono)
+{
@@ -1015,2 +1055,3 @@ status_t AudioPolicyService::getMasterMono(bool *mono) {
-float AudioPolicyService::getStreamVolumeDB(audio_stream_type_t stream,
-                                            int index, audio_devices_t device) {
+float AudioPolicyService::getStreamVolumeDB(
+            audio_stream_type_t stream, int index, audio_devices_t device)
+{
@@ -1024,3 +1065,5 @@ float AudioPolicyService::getStreamVolumeDB(audio_stream_type_t stream,
-status_t AudioPolicyService::getSurroundFormats(
-    unsigned int *numSurroundFormats, audio_format_t *surroundFormats,
-    bool *surroundFormatsEnabled, bool reported) {
+status_t AudioPolicyService::getSurroundFormats(unsigned int *numSurroundFormats,
+                                                audio_format_t *surroundFormats,
+                                                bool *surroundFormatsEnabled,
+                                                bool reported)
+{
@@ -1032,2 +1075,2 @@ status_t AudioPolicyService::getSurroundFormats(
-  return mAudioPolicyManager->getSurroundFormats(
-      numSurroundFormats, surroundFormats, surroundFormatsEnabled, reported);
+    return mAudioPolicyManager->getSurroundFormats(numSurroundFormats, surroundFormats,
+                                                   surroundFormatsEnabled, reported);
@@ -1036 +1079,2 @@ status_t AudioPolicyService::getHwOffloadEncodingFormatsSupportedForA2DP(
-    std::vector<audio_format_t> *formats) {
+                                        std::vector<audio_format_t> *formats)
+{
@@ -1042,2 +1086 @@ status_t AudioPolicyService::getHwOffloadEncodingFormatsSupportedForA2DP(
-  return mAudioPolicyManager->getHwOffloadEncodingFormatsSupportedForA2DP(
-      formats);
+    return mAudioPolicyManager->getHwOffloadEncodingFormatsSupportedForA2DP(formats);
@@ -1045,2 +1088,2 @@ status_t AudioPolicyService::getHwOffloadEncodingFormatsSupportedForA2DP(
-status_t AudioPolicyService::setSurroundFormatEnabled(
-    audio_format_t audioFormat, bool enabled) {
+status_t AudioPolicyService::setSurroundFormatEnabled(audio_format_t audioFormat, bool enabled)
+{
@@ -1054 +1097,2 @@ status_t AudioPolicyService::setSurroundFormatEnabled(
-status_t AudioPolicyService::setAssistantUid(uid_t uid) {
+status_t AudioPolicyService::setAssistantUid(uid_t uid)
+{
@@ -1059,2 +1103,2 @@ status_t AudioPolicyService::setAssistantUid(uid_t uid) {
-status_t AudioPolicyService::setA11yServicesUids(
-    const std::vector<uid_t> &uids) {
+status_t AudioPolicyService::setA11yServicesUids(const std::vector<uid_t>& uids)
+{
@@ -1065 +1109,2 @@ status_t AudioPolicyService::setA11yServicesUids(
-bool AudioPolicyService::isHapticPlaybackSupported() {
+bool AudioPolicyService::isHapticPlaybackSupported()
+{
@@ -1074,2 +1119,2 @@ bool AudioPolicyService::isHapticPlaybackSupported() {
-status_t AudioPolicyService::listAudioProductStrategies(
-    AudioProductStrategyVector &strategies) {
+status_t AudioPolicyService::listAudioProductStrategies(AudioProductStrategyVector &strategies)
+{
@@ -1083 +1128,2 @@ status_t AudioPolicyService::getProductStrategyFromAudioAttributes(
-    const AudioAttributes &aa, product_strategy_t &productStrategy) {
+        const AudioAttributes &aa, product_strategy_t &productStrategy)
+{
@@ -1088,2 +1134 @@ status_t AudioPolicyService::getProductStrategyFromAudioAttributes(
-  return mAudioPolicyManager->getProductStrategyFromAudioAttributes(
-      aa, productStrategy);
+    return mAudioPolicyManager->getProductStrategyFromAudioAttributes(aa, productStrategy);
@@ -1091,2 +1136,2 @@ status_t AudioPolicyService::getProductStrategyFromAudioAttributes(
-status_t AudioPolicyService::listAudioVolumeGroups(
-    AudioVolumeGroupVector &groups) {
+status_t AudioPolicyService::listAudioVolumeGroups(AudioVolumeGroupVector &groups)
+{
@@ -1099,2 +1144,3 @@ status_t AudioPolicyService::listAudioVolumeGroups(
-status_t AudioPolicyService::getVolumeGroupFromAudioAttributes(
-    const AudioAttributes &aa, volume_group_t &volumeGroup) {
+status_t AudioPolicyService::getVolumeGroupFromAudioAttributes(const AudioAttributes &aa,
+                                                               volume_group_t &volumeGroup)
+{
@@ -1105,2 +1151 @@ status_t AudioPolicyService::getVolumeGroupFromAudioAttributes(
-  return mAudioPolicyManager->getVolumeGroupFromAudioAttributes(aa,
-                                                                volumeGroup);
+    return mAudioPolicyManager->getVolumeGroupFromAudioAttributes(aa, volumeGroup);
@@ -1108 +1153,2 @@ status_t AudioPolicyService::getVolumeGroupFromAudioAttributes(
-status_t AudioPolicyService::setRttEnabled(bool enabled) {
+status_t AudioPolicyService::setRttEnabled(bool enabled)
+{
@@ -1113 +1159,2 @@ status_t AudioPolicyService::setRttEnabled(bool enabled) {
-bool AudioPolicyService::isCallScreenModeSupported() {
+bool AudioPolicyService::isCallScreenModeSupported()
+{
@@ -1122,2 +1169,3 @@ bool AudioPolicyService::isCallScreenModeSupported() {
-status_t AudioPolicyService::setPreferredDeviceForStrategy(
-    product_strategy_t strategy, const AudioDeviceTypeAddr &device) {
+status_t AudioPolicyService::setPreferredDeviceForStrategy(product_strategy_t strategy,
+                                                   const AudioDeviceTypeAddr &device)
+{
@@ -1130,2 +1178,2 @@ status_t AudioPolicyService::setPreferredDeviceForStrategy(
-status_t AudioPolicyService::removePreferredDeviceForStrategy(
-    product_strategy_t strategy) {
+status_t AudioPolicyService::removePreferredDeviceForStrategy(product_strategy_t strategy)
+{
@@ -1138,2 +1186,3 @@ status_t AudioPolicyService::removePreferredDeviceForStrategy(
-status_t AudioPolicyService::getPreferredDeviceForStrategy(
-    product_strategy_t strategy, AudioDeviceTypeAddr &device) {
+status_t AudioPolicyService::getPreferredDeviceForStrategy(product_strategy_t strategy,
+                                                   AudioDeviceTypeAddr &device)
+{
