diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/9468f951-e23cbd26-faafe298/media@libstagefright@MediaCodec.no_comments_mergebot.cpp b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/9468f951-e23cbd26-faafe298/media@libstagefright@MediaCodec.no_comments_merged.cpp
index 145c010..149d733 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/9468f951-e23cbd26-faafe298/media@libstagefright@MediaCodec.no_comments_mergebot.cpp
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/9468f951-e23cbd26-faafe298/media@libstagefright@MediaCodec.no_comments_merged.cpp
@@ -5,3 +4,0 @@
-#include "include/SecureBuffer.h"
-#include "StagefrightPluginLoader.h"
-#include "include/SharedMemoryBuffer.h"
@@ -10,2 +6,0 @@
-#include <binder/IPCThreadState.h>
-#include <binder/IServiceManager.h>
@@ -15,2 +9,0 @@
-#include <media/IResourceManagerService.h>
-#include <media/MediaAnalyticsItem.h>
@@ -50,0 +44,4 @@ namespace android {
+using Status = ::ndk::ScopedAStatus;
+using aidl::android::media::BnResourceManagerClient;
+using aidl::android::media::IResourceManagerClient;
+using aidl::android::media::IResourceManagerService;
@@ -52,8 +49,4 @@ static const char *kCodecKeyName = "codec";
-static const char *kCodecCodec =
-    "android.media.mediacodec.codec";
-static const char *kCodecMime =
-    "android.media.mediacodec.mime";
-static const char *kCodecMode =
-    "android.media.mediacodec.mode";
-static const char *kCodecModeVideo =
-    "video";
+static const char *kCodecCodec = "android.media.mediacodec.codec";
+static const char *kCodecMime = "android.media.mediacodec.mime";
+static const char *kCodecMode = "android.media.mediacodec.mode";
+static const char *kCodecModeVideo = "video";
@@ -65,2 +58 @@ static const char *kCodecHeight = "android.media.mediacodec.height";
-static const char *kCodecRotation =
-    "android.media.mediacodec.rotation-degrees";
+static const char *kCodecRotation = "android.media.mediacodec.rotation-degrees";
@@ -68,2 +60 @@ static const char *kCodecCrypto = "android.media.mediacodec.crypto";
-static const char *kCodecProfile =
-    "android.media.mediacodec.profile";
+static const char *kCodecProfile = "android.media.mediacodec.profile";
@@ -71,4 +62,2 @@ static const char *kCodecLevel = "android.media.mediacodec.level";
-static const char *kCodecMaxWidth =
-    "android.media.mediacodec.maxwidth";
-static const char *kCodecMaxHeight =
-    "android.media.mediacodec.maxheight";
+static const char *kCodecMaxWidth = "android.media.mediacodec.maxwidth";
+static const char *kCodecMaxHeight = "android.media.mediacodec.maxheight";
@@ -77,6 +66,3 @@ static const char *kCodecErrorState = "android.media.mediacodec.errstate";
-static const char *kCodecLatencyMax =
-    "android.media.mediacodec.latency.max";
-static const char *kCodecLatencyMin =
-    "android.media.mediacodec.latency.min";
-static const char *kCodecLatencyAvg =
-    "android.media.mediacodec.latency.avg";
+static const char *kCodecLatencyMax = "android.media.mediacodec.latency.max";
+static const char *kCodecLatencyMin = "android.media.mediacodec.latency.min";
+static const char *kCodecLatencyAvg = "android.media.mediacodec.latency.avg";
@@ -84,20 +70,10 @@ static const char *kCodecLatencyCount = "android.media.mediacodec.latency.n";
-static const char *kCodecLatencyHist =
-    "android.media.mediacodec.latency.hist";
-static const char *kCodecLatencyUnknown =
-    "android.media.mediacodec.latency.unknown";
-static const char *kCodecNumLowLatencyModeOn =
-    "android.media.mediacodec.low-latency.on";
-static const char *kCodecNumLowLatencyModeOff =
-    "android.media.mediacodec.low-latency.off";
-static const char *kCodecFirstFrameIndexLowLatencyModeOn =
-    "android.media.mediacodec.low-latency.first-frame";
-static const char *kCodecRecentLatencyMax =
-    "android.media.mediacodec.recent.max";
-static const char *kCodecRecentLatencyMin =
-    "android.media.mediacodec.recent.min";
-static const char *kCodecRecentLatencyAvg =
-    "android.media.mediacodec.recent.avg";
-static const char *kCodecRecentLatencyCount =
-    "android.media.mediacodec.recent.n";
-static const char *kCodecRecentLatencyHist =
-    "android.media.mediacodec.recent.hist";
+static const char *kCodecLatencyHist = "android.media.mediacodec.latency.hist";
+static const char *kCodecLatencyUnknown = "android.media.mediacodec.latency.unknown";
+static const char *kCodecNumLowLatencyModeOn = "android.media.mediacodec.low-latency.on";
+static const char *kCodecNumLowLatencyModeOff = "android.media.mediacodec.low-latency.off";
+static const char *kCodecFirstFrameIndexLowLatencyModeOn = "android.media.mediacodec.low-latency.first-frame";
+static const char *kCodecRecentLatencyMax = "android.media.mediacodec.recent.max";
+static const char *kCodecRecentLatencyMin = "android.media.mediacodec.recent.min";
+static const char *kCodecRecentLatencyAvg = "android.media.mediacodec.recent.avg";
+static const char *kCodecRecentLatencyCount = "android.media.mediacodec.recent.n";
+static const char *kCodecRecentLatencyHist = "android.media.mediacodec.recent.hist";
@@ -108 +84,3 @@ static int64_t getId(const std::shared_ptr<IResourceManagerClient> &client) {
-static bool isResourceError(status_t err) { return (err == NO_MEMORY); }
+static bool isResourceError(status_t err) {
+    return (err == NO_MEMORY);
+}
@@ -145 +122,0 @@ struct ResourceManagerClient : public BnResourceManagerClient {
- protected:
@@ -152,2 +129 @@ struct MediaCodec::ResourceManagerServiceProxy : public RefBase {
-  ResourceManagerServiceProxy(
-      pid_t pid, uid_t uid,
+    ResourceManagerServiceProxy(pid_t pid, uid_t uid,
@@ -173,3 +149 @@ MediaCodec::ResourceManagerServiceProxy::ResourceManagerServiceProxy(
-    : mPid(pid),
-      mUid(uid),
-      mClient(client),
+        : mPid(pid), mUid(uid), mClient(client),
@@ -181 +155 @@ MediaCodec::ResourceManagerServiceProxy::ResourceManagerServiceProxy(
-~ResourceManagerServiceProxy() {
+MediaCodec::ResourceManagerServiceProxy::~ResourceManagerServiceProxy() {
@@ -183,2 +157 @@ MediaCodec::ResourceManagerServiceProxy::ResourceManagerServiceProxy(
-    AIBinder_unlinkToDeath(mService->asBinder().get(), mDeathRecipient.get(),
-                           this);
+        AIBinder_unlinkToDeath(mService->asBinder().get(), mDeathRecipient.get(), this);
@@ -188,2 +161 @@ void MediaCodec::ResourceManagerServiceProxy::init() {
-  ::ndk::SpAIBinder binder(
-      AServiceManager_getService("media.resource_manager"));
+    ::ndk::SpAIBinder binder(AServiceManager_getService("media.resource_manager"));
@@ -243,102 +214,0 @@ bool MediaCodec::ResourceManagerServiceProxy::reclaimResource(
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
-    }
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
-  }
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
-}
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
-    }
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
-  }
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
-}
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
-    }
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
-  }
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
-}
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
-    }
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
-  }
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
-}
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
-    }
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
-  }
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
-}
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
-    }
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
-  }
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
-}
@@ -367 +237 @@ class BufferCallback : public CodecBase::BufferCallback {
-  virtual ~BufferCallback()
+    virtual ~BufferCallback() = default;
@@ -375 +245,2 @@ class BufferCallback : public CodecBase::BufferCallback {
-BufferCallback::BufferCallback(const sp<AMessage> &notify) : mNotify(notify) {}
+BufferCallback::BufferCallback(const sp<AMessage> &notify)
+    : mNotify(notify) {}
@@ -395 +266 @@ class CodecCallback : public CodecBase::CodecCallback {
-  virtual ~CodecCallback()
+    virtual ~CodecCallback() = default;
@@ -403,2 +274,2 @@ class CodecCallback : public CodecBase::CodecCallback {
-  virtual void onComponentConfigured(const sp<AMessage> &inputFormat,
-                                     const sp<AMessage> &outputFormat) override;
+    virtual void onComponentConfigured(
+            const sp<AMessage> &inputFormat, const sp<AMessage> &outputFormat) override;
@@ -406 +277,2 @@ class CodecCallback : public CodecBase::CodecCallback {
-      const sp<AMessage> &inputFormat, const sp<AMessage> &outputFormat,
+            const sp<AMessage> &inputFormat,
+            const sp<AMessage> &outputFormat,
@@ -414,2 +286 @@ class CodecCallback : public CodecBase::CodecCallback {
-  virtual void onOutputFramesRendered(
-      const std::list<FrameRenderTracker::Info> &done) override;
+    virtual void onOutputFramesRendered(const std::list<FrameRenderTracker::Info> &done) override;
@@ -460,2 +331,2 @@ void CodecCallback::onComponentAllocated(const char *componentName) {
-void CodecCallback::onComponentConfigured(const sp<AMessage> &inputFormat,
-                                          const sp<AMessage> &outputFormat) {
+void CodecCallback::onComponentConfigured(
+        const sp<AMessage> &inputFormat, const sp<AMessage> &outputFormat) {
@@ -469 +340,2 @@ void CodecCallback::onInputSurfaceCreated(
-    const sp<AMessage> &inputFormat, const sp<AMessage> &outputFormat,
+        const sp<AMessage> &inputFormat,
+        const sp<AMessage> &outputFormat,
@@ -484 +356,2 @@ void CodecCallback::onInputSurfaceCreationFailed(status_t err) {
-void CodecCallback::onInputSurfaceAccepted(const sp<AMessage> &inputFormat,
+void CodecCallback::onInputSurfaceAccepted(
+        const sp<AMessage> &inputFormat,
@@ -506,2 +379 @@ void CodecCallback::onSignaledInputEOS(status_t err) {
-void CodecCallback::onOutputFramesRendered(
-    const std::list<FrameRenderTracker::Info> &done) {
+void CodecCallback::onOutputFramesRendered(const std::list<FrameRenderTracker::Info> &done) {
@@ -520,3 +392,3 @@ void CodecCallback::onOutputBuffersChanged() {
-sp<MediaCodec> MediaCodec::CreateByType(const sp<ALooper> &looper,
-                                        const AString &mime, bool encoder,
-                                        status_t *err, pid_t pid, uid_t uid) {
+sp<MediaCodec> MediaCodec::CreateByType(
+        const sp<ALooper> &looper, const AString &mime, bool encoder, status_t *err, pid_t pid,
+        uid_t uid) {
@@ -524 +396,5 @@ sp<MediaCodec> MediaCodec::CreateByType(const sp<ALooper> &looper,
-  MediaCodecList::findMatchingCodecs(mime.c_str(), encoder, 0, &matchingCodecs);
+    MediaCodecList::findMatchingCodecs(
+            mime.c_str(),
+            encoder,
+            0,
+            &matchingCodecs);
@@ -543,4 +419,2 @@ sp<MediaCodec> MediaCodec::CreateByType(const sp<ALooper> &looper,
-sp<MediaCodec> MediaCodec::CreateByComponentName(const sp<ALooper> &looper,
-                                                 const AString &name,
-                                                 status_t *err, pid_t pid,
-                                                 uid_t uid) {
+sp<MediaCodec> MediaCodec::CreateByComponentName(
+        const sp<ALooper> &looper, const AString &name, status_t *err, pid_t pid, uid_t uid) {
@@ -583 +456,0 @@ MediaCodec::MediaCodec(const sp<ALooper> &looper, pid_t pid, uid_t uid)
-      mAnalyticsItem(NULL),
@@ -607,2 +480,2 @@ MediaCodec::MediaCodec(const sp<ALooper> &looper, pid_t pid, uid_t uid)
-  mResourceManagerProxy = new ResourceManagerServiceProxy(
-      pid, mUid, ::ndk::SharedRefBase::make<ResourceManagerClient>(this));
+    mResourceManagerProxy = new ResourceManagerServiceProxy(pid, mUid,
+            ::ndk::SharedRefBase::make<ResourceManagerClient>(this));
@@ -627,0 +501,9 @@ void MediaCodec::initMediametrics() {
+    {
+        Mutex::Autolock al(mLatencyLock);
+        mBuffersInFlight.clear();
+        mNumLowLatencyEnables = 0;
+        mNumLowLatencyDisables = 0;
+        mIsLowLatencyModeOn = false;
+        mIndexOfFirstFrameWhenLowLatencyOn = -1;
+        mInputBufferCounter = 0;
+    }
@@ -635,8 +517,4 @@ void MediaCodec::updateMediametrics() {
-    mediametrics_setInt64(mMetricsHandle, kCodecLatencyMax,
-                          mLatencyHist.getMax());
-    mediametrics_setInt64(mMetricsHandle, kCodecLatencyMin,
-                          mLatencyHist.getMin());
-    mediametrics_setInt64(mMetricsHandle, kCodecLatencyAvg,
-                          mLatencyHist.getAvg());
-    mediametrics_setInt64(mMetricsHandle, kCodecLatencyCount,
-                          mLatencyHist.getCount());
+        mediametrics_setInt64(mMetricsHandle, kCodecLatencyMax, mLatencyHist.getMax());
+        mediametrics_setInt64(mMetricsHandle, kCodecLatencyMin, mLatencyHist.getMin());
+        mediametrics_setInt64(mMetricsHandle, kCodecLatencyAvg, mLatencyHist.getAvg());
+        mediametrics_setInt64(mMetricsHandle, kCodecLatencyCount, mLatencyHist.getCount());
@@ -649,2 +527,8 @@ void MediaCodec::updateMediametrics() {
-    mediametrics_setInt64(mMetricsHandle, kCodecLatencyUnknown,
-                          mLatencyUnknown);
+        mediametrics_setInt64(mMetricsHandle, kCodecLatencyUnknown, mLatencyUnknown);
+    }
+    {
+        Mutex::Autolock al(mLatencyLock);
+        mediametrics_setInt64(mMetricsHandle, kCodecNumLowLatencyModeOn, mNumLowLatencyEnables);
+        mediametrics_setInt64(mMetricsHandle, kCodecNumLowLatencyModeOff, mNumLowLatencyDisables);
+        mediametrics_setInt64(mMetricsHandle, kCodecFirstFrameIndexLowLatencyModeOn,
+                              mIndexOfFirstFrameWhenLowLatencyOn);
@@ -675,2 +559 @@ void MediaCodec::updateEphemeralMediametrics(mediametrics_handle_t item) {
-    mediametrics_setInt64(item, kCodecRecentLatencyCount,
-                          recentHist.getCount());
+        mediametrics_setInt64(item, kCodecRecentLatencyCount, recentHist.getCount());
@@ -706,9 +589,4 @@ void MediaCodec::updateLowLatency(const sp<AMessage> &msg) {
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
+bool MediaCodec::Histogram::setup(int nbuckets, int64_t width, int64_t floor)
+{
+    if (nbuckets <= 0 || width <= 0) {
+        return false;
@@ -716,2 +594,25 @@ std::string MediaCodec::Histogram::emit() {
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
+    if (nbuckets == mBucketCount && mBuckets != NULL) {
+        memset(mBuckets, 0, sizeof(*mBuckets) * mBucketCount);
+    } else {
+        int64_t *newbuckets = (int64_t *)calloc(nbuckets, sizeof (*mBuckets));
+        if (newbuckets == NULL) {
+            goto bad;
+        }
+        if (mBuckets != NULL)
+            free(mBuckets);
+        mBuckets = newbuckets;
+    }
+    mWidth = width;
+    mFloor = floor;
+    mCeiling = floor + nbuckets * width;
+    mBucketCount = nbuckets;
+    mMin = INT64_MAX;
+    mMax = INT64_MIN;
+    mSum = 0;
+    mCount = 0;
+    mBelow = mAbove = 0;
+    return true;
+  bad:
+    if (mBuckets != NULL) {
+        free(mBuckets);
+        mBuckets = NULL;
@@ -719,3 +620 @@ std::string MediaCodec::Histogram::emit() {
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
+    return false;
@@ -723,9 +622,4 @@ std::string MediaCodec::Histogram::emit() {
-std::string MediaCodec::Histogram::emit() {
-  std::string value;
-  char buffer[64];
-  snprintf(buffer, sizeof(buffer), "%" PRId64 ",%" PRId64 ",%" PRId64 "{",
-           mFloor, mWidth, mBelow);
-  value = buffer;
-  for (int i = 0; i < mBucketCount; i++) {
-    if (i != 0) {
-      value = value + ",";
+void MediaCodec::Histogram::insert(int64_t sample)
+{
+    if (mBuckets == NULL) {
+        return;
@@ -733,2 +627,12 @@ std::string MediaCodec::Histogram::emit() {
-    snprintf(buffer, sizeof(buffer), "%" PRId64, mBuckets[i]);
-    value = value + buffer;
+    mCount++;
+    mSum += sample;
+    if (mMin > sample) mMin = sample;
+    if (mMax < sample) mMax = sample;
+    if (sample < mFloor) {
+        mBelow++;
+    } else if (sample >= mCeiling) {
+        mAbove++;
+    } else {
+        int64_t slot = (sample - mFloor) / mWidth;
+        CHECK(slot < mBucketCount);
+        mBuckets[slot]++;
@@ -736,3 +640 @@ std::string MediaCodec::Histogram::emit() {
-  snprintf(buffer, sizeof(buffer), "}%" PRId64, mAbove);
-  value = value + buffer;
-  return value;
+    return;
@@ -740 +642,2 @@ std::string MediaCodec::Histogram::emit() {
-std::string MediaCodec::Histogram::emit() {
+std::string MediaCodec::Histogram::emit()
+{
@@ -782,2 +685 @@ void MediaCodec::statsBufferReceived(int64_t presentationUs) {
-    ALOGV("-- returned buffer timestamp %" PRId64 " <= 0, ignore it",
-          presentationUs);
+        ALOGV("-- returned buffer timestamp %" PRId64 " <= 0, ignore it", presentationUs);
@@ -833,2 +735,2 @@ void MediaCodec::statsBufferReceived(int64_t presentationUs) {
-status_t MediaCodec::PostAndAwaitResponse(const sp<AMessage> &msg,
-                                          sp<AMessage> *response) {
+status_t MediaCodec::PostAndAwaitResponse(
+        const sp<AMessage> &msg, sp<AMessage> *response) {
@@ -844,2 +746 @@ status_t MediaCodec::PostAndAwaitResponse(const sp<AMessage> &msg,
-void MediaCodec::PostReplyWithError(const sp<AReplyToken> &replyID,
-                                    int32_t err) {
+void MediaCodec::PostReplyWithError(const sp<AReplyToken> &replyID, int32_t err) {
@@ -854 +755,3 @@ void MediaCodec::PostReplyWithError(const sp<AReplyToken> &replyID,
-static CodecBase *CreateCCodec() { return new CCodec; }
+static CodecBase *CreateCCodec() {
+    return new CCodec;
+}
@@ -926 +829,2 @@ status_t MediaCodec::init(const AString &name) {
-  mCodec->setCallback(std::unique_ptr<CodecBase::CodecCallback>(
+    mCodec->setCallback(
+            std::unique_ptr<CodecBase::CodecCallback>(
@@ -929 +833,2 @@ status_t MediaCodec::init(const AString &name) {
-  mBufferChannel->setCallback(std::unique_ptr<CodecBase::BufferCallback>(
+    mBufferChannel->setCallback(
+            std::unique_ptr<CodecBase::BufferCallback>(
@@ -942,2 +847 @@ status_t MediaCodec::init(const AString &name) {
-    mBatteryChecker =
-        new BatteryChecker(new AMessage(kWhatCheckBatteryStats, this));
+        mBatteryChecker = new BatteryChecker(new AMessage(kWhatCheckBatteryStats, this));
@@ -968,2 +872 @@ status_t MediaCodec::setCallback(const sp<AMessage> &callback) {
-status_t MediaCodec::setOnFrameRenderedNotification(
-    const sp<AMessage> &notify) {
+status_t MediaCodec::setOnFrameRenderedNotification(const sp<AMessage> &notify) {
@@ -974 +877,2 @@ status_t MediaCodec::setOnFrameRenderedNotification(
-status_t MediaCodec::configure(const sp<AMessage> &format,
+status_t MediaCodec::configure(
+        const sp<AMessage> &format,
@@ -976 +880,2 @@ status_t MediaCodec::configure(const sp<AMessage> &format,
-                               const sp<ICrypto> &crypto, uint32_t flags) {
+        const sp<ICrypto> &crypto,
+        uint32_t flags) {
@@ -979 +884,2 @@ status_t MediaCodec::configure(const sp<AMessage> &format,
-status_t MediaCodec::configure(const sp<AMessage> &format,
+status_t MediaCodec::configure(
+        const sp<AMessage> &format,
@@ -1041,2 +947 @@ status_t MediaCodec::configure(const sp<AMessage> &format,
-  resources.push_back(
-      MediaResource::CodecResource(mFlags & kFlagIsSecure, mIsVideo));
+    resources.push_back(MediaResource::CodecResource(mFlags & kFlagIsSecure, mIsVideo));
@@ -1062 +967,2 @@ status_t MediaCodec::configure(const sp<AMessage> &format,
-status_t MediaCodec::releaseCrypto() {
+status_t MediaCodec::releaseCrypto()
+{
@@ -1070 +976,2 @@ status_t MediaCodec::releaseCrypto() {
-  } else {
+    }
+    else {
@@ -1075 +982,2 @@ status_t MediaCodec::releaseCrypto() {
-void MediaCodec::onReleaseCrypto(const sp<AMessage> &msg) {
+void MediaCodec::onReleaseCrypto(const sp<AMessage>& msg)
+{
@@ -1078,2 +986 @@ void MediaCodec::onReleaseCrypto(const sp<AMessage> &msg) {
-    ALOGV("onReleaseCrypto: mCrypto: %p (%d)", mCrypto.get(),
-          mCrypto->getStrongCount());
+        ALOGV("onReleaseCrypto: mCrypto: %p (%d)", mCrypto.get(), mCrypto->getStrongCount());
@@ -1081,2 +988,2 @@ void MediaCodec::onReleaseCrypto(const sp<AMessage> &msg) {
-    ALOGD("onReleaseCrypto: [before clear]  mCrypto: %p (%d)", mCrypto.get(),
-          mCrypto->getStrongCount());
+        ALOGD("onReleaseCrypto: [before clear]  mCrypto: %p (%d)",
+                mCrypto.get(), mCrypto->getStrongCount());
@@ -1085 +992,2 @@ void MediaCodec::onReleaseCrypto(const sp<AMessage> &msg) {
-  } else {
+    }
+    else {
@@ -1094 +1002,2 @@ void MediaCodec::onReleaseCrypto(const sp<AMessage> &msg) {
-status_t MediaCodec::setInputSurface(const sp<PersistentSurface> &surface) {
+status_t MediaCodec::setInputSurface(
+        const sp<PersistentSurface> &surface) {
@@ -1138,2 +1047 @@ status_t MediaCodec::start() {
-  resources.push_back(
-      MediaResource::CodecResource(mFlags & kFlagIsSecure, mIsVideo));
+    resources.push_back(MediaResource::CodecResource(mFlags & kFlagIsSecure, mIsVideo));
@@ -1177,2 +1085 @@ bool MediaCodec::hasPendingBuffer() {
-  return hasPendingBuffer(kPortIndexInput) ||
-         hasPendingBuffer(kPortIndexOutput);
+    return hasPendingBuffer(kPortIndexInput) || hasPendingBuffer(kPortIndexOutput);
@@ -1222 +1129,4 @@ status_t MediaCodec::reset() {
-status_t MediaCodec::queueInputBuffer(size_t index, size_t offset, size_t size,
+status_t MediaCodec::queueInputBuffer(
+        size_t index,
+        size_t offset,
+        size_t size,
@@ -1224 +1134,2 @@ status_t MediaCodec::queueInputBuffer(size_t index, size_t offset, size_t size,
-                                      uint32_t flags, AString *errorDetailMsg) {
+        uint32_t flags,
+        AString *errorDetailMsg) {
@@ -1239,4 +1150,11 @@ status_t MediaCodec::queueSecureInputBuffer(
-    size_t index, size_t offset, const CryptoPlugin::SubSample *subSamples,
-    size_t numSubSamples, const uint8_t key[16], const uint8_t iv[16],
-    CryptoPlugin::Mode mode, const CryptoPlugin::Pattern &pattern,
-    int64_t presentationTimeUs, uint32_t flags, AString *errorDetailMsg) {
+        size_t index,
+        size_t offset,
+        const CryptoPlugin::SubSample *subSamples,
+        size_t numSubSamples,
+        const uint8_t key[16],
+        const uint8_t iv[16],
+        CryptoPlugin::Mode mode,
+        const CryptoPlugin::Pattern &pattern,
+        int64_t presentationTimeUs,
+        uint32_t flags,
+        AString *errorDetailMsg) {
@@ -1274 +1192,3 @@ status_t MediaCodec::dequeueInputBuffer(size_t *index, int64_t timeoutUs) {
-status_t MediaCodec::dequeueOutputBuffer(size_t *index, size_t *offset,
+status_t MediaCodec::dequeueOutputBuffer(
+        size_t *index,
+        size_t *offset,
@@ -1277 +1197,2 @@ status_t MediaCodec::dequeueOutputBuffer(size_t *index, size_t *offset,
-                                         uint32_t *flags, int64_t timeoutUs) {
+        uint32_t *flags,
+        int64_t timeoutUs) {
@@ -1299,2 +1220 @@ status_t MediaCodec::renderOutputBufferAndRelease(size_t index) {
-status_t MediaCodec::renderOutputBufferAndRelease(size_t index,
-                                                  int64_t timestampNs) {
+status_t MediaCodec::renderOutputBufferAndRelease(size_t index, int64_t timestampNs) {
@@ -1371,2 +1291 @@ status_t MediaCodec::getMetrics(mediametrics_handle_t &reply) {
-status_t MediaCodec::getInputBuffers(
-    Vector<sp<MediaCodecBuffer> > *buffers) const {
+status_t MediaCodec::getInputBuffers(Vector<sp<MediaCodecBuffer> > *buffers) const {
@@ -1379,2 +1298 @@ status_t MediaCodec::getInputBuffers(
-status_t MediaCodec::getOutputBuffers(
-    Vector<sp<MediaCodecBuffer> > *buffers) const {
+status_t MediaCodec::getOutputBuffers(Vector<sp<MediaCodecBuffer> > *buffers) const {
@@ -1387,2 +1305 @@ status_t MediaCodec::getOutputBuffers(
-status_t MediaCodec::getOutputBuffer(size_t index,
-                                     sp<MediaCodecBuffer> *buffer) {
+status_t MediaCodec::getOutputBuffer(size_t index, sp<MediaCodecBuffer> *buffer) {
@@ -1396,2 +1313 @@ status_t MediaCodec::getOutputFormat(size_t index, sp<AMessage> *format) {
-status_t MediaCodec::getInputBuffer(size_t index,
-                                    sp<MediaCodecBuffer> *buffer) {
+status_t MediaCodec::getInputBuffer(size_t index, sp<MediaCodecBuffer> *buffer) {
@@ -1404,3 +1320,3 @@ bool MediaCodec::isExecuting() const {
-status_t MediaCodec::getBufferAndFormat(size_t portIndex, size_t index,
-                                        sp<MediaCodecBuffer> *buffer,
-                                        sp<AMessage> *format) {
+status_t MediaCodec::getBufferAndFormat(
+        size_t portIndex, size_t index,
+        sp<MediaCodecBuffer> *buffer, sp<AMessage> *format) {
@@ -1428,4 +1344,2 @@ status_t MediaCodec::getBufferAndFormat(size_t portIndex, size_t index,
-    ALOGE(
-        "getBufferAndFormat - trying to get buffer with "
-        "bad index (index=%zu buffer_size=%zu)",
-        index, buffers.size());
+        ALOGE("getBufferAndFormat - trying to get buffer with "
+              "bad index (index=%zu buffer_size=%zu)", index, buffers.size());
@@ -1436,4 +1350,2 @@ status_t MediaCodec::getBufferAndFormat(size_t portIndex, size_t index,
-    ALOGE(
-        "getBufferAndFormat - invalid operation "
-        "(the index %zu is not owned by client)",
-        index);
+        ALOGE("getBufferAndFormat - invalid operation "
+              "(the index %zu is not owned by client)", index);
@@ -1465,5 +1377,4 @@ void MediaCodec::requestCpuBoostIfNeeded() {
-  if (mOutputFormat->contains("hdr-static-info") &&
-      mOutputFormat->findInt32("color-format", &colorFormat)
-      && ((mSoftRenderer != NULL &&
-           colorFormat == OMX_COLOR_FormatYUV420Planar16) ||
-          mOwnerName.equalsIgnoreCase("codec2::software"))) {
+    if (mOutputFormat->contains("hdr-static-info")
+            && mOutputFormat->findInt32("color-format", &colorFormat)
+            && ((mSoftRenderer != NULL && colorFormat == OMX_COLOR_FormatYUV420Planar16)
+                    || mOwnerName.equalsIgnoreCase("codec2::software"))) {
@@ -1474,2 +1385,2 @@ void MediaCodec::requestCpuBoostIfNeeded() {
-    } else if (mOutputFormat->findInt32("width", &width) &&
-               mOutputFormat->findInt32("height", &height)) {
+        } else if (mOutputFormat->findInt32("width", &width)
+                && mOutputFormat->findInt32("height", &height)) {
@@ -1485,6 +1396,6 @@ BatteryChecker::BatteryChecker(const sp<AMessage> &msg, int64_t timeoutUs)
-    : mTimeoutUs(timeoutUs),
-      mLastActivityTimeUs(-1ll),
-      mBatteryStatNotified(false),
-      mBatteryCheckerGeneration(0),
-      mIsExecuting(false),
-      mBatteryCheckerMsg(msg) {}
+    : mTimeoutUs(timeoutUs)
+    , mLastActivityTimeUs(-1ll)
+    , mBatteryStatNotified(false)
+    , mBatteryCheckerGeneration(0)
+    , mIsExecuting(false)
+    , mBatteryCheckerMsg(msg) {}
@@ -1506,2 +1417,2 @@ void BatteryChecker::onCodecActivity(std::function<void()> batteryOnCb) {
-void BatteryChecker::onCheckBatteryTimer(const sp<AMessage> &msg,
-                                         std::function<void()> batteryOffCb) {
+void BatteryChecker::onCheckBatteryTimer(
+        const sp<AMessage> &msg, std::function<void()> batteryOffCb) {
@@ -1509,2 +1420,2 @@ void BatteryChecker::onCheckBatteryTimer(const sp<AMessage> &msg,
-  if (!msg->findInt32("generation", &generation) ||
-      generation != mBatteryCheckerGeneration) {
+    if (!msg->findInt32("generation", &generation)
+            || generation != mBatteryCheckerGeneration) {
@@ -1539,4 +1450,3 @@ void MediaCodec::cancelPendingDequeueOperations() {
-bool MediaCodec::handleDequeueInputBuffer(const sp<AReplyToken> &replyID,
-                                          bool newRequest) {
-  if (!isExecuting() || (mFlags & kFlagIsAsync) ||
-      (newRequest && (mFlags & kFlagDequeueInputPending))) {
+bool MediaCodec::handleDequeueInputBuffer(const sp<AReplyToken> &replyID, bool newRequest) {
+    if (!isExecuting() || (mFlags & kFlagIsAsync)
+            || (newRequest && (mFlags & kFlagDequeueInputPending))) {
@@ -1559,4 +1469,3 @@ bool MediaCodec::handleDequeueInputBuffer(const sp<AReplyToken> &replyID,
-bool MediaCodec::handleDequeueOutputBuffer(const sp<AReplyToken> &replyID,
-                                           bool newRequest) {
-  if (!isExecuting() || (mFlags & kFlagIsAsync) ||
-      (newRequest && (mFlags & kFlagDequeueOutputPending))) {
+bool MediaCodec::handleDequeueOutputBuffer(const sp<AReplyToken> &replyID, bool newRequest) {
+    if (!isExecuting() || (mFlags & kFlagIsAsync)
+            || (newRequest && (mFlags & kFlagDequeueOutputPending))) {
@@ -1597 +1506,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatCodecNotify: {
+        case kWhatCodecNotify:
+        {
@@ -1601 +1511,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatError: {
+                case kWhatError:
+                {
@@ -1605,2 +1516,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-          ALOGE("Codec reported err %#x, actionCode %d, while in state %d", err,
-                actionCode, mState);
+                    ALOGE("Codec reported err %#x, actionCode %d, while in state %d",
+                            err, actionCode, mState);
@@ -1613 +1524,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            case INITIALIZING: {
+                        case INITIALIZING:
+                        {
@@ -1617 +1529,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            case CONFIGURING: {
+                        case CONFIGURING:
+                        {
@@ -1625,2 +1538,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-              setState(actionCode == ACTION_CODE_FATAL ? UNINITIALIZED
-                                                       : INITIALIZED);
+                            setState(actionCode == ACTION_CODE_FATAL ?
+                                    UNINITIALIZED : INITIALIZED);
@@ -1629 +1542,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            case STARTING: {
+                        case STARTING:
+                        {
@@ -1637,2 +1551,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-              setState(actionCode == ACTION_CODE_FATAL ? UNINITIALIZED
-                                                       : CONFIGURED);
+                            setState(actionCode == ACTION_CODE_FATAL ?
+                                    UNINITIALIZED : CONFIGURED);
@@ -1641 +1555,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            case RELEASING: {
+                        case RELEASING:
+                        {
@@ -1645 +1560,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            case STOPPING: {
+                        case STOPPING:
+                        {
@@ -1656 +1572,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            case FLUSHING: {
+                        case FLUSHING:
+                        {
@@ -1665 +1582,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                setState((mFlags & kFlagIsAsync) ? FLUSHED : STARTED);
+                                setState(
+                                        (mFlags & kFlagIsAsync) ? FLUSHED : STARTED);
@@ -1670 +1588,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            case STARTED: {
+                        case STARTED:
+                        {
@@ -1695 +1614,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            default: {
+                        default:
+                        {
@@ -1723 +1643,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatComponentAllocated: {
+                case kWhatComponentAllocated:
+                {
@@ -1738,2 +1659,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-          if (mComponentName.startsWith("OMX.google.") &&
-              strncmp(owner, "default", 8) == 0) {
+                    if (mComponentName.startsWith("OMX.google.")
+                            && strncmp(owner, "default", 8) == 0) {
@@ -1747 +1667,0 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-<<<<<<< HEAD
@@ -1749,7 +1668,0 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-||||||| faafe2989a
-            resourceType = MediaResource::kSecureCodec;
-            mAnalyticsItem->setInt32(kCodecSecure, 1);
-=======
-            resourceType = MediaResource::kSecureCodec;
-            mediametrics_setInt32(mMetricsHandle, kCodecSecure, 1);
->>>>>>> e23cbd26568fdd243d8dc6e052e664b885101688
@@ -1758,7 +1670,0 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-<<<<<<< HEAD
-            mediametrics_setInt32(mMetricsHandle, kCodecSecure, 0);
-||||||| faafe2989a
-            resourceType = MediaResource::kNonSecureCodec;
-            mAnalyticsItem->setInt32(kCodecSecure, 0);
-=======
-            resourceType = MediaResource::kNonSecureCodec;
@@ -1766 +1671,0 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
->>>>>>> e23cbd26568fdd243d8dc6e052e664b885101688
@@ -1775,3 +1680,3 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatComponentConfigured: {
-          if (mState == RELEASING || mState == UNINITIALIZED ||
-              mState == INITIALIZED) {
+                case kWhatComponentConfigured:
+                {
+                    if (mState == RELEASING || mState == UNINITIALIZED || mState == INITIALIZED) {
@@ -1787,2 +1692 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            mInputFormat->setInt32("allow-frame-drop",
-                                   mAllowFrameDroppingBySurface);
+                        mInputFormat->setInt32("allow-frame-drop", mAllowFrameDroppingBySurface);
@@ -1791 +1695,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                mComponentName.c_str(), mInputFormat->debugString(4).c_str(),
+                            mComponentName.c_str(),
+                            mInputFormat->debugString(4).c_str(),
@@ -1794,2 +1699,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-          if (mOutputFormat->findInt32("using-sw-renderer", &usingSwRenderer) &&
-              usingSwRenderer) {
+                    if (mOutputFormat->findInt32("using-sw-renderer", &usingSwRenderer)
+                            && usingSwRenderer) {
@@ -1813 +1718,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatInputSurfaceCreated: {
+                case kWhatInputSurfaceCreated:
+                {
@@ -1821,4 +1727,3 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            ALOGV(
-                "[%s] input surface created as input format: %s, output "
-                "format: %s",
-                mComponentName.c_str(), mInputFormat->debugString(4).c_str(),
+                        ALOGV("[%s] input surface created as input format: %s, output format: %s",
+                                mComponentName.c_str(),
+                                mInputFormat->debugString(4).c_str(),
@@ -1835 +1740,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatInputSurfaceAccepted: {
+                case kWhatInputSurfaceAccepted:
+                {
@@ -1848 +1754,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatSignaledInputEOS: {
+                case kWhatSignaledInputEOS:
+                {
@@ -1857 +1764,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatStartCompleted: {
+                case kWhatStartCompleted:
+                {
@@ -1871 +1779,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatOutputBuffersChanged: {
+                case kWhatOutputBuffersChanged:
+                {
@@ -1876 +1785,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatOutputFramesRendered: {
+                case kWhatOutputFramesRendered:
+                {
@@ -1884 +1794,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatFillThisBuffer: {
+                case kWhatFillThisBuffer:
+                {
@@ -1886 +1797,3 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-          if (mState == FLUSHING || mState == STOPPING || mState == RELEASING) {
+                    if (mState == FLUSHING
+                            || mState == STOPPING
+                            || mState == RELEASING) {
@@ -1895 +1808,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-              ALOGE("queueCSDInputBuffer failed w/ error %d", err);
+                            ALOGE("queueCSDInputBuffer failed w/ error %d",
+                                  err);
@@ -1920 +1834,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatDrainThisBuffer: {
+                case kWhatDrainThisBuffer:
+                {
@@ -1922 +1837,3 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-          if (mState == FLUSHING || mState == STOPPING || mState == RELEASING) {
+                    if (mState == FLUSHING
+                            || mState == STOPPING
+                            || mState == RELEASING) {
@@ -1928,2 +1845 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-          sp<MediaCodecBuffer> buffer =
-              static_cast<MediaCodecBuffer *>(obj.get());
+                    sp<MediaCodecBuffer> buffer = static_cast<MediaCodecBuffer *>(obj.get());
@@ -1932,3 +1848,4 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            ALOGV("[%s] output format changed to: %s", mComponentName.c_str(),
-                  mOutputFormat->debugString(4).c_str());
-            if (mSoftRenderer == NULL && mSurface != NULL &&
+                        ALOGV("[%s] output format changed to: %s",
+                                mComponentName.c_str(), mOutputFormat->debugString(4).c_str());
+                        if (mSoftRenderer == NULL &&
+                                mSurface != NULL &&
@@ -1944,2 +1861 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                ALOGW_IF(err != 0, "failed to set dataspace on surface (%d)",
-                         err);
+                                ALOGW_IF(err != 0, "failed to set dataspace on surface (%d)", err);
@@ -1949,2 +1865 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                if (ColorUtils::getHDRStaticInfoFromFormat(mOutputFormat,
-                                                           &info)) {
+                                if (ColorUtils::getHDRStaticInfoFromFormat(mOutputFormat, &info)) {
@@ -1955,6 +1870,4 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-              if (mOutputFormat->findBuffer("hdr10-plus-info",
-                                            &hdr10PlusInfo) &&
-                  hdr10PlusInfo != nullptr && hdr10PlusInfo->size() > 0) {
-                native_window_set_buffers_hdr10_plus_metadata(
-                    mSurface.get(), hdr10PlusInfo->size(),
-                    hdr10PlusInfo->data());
+                            if (mOutputFormat->findBuffer("hdr10-plus-info", &hdr10PlusInfo)
+                                    && hdr10PlusInfo != nullptr && hdr10PlusInfo->size() > 0) {
+                                native_window_set_buffers_hdr10_plus_metadata(mSurface.get(),
+                                        hdr10PlusInfo->size(), hdr10PlusInfo->data());
@@ -1964,2 +1877 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                mSoftRenderer =
-                    new SoftwareRenderer(mSurface, mRotationDegrees);
+                                mSoftRenderer = new SoftwareRenderer(mSurface, mRotationDegrees);
@@ -1973 +1885,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                status_t err = amendOutputFormatWithCodecSpecificData(buffer);
+                                status_t err =
+                                    amendOutputFormatWithCodecSpecificData(buffer);
@@ -1975,2 +1888 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                  ALOGE(
-                      "Codec spit out malformed codec "
+                                    ALOGE("Codec spit out malformed codec "
@@ -1989,2 +1901 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-              if (mOutputFormat->findRect("crop", &left, &top, &right,
-                                          &bottom)) {
+                            if (mOutputFormat->findRect("crop", &left, &top, &right, &bottom)) {
@@ -1992,2 +1903,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-              } else if (mOutputFormat->findInt32("width", &width) &&
-                         mOutputFormat->findInt32("height", &height)) {
+                            } else if (mOutputFormat->findInt32("width", &width)
+                                    && mOutputFormat->findInt32("height", &height)) {
@@ -2010 +1921,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatEOS: {
+                case kWhatEOS:
+                {
@@ -2013 +1925,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatStopCompleted: {
+                case kWhatStopCompleted:
+                {
@@ -2022 +1935,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatReleaseCompleted: {
+                case kWhatReleaseCompleted:
+                {
@@ -2037 +1951,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case kWhatFlushCompleted: {
+                case kWhatFlushCompleted:
+                {
@@ -2039 +1954,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-            ALOGW("received FlushCompleted message in state %d", mState);
+                        ALOGW("received FlushCompleted message in state %d",
+                                mState);
@@ -2056 +1972,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatInit: {
+        case kWhatInit:
+        {
@@ -2077 +1994,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatSetNotification: {
+        case kWhatSetNotification:
+        {
@@ -2084 +2002,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatSetCallback: {
+        case kWhatSetCallback:
+        {
@@ -2087 +2006,3 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-      if (mState == UNINITIALIZED || mState == INITIALIZING || isExecuting()) {
+            if (mState == UNINITIALIZED
+                    || mState == INITIALIZING
+                    || isExecuting()) {
@@ -2104 +2025,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatConfigure: {
+        case kWhatConfigure:
+        {
@@ -2116,2 +2038 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-      if (msg->findInt32("push-blank-buffers-on-shutdown", &push) &&
-          push != 0) {
+            if (msg->findInt32("push-blank-buffers-on-shutdown", &push) && push != 0) {
@@ -2121,2 +2042 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        if (!format->findInt32("allow-frame-drop",
-                               &mAllowFrameDroppingBySurface)) {
+                if (!format->findInt32("allow-frame-drop", &mAllowFrameDroppingBySurface)) {
@@ -2141,2 +2061,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-      ALOGV("kWhatConfigure: Old mCrypto: %p (%d)", mCrypto.get(),
-            (mCrypto != NULL ? mCrypto->getStrongCount() : 0));
+            ALOGV("kWhatConfigure: Old mCrypto: %p (%d)",
+                    mCrypto.get(), (mCrypto != NULL ? mCrypto->getStrongCount() : 0));
@@ -2145,2 +2065,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-      ALOGV("kWhatConfigure: New mCrypto: %p (%d)", mCrypto.get(),
-            (mCrypto != NULL ? mCrypto->getStrongCount() : 0));
+            ALOGV("kWhatConfigure: New mCrypto: %p (%d)",
+                    mCrypto.get(), (mCrypto != NULL ? mCrypto->getStrongCount() : 0));
@@ -2163 +2083,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatSetSurface: {
+        case kWhatSetSurface:
+        {
@@ -2170 +2091,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        case FLUSHED: {
+                case FLUSHED:
+                {
@@ -2185,2 +2107,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-                  if (mSoftRenderer != NULL &&
-                      (mFlags & kFlagPushBlankBuffersOnShutdown)) {
+                                    if (mSoftRenderer != NULL
+                                            && (mFlags & kFlagPushBlankBuffersOnShutdown)) {
@@ -2211 +2133,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatSetInputSurface: {
+        case kWhatSetInputSurface:
+        {
@@ -2229 +2152,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatStart: {
+        case kWhatStart:
+        {
@@ -2251 +2175,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatRelease: {
+        case kWhatRelease:
+        {
@@ -2282 +2207,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-          && mState != INITIALIZED && mState != CONFIGURED && !isExecuting()) {
+                    && mState != INITIALIZED
+                    && mState != CONFIGURED && !isExecuting()) {
@@ -2292,2 +2218,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-      if (mState == FLUSHING || mState == STOPPING || mState == CONFIGURING ||
-          mState == STARTING) {
+            if (mState == FLUSHING || mState == STOPPING
+                    || mState == CONFIGURING || mState == STARTING) {
@@ -2310,2 +2236,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-      mCodec->initiateShutdown(msg->what() ==
-                               kWhatStop );
+            mCodec->initiateShutdown(
+                    msg->what() == kWhatStop );
@@ -2318 +2244,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatDequeueInputBuffer: {
+        case kWhatDequeueInputBuffer:
+        {
@@ -2343,2 +2270,4 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        sp<AMessage> timeoutMsg = new AMessage(kWhatDequeueInputTimedOut, this);
-        timeoutMsg->setInt32("generation", ++mDequeueInputTimeoutGeneration);
+                sp<AMessage> timeoutMsg =
+                    new AMessage(kWhatDequeueInputTimedOut, this);
+                timeoutMsg->setInt32(
+                        "generation", ++mDequeueInputTimeoutGeneration);
@@ -2349 +2278,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatDequeueInputTimedOut: {
+        case kWhatDequeueInputTimedOut:
+        {
@@ -2361 +2291,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatQueueInputBuffer: {
+        case kWhatQueueInputBuffer:
+        {
@@ -2375 +2306,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatDequeueOutputBuffer: {
+        case kWhatDequeueOutputBuffer:
+        {
@@ -2397 +2329,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-        timeoutMsg->setInt32("generation", ++mDequeueOutputTimeoutGeneration);
+                timeoutMsg->setInt32(
+                        "generation", ++mDequeueOutputTimeoutGeneration);
@@ -2402 +2335,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatDequeueOutputTimedOut: {
+        case kWhatDequeueOutputTimedOut:
+        {
@@ -2414 +2348,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatReleaseOutputBuffer: {
+        case kWhatReleaseOutputBuffer:
+        {
@@ -2428 +2363,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatSignalEndOfInputStream: {
+        case kWhatSignalEndOfInputStream:
+        {
@@ -2442 +2378,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatGetBuffers: {
+        case kWhatGetBuffers:
+        {
@@ -2467 +2404,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatFlush: {
+        case kWhatFlush:
+        {
@@ -2484 +2422,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatGetOutputFormat: {
+        case kWhatGetOutputFormat:
+        {
@@ -2489,3 +2428,4 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-      if ((mState != CONFIGURED && mState != STARTING && mState != STARTED &&
-           mState != FLUSHING && mState != FLUSHED) ||
-          format == NULL) {
+            if ((mState != CONFIGURED && mState != STARTING &&
+                 mState != STARTED && mState != FLUSHING &&
+                 mState != FLUSHED)
+                    || format == NULL) {
@@ -2503 +2443,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatRequestIDRFrame: {
+        case kWhatRequestIDRFrame:
+        {
@@ -2507 +2448,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatRequestActivityNotification: {
+        case kWhatRequestActivityNotification:
+        {
@@ -2513 +2455,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatGetName: {
+        case kWhatGetName:
+        {
@@ -2525 +2468,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatGetCodecInfo: {
+        case kWhatGetCodecInfo:
+        {
@@ -2533 +2477,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatSetParameters: {
+        case kWhatSetParameters:
+        {
@@ -2542 +2487,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatDrmReleaseCrypto: {
+        case kWhatDrmReleaseCrypto:
+        {
@@ -2546 +2492,2 @@ void MediaCodec::onMessageReceived(const sp<AMessage> &msg) {
-    case kWhatCheckBatteryStats: {
+        case kWhatCheckBatteryStats:
+        {
@@ -2604,2 +2551,2 @@ void MediaCodec::setState(State newState) {
-      ALOGV("setState: ~mCrypto: %p (%d)", mCrypto.get(),
-            (mCrypto != NULL ? mCrypto->getStrongCount() : 0));
+            ALOGV("setState: ~mCrypto: %p (%d)",
+                    mCrypto.get(), (mCrypto != NULL ? mCrypto->getStrongCount() : 0));
@@ -2643,2 +2590 @@ void MediaCodec::returnBuffersToCodecOnPort(int32_t portIndex, bool isReclaim) {
-        ALOGD(
-            "port %d buffer %zu still owned by client when codec is reclaimed",
+                ALOGD("port %d buffer %zu still owned by client when codec is reclaimed",
@@ -2655 +2601,2 @@ void MediaCodec::returnBuffersToCodecOnPort(int32_t portIndex, bool isReclaim) {
-size_t MediaCodec::updateBuffers(int32_t portIndex, const sp<AMessage> &msg) {
+size_t MediaCodec::updateBuffers(
+        int32_t portIndex, const sp<AMessage> &msg) {
@@ -2745,2 +2692,9 @@ status_t MediaCodec::onQueueInputBuffer(const sp<AMessage> &msg) {
-        buffer, (mFlags & kFlagIsSecure), key, iv, mode, pattern, subSamples,
-        numSubSamples, errorDetailMsg);
+                buffer,
+                (mFlags & kFlagIsSecure),
+                key,
+                iv,
+                mode,
+                pattern,
+                subSamples,
+                numSubSamples,
+                errorDetailMsg);
@@ -2766,4 +2720,2 @@ size_t MediaCodec::CreateFramesRenderedMessage(
-    msg->setInt64(AStringPrintf("%zu-media-time-us", index).c_str(),
-                  it->getMediaTimeUs());
-    msg->setInt64(AStringPrintf("%zu-system-nano", index).c_str(),
-                  it->getRenderTimeNs());
+        msg->setInt64(AStringPrintf("%zu-media-time-us", index).c_str(), it->getMediaTimeUs());
+        msg->setInt64(AStringPrintf("%zu-system-nano", index).c_str(), it->getRenderTimeNs());
@@ -2810,2 +2762 @@ status_t MediaCodec::onReleaseOutputBuffer(const sp<AMessage> &msg) {
-      if (!doneFrames.empty() && mState == STARTED &&
-          mOnFrameRenderedNotification != NULL) {
+            if (!doneFrames.empty() && mState == STARTED && mOnFrameRenderedNotification != NULL) {
@@ -2845,2 +2796 @@ ssize_t MediaCodec::dequeuePortBuffer(int32_t portIndex) {
-      if (info->mData->format()->findRect("crop", &left, &top, &right,
-                                          &bottom)) {
+            if (info->mData->format()->findRect("crop", &left, &top, &right, &bottom)) {
@@ -2857,4 +2807,5 @@ status_t MediaCodec::connectToSurface(const sp<Surface> &surface) {
-    if (mSurface != NULL && surface->getUniqueId(&newId) == NO_ERROR &&
-        mSurface->getUniqueId(&oldId) == NO_ERROR && newId == oldId) {
-      ALOGI("[%s] connecting to the same surface. Nothing to do.",
-            mComponentName.c_str());
+        if (mSurface != NULL
+                && surface->getUniqueId(&newId) == NO_ERROR
+                && mSurface->getUniqueId(&oldId) == NO_ERROR
+                && newId == oldId) {
+            ALOGI("[%s] connecting to the same surface. Nothing to do.", mComponentName.c_str());
@@ -2866,2 +2817 @@ status_t MediaCodec::connectToSurface(const sp<Surface> &surface) {
-      uint32_t generation =
-          (getpid() << 10) | (++mSurfaceGeneration & ((1 << 10) - 1));
+            uint32_t generation = (getpid() << 10) | (++mSurfaceGeneration & ((1 << 10) - 1));
@@ -2869,2 +2819 @@ status_t MediaCodec::connectToSurface(const sp<Surface> &surface) {
-      ALOGI("[%s] setting surface generation to %u", mComponentName.c_str(),
-            generation);
+            ALOGI("[%s] setting surface generation to %u", mComponentName.c_str(), generation);
@@ -2875,2 +2824 @@ status_t MediaCodec::connectToSurface(const sp<Surface> &surface) {
-      ALOGE("nativeWindowConnect returned an error: %s (%d)", strerror(-err),
-            err);
+            ALOGE("nativeWindowConnect returned an error: %s (%d)", strerror(-err), err);
@@ -2891,2 +2839 @@ status_t MediaCodec::disconnectFromSurface() {
-      ALOGW("nativeWindowDisconnect returned an error: %s (%d)", strerror(-err),
-            err);
+            ALOGW("nativeWindowDisconnect returned an error: %s (%d)", strerror(-err), err);
@@ -2965,4 +2912,6 @@ void MediaCodec::postActivityNotificationIfPossible() {
-      (mFlags & (kFlagStickyError | kFlagOutputBuffersChanged |
-                 kFlagOutputFormatChanged));
-  if (isErrorOrOutputChanged || !mAvailPortBuffers[kPortIndexInput].empty() ||
-      !mAvailPortBuffers[kPortIndexOutput].empty()) {
+            (mFlags & (kFlagStickyError
+                    | kFlagOutputBuffersChanged
+                    | kFlagOutputFormatChanged));
+    if (isErrorOrOutputChanged
+            || !mAvailPortBuffers[kPortIndexInput].empty()
+            || !mAvailPortBuffers[kPortIndexOutput].empty()) {
@@ -3006 +2955,2 @@ status_t MediaCodec::amendOutputFormatWithCodecSpecificData(
-      mOutputFormat->setBuffer(AStringPrintf("csd-%u", csdIndex).c_str(), csd);
+            mOutputFormat->setBuffer(
+                    AStringPrintf("csd-%u", csdIndex).c_str(), csd);
@@ -3024,33 +2974,11 @@ std::string MediaCodec::stateString(State state) {
-    case UNINITIALIZED:
-      rval = "UNINITIALIZED";
-      break;
-    case INITIALIZING:
-      rval = "INITIALIZING";
-      break;
-    case INITIALIZED:
-      rval = "INITIALIZED";
-      break;
-    case CONFIGURING:
-      rval = "CONFIGURING";
-      break;
-    case CONFIGURED:
-      rval = "CONFIGURED";
-      break;
-    case STARTING:
-      rval = "STARTING";
-      break;
-    case STARTED:
-      rval = "STARTED";
-      break;
-    case FLUSHING:
-      rval = "FLUSHING";
-      break;
-    case FLUSHED:
-      rval = "FLUSHED";
-      break;
-    case STOPPING:
-      rval = "STOPPING";
-      break;
-    case RELEASING:
-      rval = "RELEASING";
-      break;
+        case UNINITIALIZED: rval = "UNINITIALIZED"; break;
+        case INITIALIZING: rval = "INITIALIZING"; break;
+        case INITIALIZED: rval = "INITIALIZED"; break;
+        case CONFIGURING: rval = "CONFIGURING"; break;
+        case CONFIGURED: rval = "CONFIGURED"; break;
+        case STARTING: rval = "STARTING"; break;
+        case STARTED: rval = "STARTED"; break;
+        case FLUSHING: rval = "FLUSHING"; break;
+        case FLUSHED: rval = "FLUSHED"; break;
+        case STOPPING: rval = "STOPPING"; break;
+        case RELEASING: rval = "RELEASING"; break;
@@ -3064,4 +2991,0 @@ std::string MediaCodec::stateString(State state) {
-using Status = ::ndk::ScopedAStatus;
-using aidl::android::media::BnResourceManagerClient;
-using aidl::android::media::IResourceManagerClient;
-using aidl::android::media::IResourceManagerService;
