--- a/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/d2572133-decaebce-11060fbe/services@audioflinger@Threads.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/frameworks_av/d2572133-decaebce-11060fbe/services@audioflinger@Threads.no_comments_merged.h
@@ -5,0 +6 @@ class ThreadBase : public Thread {
+#include "TrackBase.h"
@@ -227 +218 @@ class ThreadBase : public Thread {
-  audio_devices_t inDevice() const { return mInDeviceTypeAddr.mType; }
+                audio_devices_t inDeviceType() const { return mInDeviceTypeAddr.mType; }
@@ -340,5 +336,3 @@ class ThreadBase : public Thread {
-  virtual void dumpInternals_l(int fd __unused,
-                               const Vector<String16>& args __unused) {}
-  virtual void dumpTracks_l(int fd __unused,
-                            const Vector<String16>& args __unused) {}
- private:
+    virtual void dumpInternals_l(int fd __unused, const Vector<String16>& args __unused)
+                            { }
+    virtual void dumpTracks_l(int fd __unused, const Vector<String16>& args __unused) { }
@@ -346 +339,0 @@ class ThreadBase : public Thread {
- protected:
@@ -455,0 +459 @@ class PlaybackThread : public ThreadBase,
+#include "PlaybackTracks.h"
@@ -545,2 +556 @@ class PlaybackThread : public ThreadBase,
-    return reinterpret_cast<effect_buffer_t*>(mSinkBuffer);
-  }
+                    return reinterpret_cast<effect_buffer_t *>(mSinkBuffer); };
@@ -690,0 +710 @@ class PlaybackThread : public ThreadBase,
+private:
@@ -790,5 +806,3 @@ class DirectOutputThread : public PlaybackThread {
-  DirectOutputThread(const sp<AudioFlinger>& audioFlinger,
-                     AudioStreamOut* output, audio_io_handle_t id,
-                     audio_devices_t device, bool systemReady)
-      : DirectOutputThread(audioFlinger, output, id, device, DIRECT,
-                           systemReady) {}
+    DirectOutputThread(const sp<AudioFlinger>& audioFlinger, AudioStreamOut* output,
+                       audio_io_handle_t id, bool systemReady)
+        : DirectOutputThread(audioFlinger, output, id, DIRECT, systemReady) { }
@@ -845 +858 @@ class OffloadThread : public DirectOutputThread {
-  virtual ~OffloadThread() {}
+    virtual ~OffloadThread() {};
@@ -950,2 +961,6 @@ class RecordThread : public ThreadBase {
-  RecordThread(const sp<AudioFlinger>& audioFlinger, AudioStreamIn* input,
-               audio_io_handle_t id, bool systemReady);
+#include "RecordTracks.h"
+            RecordThread(const sp<AudioFlinger>& audioFlinger,
+                    AudioStreamIn *input,
+                    audio_io_handle_t id,
+                    bool systemReady
+                    );
@@ -1060,0 +1081 @@ class MmapThread : public ThreadBase {
+#include "MmapTracks.h"
