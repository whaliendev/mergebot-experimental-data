--- a/home/whalien/codebase/cpp/mergebot/eva/output/grpc/d7311d7d-729af3a4-694f491e/src@core@ext@upb-generated@envoy@api@v2@core@base.upb.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/grpc/d7311d7d-729af3a4-694f491e/src@core@ext@upb-generated@envoy@api@v2@core@base.upb.no_comments_merged.h
@@ -0,0 +1 @@
+#ifndef ENVOY_API_V2_CORE_BASE_PROTO_UPB_H_
@@ -1,0 +3,8 @@
+#include "upb/msg.h"
+#include "upb/decode.h"
+#include "upb/encode.h"
+#include "envoy/api/v2/core/socket_option.upb.h"
+#include "upb/port_def.inc"
+#ifdef __cplusplus
+extern "C" {
+#endif
@@ -123,14 +118,4 @@ UPB_INLINE char* envoy_api_v2_core_Locality_serialize(
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE void envoy_api_v2_core_Locality_set_region(
-    envoy_api_v2_core_Locality* msg, upb_strview value) {
+UPB_INLINE upb_strview envoy_api_v2_core_Locality_region(const envoy_api_v2_core_Locality *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Locality_zone(const envoy_api_v2_core_Locality *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(8, 16)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Locality_sub_zone(const envoy_api_v2_core_Locality *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(16, 32)); }
+UPB_INLINE void envoy_api_v2_core_Locality_set_region(envoy_api_v2_core_Locality *msg, upb_strview value) {
@@ -147 +130,4 @@ UPB_INLINE void envoy_api_v2_core_Locality_set_sub_zone(
-UPB_INLINE envoy_api_v2_core_BuildVersion* envoy_api_v2_core_BuildVersion_new(
+UPB_INLINE envoy_api_v2_core_BuildVersion *envoy_api_v2_core_BuildVersion_new(upb_arena *arena) {
+  return (envoy_api_v2_core_BuildVersion *)_upb_msg_new(&envoy_api_v2_core_BuildVersion_msginit, arena);
+}
+UPB_INLINE envoy_api_v2_core_BuildVersion *envoy_api_v2_core_BuildVersion_parse(const char *buf, size_t size,
@@ -149,14 +135,4 @@ UPB_INLINE envoy_api_v2_core_BuildVersion* envoy_api_v2_core_BuildVersion_new(
-  return (envoy_api_v2_core_BuildVersion*)_upb_msg_new(
-      &envoy_api_v2_core_BuildVersion_msginit, arena);
-}
-UPB_INLINE envoy_api_v2_core_BuildVersion* envoy_api_v2_core_BuildVersion_parse(
-    const char* buf, size_t size, upb_arena* arena) {
-  envoy_api_v2_core_BuildVersion* ret =
-      envoy_api_v2_core_BuildVersion_new(arena);
-  return (ret && upb_decode(buf, size, ret,
-                            &envoy_api_v2_core_BuildVersion_msginit, arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char* envoy_api_v2_core_BuildVersion_serialize(
-    const envoy_api_v2_core_BuildVersion* msg, upb_arena* arena, size_t* len) {
+  envoy_api_v2_core_BuildVersion *ret = envoy_api_v2_core_BuildVersion_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_api_v2_core_BuildVersion_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_api_v2_core_BuildVersion_serialize(const envoy_api_v2_core_BuildVersion *msg, upb_arena *arena, size_t *len) {
@@ -230,23 +178,6 @@ UPB_INLINE char* envoy_api_v2_core_Extension_serialize(
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE const envoy_api_v2_core_BuildVersion*
-envoy_api_v2_core_Extension_version(const envoy_api_v2_core_Extension* msg) {
-  return UPB_FIELD_AT(msg, const envoy_api_v2_core_BuildVersion*,
-                      UPB_SIZE(28, 56));
-}
-UPB_INLINE bool envoy_api_v2_core_Extension_disabled(
-    const envoy_api_v2_core_Extension* msg) {
-  return UPB_FIELD_AT(msg, bool, UPB_SIZE(0, 0));
-}
-UPB_INLINE void envoy_api_v2_core_Extension_set_name(
-    envoy_api_v2_core_Extension* msg, upb_strview value) {
+UPB_INLINE upb_strview envoy_api_v2_core_Extension_name(const envoy_api_v2_core_Extension *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(4, 8)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Extension_category(const envoy_api_v2_core_Extension *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(12, 24)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Extension_type_descriptor(const envoy_api_v2_core_Extension *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(20, 40)); }
+UPB_INLINE const envoy_api_v2_core_BuildVersion* envoy_api_v2_core_Extension_version(const envoy_api_v2_core_Extension *msg) { return UPB_FIELD_AT(msg, const envoy_api_v2_core_BuildVersion*, UPB_SIZE(28, 56)); }
+UPB_INLINE bool envoy_api_v2_core_Extension_disabled(const envoy_api_v2_core_Extension *msg) { return UPB_FIELD_AT(msg, bool, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_api_v2_core_Extension_set_name(envoy_api_v2_core_Extension *msg, upb_strview value) {
@@ -307,67 +223,15 @@ typedef enum {
-UPB_INLINE envoy_api_v2_core_Node_user_agent_version_type_oneofcases
-envoy_api_v2_core_Node_user_agent_version_type_case(
-    const envoy_api_v2_core_Node* msg) {
-  return (envoy_api_v2_core_Node_user_agent_version_type_oneofcases)
-      UPB_FIELD_AT(msg, int32_t, UPB_SIZE(60, 120));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE const struct google_protobuf_Struct* envoy_api_v2_core_Node_metadata(
-    const envoy_api_v2_core_Node* msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_Struct*,
-                      UPB_SIZE(32, 64));
-}
-UPB_INLINE const envoy_api_v2_core_Locality* envoy_api_v2_core_Node_locality(
-    const envoy_api_v2_core_Node* msg) {
-  return UPB_FIELD_AT(msg, const envoy_api_v2_core_Locality*, UPB_SIZE(36, 72));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool envoy_api_v2_core_Node_has_user_agent_version(
-    const envoy_api_v2_core_Node* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(60, 120), 7);
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool envoy_api_v2_core_Node_has_user_agent_build_version(
-    const envoy_api_v2_core_Node* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(60, 120), 8);
-}
-UPB_INLINE const envoy_api_v2_core_BuildVersion*
-envoy_api_v2_core_Node_user_agent_build_version(
-    const envoy_api_v2_core_Node* msg) {
-  return UPB_READ_ONEOF(msg, const envoy_api_v2_core_BuildVersion*,
-                        UPB_SIZE(52, 104), UPB_SIZE(60, 120), 8, NULL);
-}
-UPB_INLINE const envoy_api_v2_core_Extension* const*
-envoy_api_v2_core_Node_extensions(const envoy_api_v2_core_Node* msg,
-                                  size_t* len) {
-  return (const envoy_api_v2_core_Extension* const*)_upb_array_accessor(
-      msg, UPB_SIZE(40, 80), len);
-}
-UPB_INLINE upb_strview const* envoy_api_v2_core_Node_client_features(
-    const envoy_api_v2_core_Node* msg, size_t* len) {
-  return (upb_strview const*)_upb_array_accessor(msg, UPB_SIZE(44, 88), len);
-}
-UPB_INLINE const struct envoy_api_v2_core_Address* const*
-envoy_api_v2_core_Node_listening_addresses(const envoy_api_v2_core_Node* msg,
-                                           size_t* len) {
-  return (const struct envoy_api_v2_core_Address* const*)_upb_array_accessor(
-      msg, UPB_SIZE(48, 96), len);
-}
-UPB_INLINE void envoy_api_v2_core_Node_set_id(envoy_api_v2_core_Node* msg,
-                                              upb_strview value) {
+UPB_INLINE envoy_api_v2_core_Node_user_agent_version_type_oneofcases envoy_api_v2_core_Node_user_agent_version_type_case(const envoy_api_v2_core_Node* msg) { return (envoy_api_v2_core_Node_user_agent_version_type_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(60, 120)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Node_id(const envoy_api_v2_core_Node *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Node_cluster(const envoy_api_v2_core_Node *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(8, 16)); }
+UPB_INLINE const struct google_protobuf_Struct* envoy_api_v2_core_Node_metadata(const envoy_api_v2_core_Node *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_Struct*, UPB_SIZE(32, 64)); }
+UPB_INLINE const envoy_api_v2_core_Locality* envoy_api_v2_core_Node_locality(const envoy_api_v2_core_Node *msg) { return UPB_FIELD_AT(msg, const envoy_api_v2_core_Locality*, UPB_SIZE(36, 72)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Node_build_version(const envoy_api_v2_core_Node *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(16, 32)); }
+UPB_INLINE upb_strview envoy_api_v2_core_Node_user_agent_name(const envoy_api_v2_core_Node *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(24, 48)); }
+UPB_INLINE bool envoy_api_v2_core_Node_has_user_agent_version(const envoy_api_v2_core_Node *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(60, 120), 7); }
+UPB_INLINE upb_strview envoy_api_v2_core_Node_user_agent_version(const envoy_api_v2_core_Node *msg) { return UPB_READ_ONEOF(msg, upb_strview, UPB_SIZE(52, 104), UPB_SIZE(60, 120), 7, upb_strview_make("", strlen(""))); }
+UPB_INLINE bool envoy_api_v2_core_Node_has_user_agent_build_version(const envoy_api_v2_core_Node *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(60, 120), 8); }
+UPB_INLINE const envoy_api_v2_core_BuildVersion* envoy_api_v2_core_Node_user_agent_build_version(const envoy_api_v2_core_Node *msg) { return UPB_READ_ONEOF(msg, const envoy_api_v2_core_BuildVersion*, UPB_SIZE(52, 104), UPB_SIZE(60, 120), 8, NULL); }
+UPB_INLINE const envoy_api_v2_core_Extension* const* envoy_api_v2_core_Node_extensions(const envoy_api_v2_core_Node *msg, size_t *len) { return (const envoy_api_v2_core_Extension* const*)_upb_array_accessor(msg, UPB_SIZE(40, 80), len); }
+UPB_INLINE upb_strview const* envoy_api_v2_core_Node_client_features(const envoy_api_v2_core_Node *msg, size_t *len) { return (upb_strview const*)_upb_array_accessor(msg, UPB_SIZE(44, 88), len); }
+UPB_INLINE const struct envoy_api_v2_core_Address* const* envoy_api_v2_core_Node_listening_addresses(const envoy_api_v2_core_Node *msg, size_t *len) { return (const struct envoy_api_v2_core_Address* const*)_upb_array_accessor(msg, UPB_SIZE(48, 96), len); }
+UPB_INLINE void envoy_api_v2_core_Node_set_id(envoy_api_v2_core_Node *msg, upb_strview value) {
@@ -427,2 +276,2 @@ UPB_INLINE void envoy_api_v2_core_Node_set_user_agent_version(
-UPB_WRITE_ONEOF(msg, envoy_api_v2_core_BuildVersion*, UPB_SIZE(52, 104), value,
-                UPB_SIZE(60, 120), 8);
+UPB_INLINE void envoy_api_v2_core_Node_set_user_agent_build_version(envoy_api_v2_core_Node *msg, envoy_api_v2_core_BuildVersion* value) {
+  UPB_WRITE_ONEOF(msg, envoy_api_v2_core_BuildVersion*, UPB_SIZE(52, 104), value, UPB_SIZE(60, 120), 8);
@@ -471,22 +304,2 @@ UPB_INLINE upb_strview* envoy_api_v2_core_Node_mutable_client_features(
-UPB_INLINE upb_strview* envoy_api_v2_core_Node_resize_client_features(
-    envoy_api_v2_core_Node* msg, size_t len, upb_arena* arena) {
-  return (upb_strview*)_upb_array_resize_accessor(msg, UPB_SIZE(44, 88), len,
-                                                  UPB_TYPE_STRING, arena);
-}
-UPB_INLINE bool envoy_api_v2_core_Node_add_client_features(
-    envoy_api_v2_core_Node* msg, upb_strview val, upb_arena* arena) {
-  return _upb_array_append_accessor(msg, UPB_SIZE(44, 88), UPB_SIZE(8, 16),
-                                    UPB_TYPE_STRING, &val, arena);
-}
-UPB_INLINE struct envoy_api_v2_core_Address**
-envoy_api_v2_core_Node_mutable_listening_addresses(envoy_api_v2_core_Node* msg,
-                                                   size_t* len) {
-  return (struct envoy_api_v2_core_Address**)_upb_array_mutable_accessor(
-      msg, UPB_SIZE(48, 96), len);
-}
-UPB_INLINE struct envoy_api_v2_core_Address**
-envoy_api_v2_core_Node_resize_listening_addresses(envoy_api_v2_core_Node* msg,
-                                                  size_t len,
-                                                  upb_arena* arena) {
-  return (struct envoy_api_v2_core_Address**)_upb_array_resize_accessor(
-      msg, UPB_SIZE(48, 96), len, UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, arena);
+UPB_INLINE upb_strview* envoy_api_v2_core_Node_resize_client_features(envoy_api_v2_core_Node *msg, size_t len, upb_arena *arena) {
+  return (upb_strview*)_upb_array_resize_accessor(msg, UPB_SIZE(44, 88), len, UPB_TYPE_STRING, arena);
@@ -494,8 +307,14 @@ envoy_api_v2_core_Node_resize_listening_addresses(envoy_api_v2_core_Node* msg,
-UPB_INLINE struct envoy_api_v2_core_Address*
-envoy_api_v2_core_Node_add_listening_addresses(envoy_api_v2_core_Node* msg,
-                                               upb_arena* arena) {
-  struct envoy_api_v2_core_Address* sub =
-      (struct envoy_api_v2_core_Address*)upb_msg_new(
-          &envoy_api_v2_core_Address_msginit, arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(48, 96), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+UPB_INLINE bool envoy_api_v2_core_Node_add_client_features(envoy_api_v2_core_Node *msg, upb_strview val, upb_arena *arena) {
+  return _upb_array_append_accessor(msg, UPB_SIZE(44, 88), UPB_SIZE(8, 16), UPB_TYPE_STRING, &val,
+      arena);
+}
+UPB_INLINE struct envoy_api_v2_core_Address** envoy_api_v2_core_Node_mutable_listening_addresses(envoy_api_v2_core_Node *msg, size_t *len) {
+  return (struct envoy_api_v2_core_Address**)_upb_array_mutable_accessor(msg, UPB_SIZE(48, 96), len);
+}
+UPB_INLINE struct envoy_api_v2_core_Address** envoy_api_v2_core_Node_resize_listening_addresses(envoy_api_v2_core_Node *msg, size_t len, upb_arena *arena) {
+  return (struct envoy_api_v2_core_Address**)_upb_array_resize_accessor(msg, UPB_SIZE(48, 96), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_api_v2_core_Address* envoy_api_v2_core_Node_add_listening_addresses(envoy_api_v2_core_Node *msg, upb_arena *arena) {
+  struct envoy_api_v2_core_Address* sub = (struct envoy_api_v2_core_Address*)_upb_msg_new(&envoy_api_v2_core_Address_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(48, 96), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -522,28 +335,13 @@ UPB_INLINE char* envoy_api_v2_core_Metadata_serialize(
-UPB_INLINE size_t envoy_api_v2_core_Metadata_filter_metadata_size(
-    const envoy_api_v2_core_Metadata* msg) {
-  return _upb_msg_map_size(msg, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool envoy_api_v2_core_Metadata_filter_metadata_get(
-    const envoy_api_v2_core_Metadata* msg, upb_strview key,
-    struct google_protobuf_Struct** val) {
-  return _upb_msg_map_get(msg, UPB_SIZE(0, 0), &key, 0, val, sizeof(*val));
-}
-UPB_INLINE const envoy_api_v2_core_Metadata_FilterMetadataEntry*
-envoy_api_v2_core_Metadata_filter_metadata_next(
-    const envoy_api_v2_core_Metadata* msg, size_t* iter) {
-  return (const envoy_api_v2_core_Metadata_FilterMetadataEntry*)
-      _upb_msg_map_next(msg, UPB_SIZE(0, 0), iter);
-}
-UPB_INLINE envoy_api_v2_core_Metadata_FilterMetadataEntry*
-envoy_api_v2_core_Metadata_filter_metadata_nextmutable(
-    envoy_api_v2_core_Metadata* msg, size_t* iter) {
-  return (envoy_api_v2_core_Metadata_FilterMetadataEntry*)_upb_msg_map_next(
-      msg, UPB_SIZE(0, 0), iter);
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE const struct google_protobuf_Struct*
-envoy_api_v2_core_Metadata_FilterMetadataEntry_value(
-    const envoy_api_v2_core_Metadata_FilterMetadataEntry* msg) {
+UPB_INLINE size_t envoy_api_v2_core_Metadata_filter_metadata_size(const envoy_api_v2_core_Metadata *msg) {return _upb_msg_map_size(msg, UPB_SIZE(0, 0)); }
+UPB_INLINE bool envoy_api_v2_core_Metadata_filter_metadata_get(const envoy_api_v2_core_Metadata *msg, upb_strview key, struct google_protobuf_Struct* *val) { return _upb_msg_map_get(msg, UPB_SIZE(0, 0), &key, 0, val, sizeof(*val)); }
+UPB_INLINE const envoy_api_v2_core_Metadata_FilterMetadataEntry* envoy_api_v2_core_Metadata_filter_metadata_next(const envoy_api_v2_core_Metadata *msg, size_t* iter) { return (const envoy_api_v2_core_Metadata_FilterMetadataEntry*)_upb_msg_map_next(msg, UPB_SIZE(0, 0), iter); }
+UPB_INLINE void envoy_api_v2_core_Metadata_filter_metadata_clear(envoy_api_v2_core_Metadata *msg) { _upb_msg_map_clear(msg, UPB_SIZE(0, 0)); }
+UPB_INLINE bool envoy_api_v2_core_Metadata_filter_metadata_set(envoy_api_v2_core_Metadata *msg, upb_strview key, struct google_protobuf_Struct* val, upb_arena *a) { return _upb_msg_map_set(msg, UPB_SIZE(0, 0), &key, 0, &val, sizeof(val), a); }
+UPB_INLINE bool envoy_api_v2_core_Metadata_filter_metadata_delete(envoy_api_v2_core_Metadata *msg, upb_strview key) { return _upb_msg_map_delete(msg, UPB_SIZE(0, 0), &key, 0); }
+UPB_INLINE envoy_api_v2_core_Metadata_FilterMetadataEntry* envoy_api_v2_core_Metadata_filter_metadata_nextmutable(envoy_api_v2_core_Metadata *msg, size_t* iter) { return (envoy_api_v2_core_Metadata_FilterMetadataEntry*)_upb_msg_map_next(msg, UPB_SIZE(0, 0), iter); }
+UPB_INLINE upb_strview envoy_api_v2_core_Metadata_FilterMetadataEntry_key(const envoy_api_v2_core_Metadata_FilterMetadataEntry *msg) {
+  upb_strview ret;
+  _upb_msg_map_key(msg, &ret, 0);
+  return ret;
+}
+UPB_INLINE const struct google_protobuf_Struct* envoy_api_v2_core_Metadata_FilterMetadataEntry_value(const envoy_api_v2_core_Metadata_FilterMetadataEntry *msg) {
@@ -567,10 +360,2 @@ envoy_api_v2_core_RuntimeUInt32_parse(const char* buf, size_t size,
-  envoy_api_v2_core_RuntimeUInt32* ret =
-      envoy_api_v2_core_RuntimeUInt32_new(arena);
-  return (ret && upb_decode(buf, size, ret,
-                            &envoy_api_v2_core_RuntimeUInt32_msginit, arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char* envoy_api_v2_core_RuntimeUInt32_serialize(
-    const envoy_api_v2_core_RuntimeUInt32* msg, upb_arena* arena, size_t* len) {
-  return upb_encode(msg, &envoy_api_v2_core_RuntimeUInt32_msginit, arena, len);
+  envoy_api_v2_core_RuntimeUInt32 *ret = envoy_api_v2_core_RuntimeUInt32_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_api_v2_core_RuntimeUInt32_msginit, arena)) ? ret : NULL;
@@ -578,7 +363,2 @@ UPB_INLINE char* envoy_api_v2_core_RuntimeUInt32_serialize(
-UPB_INLINE uint32_t envoy_api_v2_core_RuntimeUInt32_default_value(
-    const envoy_api_v2_core_RuntimeUInt32* msg) {
-  return UPB_FIELD_AT(msg, uint32_t, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
+UPB_INLINE char *envoy_api_v2_core_RuntimeUInt32_serialize(const envoy_api_v2_core_RuntimeUInt32 *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_api_v2_core_RuntimeUInt32_msginit, arena, len);
@@ -586,2 +366,3 @@ envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-UPB_INLINE void envoy_api_v2_core_RuntimeUInt32_set_default_value(
-    envoy_api_v2_core_RuntimeUInt32* msg, uint32_t value) {
+UPB_INLINE uint32_t envoy_api_v2_core_RuntimeUInt32_default_value(const envoy_api_v2_core_RuntimeUInt32 *msg) { return UPB_FIELD_AT(msg, uint32_t, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_api_v2_core_RuntimeUInt32_runtime_key(const envoy_api_v2_core_RuntimeUInt32 *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(4, 8)); }
+UPB_INLINE void envoy_api_v2_core_RuntimeUInt32_set_default_value(envoy_api_v2_core_RuntimeUInt32 *msg, uint32_t value) {
@@ -594,4 +374,2 @@ UPB_INLINE void envoy_api_v2_core_RuntimeUInt32_set_runtime_key(
-UPB_INLINE envoy_api_v2_core_RuntimeDouble* envoy_api_v2_core_RuntimeDouble_new(
-    upb_arena* arena) {
-  return (envoy_api_v2_core_RuntimeDouble*)upb_msg_new(
-      &envoy_api_v2_core_RuntimeDouble_msginit, arena);
+UPB_INLINE envoy_api_v2_core_RuntimeDouble *envoy_api_v2_core_RuntimeDouble_new(upb_arena *arena) {
+  return (envoy_api_v2_core_RuntimeDouble *)_upb_msg_new(&envoy_api_v2_core_RuntimeDouble_msginit, arena);
@@ -602,14 +379,2 @@ envoy_api_v2_core_RuntimeDouble_parse(const char* buf, size_t size,
-  envoy_api_v2_core_RuntimeDouble* ret =
-      envoy_api_v2_core_RuntimeDouble_new(arena);
-  return (ret && upb_decode(buf, size, ret,
-                            &envoy_api_v2_core_RuntimeDouble_msginit, arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char* envoy_api_v2_core_RuntimeDouble_serialize(
-    const envoy_api_v2_core_RuntimeDouble* msg, upb_arena* arena, size_t* len) {
-  return upb_encode(msg, &envoy_api_v2_core_RuntimeDouble_msginit, arena, len);
-}
-UPB_INLINE double envoy_api_v2_core_RuntimeDouble_default_value(
-    const envoy_api_v2_core_RuntimeDouble* msg) {
-  return UPB_FIELD_AT(msg, double, UPB_SIZE(0, 0));
+  envoy_api_v2_core_RuntimeDouble *ret = envoy_api_v2_core_RuntimeDouble_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_api_v2_core_RuntimeDouble_msginit, arena)) ? ret : NULL;
@@ -617,3 +382,2 @@ UPB_INLINE double envoy_api_v2_core_RuntimeDouble_default_value(
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
+UPB_INLINE char *envoy_api_v2_core_RuntimeDouble_serialize(const envoy_api_v2_core_RuntimeDouble *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_api_v2_core_RuntimeDouble_msginit, arena, len);
@@ -621,2 +385,3 @@ envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-UPB_INLINE void envoy_api_v2_core_RuntimeDouble_set_default_value(
-    envoy_api_v2_core_RuntimeDouble* msg, double value) {
+UPB_INLINE double envoy_api_v2_core_RuntimeDouble_default_value(const envoy_api_v2_core_RuntimeDouble *msg) { return UPB_FIELD_AT(msg, double, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_api_v2_core_RuntimeDouble_runtime_key(const envoy_api_v2_core_RuntimeDouble *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(8, 8)); }
+UPB_INLINE void envoy_api_v2_core_RuntimeDouble_set_default_value(envoy_api_v2_core_RuntimeDouble *msg, double value) {
@@ -637,27 +398,9 @@ envoy_api_v2_core_RuntimeFeatureFlag_parse(const char* buf, size_t size,
-  envoy_api_v2_core_RuntimeFeatureFlag* ret =
-      envoy_api_v2_core_RuntimeFeatureFlag_new(arena);
-  return (ret &&
-          upb_decode(buf, size, ret,
-                     &envoy_api_v2_core_RuntimeFeatureFlag_msginit, arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char* envoy_api_v2_core_RuntimeFeatureFlag_serialize(
-    const envoy_api_v2_core_RuntimeFeatureFlag* msg, upb_arena* arena,
-    size_t* len) {
-  return upb_encode(msg, &envoy_api_v2_core_RuntimeFeatureFlag_msginit, arena,
-                    len);
-}
-UPB_INLINE const struct google_protobuf_BoolValue*
-envoy_api_v2_core_RuntimeFeatureFlag_default_value(
-    const envoy_api_v2_core_RuntimeFeatureFlag* msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*,
-                      UPB_SIZE(8, 16));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE void envoy_api_v2_core_RuntimeFeatureFlag_set_default_value(
-    envoy_api_v2_core_RuntimeFeatureFlag* msg,
-    struct google_protobuf_BoolValue* value) {
+  envoy_api_v2_core_RuntimeFeatureFlag *ret = envoy_api_v2_core_RuntimeFeatureFlag_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_api_v2_core_RuntimeFeatureFlag_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_api_v2_core_RuntimeFeatureFlag_serialize(const envoy_api_v2_core_RuntimeFeatureFlag *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_api_v2_core_RuntimeFeatureFlag_msginit, arena, len);
+}
+UPB_INLINE const struct google_protobuf_BoolValue* envoy_api_v2_core_RuntimeFeatureFlag_default_value(const envoy_api_v2_core_RuntimeFeatureFlag *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*, UPB_SIZE(8, 16)); }
+UPB_INLINE upb_strview envoy_api_v2_core_RuntimeFeatureFlag_runtime_key(const envoy_api_v2_core_RuntimeFeatureFlag *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_api_v2_core_RuntimeFeatureFlag_set_default_value(envoy_api_v2_core_RuntimeFeatureFlag *msg, struct google_protobuf_BoolValue* value) {
@@ -700,10 +432,3 @@ UPB_INLINE char* envoy_api_v2_core_HeaderValue_serialize(
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE void envoy_api_v2_core_HeaderValue_set_key(
-    envoy_api_v2_core_HeaderValue* msg, upb_strview value) {
+UPB_INLINE upb_strview envoy_api_v2_core_HeaderValue_key(const envoy_api_v2_core_HeaderValue *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_api_v2_core_HeaderValue_value(const envoy_api_v2_core_HeaderValue *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(8, 16)); }
+UPB_INLINE void envoy_api_v2_core_HeaderValue_set_key(envoy_api_v2_core_HeaderValue *msg, upb_strview value) {
@@ -856,32 +519,8 @@ typedef enum {
-UPB_INLINE envoy_api_v2_core_DataSource_specifier_oneofcases
-envoy_api_v2_core_DataSource_specifier_case(
-    const envoy_api_v2_core_DataSource* msg) {
-  return (envoy_api_v2_core_DataSource_specifier_oneofcases)UPB_FIELD_AT(
-      msg, int32_t, UPB_SIZE(8, 16));
-}
-UPB_INLINE bool envoy_api_v2_core_DataSource_has_filename(
-    const envoy_api_v2_core_DataSource* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(8, 16), 1);
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool envoy_api_v2_core_DataSource_has_inline_bytes(
-    const envoy_api_v2_core_DataSource* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(8, 16), 2);
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool envoy_api_v2_core_DataSource_has_inline_string(
-    const envoy_api_v2_core_DataSource* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(8, 16), 3);
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE void envoy_api_v2_core_DataSource_set_filename(
-    envoy_api_v2_core_DataSource* msg, upb_strview value) {
+UPB_INLINE envoy_api_v2_core_DataSource_specifier_oneofcases envoy_api_v2_core_DataSource_specifier_case(const envoy_api_v2_core_DataSource* msg) { return (envoy_api_v2_core_DataSource_specifier_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(8, 16)); }
+UPB_INLINE bool envoy_api_v2_core_DataSource_has_filename(const envoy_api_v2_core_DataSource *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(8, 16), 1); }
+UPB_INLINE upb_strview envoy_api_v2_core_DataSource_filename(const envoy_api_v2_core_DataSource *msg) { return UPB_READ_ONEOF(msg, upb_strview, UPB_SIZE(0, 0), UPB_SIZE(8, 16), 1, upb_strview_make("", strlen(""))); }
+UPB_INLINE bool envoy_api_v2_core_DataSource_has_inline_bytes(const envoy_api_v2_core_DataSource *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(8, 16), 2); }
+UPB_INLINE upb_strview envoy_api_v2_core_DataSource_inline_bytes(const envoy_api_v2_core_DataSource *msg) { return UPB_READ_ONEOF(msg, upb_strview, UPB_SIZE(0, 0), UPB_SIZE(8, 16), 2, upb_strview_make("", strlen(""))); }
+UPB_INLINE bool envoy_api_v2_core_DataSource_has_inline_string(const envoy_api_v2_core_DataSource *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(8, 16), 3); }
+UPB_INLINE upb_strview envoy_api_v2_core_DataSource_inline_string(const envoy_api_v2_core_DataSource *msg) { return UPB_READ_ONEOF(msg, upb_strview, UPB_SIZE(0, 0), UPB_SIZE(8, 16), 3, upb_strview_make("", strlen(""))); }
+UPB_INLINE void envoy_api_v2_core_DataSource_set_filename(envoy_api_v2_core_DataSource *msg, upb_strview value) {
@@ -898,4 +535,2 @@ UPB_INLINE void envoy_api_v2_core_DataSource_set_inline_string(
-UPB_INLINE envoy_api_v2_core_RetryPolicy* envoy_api_v2_core_RetryPolicy_new(
-    upb_arena* arena) {
-  return (envoy_api_v2_core_RetryPolicy*)upb_msg_new(
-      &envoy_api_v2_core_RetryPolicy_msginit, arena);
+UPB_INLINE envoy_api_v2_core_RetryPolicy *envoy_api_v2_core_RetryPolicy_new(upb_arena *arena) {
+  return (envoy_api_v2_core_RetryPolicy *)_upb_msg_new(&envoy_api_v2_core_RetryPolicy_msginit, arena);
@@ -940,2 +554 @@ envoy_api_v2_core_RetryPolicy_mutable_retry_back_off(
-    sub = (struct envoy_api_v2_core_BackoffStrategy*)upb_msg_new(
-        &envoy_api_v2_core_BackoffStrategy_msginit, arena);
+    sub = (struct envoy_api_v2_core_BackoffStrategy*)_upb_msg_new(&envoy_api_v2_core_BackoffStrategy_msginit, arena);
@@ -960,2 +566 @@ envoy_api_v2_core_RetryPolicy_mutable_num_retries(
-    sub = (struct google_protobuf_UInt32Value*)upb_msg_new(
-        &google_protobuf_UInt32Value_msginit, arena);
+    sub = (struct google_protobuf_UInt32Value*)_upb_msg_new(&google_protobuf_UInt32Value_msginit, arena);
@@ -975,32 +577,10 @@ envoy_api_v2_core_RemoteDataSource_parse(const char* buf, size_t size,
-  envoy_api_v2_core_RemoteDataSource* ret =
-      envoy_api_v2_core_RemoteDataSource_new(arena);
-  return (ret && upb_decode(buf, size, ret,
-                            &envoy_api_v2_core_RemoteDataSource_msginit, arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char* envoy_api_v2_core_RemoteDataSource_serialize(
-    const envoy_api_v2_core_RemoteDataSource* msg, upb_arena* arena,
-    size_t* len) {
-  return upb_encode(msg, &envoy_api_v2_core_RemoteDataSource_msginit, arena,
-                    len);
-}
-UPB_INLINE const struct envoy_api_v2_core_HttpUri*
-envoy_api_v2_core_RemoteDataSource_http_uri(
-    const envoy_api_v2_core_RemoteDataSource* msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_HttpUri*,
-                      UPB_SIZE(8, 16));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE const envoy_api_v2_core_RetryPolicy*
-envoy_api_v2_core_RemoteDataSource_retry_policy(
-    const envoy_api_v2_core_RemoteDataSource* msg) {
-  return UPB_FIELD_AT(msg, const envoy_api_v2_core_RetryPolicy*,
-                      UPB_SIZE(12, 24));
-}
-UPB_INLINE void envoy_api_v2_core_RemoteDataSource_set_http_uri(
-    envoy_api_v2_core_RemoteDataSource* msg,
-    struct envoy_api_v2_core_HttpUri* value) {
+  envoy_api_v2_core_RemoteDataSource *ret = envoy_api_v2_core_RemoteDataSource_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_api_v2_core_RemoteDataSource_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_api_v2_core_RemoteDataSource_serialize(const envoy_api_v2_core_RemoteDataSource *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_api_v2_core_RemoteDataSource_msginit, arena, len);
+}
+UPB_INLINE const struct envoy_api_v2_core_HttpUri* envoy_api_v2_core_RemoteDataSource_http_uri(const envoy_api_v2_core_RemoteDataSource *msg) { return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_HttpUri*, UPB_SIZE(8, 16)); }
+UPB_INLINE upb_strview envoy_api_v2_core_RemoteDataSource_sha256(const envoy_api_v2_core_RemoteDataSource *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE const envoy_api_v2_core_RetryPolicy* envoy_api_v2_core_RemoteDataSource_retry_policy(const envoy_api_v2_core_RemoteDataSource *msg) { return UPB_FIELD_AT(msg, const envoy_api_v2_core_RetryPolicy*, UPB_SIZE(12, 24)); }
+UPB_INLINE void envoy_api_v2_core_RemoteDataSource_set_http_uri(envoy_api_v2_core_RemoteDataSource *msg, struct envoy_api_v2_core_HttpUri* value) {
@@ -1038,2 +607 @@ envoy_api_v2_core_RemoteDataSource_mutable_retry_policy(
-    sub = (struct envoy_api_v2_core_RetryPolicy*)upb_msg_new(
-        &envoy_api_v2_core_RetryPolicy_msginit, arena);
+    sub = (struct envoy_api_v2_core_RetryPolicy*)_upb_msg_new(&envoy_api_v2_core_RetryPolicy_msginit, arena);
@@ -1071,35 +629,10 @@ typedef enum {
-UPB_INLINE envoy_api_v2_core_AsyncDataSource_specifier_oneofcases
-envoy_api_v2_core_AsyncDataSource_specifier_case(
-    const envoy_api_v2_core_AsyncDataSource* msg) {
-  return (envoy_api_v2_core_AsyncDataSource_specifier_oneofcases)UPB_FIELD_AT(
-      msg, int32_t, UPB_SIZE(4, 8));
-}
-UPB_INLINE bool envoy_api_v2_core_AsyncDataSource_has_local(
-    const envoy_api_v2_core_AsyncDataSource* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 1);
-}
-UPB_INLINE const envoy_api_v2_core_DataSource*
-envoy_api_v2_core_AsyncDataSource_local(
-    const envoy_api_v2_core_AsyncDataSource* msg) {
-  return UPB_READ_ONEOF(msg, const envoy_api_v2_core_DataSource*,
-                        UPB_SIZE(0, 0), UPB_SIZE(4, 8), 1, NULL);
-}
-UPB_INLINE bool envoy_api_v2_core_AsyncDataSource_has_remote(
-    const envoy_api_v2_core_AsyncDataSource* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 2);
-}
-UPB_INLINE const envoy_api_v2_core_RemoteDataSource*
-envoy_api_v2_core_AsyncDataSource_remote(
-    const envoy_api_v2_core_AsyncDataSource* msg) {
-  return UPB_READ_ONEOF(msg, const envoy_api_v2_core_RemoteDataSource*,
-                        UPB_SIZE(0, 0), UPB_SIZE(4, 8), 2, NULL);
-}
-UPB_WRITE_ONEOF(msg, envoy_api_v2_core_DataSource*, UPB_SIZE(0, 0), value,
-                UPB_SIZE(4, 8), 1);
-}
-UPB_INLINE struct envoy_api_v2_core_DataSource*
-envoy_api_v2_core_AsyncDataSource_mutable_local(
-    envoy_api_v2_core_AsyncDataSource* msg, upb_arena* arena) {
-  struct envoy_api_v2_core_DataSource* sub =
-      (struct envoy_api_v2_core_DataSource*)
-          envoy_api_v2_core_AsyncDataSource_local(msg);
+UPB_INLINE envoy_api_v2_core_AsyncDataSource_specifier_oneofcases envoy_api_v2_core_AsyncDataSource_specifier_case(const envoy_api_v2_core_AsyncDataSource* msg) { return (envoy_api_v2_core_AsyncDataSource_specifier_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(4, 8)); }
+UPB_INLINE bool envoy_api_v2_core_AsyncDataSource_has_local(const envoy_api_v2_core_AsyncDataSource *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 1); }
+UPB_INLINE const envoy_api_v2_core_DataSource* envoy_api_v2_core_AsyncDataSource_local(const envoy_api_v2_core_AsyncDataSource *msg) { return UPB_READ_ONEOF(msg, const envoy_api_v2_core_DataSource*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 1, NULL); }
+UPB_INLINE bool envoy_api_v2_core_AsyncDataSource_has_remote(const envoy_api_v2_core_AsyncDataSource *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 2); }
+UPB_INLINE const envoy_api_v2_core_RemoteDataSource* envoy_api_v2_core_AsyncDataSource_remote(const envoy_api_v2_core_AsyncDataSource *msg) { return UPB_READ_ONEOF(msg, const envoy_api_v2_core_RemoteDataSource*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 2, NULL); }
+UPB_INLINE void envoy_api_v2_core_AsyncDataSource_set_local(envoy_api_v2_core_AsyncDataSource *msg, envoy_api_v2_core_DataSource* value) {
+  UPB_WRITE_ONEOF(msg, envoy_api_v2_core_DataSource*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 1);
+}
+UPB_INLINE struct envoy_api_v2_core_DataSource* envoy_api_v2_core_AsyncDataSource_mutable_local(envoy_api_v2_core_AsyncDataSource *msg, upb_arena *arena) {
+  struct envoy_api_v2_core_DataSource* sub = (struct envoy_api_v2_core_DataSource*)envoy_api_v2_core_AsyncDataSource_local(msg);
@@ -1114,2 +646,2 @@ envoy_api_v2_core_AsyncDataSource_mutable_local(
-UPB_WRITE_ONEOF(msg, envoy_api_v2_core_RemoteDataSource*, UPB_SIZE(0, 0), value,
-                UPB_SIZE(4, 8), 2);
+UPB_INLINE void envoy_api_v2_core_AsyncDataSource_set_remote(envoy_api_v2_core_AsyncDataSource *msg, envoy_api_v2_core_RemoteDataSource* value) {
+  UPB_WRITE_ONEOF(msg, envoy_api_v2_core_RemoteDataSource*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 2);
@@ -1157,32 +674,7 @@ typedef enum {
-UPB_INLINE envoy_api_v2_core_TransportSocket_config_type_oneofcases
-envoy_api_v2_core_TransportSocket_config_type_case(
-    const envoy_api_v2_core_TransportSocket* msg) {
-  return (envoy_api_v2_core_TransportSocket_config_type_oneofcases)UPB_FIELD_AT(
-      msg, int32_t, UPB_SIZE(12, 24));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool envoy_api_v2_core_TransportSocket_has_config(
-    const envoy_api_v2_core_TransportSocket* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 2);
-}
-UPB_INLINE const struct google_protobuf_Struct*
-envoy_api_v2_core_TransportSocket_config(
-    const envoy_api_v2_core_TransportSocket* msg) {
-  return UPB_READ_ONEOF(msg, const struct google_protobuf_Struct*,
-                        UPB_SIZE(8, 16), UPB_SIZE(12, 24), 2, NULL);
-}
-UPB_INLINE bool envoy_api_v2_core_TransportSocket_has_typed_config(
-    const envoy_api_v2_core_TransportSocket* msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 3);
-}
-UPB_INLINE const struct google_protobuf_Any*
-envoy_api_v2_core_TransportSocket_typed_config(
-    const envoy_api_v2_core_TransportSocket* msg) {
-  return UPB_READ_ONEOF(msg, const struct google_protobuf_Any*, UPB_SIZE(8, 16),
-                        UPB_SIZE(12, 24), 3, NULL);
-}
-UPB_INLINE void envoy_api_v2_core_TransportSocket_set_name(
-    envoy_api_v2_core_TransportSocket* msg, upb_strview value) {
+UPB_INLINE envoy_api_v2_core_TransportSocket_config_type_oneofcases envoy_api_v2_core_TransportSocket_config_type_case(const envoy_api_v2_core_TransportSocket* msg) { return (envoy_api_v2_core_TransportSocket_config_type_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(12, 24)); }
+UPB_INLINE upb_strview envoy_api_v2_core_TransportSocket_name(const envoy_api_v2_core_TransportSocket *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE bool envoy_api_v2_core_TransportSocket_has_config(const envoy_api_v2_core_TransportSocket *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 2); }
+UPB_INLINE const struct google_protobuf_Struct* envoy_api_v2_core_TransportSocket_config(const envoy_api_v2_core_TransportSocket *msg) { return UPB_READ_ONEOF(msg, const struct google_protobuf_Struct*, UPB_SIZE(8, 16), UPB_SIZE(12, 24), 2, NULL); }
+UPB_INLINE bool envoy_api_v2_core_TransportSocket_has_typed_config(const envoy_api_v2_core_TransportSocket *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 3); }
+UPB_INLINE const struct google_protobuf_Any* envoy_api_v2_core_TransportSocket_typed_config(const envoy_api_v2_core_TransportSocket *msg) { return UPB_READ_ONEOF(msg, const struct google_protobuf_Any*, UPB_SIZE(8, 16), UPB_SIZE(12, 24), 3, NULL); }
+UPB_INLINE void envoy_api_v2_core_TransportSocket_set_name(envoy_api_v2_core_TransportSocket *msg, upb_strview value) {
@@ -1191,2 +683,2 @@ UPB_INLINE void envoy_api_v2_core_TransportSocket_set_name(
-UPB_WRITE_ONEOF(msg, struct google_protobuf_Struct*, UPB_SIZE(8, 16), value,
-                UPB_SIZE(12, 24), 2);
+UPB_INLINE void envoy_api_v2_core_TransportSocket_set_config(envoy_api_v2_core_TransportSocket *msg, struct google_protobuf_Struct* value) {
+  UPB_WRITE_ONEOF(msg, struct google_protobuf_Struct*, UPB_SIZE(8, 16), value, UPB_SIZE(12, 24), 2);
@@ -1208,2 +695,2 @@ envoy_api_v2_core_TransportSocket_mutable_config(
-UPB_WRITE_ONEOF(msg, struct google_protobuf_Any*, UPB_SIZE(8, 16), value,
-                UPB_SIZE(12, 24), 3);
+UPB_INLINE void envoy_api_v2_core_TransportSocket_set_typed_config(envoy_api_v2_core_TransportSocket *msg, struct google_protobuf_Any* value) {
+  UPB_WRITE_ONEOF(msg, struct google_protobuf_Any*, UPB_SIZE(8, 16), value, UPB_SIZE(12, 24), 3);
@@ -1224,4 +707,2 @@ envoy_api_v2_core_TransportSocket_mutable_typed_config(
-UPB_INLINE envoy_api_v2_core_RuntimeFractionalPercent*
-envoy_api_v2_core_RuntimeFractionalPercent_new(upb_arena* arena) {
-  return (envoy_api_v2_core_RuntimeFractionalPercent*)upb_msg_new(
-      &envoy_api_v2_core_RuntimeFractionalPercent_msginit, arena);
+UPB_INLINE envoy_api_v2_core_RuntimeFractionalPercent *envoy_api_v2_core_RuntimeFractionalPercent_new(upb_arena *arena) {
+  return (envoy_api_v2_core_RuntimeFractionalPercent *)_upb_msg_new(&envoy_api_v2_core_RuntimeFractionalPercent_msginit, arena);
@@ -1232,36 +712,13 @@ envoy_api_v2_core_RuntimeFractionalPercent_parse(const char* buf, size_t size,
-  envoy_api_v2_core_RuntimeFractionalPercent* ret =
-      envoy_api_v2_core_RuntimeFractionalPercent_new(arena);
-  return (ret && upb_decode(buf, size, ret,
-                            &envoy_api_v2_core_RuntimeFractionalPercent_msginit,
-                            arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char* envoy_api_v2_core_RuntimeFractionalPercent_serialize(
-    const envoy_api_v2_core_RuntimeFractionalPercent* msg, upb_arena* arena,
-    size_t* len) {
-  return upb_encode(msg, &envoy_api_v2_core_RuntimeFractionalPercent_msginit,
-                    arena, len);
-}
-UPB_INLINE const struct envoy_type_FractionalPercent*
-envoy_api_v2_core_RuntimeFractionalPercent_default_value(
-    const envoy_api_v2_core_RuntimeFractionalPercent* msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_type_FractionalPercent*,
-                      UPB_SIZE(8, 16));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE void envoy_api_v2_core_RuntimeFractionalPercent_set_default_value(
-    envoy_api_v2_core_RuntimeFractionalPercent* msg,
-    struct envoy_type_FractionalPercent* value) {
-  UPB_FIELD_AT(msg, struct envoy_type_FractionalPercent*, UPB_SIZE(8, 16)) =
-      value;
-}
-UPB_INLINE struct envoy_type_FractionalPercent*
-envoy_api_v2_core_RuntimeFractionalPercent_mutable_default_value(
-    envoy_api_v2_core_RuntimeFractionalPercent* msg, upb_arena* arena) {
-  struct envoy_type_FractionalPercent* sub =
-      (struct envoy_type_FractionalPercent*)
-          envoy_api_v2_core_RuntimeFractionalPercent_default_value(msg);
+  envoy_api_v2_core_RuntimeFractionalPercent *ret = envoy_api_v2_core_RuntimeFractionalPercent_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_api_v2_core_RuntimeFractionalPercent_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_api_v2_core_RuntimeFractionalPercent_serialize(const envoy_api_v2_core_RuntimeFractionalPercent *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_api_v2_core_RuntimeFractionalPercent_msginit, arena, len);
+}
+UPB_INLINE const struct envoy_type_FractionalPercent* envoy_api_v2_core_RuntimeFractionalPercent_default_value(const envoy_api_v2_core_RuntimeFractionalPercent *msg) { return UPB_FIELD_AT(msg, const struct envoy_type_FractionalPercent*, UPB_SIZE(8, 16)); }
+UPB_INLINE upb_strview envoy_api_v2_core_RuntimeFractionalPercent_runtime_key(const envoy_api_v2_core_RuntimeFractionalPercent *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_api_v2_core_RuntimeFractionalPercent_set_default_value(envoy_api_v2_core_RuntimeFractionalPercent *msg, struct envoy_type_FractionalPercent* value) {
+  UPB_FIELD_AT(msg, struct envoy_type_FractionalPercent*, UPB_SIZE(8, 16)) = value;
+}
+UPB_INLINE struct envoy_type_FractionalPercent* envoy_api_v2_core_RuntimeFractionalPercent_mutable_default_value(envoy_api_v2_core_RuntimeFractionalPercent *msg, upb_arena *arena) {
+  struct envoy_type_FractionalPercent* sub = (struct envoy_type_FractionalPercent*)envoy_api_v2_core_RuntimeFractionalPercent_default_value(msg);
@@ -1269,2 +726 @@ envoy_api_v2_core_RuntimeFractionalPercent_mutable_default_value(
-    sub = (struct envoy_type_FractionalPercent*)upb_msg_new(
-        &envoy_type_FractionalPercent_msginit, arena);
+    sub = (struct envoy_type_FractionalPercent*)_upb_msg_new(&envoy_type_FractionalPercent_msginit, arena);
@@ -1280 +735,4 @@ UPB_INLINE void envoy_api_v2_core_RuntimeFractionalPercent_set_runtime_key(
-UPB_INLINE envoy_api_v2_core_ControlPlane* envoy_api_v2_core_ControlPlane_new(
+UPB_INLINE envoy_api_v2_core_ControlPlane *envoy_api_v2_core_ControlPlane_new(upb_arena *arena) {
+  return (envoy_api_v2_core_ControlPlane *)_upb_msg_new(&envoy_api_v2_core_ControlPlane_msginit, arena);
+}
+UPB_INLINE envoy_api_v2_core_ControlPlane *envoy_api_v2_core_ControlPlane_parse(const char *buf, size_t size,
@@ -1282,15 +740,2 @@ UPB_INLINE envoy_api_v2_core_ControlPlane* envoy_api_v2_core_ControlPlane_new(
-  return (envoy_api_v2_core_ControlPlane*)upb_msg_new(
-      &envoy_api_v2_core_ControlPlane_msginit, arena);
-}
-UPB_INLINE envoy_api_v2_core_ControlPlane* envoy_api_v2_core_ControlPlane_parse(
-    const char* buf, size_t size, upb_arena* arena) {
-  envoy_api_v2_core_ControlPlane* ret =
-      envoy_api_v2_core_ControlPlane_new(arena);
-  return (ret && upb_decode(buf, size, ret,
-                            &envoy_api_v2_core_ControlPlane_msginit, arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char* envoy_api_v2_core_ControlPlane_serialize(
-    const envoy_api_v2_core_ControlPlane* msg, upb_arena* arena, size_t* len) {
-  return upb_encode(msg, &envoy_api_v2_core_ControlPlane_msginit, arena, len);
+  envoy_api_v2_core_ControlPlane *ret = envoy_api_v2_core_ControlPlane_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_api_v2_core_ControlPlane_msginit, arena)) ? ret : NULL;
@@ -1298,3 +743,2 @@ UPB_INLINE char* envoy_api_v2_core_ControlPlane_serialize(
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
+UPB_INLINE char *envoy_api_v2_core_ControlPlane_serialize(const envoy_api_v2_core_ControlPlane *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_api_v2_core_ControlPlane_msginit, arena, len);
@@ -1302,2 +746,2 @@ envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-UPB_INLINE void envoy_api_v2_core_ControlPlane_set_identifier(
-    envoy_api_v2_core_ControlPlane* msg, upb_strview value) {
+UPB_INLINE upb_strview envoy_api_v2_core_ControlPlane_identifier(const envoy_api_v2_core_ControlPlane *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_api_v2_core_ControlPlane_set_identifier(envoy_api_v2_core_ControlPlane *msg, upb_strview value) {
@@ -1309,13 +753,2 @@ UPB_INLINE void envoy_api_v2_core_ControlPlane_set_identifier(
-UPB_INLINE void envoy_api_v2_core_Metadata_filter_metadata_clear(
-    envoy_api_v2_core_Metadata* msg) {
-  _upb_msg_map_clear(msg, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool envoy_api_v2_core_Metadata_filter_metadata_set(
-    envoy_api_v2_core_Metadata* msg, upb_strview key,
-    struct google_protobuf_Struct* val, upb_arena* a) {
-  return _upb_msg_map_set(msg, UPB_SIZE(0, 0), &key, 0, &val, sizeof(val), a);
-}
-UPB_INLINE bool envoy_api_v2_core_Metadata_filter_metadata_delete(
-    envoy_api_v2_core_Metadata* msg, upb_strview key) {
-  return _upb_msg_map_delete(msg, UPB_SIZE(0, 0), &key, 0);
-}
+#include "upb/port_undef.inc"
+#endif
