--- a/home/whalien/codebase/cpp/mergebot/eva/output/grpc/d7311d7d-729af3a4-694f491e/src@core@ext@upb-generated@envoy@config@filter@network@http_connection_manager@v2@http_connection_manager.upb.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/grpc/d7311d7d-729af3a4-694f491e/src@core@ext@upb-generated@envoy@config@filter@network@http_connection_manager@v2@http_connection_manager.upb.no_comments_merged.h
@@ -0,0 +1 @@
+#ifndef ENVOY_CONFIG_FILTER_NETWORK_HTTP_CONNECTION_MANAGER_V2_HTTP_CONNECTION_MANAGER_PROTO_UPB_H_
@@ -1,0 +3,5 @@
+#include "upb/msg.h"
+#include "upb/decode.h"
+#include "upb/encode.h"
+#include "upb/port_def.inc"
+#ifdef __cplusplus
@@ -3,10 +9,6 @@ extern "C" {
-struct
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager;
-struct
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing;
-struct
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig;
-struct
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_SetCurrentClientCertDetails;
-struct
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig;
+#endif
+struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager;
+struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing;
+struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig;
+struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_SetCurrentClientCertDetails;
+struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig;
@@ -167,3 +107,4 @@ typedef enum {
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_new(
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_parse(const char *buf, size_t size,
@@ -171,5 +112,2 @@ UPB_INLINE
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*)
-      _upb_msg_new(
-          &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_msginit,
-          arena);
+  envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *ret = envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_msginit, arena)) ? ret : NULL;
@@ -177,10 +115,2 @@ UPB_INLINE
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManagerUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_msginit,
-      arena, len);
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_serialize(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_msginit, arena, len);
@@ -198,246 +124,40 @@ typedef enum {
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_specifier_oneofcases
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_specifier_case(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_specifier_oneofcases)
-      UPB_FIELD_AT(msg, int32_t, UPB_SIZE(144, 256));
-}
-UPB_INLINE int32_t
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_codec_type(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, int32_t, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_has_rds(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(144, 256), 3);
-}
-UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_Rds*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_rds(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_READ_ONEOF(
-      msg, const envoy_config_filter_network_http_connection_manager_v2_Rds*,
-      UPB_SIZE(140, 248), UPB_SIZE(144, 256), 3, NULL);
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_has_route_config(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(144, 256), 4);
-}
-UPB_INLINE const struct envoy_api_v2_RouteConfiguration*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_config(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_READ_ONEOF(msg, const struct envoy_api_v2_RouteConfiguration*,
-                        UPB_SIZE(140, 248), UPB_SIZE(144, 256), 4, NULL);
-}
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter
-}
-UPB_INLINE const struct google_protobuf_BoolValue*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_user_agent(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*,
-                      UPB_SIZE(60, 88));
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_tracing(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-            msg) {
-  return UPB_FIELD_AT(
-      msg,
-      const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*,
-      UPB_SIZE(64, 96));
-}
-UPB_INLINE const struct envoy_api_v2_core_Http1ProtocolOptions*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_http_protocol_options(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_Http1ProtocolOptions*,
-                      UPB_SIZE(68, 104));
-}
-UPB_INLINE const struct envoy_api_v2_core_Http2ProtocolOptions*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_http2_protocol_options(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_Http2ProtocolOptions*,
-                      UPB_SIZE(72, 112));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE const struct google_protobuf_Duration*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_idle_timeout(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*,
-                      UPB_SIZE(76, 120));
-}
-UPB_INLINE const struct google_protobuf_Duration*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_drain_timeout(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*,
-                      UPB_SIZE(80, 128));
-}
-UPB_INLINE const struct envoy_config_filter_accesslog_v2_AccessLog* const*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_access_log(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    size_t* len) {
-  return (const struct envoy_config_filter_accesslog_v2_AccessLog* const*)
-      _upb_array_accessor(msg, UPB_SIZE(132, 232), len);
-}
-UPB_INLINE const struct google_protobuf_BoolValue*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_use_remote_address(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*,
-                      UPB_SIZE(84, 136));
-}
-UPB_INLINE const struct google_protobuf_BoolValue*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_generate_request_id(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*,
-                      UPB_SIZE(88, 144));
-}
-UPB_INLINE int32_t
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_forward_client_cert_details(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, int32_t, UPB_SIZE(8, 8));
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_SetCurrentClientCertDetailsUPB_INLINE bool
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_proxy_100_continue(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-            msg) {
-  return UPB_FIELD_AT(msg, bool, UPB_SIZE(28, 28));
-}
-UPB_INLINE uint32_t
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_xff_num_trusted_hops(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, uint32_t, UPB_SIZE(24, 24));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_represent_ipv4_remote_address_as_ipv4_mapped_ipv6(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, bool, UPB_SIZE(29, 29));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_skip_xff_append(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, bool, UPB_SIZE(30, 30));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig
-    google_protobuf_Duration*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_stream_idle_timeout(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-            msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*,
-                      UPB_SIZE(96, 160));
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfigUPB_INLINE const struct
-    google_protobuf_Duration*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_delayed_close_timeout(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-            msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*,
-                      UPB_SIZE(104, 176));
-}
-UPB_INLINE const struct google_protobuf_Duration*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_request_timeout(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*,
-                      UPB_SIZE(108, 184));
-}
-UPB_INLINE const struct google_protobuf_UInt32Value*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_max_request_headers_kb(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_UInt32Value*,
-                      UPB_SIZE(112, 192));
-}
-UPB_INLINE const struct google_protobuf_BoolValue*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_normalize_path(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*,
-                      UPB_SIZE(116, 200));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_has_scoped_routes(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(144, 256), 31);
-}
-UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_scoped_routes(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_READ_ONEOF(
-      msg,
-      const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*,
-      UPB_SIZE(140, 248), UPB_SIZE(144, 256), 31, NULL);
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_preserve_external_request_id(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, bool, UPB_SIZE(31, 31));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_merge_slashes(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, bool, UPB_SIZE(32, 32));
-}
-UPB_INLINE int32_t
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_server_header_transformation(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, int32_t, UPB_SIZE(16, 16));
-}
-UPB_INLINE const struct envoy_api_v2_core_HttpProtocolOptions*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_common_http_protocol_options(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_HttpProtocolOptions*,
-                      UPB_SIZE(120, 208));
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_request_id_extension(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-            msg) {
-  return UPB_FIELD_AT(
-      msg,
-      const envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*,
-      UPB_SIZE(124, 216));
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_set_codec_type(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    int32_t value) {
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_specifier_oneofcases envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_specifier_case(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager* msg) { return (envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_specifier_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(144, 256)); }
+UPB_INLINE int32_t envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_codec_type(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, int32_t, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_stat_prefix(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(36, 40)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_has_rds(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(144, 256), 3); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_Rds* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_rds(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_READ_ONEOF(msg, const envoy_config_filter_network_http_connection_manager_v2_Rds*, UPB_SIZE(140, 248), UPB_SIZE(144, 256), 3, NULL); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_has_route_config(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(144, 256), 4); }
+UPB_INLINE const struct envoy_api_v2_RouteConfiguration* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_route_config(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_READ_ONEOF(msg, const struct envoy_api_v2_RouteConfiguration*, UPB_SIZE(140, 248), UPB_SIZE(144, 256), 4, NULL); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_HttpFilter* const* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_http_filters(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t *len) { return (const envoy_config_filter_network_http_connection_manager_v2_HttpFilter* const*)_upb_array_accessor(msg, UPB_SIZE(128, 224), len); }
+UPB_INLINE const struct google_protobuf_BoolValue* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_user_agent(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*, UPB_SIZE(60, 88)); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_tracing(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*, UPB_SIZE(64, 96)); }
+UPB_INLINE const struct envoy_api_v2_core_Http1ProtocolOptions* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_http_protocol_options(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_Http1ProtocolOptions*, UPB_SIZE(68, 104)); }
+UPB_INLINE const struct envoy_api_v2_core_Http2ProtocolOptions* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_http2_protocol_options(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_Http2ProtocolOptions*, UPB_SIZE(72, 112)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_server_name(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(44, 56)); }
+UPB_INLINE const struct google_protobuf_Duration* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_idle_timeout(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*, UPB_SIZE(76, 120)); }
+UPB_INLINE const struct google_protobuf_Duration* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_drain_timeout(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*, UPB_SIZE(80, 128)); }
+UPB_INLINE const struct envoy_config_filter_accesslog_v2_AccessLog* const* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_access_log(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t *len) { return (const struct envoy_config_filter_accesslog_v2_AccessLog* const*)_upb_array_accessor(msg, UPB_SIZE(132, 232), len); }
+UPB_INLINE const struct google_protobuf_BoolValue* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_use_remote_address(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*, UPB_SIZE(84, 136)); }
+UPB_INLINE const struct google_protobuf_BoolValue* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_generate_request_id(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*, UPB_SIZE(88, 144)); }
+UPB_INLINE int32_t envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_forward_client_cert_details(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, int32_t, UPB_SIZE(8, 8)); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_SetCurrentClientCertDetails* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_set_current_client_cert_details(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_SetCurrentClientCertDetails*, UPB_SIZE(92, 152)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_proxy_100_continue(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, bool, UPB_SIZE(28, 28)); }
+UPB_INLINE uint32_t envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_xff_num_trusted_hops(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, uint32_t, UPB_SIZE(24, 24)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_represent_ipv4_remote_address_as_ipv4_mapped_ipv6(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, bool, UPB_SIZE(29, 29)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_skip_xff_append(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, bool, UPB_SIZE(30, 30)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_via(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(52, 72)); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig* const* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_upgrade_configs(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t *len) { return (const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig* const*)_upb_array_accessor(msg, UPB_SIZE(136, 240), len); }
+UPB_INLINE const struct google_protobuf_Duration* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_stream_idle_timeout(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*, UPB_SIZE(96, 160)); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_internal_address_config(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*, UPB_SIZE(100, 168)); }
+UPB_INLINE const struct google_protobuf_Duration* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_delayed_close_timeout(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*, UPB_SIZE(104, 176)); }
+UPB_INLINE const struct google_protobuf_Duration* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_request_timeout(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_Duration*, UPB_SIZE(108, 184)); }
+UPB_INLINE const struct google_protobuf_UInt32Value* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_max_request_headers_kb(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_UInt32Value*, UPB_SIZE(112, 192)); }
+UPB_INLINE const struct google_protobuf_BoolValue* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_normalize_path(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*, UPB_SIZE(116, 200)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_has_scoped_routes(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(144, 256), 31); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_scoped_routes(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_READ_ONEOF(msg, const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*, UPB_SIZE(140, 248), UPB_SIZE(144, 256), 31, NULL); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_preserve_external_request_id(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, bool, UPB_SIZE(31, 31)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_merge_slashes(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, bool, UPB_SIZE(32, 32)); }
+UPB_INLINE int32_t envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_server_header_transformation(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, int32_t, UPB_SIZE(16, 16)); }
+UPB_INLINE const struct envoy_api_v2_core_HttpProtocolOptions* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_common_http_protocol_options(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_HttpProtocolOptions*, UPB_SIZE(120, 208)); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_request_id_extension(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg) { return UPB_FIELD_AT(msg, const envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*, UPB_SIZE(124, 216)); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_set_codec_type(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, int32_t value) {
@@ -508,40 +193,10 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_mut
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter**
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_mutable_http_filters(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    size_t* len) {
-  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)
-      _upb_array_mutable_accessor(msg, UPB_SIZE(128, 224), len);
-}
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter**
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_resize_http_filters(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    size_t len, upb_arena* arena) {
-<<<<<<< HEAD
-  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)
-      _upb_array_resize_accessor(msg, UPB_SIZE(124, 216), len, UPB_TYPE_MESSAGE,
-                                 arena);
-|||||||
-  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)
-      _upb_array_resize_accessor(msg, UPB_SIZE(124, 216), len, UPB_SIZE(4, 8),
-                                 UPB_TYPE_MESSAGE, arena);
-=======
-  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)
-      _upb_array_resize_accessor(msg, UPB_SIZE(128, 224), len, UPB_SIZE(4, 8),
-                                 UPB_TYPE_MESSAGE, arena);
->>>>>>> 729af3a43d16584684f6f70349ed34133e1b59f1
-}
-UPB_INLINE struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_http_filters(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    upb_arena* arena) {
-  struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-      sub = (struct
-             envoy_config_filter_network_http_connection_manager_v2_HttpFilter*)
-          _upb_msg_new(
-              &envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit,
-              arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(128, 224), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_mutable_http_filters(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t *len) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)_upb_array_mutable_accessor(msg, UPB_SIZE(128, 224), len);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_resize_http_filters(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t len, upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)_upb_array_resize_accessor(msg, UPB_SIZE(128, 224), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_http_filters(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, upb_arena *arena) {
+  struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter* sub = (struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter*)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(128, 224), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -719,37 +281,10 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_mut
-UPB_INLINE struct envoy_config_filter_accesslog_v2_AccessLog**
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_mutable_access_log(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    size_t* len) {
-  return (struct envoy_config_filter_accesslog_v2_AccessLog**)
-      _upb_array_mutable_accessor(msg, UPB_SIZE(132, 232), len);
-}
-UPB_INLINE struct envoy_config_filter_accesslog_v2_AccessLog**
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_resize_access_log(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    size_t len, upb_arena* arena) {
-<<<<<<< HEAD
-  return (struct envoy_config_filter_accesslog_v2_AccessLog**)
-      _upb_array_resize_accessor(msg, UPB_SIZE(128, 224), len, UPB_TYPE_MESSAGE,
-                                 arena);
-|||||||
-  return (struct envoy_config_filter_accesslog_v2_AccessLog**)
-      _upb_array_resize_accessor(msg, UPB_SIZE(128, 224), len, UPB_SIZE(4, 8),
-                                 UPB_TYPE_MESSAGE, arena);
-=======
-  return (struct envoy_config_filter_accesslog_v2_AccessLog**)
-      _upb_array_resize_accessor(msg, UPB_SIZE(132, 232), len, UPB_SIZE(4, 8),
-                                 UPB_TYPE_MESSAGE, arena);
->>>>>>> 729af3a43d16584684f6f70349ed34133e1b59f1
-}
-UPB_INLINE struct envoy_config_filter_accesslog_v2_AccessLog*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_access_log(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-        msg,
-    upb_arena* arena) {
-  struct envoy_config_filter_accesslog_v2_AccessLog* sub =
-      (struct envoy_config_filter_accesslog_v2_AccessLog*)_upb_msg_new(
-          &envoy_config_filter_accesslog_v2_AccessLog_msginit, arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(132, 232), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+UPB_INLINE struct envoy_config_filter_accesslog_v2_AccessLog** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_mutable_access_log(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t *len) {
+  return (struct envoy_config_filter_accesslog_v2_AccessLog**)_upb_array_mutable_accessor(msg, UPB_SIZE(132, 232), len);
+}
+UPB_INLINE struct envoy_config_filter_accesslog_v2_AccessLog** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_resize_access_log(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t len, upb_arena *arena) {
+  return (struct envoy_config_filter_accesslog_v2_AccessLog**)_upb_array_resize_accessor(msg, UPB_SIZE(132, 232), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_config_filter_accesslog_v2_AccessLog* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_access_log(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, upb_arena *arena) {
+  struct envoy_config_filter_accesslog_v2_AccessLog* sub = (struct envoy_config_filter_accesslog_v2_AccessLog*)_upb_msg_new(&envoy_config_filter_accesslog_v2_AccessLog_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(132, 232), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -885,15 +348,10 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_set
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfigUPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfigUPB_INLINE struct
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_upgrade_configs(
-        envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager*
-            msg,
-        upb_arena* arena) {
-  struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-      sub = (struct
-             envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*)
-          _upb_msg_new(
-              &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit,
-              arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(136, 240), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_mutable_upgrade_configs(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t *len) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig**)_upb_array_mutable_accessor(msg, UPB_SIZE(136, 240), len);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_resize_upgrade_configs(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, size_t len, upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig**)_upb_array_resize_accessor(msg, UPB_SIZE(136, 240), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_add_upgrade_configs(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager *msg, upb_arena *arena) {
+  struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig* sub = (struct envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(136, 240), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -1165,5 +472 @@ UPB_INLINE struct
-    sub = (struct
-           envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*)
-        upb_msg_new(
-            &envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_msginit,
-            arena);
+    sub = (struct envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_msginit, arena);
@@ -1285,37 +504,8 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tra
-UPB_INLINE upb_strview*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_resize_request_headers_for_tags(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*
-        msg,
-    size_t len, upb_arena* arena) {
-<<<<<<< HEAD
-  return (upb_strview*)_upb_array_resize_accessor(msg, UPB_SIZE(28, 48), len,
-                                                  UPB_TYPE_STRING, arena);
-|||||||
-  return (upb_strview*)_upb_array_resize_accessor(
-      msg, UPB_SIZE(28, 48), len, UPB_SIZE(8, 16), UPB_TYPE_STRING, arena);
-=======
-  return (upb_strview*)_upb_array_resize_accessor(
-      msg, UPB_SIZE(32, 56), len, UPB_SIZE(8, 16), UPB_TYPE_STRING, arena);
->>>>>>> 729af3a43d16584684f6f70349ed34133e1b59f1
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_add_request_headers_for_tags(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*
-        msg,
-    upb_strview val, upb_arena* arena) {
-<<<<<<< HEAD
-  return _upb_array_append_accessor(msg, UPB_SIZE(28, 48), UPB_SIZE(8, 16),
-                                    UPB_TYPE_STRING, &val, arena);
-|||||||
-  return _upb_array_append_accessor(msg, UPB_SIZE(28, 48), UPB_SIZE(8, 16),
-                                    UPB_TYPE_STRING, &val, arena);
-=======
-  return _upb_array_append_accessor(msg, UPB_SIZE(32, 56), UPB_SIZE(8, 16),
-                                    UPB_TYPE_STRING, &val, arena);
->>>>>>> 729af3a43d16584684f6f70349ed34133e1b59f1
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_set_client_sampling(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*
-        msg,
-    struct envoy_type_Percent* value) {
+UPB_INLINE upb_strview* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_resize_request_headers_for_tags(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing *msg, size_t len, upb_arena *arena) {
+  return (upb_strview*)_upb_array_resize_accessor(msg, UPB_SIZE(32, 56), len, UPB_TYPE_STRING, arena);
+}
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_add_request_headers_for_tags(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing *msg, upb_strview val, upb_arena *arena) {
+  return _upb_array_append_accessor(msg, UPB_SIZE(32, 56), UPB_SIZE(8, 16), UPB_TYPE_STRING, &val,
+      arena);
+}
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_set_client_sampling(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing *msg, struct envoy_type_Percent* value) {
@@ -1422,34 +562,10 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tra
-UPB_INLINE struct envoy_type_tracing_v2_CustomTag**
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_mutable_custom_tags(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*
-        msg,
-    size_t* len) {
-  return (struct envoy_type_tracing_v2_CustomTag**)_upb_array_mutable_accessor(
-      msg, UPB_SIZE(36, 64), len);
-}
-UPB_INLINE struct envoy_type_tracing_v2_CustomTag**
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_resize_custom_tags(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*
-        msg,
-    size_t len, upb_arena* arena) {
-<<<<<<< HEAD
-  return (struct envoy_type_tracing_v2_CustomTag**)_upb_array_resize_accessor(
-      msg, UPB_SIZE(32, 56), len, UPB_TYPE_MESSAGE, arena);
-|||||||
-  return (struct envoy_type_tracing_v2_CustomTag**)_upb_array_resize_accessor(
-      msg, UPB_SIZE(32, 56), len, UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, arena);
-=======
-  return (struct envoy_type_tracing_v2_CustomTag**)_upb_array_resize_accessor(
-      msg, UPB_SIZE(36, 64), len, UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, arena);
->>>>>>> 729af3a43d16584684f6f70349ed34133e1b59f1
-}
-UPB_INLINE struct envoy_type_tracing_v2_CustomTag*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_add_custom_tags(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing*
-        msg,
-    upb_arena* arena) {
-  struct envoy_type_tracing_v2_CustomTag* sub =
-      (struct envoy_type_tracing_v2_CustomTag*)_upb_msg_new(
-          &envoy_type_tracing_v2_CustomTag_msginit, arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(36, 64), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+UPB_INLINE struct envoy_type_tracing_v2_CustomTag** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_mutable_custom_tags(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing *msg, size_t *len) {
+  return (struct envoy_type_tracing_v2_CustomTag**)_upb_array_mutable_accessor(msg, UPB_SIZE(36, 64), len);
+}
+UPB_INLINE struct envoy_type_tracing_v2_CustomTag** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_resize_custom_tags(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing *msg, size_t len, upb_arena *arena) {
+  return (struct envoy_type_tracing_v2_CustomTag**)_upb_array_resize_accessor(msg, UPB_SIZE(36, 64), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_type_tracing_v2_CustomTag* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing_add_custom_tags(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tracing *msg, upb_arena *arena) {
+  struct envoy_type_tracing_v2_CustomTag* sub = (struct envoy_type_tracing_v2_CustomTag*)_upb_msg_new(&envoy_type_tracing_v2_CustomTag_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(36, 64), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -1477,2 +581 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tra
-    sub = (struct envoy_config_trace_v2_Tracing_Http*)upb_msg_new(
-        &envoy_config_trace_v2_Tracing_Http_msginit, arena);
+    sub = (struct envoy_config_trace_v2_Tracing_Http*)_upb_msg_new(&envoy_config_trace_v2_Tracing_Http_msginit, arena);
@@ -1485,3 +587,4 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Tra
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_new(
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_parse(const char *buf, size_t size,
@@ -1489,5 +592,2 @@ UPB_INLINE
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*)
-      _upb_msg_new(
-          &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_msginit,
-          arena);
+  envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig *ret = envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_msginit, arena)) ? ret : NULL;
@@ -1495,37 +595,5 @@ UPB_INLINE
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_parse(
-        const char* buf, size_t size, upb_arena* arena) {
-  envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*
-      ret =
-          envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_new(
-              arena);
-  return (ret &&
-          upb_decode(
-              buf, size, ret,
-              &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_msginit,
-              arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_serialize(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*
-        msg,
-    upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_msginit,
-      arena, len);
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_unix_sockets(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*
-        msg) {
-  return UPB_FIELD_AT(msg, bool, UPB_SIZE(0, 0));
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_set_unix_sockets(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig*
-        msg,
-    bool value) {
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_serialize(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_msginit, arena, len);
+}
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_unix_sockets(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig *msg) { return UPB_FIELD_AT(msg, bool, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig_set_unix_sockets(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_InternalAddressConfig *msg, bool value) {
@@ -1653,3 +642,4 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Set
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_new(
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_parse(const char *buf, size_t size,
@@ -1657,5 +647,2 @@ UPB_INLINE
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*)
-      _upb_msg_new(
-          &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit,
-          arena);
+  envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *ret = envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit, arena)) ? ret : NULL;
@@ -1663,54 +650,7 @@ UPB_INLINE
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_parse(
-        const char* buf, size_t size, upb_arena* arena) {
-  envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-      ret =
-          envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_new(
-              arena);
-  return (ret &&
-          upb_decode(
-              buf, size, ret,
-              &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit,
-              arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_serialize(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-        msg,
-    upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit,
-      arena, len);
-}
-UPB_INLINE upb_strview
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_upgrade_type(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-        msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_HttpFilter* const*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_filters(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-            msg,
-        size_t* len) {
-  return (
-      const envoy_config_filter_network_http_connection_manager_v2_HttpFilter* const*)
-      _upb_array_accessor(msg, UPB_SIZE(12, 24), len);
-}
-UPB_INLINE const struct google_protobuf_BoolValue*
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_enabled(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*,
-                      UPB_SIZE(8, 16));
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_set_upgrade_type(
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-        msg,
-    upb_strview value) {
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_serialize(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_msginit, arena, len);
+}
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_upgrade_type(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_HttpFilter* const* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_filters(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg, size_t *len) { return (const envoy_config_filter_network_http_connection_manager_v2_HttpFilter* const*)_upb_array_accessor(msg, UPB_SIZE(12, 24), len); }
+UPB_INLINE const struct google_protobuf_BoolValue* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_enabled(const envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_BoolValue*, UPB_SIZE(8, 16)); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_set_upgrade_type(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg, upb_strview value) {
@@ -1719,15 +659,10 @@ envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_Upg
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilterUPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpFilterUPB_INLINE struct
-    envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-    envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_add_filters(
-        envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig*
-            msg,
-        upb_arena* arena) {
-  struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-      sub = (struct
-             envoy_config_filter_network_http_connection_manager_v2_HttpFilter*)
-          _upb_msg_new(
-              &envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit,
-              arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(12, 24), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_mutable_filters(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg, size_t *len) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)_upb_array_mutable_accessor(msg, UPB_SIZE(12, 24), len);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter** envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_resize_filters(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg, size_t len, upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter**)_upb_array_resize_accessor(msg, UPB_SIZE(12, 24), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter* envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig_add_filters(envoy_config_filter_network_http_connection_manager_v2_HttpConnectionManager_UpgradeConfig *msg, upb_arena *arena) {
+  struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter* sub = (struct envoy_config_filter_network_http_connection_manager_v2_HttpFilter*)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(12, 24), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -1769,29 +687 @@ envoy_config_filter_network_http_connection_manager_v2_Rds_new(
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_RdsUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_Rds_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_Rds* msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg, &envoy_config_filter_network_http_connection_manager_v2_Rds_msginit,
-      arena, len);
-}
-UPB_INLINE const struct envoy_api_v2_core_ConfigSource*
-envoy_config_filter_network_http_connection_manager_v2_Rds_config_source(
-    const envoy_config_filter_network_http_connection_manager_v2_Rds* msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_ConfigSource*,
-                      UPB_SIZE(8, 16));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_Rds_set_config_source(
-    envoy_config_filter_network_http_connection_manager_v2_Rds* msg,
-    struct envoy_api_v2_core_ConfigSource* value) {
-  UPB_FIELD_AT(msg, struct envoy_api_v2_core_ConfigSource*, UPB_SIZE(8, 16)) =
-      value;
-}
-UPB_INLINE struct envoy_api_v2_core_ConfigSource*
-envoy_config_filter_network_http_connection_manager_v2_Rds_mutable_config_source(
-    envoy_config_filter_network_http_connection_manager_v2_Rds* msg,
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_Rds *envoy_config_filter_network_http_connection_manager_v2_Rds_parse(const char *buf, size_t size,
@@ -1799,4 +689,13 @@ envoy_config_filter_network_http_connection_manager_v2_Rds_mutable_config_source
-  struct envoy_api_v2_core_ConfigSource* sub = (struct
-                                                envoy_api_v2_core_ConfigSource*)
-      envoy_config_filter_network_http_connection_manager_v2_Rds_config_source(
-          msg);
+  envoy_config_filter_network_http_connection_manager_v2_Rds *ret = envoy_config_filter_network_http_connection_manager_v2_Rds_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_Rds_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_Rds_serialize(const envoy_config_filter_network_http_connection_manager_v2_Rds *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_Rds_msginit, arena, len);
+}
+UPB_INLINE const struct envoy_api_v2_core_ConfigSource* envoy_config_filter_network_http_connection_manager_v2_Rds_config_source(const envoy_config_filter_network_http_connection_manager_v2_Rds *msg) { return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_ConfigSource*, UPB_SIZE(8, 16)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_Rds_route_config_name(const envoy_config_filter_network_http_connection_manager_v2_Rds *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_Rds_set_config_source(envoy_config_filter_network_http_connection_manager_v2_Rds *msg, struct envoy_api_v2_core_ConfigSource* value) {
+  UPB_FIELD_AT(msg, struct envoy_api_v2_core_ConfigSource*, UPB_SIZE(8, 16)) = value;
+}
+UPB_INLINE struct envoy_api_v2_core_ConfigSource* envoy_config_filter_network_http_connection_manager_v2_Rds_mutable_config_source(envoy_config_filter_network_http_connection_manager_v2_Rds *msg, upb_arena *arena) {
+  struct envoy_api_v2_core_ConfigSource* sub = (struct envoy_api_v2_core_ConfigSource*)envoy_config_filter_network_http_connection_manager_v2_Rds_config_source(msg);
@@ -1818,3 +712,4 @@ envoy_config_filter_network_http_connection_manager_v2_Rds_set_route_config_name
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_new(
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_parse(const char *buf, size_t size,
@@ -1822,5 +717,2 @@ UPB_INLINE
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*)
-      _upb_msg_new(
-          &envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_msginit,
-          arena);
+  envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *ret = envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_msginit, arena)) ? ret : NULL;
@@ -1828,35 +720,2 @@ UPB_INLINE
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsListUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_msginit,
-      arena, len);
-}
-UPB_INLINE const struct envoy_api_v2_ScopedRouteConfiguration* const*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_scoped_route_configurations(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*
-        msg,
-    size_t* len) {
-  return (const struct envoy_api_v2_ScopedRouteConfiguration* const*)
-      _upb_array_accessor(msg, UPB_SIZE(0, 0), len);
-}
-UPB_INLINE struct envoy_api_v2_ScopedRouteConfiguration**
-envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_mutable_scoped_route_configurations(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*
-        msg,
-    size_t* len) {
-  return (struct envoy_api_v2_ScopedRouteConfiguration**)
-      _upb_array_mutable_accessor(msg, UPB_SIZE(0, 0), len);
-}
-UPB_INLINE struct envoy_api_v2_ScopedRouteConfiguration**
-envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_resize_scoped_route_configurations(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*
-        msg,
-    size_t len, upb_arena* arena) {
-  return (struct envoy_api_v2_ScopedRouteConfiguration**)
-      _upb_array_resize_accessor(msg, UPB_SIZE(0, 0), len, UPB_TYPE_MESSAGE,
-                                 arena);
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_serialize(const envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_msginit, arena, len);
@@ -1864,10 +723,11 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurations
-UPB_INLINE struct envoy_api_v2_ScopedRouteConfiguration*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_add_scoped_route_configurations(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*
-        msg,
-    upb_arena* arena) {
-  struct envoy_api_v2_ScopedRouteConfiguration* sub =
-      (struct envoy_api_v2_ScopedRouteConfiguration*)_upb_msg_new(
-          &envoy_api_v2_ScopedRouteConfiguration_msginit, arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(0, 0), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+UPB_INLINE const struct envoy_api_v2_ScopedRouteConfiguration* const* envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_scoped_route_configurations(const envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *msg, size_t *len) { return (const struct envoy_api_v2_ScopedRouteConfiguration* const*)_upb_array_accessor(msg, UPB_SIZE(0, 0), len); }
+UPB_INLINE struct envoy_api_v2_ScopedRouteConfiguration** envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_mutable_scoped_route_configurations(envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *msg, size_t *len) {
+  return (struct envoy_api_v2_ScopedRouteConfiguration**)_upb_array_mutable_accessor(msg, UPB_SIZE(0, 0), len);
+}
+UPB_INLINE struct envoy_api_v2_ScopedRouteConfiguration** envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_resize_scoped_route_configurations(envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *msg, size_t len, upb_arena *arena) {
+  return (struct envoy_api_v2_ScopedRouteConfiguration**)_upb_array_resize_accessor(msg, UPB_SIZE(0, 0), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_api_v2_ScopedRouteConfiguration* envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList_add_scoped_route_configurations(envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList *msg, upb_arena *arena) {
+  struct envoy_api_v2_ScopedRouteConfiguration* sub = (struct envoy_api_v2_ScopedRouteConfiguration*)_upb_msg_new(&envoy_api_v2_ScopedRouteConfiguration_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(0, 0), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -1877,2 +737,4 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurations
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_new(
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_parse(const char *buf, size_t size,
@@ -1880,4 +742,2 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_new(
-  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*)
-      _upb_msg_new(
-          &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_msginit,
-          arena);
+  envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *ret = envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_msginit, arena)) ? ret : NULL;
@@ -1885,10 +745,2 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_new(
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutesUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_msginit,
-      arena, len);
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_serialize(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_msginit, arena, len);
@@ -1904,64 +753,9 @@ typedef enum {
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_config_specifier_oneofcases
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_config_specifier_case(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-        msg) {
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_config_specifier_oneofcases)
-      UPB_FIELD_AT(msg, int32_t, UPB_SIZE(20, 40));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_scope_key_builder(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-            msg) {
-  return UPB_FIELD_AT(
-      msg,
-      const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*,
-      UPB_SIZE(8, 16));
-}
-UPB_INLINE const struct envoy_api_v2_core_ConfigSource*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_rds_config_source(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_ConfigSource*,
-                      UPB_SIZE(12, 24));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_has_scoped_route_configurations_list(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 4);
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_scoped_route_configurations_list(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-            msg) {
-  return UPB_READ_ONEOF(
-      msg,
-      const envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*,
-      UPB_SIZE(16, 32), UPB_SIZE(20, 40), 4, NULL);
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_has_scoped_rds(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 5);
-}
-UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRds*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_scoped_rds(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes*
-        msg) {
-  return UPB_READ_ONEOF(
-      msg,
-      const envoy_config_filter_network_http_connection_manager_v2_ScopedRds*,
-      UPB_SIZE(16, 32), UPB_SIZE(20, 40), 5, NULL);
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_set_name(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes* msg,
-    upb_strview value) {
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_config_specifier_oneofcases envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_config_specifier_case(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes* msg) { return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_config_specifier_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(20, 40)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_name(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_scope_key_builder(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg) { return UPB_FIELD_AT(msg, const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*, UPB_SIZE(8, 16)); }
+UPB_INLINE const struct envoy_api_v2_core_ConfigSource* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_rds_config_source(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg) { return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_ConfigSource*, UPB_SIZE(12, 24)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_has_scoped_route_configurations_list(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 4); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_scoped_route_configurations_list(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg) { return UPB_READ_ONEOF(msg, const envoy_config_filter_network_http_connection_manager_v2_ScopedRouteConfigurationsList*, UPB_SIZE(16, 32), UPB_SIZE(20, 40), 4, NULL); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_has_scoped_rds(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 5); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRds* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_scoped_rds(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg) { return UPB_READ_ONEOF(msg, const envoy_config_filter_network_http_connection_manager_v2_ScopedRds*, UPB_SIZE(16, 32), UPB_SIZE(20, 40), 5, NULL); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_set_name(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes *msg, upb_strview value) {
@@ -2098,52 +815 @@ UPB_INLINE
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_parse(
-        const char* buf, size_t size, upb_arena* arena) {
-  envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*
-      ret =
-          envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_new(
-              arena);
-  return (ret &&
-          upb_decode(
-              buf, size, ret,
-              &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_msginit,
-              arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_serialize(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*
-        msg,
-    upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_msginit,
-      arena, len);
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder* const*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_fragments(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*
-            msg,
-        size_t* len) {
-  return (
-      const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder* const*)
-      _upb_array_accessor(msg, UPB_SIZE(0, 0), len);
-}
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder**
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_mutable_fragments(
-        envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*
-            msg,
-        size_t* len) {
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder**)
-      _upb_array_mutable_accessor(msg, UPB_SIZE(0, 0), len);
-}
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilderUPB_INLINE struct
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_add_fragments(
-        envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder*
-            msg,
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_parse(const char *buf, size_t size,
@@ -2151,8 +817,17 @@ UPB_INLINE
-  struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*
-      sub = (struct
-             envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*)
-          _upb_msg_new(
-              &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_msginit,
-              arena);
-  bool ok = _upb_array_append_accessor(msg, UPB_SIZE(0, 0), UPB_SIZE(4, 8),
-                                       UPB_TYPE_MESSAGE, &sub, arena);
+  envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder *ret = envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_serialize(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_msginit, arena, len);
+}
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder* const* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_fragments(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder *msg, size_t *len) { return (const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder* const*)_upb_array_accessor(msg, UPB_SIZE(0, 0), len); }
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder** envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_mutable_fragments(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder *msg, size_t *len) {
+  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder**)_upb_array_mutable_accessor(msg, UPB_SIZE(0, 0), len);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder** envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_resize_fragments(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder *msg, size_t len, upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder**)_upb_array_resize_accessor(msg, UPB_SIZE(0, 0), len, UPB_TYPE_MESSAGE, arena);
+}
+UPB_INLINE struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_add_fragments(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder *msg, upb_arena *arena) {
+  struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder* sub = (struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_msginit, arena);
+  bool ok = _upb_array_append_accessor(
+      msg, UPB_SIZE(0, 0), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
@@ -2162,10 +837,10 @@ UPB_INLINE
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilderUPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilderUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_msginit,
-      arena, len);
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_parse(const char *buf, size_t size,
+                        upb_arena *arena) {
+  envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *ret = envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_serialize(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_msginit, arena, len);
@@ -2179,31 +852,8 @@ typedef enum {
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_type_oneofcases
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_type_case(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*
-        msg) {
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_type_oneofcases)
-      UPB_FIELD_AT(msg, int32_t, UPB_SIZE(4, 8));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_has_header_value_extractor(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 1);
-}
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor
-UPB_WRITE_ONEOF(
-    msg,
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*,
-    UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 1);
-}
-UPB_INLINE struct
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_mutable_header_value_extractor(
-        envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder*
-            msg,
-        upb_arena* arena) {
-  struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-      sub = (struct
-             envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*)
-          envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_header_value_extractor(
-              msg);
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_type_oneofcases envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_type_case(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder* msg) { return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_type_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(4, 8)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_has_header_value_extractor(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 1); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_header_value_extractor(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *msg) { return UPB_READ_ONEOF(msg, const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 1, NULL); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_set_header_value_extractor(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *msg, envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor* value) {
+  UPB_WRITE_ONEOF(msg, envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 1);
+}
+UPB_INLINE struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_mutable_header_value_extractor(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder *msg, upb_arena *arena) {
+  struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor* sub = (struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*)envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_header_value_extractor(msg);
@@ -2222,10 +867,10 @@ UPB_INLINE struct
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractorUPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractorUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_msginit,
-      arena, len);
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_parse(const char *buf, size_t size,
+                        upb_arena *arena) {
+  envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *ret = envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_serialize(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_msginit, arena, len);
@@ -2241,41 +883,8 @@ typedef enum {
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_extract_type_oneofcases
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_extract_type_case(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-        msg) {
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_extract_type_oneofcases)
-      UPB_FIELD_AT(msg, int32_t, UPB_SIZE(20, 40));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_has_index(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 3);
-}
-UPB_INLINE uint32_t
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_index(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-        msg) {
-  return UPB_READ_ONEOF(msg, uint32_t, UPB_SIZE(16, 32), UPB_SIZE(20, 40), 3,
-                        0);
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_has_element(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 4);
-}
-UPB_INLINE const
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElementUPB_INLINE void
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_set_name(
-        envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-            msg,
-        upb_strview value) {
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_extract_type_oneofcases envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_extract_type_case(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor* msg) { return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_extract_type_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(20, 40)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_name(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_element_separator(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(8, 16)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_has_index(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 3); }
+UPB_INLINE uint32_t envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_index(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg) { return UPB_READ_ONEOF(msg, uint32_t, UPB_SIZE(16, 32), UPB_SIZE(20, 40), 3, 0); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_has_element(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(20, 40), 4); }
+UPB_INLINE const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_element(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg) { return UPB_READ_ONEOF(msg, const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*, UPB_SIZE(16, 32), UPB_SIZE(20, 40), 4, NULL); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_set_name(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg, upb_strview value) {
@@ -2290,0 +896 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuil
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_set_index(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg, uint32_t value) {
@@ -2293,41 +899,26 @@ UPB_WRITE_ONEOF(msg, uint32_t, UPB_SIZE(16, 32), value, UPB_SIZE(20, 40), 3);
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_set_element(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor*
-        msg,
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*
-        value) {
-  envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*
-      ret =
-          envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_new(
-              arena);
-  return (ret &&
-          upb_decode(
-              buf, size, ret,
-              &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_msginit,
-              arena))
-             ? ret
-             : NULL;
-}
-UPB_INLINE char*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_serialize(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*
-        msg,
-    upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_msginit,
-      arena, len);
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_set_separator(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*
-        msg,
-    upb_strview value) {
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_set_element(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg, envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement* value) {
+  UPB_WRITE_ONEOF(msg, envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*, UPB_SIZE(16, 32), value, UPB_SIZE(20, 40), 4);
+}
+UPB_INLINE struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement* envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_mutable_element(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor *msg, upb_arena *arena) {
+  struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement* sub = (struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*)envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_element(msg);
+  if (sub == NULL) {
+    sub = (struct envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement*)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_msginit, arena);
+    if (!sub) return NULL;
+    envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_set_element(msg, sub);
+  }
+  return sub;
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_parse(const char *buf, size_t size,
+                        upb_arena *arena) {
+  envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *ret = envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_serialize(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_msginit, arena, len);
+}
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_separator(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_key(const envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(8, 16)); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement_set_separator(envoy_config_filter_network_http_connection_manager_v2_ScopedRoutes_ScopeKeyBuilder_FragmentBuilder_HeaderValueExtractor_KvElement *msg, upb_strview value) {
@@ -2351,28 +933 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRds_new(
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRdsUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRds_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_ScopedRds*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_ScopedRds_msginit,
-      arena, len);
-}
-UPB_INLINE const struct envoy_api_v2_core_ConfigSource*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRds_scoped_rds_config_source(
-    const envoy_config_filter_network_http_connection_manager_v2_ScopedRds*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_ConfigSource*,
-                      UPB_SIZE(0, 0));
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_ScopedRds_set_scoped_rds_config_source(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRds* msg,
-    struct envoy_api_v2_core_ConfigSource* value) {
-  UPB_FIELD_AT(msg, struct envoy_api_v2_core_ConfigSource*, UPB_SIZE(0, 0)) =
-      value;
-}
-UPB_INLINE struct envoy_api_v2_core_ConfigSource*
-envoy_config_filter_network_http_connection_manager_v2_ScopedRds_mutable_scoped_rds_config_source(
-    envoy_config_filter_network_http_connection_manager_v2_ScopedRds* msg,
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_ScopedRds *envoy_config_filter_network_http_connection_manager_v2_ScopedRds_parse(const char *buf, size_t size,
@@ -2380,4 +935,12 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRds_mutable_scoped_
-  struct envoy_api_v2_core_ConfigSource* sub = (struct
-                                                envoy_api_v2_core_ConfigSource*)
-      envoy_config_filter_network_http_connection_manager_v2_ScopedRds_scoped_rds_config_source(
-          msg);
+  envoy_config_filter_network_http_connection_manager_v2_ScopedRds *ret = envoy_config_filter_network_http_connection_manager_v2_ScopedRds_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_ScopedRds_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_ScopedRds_serialize(const envoy_config_filter_network_http_connection_manager_v2_ScopedRds *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_ScopedRds_msginit, arena, len);
+}
+UPB_INLINE const struct envoy_api_v2_core_ConfigSource* envoy_config_filter_network_http_connection_manager_v2_ScopedRds_scoped_rds_config_source(const envoy_config_filter_network_http_connection_manager_v2_ScopedRds *msg) { return UPB_FIELD_AT(msg, const struct envoy_api_v2_core_ConfigSource*, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_ScopedRds_set_scoped_rds_config_source(envoy_config_filter_network_http_connection_manager_v2_ScopedRds *msg, struct envoy_api_v2_core_ConfigSource* value) {
+  UPB_FIELD_AT(msg, struct envoy_api_v2_core_ConfigSource*, UPB_SIZE(0, 0)) = value;
+}
+UPB_INLINE struct envoy_api_v2_core_ConfigSource* envoy_config_filter_network_http_connection_manager_v2_ScopedRds_mutable_scoped_rds_config_source(envoy_config_filter_network_http_connection_manager_v2_ScopedRds *msg, upb_arena *arena) {
+  struct envoy_api_v2_core_ConfigSource* sub = (struct envoy_api_v2_core_ConfigSource*)envoy_config_filter_network_http_connection_manager_v2_ScopedRds_scoped_rds_config_source(msg);
@@ -2393,2 +954,4 @@ envoy_config_filter_network_http_connection_manager_v2_ScopedRds_mutable_scoped_
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-envoy_config_filter_network_http_connection_manager_v2_HttpFilter_new(
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter *envoy_config_filter_network_http_connection_manager_v2_HttpFilter_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter *envoy_config_filter_network_http_connection_manager_v2_HttpFilter_parse(const char *buf, size_t size,
@@ -2396,4 +959,2 @@ envoy_config_filter_network_http_connection_manager_v2_HttpFilter_new(
-  return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter*)
-      _upb_msg_new(
-          &envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit,
-          arena);
+  envoy_config_filter_network_http_connection_manager_v2_HttpFilter *ret = envoy_config_filter_network_http_connection_manager_v2_HttpFilter_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit, arena)) ? ret : NULL;
@@ -2401,10 +962,2 @@ envoy_config_filter_network_http_connection_manager_v2_HttpFilter_new(
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_HttpFilterUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_HttpFilter_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit,
-      arena, len);
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_HttpFilter_serialize(const envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_HttpFilter_msginit, arena, len);
@@ -2420,42 +970,7 @@ typedef enum {
-UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config_type_oneofcases
-envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config_type_case(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-        msg) {
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config_type_oneofcases)
-      UPB_FIELD_AT(msg, int32_t, UPB_SIZE(12, 24));
-}
-UPB_INLINE upb_strview
-envoy_api_v2_auth_Secret_name(const envoy_api_v2_auth_Secret* msg) {
-  return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0));
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpFilter_has_config(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 2);
-}
-UPB_INLINE const struct google_protobuf_Struct*
-envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-        msg) {
-  return UPB_READ_ONEOF(msg, const struct google_protobuf_Struct*,
-                        UPB_SIZE(8, 16), UPB_SIZE(12, 24), 2, NULL);
-}
-UPB_INLINE bool
-envoy_config_filter_network_http_connection_manager_v2_HttpFilter_has_typed_config(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-        msg) {
-  return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 4);
-}
-UPB_INLINE const struct google_protobuf_Any*
-envoy_config_filter_network_http_connection_manager_v2_HttpFilter_typed_config(
-    const envoy_config_filter_network_http_connection_manager_v2_HttpFilter*
-        msg) {
-  return UPB_READ_ONEOF(msg, const struct google_protobuf_Any*, UPB_SIZE(8, 16),
-                        UPB_SIZE(12, 24), 4, NULL);
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_HttpFilter_set_name(
-    envoy_config_filter_network_http_connection_manager_v2_HttpFilter* msg,
-    upb_strview value) {
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config_type_oneofcases envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config_type_case(const envoy_config_filter_network_http_connection_manager_v2_HttpFilter* msg) { return (envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config_type_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(12, 24)); }
+UPB_INLINE upb_strview envoy_config_filter_network_http_connection_manager_v2_HttpFilter_name(const envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpFilter_has_config(const envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 2); }
+UPB_INLINE const struct google_protobuf_Struct* envoy_config_filter_network_http_connection_manager_v2_HttpFilter_config(const envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg) { return UPB_READ_ONEOF(msg, const struct google_protobuf_Struct*, UPB_SIZE(8, 16), UPB_SIZE(12, 24), 2, NULL); }
+UPB_INLINE bool envoy_config_filter_network_http_connection_manager_v2_HttpFilter_has_typed_config(const envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(12, 24), 4); }
+UPB_INLINE const struct google_protobuf_Any* envoy_config_filter_network_http_connection_manager_v2_HttpFilter_typed_config(const envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg) { return UPB_READ_ONEOF(msg, const struct google_protobuf_Any*, UPB_SIZE(8, 16), UPB_SIZE(12, 24), 4, NULL); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_HttpFilter_set_name(envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg, upb_strview value) {
@@ -2464,2 +979,2 @@ envoy_config_filter_network_http_connection_manager_v2_HttpFilter_set_name(
-UPB_WRITE_ONEOF(msg, struct google_protobuf_Struct*, UPB_SIZE(8, 16), value,
-                UPB_SIZE(12, 24), 2);
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_HttpFilter_set_config(envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg, struct google_protobuf_Struct* value) {
+  UPB_WRITE_ONEOF(msg, struct google_protobuf_Struct*, UPB_SIZE(8, 16), value, UPB_SIZE(12, 24), 2);
@@ -2483,2 +991,2 @@ envoy_config_filter_network_http_connection_manager_v2_HttpFilter_mutable_config
-UPB_WRITE_ONEOF(msg, struct google_protobuf_Any*, UPB_SIZE(8, 16), value,
-                UPB_SIZE(12, 24), 4);
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_HttpFilter_set_typed_config(envoy_config_filter_network_http_connection_manager_v2_HttpFilter *msg, struct google_protobuf_Any* value) {
+  UPB_WRITE_ONEOF(msg, struct google_protobuf_Any*, UPB_SIZE(8, 16), value, UPB_SIZE(12, 24), 4);
@@ -2502,3 +1003,4 @@ envoy_config_filter_network_http_connection_manager_v2_HttpFilter_mutable_typed_
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*
-    envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_new(
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension *envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_new(upb_arena *arena) {
+  return (envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension *)_upb_msg_new(&envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_msginit, arena);
+}
+UPB_INLINE envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension *envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_parse(const char *buf, size_t size,
@@ -2506,5 +1008,5 @@ UPB_INLINE
-  return (
-      envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*)
-      upb_msg_new(
-          &envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_msginit,
-          arena);
+  envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension *ret = envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_new(arena);
+  return (ret && upb_decode(buf, size, ret, &envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_msginit, arena)) ? ret : NULL;
+}
+UPB_INLINE char *envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_serialize(const envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension *msg, upb_arena *arena, size_t *len) {
+  return upb_encode(msg, &envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_msginit, arena, len);
@@ -2512,22 +1014,2 @@ UPB_INLINE
-UPB_INLINE
-    envoy_config_filter_network_http_connection_manager_v2_RequestIDExtensionUPB_INLINE char*
-    envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_serialize(
-        const envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*
-            msg,
-        upb_arena* arena, size_t* len) {
-  return upb_encode(
-      msg,
-      &envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_msginit,
-      arena, len);
-}
-UPB_INLINE const struct google_protobuf_Any*
-envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_typed_config(
-    const envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*
-        msg) {
-  return UPB_FIELD_AT(msg, const struct google_protobuf_Any*, UPB_SIZE(0, 0));
-}
-UPB_INLINE void
-envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_set_typed_config(
-    envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension*
-        msg,
-    struct google_protobuf_Any* value) {
+UPB_INLINE const struct google_protobuf_Any* envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_typed_config(const envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension *msg) { return UPB_FIELD_AT(msg, const struct google_protobuf_Any*, UPB_SIZE(0, 0)); }
+UPB_INLINE void envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_set_typed_config(envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension *msg, struct google_protobuf_Any* value) {
@@ -2545,2 +1021 @@ envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_mutabl
-    sub = (struct google_protobuf_Any*)upb_msg_new(&google_protobuf_Any_msginit,
-                                                   arena);
+    sub = (struct google_protobuf_Any*)_upb_msg_new(&google_protobuf_Any_msginit, arena);
@@ -2555,0 +1030,2 @@ envoy_config_filter_network_http_connection_manager_v2_RequestIDExtension_mutabl
+#include "upb/port_undef.inc"
+#endif
