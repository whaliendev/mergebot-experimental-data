--- a/./output/art/71bc72f6-93961dcd-45bc8664/runtime@debugger.no_comments_merged.cc
+++ b/./output/art/71bc72f6-93961dcd-45bc8664/runtime@debugger.no_comments_truth.cc
@@ -2062 +2061,0 @@ JDWP::JdwpError Dbg::GetLocalValues(JDWP::Request* request, JDWP::ExpandBuf* pRe
-<<<<<<< HEAD
@@ -2070,12 +2068,0 @@ JDWP::JdwpError Dbg::GetLocalValues(JDWP::Request* request, JDWP::ExpandBuf* pRe
-||||||| 45bc866419
-  JDWP::JdwpError error = DecodeThread(soa, thread_id, thread);
-  if (error != JDWP::ERR_NONE) {
-    return error;
-=======
-  {
-    MutexLock mu(soa.Self(), *Locks::thread_list_lock_);
-    JDWP::JdwpError error = DecodeThread(soa, thread_id, thread);
-    if (error != JDWP::ERR_NONE) {
-      return error;
-    }
->>>>>>> 93961dcd
@@ -2230 +2216,0 @@ JDWP::JdwpError Dbg::SetLocalValues(JDWP::Request* request) {
-<<<<<<< HEAD
@@ -2238,12 +2223,0 @@ JDWP::JdwpError Dbg::SetLocalValues(JDWP::Request* request) {
-||||||| 45bc866419
-  JDWP::JdwpError error = DecodeThread(soa, thread_id, thread);
-  if (error != JDWP::ERR_NONE) {
-    return error;
-=======
-  {
-    MutexLock mu(soa.Self(), *Locks::thread_list_lock_);
-    JDWP::JdwpError error = DecodeThread(soa, thread_id, thread);
-    if (error != JDWP::ERR_NONE) {
-      return error;
-    }
->>>>>>> 93961dcd
@@ -2254 +2227,0 @@ JDWP::JdwpError Dbg::SetLocalValues(JDWP::Request* request) {
-<<<<<<< HEAD
@@ -2354,101 +2326,0 @@ JDWP::JdwpError Dbg::SetLocalValue(StackVisitor& visitor, int slot, JDWP::JdwpTa
-||||||| 45bc866419
-  return visitor.error_;
-=======
-  if (visitor.GetError() != JDWP::ERR_NONE) {
-    return visitor.GetError();
-  }
-  int32_t slot_count = request->ReadSigned32("slot count");
-  for (int32_t i = 0; i < slot_count; ++i) {
-    uint32_t slot = request->ReadUnsigned32("slot");
-    JDWP::JdwpTag sigByte = request->ReadTag();
-    size_t width = Dbg::GetTagWidth(sigByte);
-    uint64_t value = request->ReadValue(width);
-    VLOG(jdwp) << "    --> slot " << slot << " " << sigByte << " " << value;
-    JDWP::JdwpError error = Dbg::SetLocalValue(visitor, slot, sigByte, value, width);
-    if (error != JDWP::ERR_NONE) {
-      return error;
-    }
-  }
-  return JDWP::ERR_NONE;
-}
-JDWP::JdwpError Dbg::SetLocalValue(StackVisitor& visitor, int slot, JDWP::JdwpTag tag,
-                                   uint64_t value, size_t width) {
-  mirror::ArtMethod* m = visitor.GetMethod();
-  uint16_t reg = DemangleSlot(slot, m);
-  constexpr JDWP::JdwpError kFailureErrorCode = JDWP::ERR_ABSENT_INFORMATION;
-  switch (tag) {
-    case JDWP::JT_BOOLEAN:
-    case JDWP::JT_BYTE:
-      CHECK_EQ(width, 1U);
-      if (!visitor.SetVReg(m, reg, static_cast<uint32_t>(value), kIntVReg)) {
-        VLOG(jdwp) << "failed to set boolean/byte local " << reg << " = "
-                   << static_cast<uint32_t>(value);
-        return kFailureErrorCode;
-      }
-      break;
-    case JDWP::JT_SHORT:
-    case JDWP::JT_CHAR:
-      CHECK_EQ(width, 2U);
-      if (!visitor.SetVReg(m, reg, static_cast<uint32_t>(value), kIntVReg)) {
-        VLOG(jdwp) << "failed to set short/char local " << reg << " = "
-                   << static_cast<uint32_t>(value);
-        return kFailureErrorCode;
-      }
-      break;
-    case JDWP::JT_INT:
-      CHECK_EQ(width, 4U);
-      if (!visitor.SetVReg(m, reg, static_cast<uint32_t>(value), kIntVReg)) {
-        VLOG(jdwp) << "failed to set int local " << reg << " = "
-                   << static_cast<uint32_t>(value);
-        return kFailureErrorCode;
-      }
-      break;
-    case JDWP::JT_FLOAT:
-      CHECK_EQ(width, 4U);
-      if (!visitor.SetVReg(m, reg, static_cast<uint32_t>(value), kFloatVReg)) {
-        VLOG(jdwp) << "failed to set float local " << reg << " = "
-                   << static_cast<uint32_t>(value);
-        return kFailureErrorCode;
-      }
-      break;
-    case JDWP::JT_ARRAY:
-    case JDWP::JT_CLASS_LOADER:
-    case JDWP::JT_CLASS_OBJECT:
-    case JDWP::JT_OBJECT:
-    case JDWP::JT_STRING:
-    case JDWP::JT_THREAD:
-    case JDWP::JT_THREAD_GROUP: {
-      CHECK_EQ(width, sizeof(JDWP::ObjectId));
-      mirror::Object* o = gRegistry->Get<mirror::Object*>(static_cast<JDWP::ObjectId>(value));
-      if (o == ObjectRegistry::kInvalidObject) {
-        VLOG(jdwp) << tag << " object " << o << " is an invalid object";
-        return JDWP::ERR_INVALID_OBJECT;
-      } else if (!visitor.SetVReg(m, reg, static_cast<uint32_t>(reinterpret_cast<uintptr_t>(o)),
-                          kReferenceVReg)) {
-        VLOG(jdwp) << "failed to set " << tag << " object local " << reg << " = " << o;
-        return kFailureErrorCode;
-      }
-      break;
-    }
-    case JDWP::JT_DOUBLE: {
-      CHECK_EQ(width, 8U);
-      if (!visitor.SetVRegPair(m, reg, value, kDoubleLoVReg, kDoubleHiVReg)) {
-        VLOG(jdwp) << "failed to set double local " << reg << " = " << value;
-        return kFailureErrorCode;
-      }
-      break;
-    }
-    case JDWP::JT_LONG: {
-      CHECK_EQ(width, 8U);
-      if (!visitor.SetVRegPair(m, reg, value, kLongLoVReg, kLongHiVReg)) {
-        VLOG(jdwp) << "failed to set double local " << reg << " = " << value;
-        return kFailureErrorCode;
-      }
-      break;
-    }
-    default:
-      LOG(FATAL) << "Unknown tag " << tag;
-      break;
-  }
-  return JDWP::ERR_NONE;
->>>>>>> 93961dcd
