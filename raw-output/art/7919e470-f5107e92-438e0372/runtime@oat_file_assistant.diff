diff --git a/output/art/7919e470-f5107e92-438e0372/runtime@oat_file_assistant.no_comments_mergebot.cc b/output/art/7919e470-f5107e92-438e0372/runtime@oat_file_assistant.no_comments_truth.cc
index 1ba9986..630eeeb 100644
--- a/output/art/7919e470-f5107e92-438e0372/runtime@oat_file_assistant.no_comments_mergebot.cc
+++ b/output/art/7919e470-f5107e92-438e0372/runtime@oat_file_assistant.no_comments_truth.cc
@@ -39,0 +40,3 @@ namespace art {
+using ::android::base::ConsumePrefix;
+using ::android::base::StringPrintf;
+using ::fmt::literals::operator""_format;
@@ -63 +66,15 @@ std::ostream& operator<<(std::ostream& stream, const OatFileAssistant::OatStatus
-OatFileAssistant::OatFileAssistant(const char* dex_location, const InstructionSet isa, ClassLoaderContext* context, bool load_executable, bool only_load_trusted_executable, OatFileAssistantContext* ofa_context): OatFileAssistant(dex_location, isa, context, load_executable, only_load_trusted_executable, ofa_context, -1, -1, -1) {}
+OatFileAssistant::OatFileAssistant(const char* dex_location,
+                                   const InstructionSet isa,
+                                   ClassLoaderContext* context,
+                                   bool load_executable,
+                                   bool only_load_trusted_executable,
+                                   OatFileAssistantContext* ofa_context)
+    : OatFileAssistant(dex_location,
+                       isa,
+                       context,
+                       load_executable,
+                       only_load_trusted_executable,
+                       ofa_context,
+                                   -1,
+                                  -1,
+                                  -1) {}
@@ -164 +181,9 @@ OatFileAssistant::OatFileAssistant(const char* dex_location,
-std::unique_ptr<OatFileAssistant> OatFileAssistant::Create(const std::string& filename, const std::string& isa_str, const std::optional<std::string>& context_str, bool load_executable, bool only_load_trusted_executable, OatFileAssistantContext* ofa_context, std::unique_ptr<ClassLoaderContext>* context, std::string* error_msg) {
+std::unique_ptr<OatFileAssistant> OatFileAssistant::Create(
+    const std::string& filename,
+    const std::string& isa_str,
+    const std::optional<std::string>& context_str,
+    bool load_executable,
+    bool only_load_trusted_executable,
+    OatFileAssistantContext* ofa_context,
+            std::unique_ptr<ClassLoaderContext>* context,
+            std::string* error_msg) {
@@ -207 +232,2 @@ bool OatFileAssistant::IsInBootClassPath() {
-OatFileAssistant::DexOptTrigger OatFileAssistant::GetDexOptTrigger(CompilerFilter::Filter target_compiler_filter, bool profile_changed, bool downgrade) {
+OatFileAssistant::DexOptTrigger OatFileAssistant::GetDexOptTrigger(
+    CompilerFilter::Filter target_compiler_filter, bool profile_changed, bool downgrade) {
@@ -222 +247,0 @@ int OatFileAssistant::GetDexOptNeeded(CompilerFilter::Filter target_compiler_fil
-<<<<<<< HEAD
@@ -231,12 +255,0 @@ int OatFileAssistant::GetDexOptNeeded(CompilerFilter::Filter target_compiler_fil
-||||||| 438e03725f
-  DexOptNeeded dexopt_needed = info.GetDexOptNeeded(target,
-                                                    profile_changed,
-                                                    downgrade);
-=======
-  if (info.CheckDisableCompactDexExperiment()) {
-    return kDex2OatFromScratch;
-  }
-  DexOptNeeded dexopt_needed = info.GetDexOptNeeded(target,
-                                                    profile_changed,
-                                                    downgrade);
->>>>>>> f5107e92
@@ -248 +261,3 @@ int OatFileAssistant::GetDexOptNeeded(CompilerFilter::Filter target_compiler_fil
-bool OatFileAssistant::GetDexOptNeeded(CompilerFilter::Filter target_compiler_filter, DexOptTrigger dexopt_trigger, DexOptStatus* dexopt_status) {
+bool OatFileAssistant::GetDexOptNeeded(CompilerFilter::Filter target_compiler_filter,
+                                       DexOptTrigger dexopt_trigger,
+                                               DexOptStatus* dexopt_status) {
@@ -513 +528,5 @@ bool OatFileAssistant::DexLocationToOatFilename(const std::string& location,
-bool OatFileAssistant::DexLocationToOatFilename(const std::string& location, InstructionSet isa, bool deny_art_apex_data_files, std::string* oat_filename, std::string* error_msg) {
+bool OatFileAssistant::DexLocationToOatFilename(const std::string& location,
+                                                InstructionSet isa,
+                                                bool deny_art_apex_data_files,
+                                                std::string* oat_filename,
+                                                std::string* error_msg) {
@@ -570 +589,5 @@ const std::vector<uint32_t>* OatFileAssistant::GetRequiredDexChecksums(std::stri
-bool OatFileAssistant::ValidateBootClassPathChecksums(OatFileAssistantContext* ofa_context, InstructionSet isa, std::string_view oat_checksums, std::string_view oat_boot_class_path, std::string* error_msg) {
+bool OatFileAssistant::ValidateBootClassPathChecksums(OatFileAssistantContext* ofa_context,
+                                                      InstructionSet isa,
+                                                      std::string_view oat_checksums,
+                                                      std::string_view oat_boot_class_path,
+                                                              std::string* error_msg) {
@@ -904 +927,2 @@ const OatFile* OatFileAssistant::OatFileInfo::GetFile() {
-bool OatFileAssistant::OatFileInfo::ShouldRecompileForFilter(CompilerFilter::Filter target, const DexOptTrigger dexopt_trigger) {
+bool OatFileAssistant::OatFileInfo::ShouldRecompileForFilter(CompilerFilter::Filter target,
+                                                             const DexOptTrigger dexopt_trigger) {
@@ -1008 +1032,5 @@ bool OatFileAssistant::OatFileInfo::CheckDisableCompactDexExperiment() {
-void OatFileAssistant::GetOptimizationStatus(const std::string& filename, InstructionSet isa, std::string* out_compilation_filter, std::string* out_compilation_reason, OatFileAssistantContext* ofa_context) {
+void OatFileAssistant::GetOptimizationStatus(const std::string& filename,
+                                             InstructionSet isa,
+                                             std::string* out_compilation_filter,
+                                             std::string* out_compilation_reason,
+                                             OatFileAssistantContext* ofa_context) {
@@ -1079,3 +1106,0 @@ bool OatFileAssistant::ZipFileOnlyContainsUncompressedDex() {
-using ::android::base::ConsumePrefix;
-using ::android::base::StringPrintf;
-using ::fmt::literals::operator""_format;
