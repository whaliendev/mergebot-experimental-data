diff --git a/./output/art/f2445572-a2ea7405-c9d45055/runtime@class_linker.no_comments_merged.cc b/./output/art/f2445572-a2ea7405-c9d45055/runtime@class_linker.no_comments_truth.cc
index 2175cf1..060be8c 100644
--- a/./output/art/f2445572-a2ea7405-c9d45055/runtime@class_linker.no_comments_merged.cc
+++ b/./output/art/f2445572-a2ea7405-c9d45055/runtime@class_linker.no_comments_truth.cc
@@ -2911 +2910,0 @@ bool ClassLinker::WaitForInitializeClass(Handle<mirror::Class> klass, Thread* se
-<<<<<<< HEAD
@@ -2967,58 +2965,0 @@ static void ThrowSignatureMismatch(Handle<mirror::Class> klass,
-||||||| c9d450554e
-=======
-static void ThrowSignatureCheckResolveReturnTypeException(Handle<mirror::Class> klass,
-                                                          Handle<mirror::Class> super_klass,
-                                                          Handle<mirror::ArtMethod> method,
-                                                          mirror::ArtMethod* m)
-    SHARED_LOCKS_REQUIRED(Locks::mutator_lock_) {
-  DCHECK(Thread::Current()->IsExceptionPending());
-  DCHECK(!m->IsProxyMethod());
-  const DexFile* dex_file = m->GetDexFile();
-  const DexFile::MethodId& method_id = dex_file->GetMethodId(m->GetDexMethodIndex());
-  const DexFile::ProtoId& proto_id = dex_file->GetMethodPrototype(method_id);
-  uint16_t return_type_idx = proto_id.return_type_idx_;
-  std::string return_type = PrettyType(return_type_idx, *dex_file);
-  std::string class_loader = PrettyTypeOf(m->GetDeclaringClass()->GetClassLoader());
-  ThrowWrappedLinkageError(klass.Get(),
-                           "While checking class %s method %s signature against %s %s: "
-                           "Failed to resolve return type %s with %s",
-                           PrettyDescriptor(klass.Get()).c_str(),
-                           PrettyMethod(method.Get()).c_str(),
-                           super_klass->IsInterface() ? "interface" : "superclass",
-                           PrettyDescriptor(super_klass.Get()).c_str(),
-                           return_type.c_str(), class_loader.c_str());
-}
-static void ThrowSignatureCheckResolveArgException(Handle<mirror::Class> klass,
-                                                   Handle<mirror::Class> super_klass,
-                                                   Handle<mirror::ArtMethod> method,
-                                                   mirror::ArtMethod* m,
-                                                   uint32_t index, uint32_t arg_type_idx)
-    SHARED_LOCKS_REQUIRED(Locks::mutator_lock_) {
-  DCHECK(Thread::Current()->IsExceptionPending());
-  DCHECK(!m->IsProxyMethod());
-  const DexFile* dex_file = m->GetDexFile();
-  std::string arg_type = PrettyType(arg_type_idx, *dex_file);
-  std::string class_loader = PrettyTypeOf(m->GetDeclaringClass()->GetClassLoader());
-  ThrowWrappedLinkageError(klass.Get(),
-                           "While checking class %s method %s signature against %s %s: "
-                           "Failed to resolve arg %u type %s with %s",
-                           PrettyDescriptor(klass.Get()).c_str(),
-                           PrettyMethod(method.Get()).c_str(),
-                           super_klass->IsInterface() ? "interface" : "superclass",
-                           PrettyDescriptor(super_klass.Get()).c_str(),
-                           index, arg_type.c_str(), class_loader.c_str());
-}
-static void ThrowSignatureMismatch(Handle<mirror::Class> klass,
-                                   Handle<mirror::Class> super_klass,
-                                   Handle<mirror::ArtMethod> method,
-                                   const std::string& error_msg)
-    SHARED_LOCKS_REQUIRED(Locks::mutator_lock_) {
-  ThrowLinkageError(klass.Get(),
-                    "Class %s method %s resolves differently in %s %s: %s",
-                    PrettyDescriptor(klass.Get()).c_str(),
-                    PrettyMethod(method.Get()).c_str(),
-                    super_klass->IsInterface() ? "interface" : "superclass",
-                    PrettyDescriptor(super_klass.Get()).c_str(),
-                    error_msg.c_str());
-}
->>>>>>> a2ea7405
@@ -3026 +2966,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3031,10 +2970,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-                                                      Handle<mirror::ArtMethod> method1,
-                                                      Handle<mirror::ArtMethod> method2,
-                                                      std::string* error_msg)
-=======
-                                                      Handle<mirror::Class> klass,
-                                                      Handle<mirror::Class> super_klass,
-                                                      Handle<mirror::ArtMethod> method1,
-                                                      Handle<mirror::ArtMethod> method2)
->>>>>>> a2ea7405
@@ -3045 +2974,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3050,7 +2978,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-=======
-    if (UNLIKELY(return_type.Get() == nullptr)) {
-      ThrowSignatureCheckResolveReturnTypeException(klass, super_klass, method1, method1.Get());
-      return false;
-    }
->>>>>>> a2ea7405
@@ -3058 +2979,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3063,7 +2983,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-=======
-    if (UNLIKELY(other_return_type == nullptr)) {
-      ThrowSignatureCheckResolveReturnTypeException(klass, super_klass, method1, method2.Get());
-      return false;
-    }
->>>>>>> a2ea7405
@@ -3084 +2997,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3088,8 +3000,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-      *error_msg = StringPrintf("Type list mismatch with %s",
-                                PrettyMethod(method2.Get(), true).c_str());
-=======
-      ThrowSignatureMismatch(klass, super_klass, method1,
-                             StringPrintf("Type list mismatch with %s",
-                                          PrettyMethod(method2.Get(), true).c_str()));
->>>>>>> a2ea7405
@@ -3101 +3005,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3105,8 +3008,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-      *error_msg = StringPrintf("Type list mismatch with %s",
-                                PrettyMethod(method2.Get(), true).c_str());
-=======
-      ThrowSignatureMismatch(klass, super_klass, method1,
-                             StringPrintf("Type list mismatch with %s",
-                                          PrettyMethod(method2.Get(), true).c_str()));
->>>>>>> a2ea7405
@@ -3119 +3014,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3123,8 +3017,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-    *error_msg = StringPrintf("Type list mismatch with %s",
-                              PrettyMethod(method2.Get(), true).c_str());
-=======
-    ThrowSignatureMismatch(klass, super_klass, method1,
-                           StringPrintf("Type list mismatch with %s",
-                                        PrettyMethod(method2.Get(), true).c_str()));
->>>>>>> a2ea7405
@@ -3137 +3023,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3145,11 +3030,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-        method1->GetClassFromTypeIndex(types1->GetTypeItem(i).type_idx_, true)));
-=======
-        method1->GetClassFromTypeIndex(param_type_idx, true)));
-    if (UNLIKELY(param_type.Get() == nullptr)) {
-      ThrowSignatureCheckResolveArgException(klass, super_klass, method1,
-                                             method1.Get(), i, param_type_idx);
-      return false;
-    }
-    uint32_t other_param_type_idx = types2->GetTypeItem(i).type_idx_;
->>>>>>> a2ea7405
@@ -3157 +3031,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-<<<<<<< HEAD
@@ -3164,10 +3037,0 @@ static bool HasSameSignatureWithDifferentClassLoaders(Thread* self,
-||||||| c9d450554e
-        method2->GetClassFromTypeIndex(types2->GetTypeItem(i).type_idx_, true);
-=======
-        method2->GetClassFromTypeIndex(other_param_type_idx, true);
-    if (UNLIKELY(other_param_type == nullptr)) {
-      ThrowSignatureCheckResolveArgException(klass, super_klass, method1,
-                                             method2.Get(), i, other_param_type_idx);
-      return false;
-    }
->>>>>>> a2ea7405
@@ -3192 +3055,0 @@ bool ClassLinker::ValidateSuperClassDescriptors(Handle<mirror::Class> klass) {
-<<<<<<< HEAD
@@ -3195,10 +3057,0 @@ bool ClassLinker::ValidateSuperClassDescriptors(Handle<mirror::Class> klass) {
-||||||| c9d450554e
-  StackHandleScope<2> hs(self);
-  MutableHandle<mirror::ArtMethod> h_m(hs.NewHandle<mirror::ArtMethod>(nullptr));
-  MutableHandle<mirror::ArtMethod> super_h_m(hs.NewHandle<mirror::ArtMethod>(nullptr));
-=======
-  StackHandleScope<3> hs(self);
-  MutableHandle<mirror::Class> super_klass(hs.NewHandle<mirror::Class>(nullptr));
-  MutableHandle<mirror::ArtMethod> h_m(hs.NewHandle<mirror::ArtMethod>(nullptr));
-  MutableHandle<mirror::ArtMethod> super_h_m(hs.NewHandle<mirror::ArtMethod>(nullptr));
->>>>>>> a2ea7405
@@ -3209 +3061,0 @@ bool ClassLinker::ValidateSuperClassDescriptors(Handle<mirror::Class> klass) {
-<<<<<<< HEAD
@@ -3216,20 +3067,0 @@ bool ClassLinker::ValidateSuperClassDescriptors(Handle<mirror::Class> klass) {
-||||||| c9d450554e
-      h_m.Assign(klass->GetVTableEntry(i));
-      super_h_m.Assign(klass->GetSuperClass()->GetVTableEntry(i));
-      if (h_m.Get() != super_h_m.Get()) {
-        std::string error_msg;
-        if (!HasSameSignatureWithDifferentClassLoaders(self, h_m, super_h_m, &error_msg)) {
-          ThrowLinkageError(klass.Get(),
-                            "Class %s method %s resolves differently in superclass %s: %s",
-                            PrettyDescriptor(klass.Get()).c_str(),
-                            PrettyMethod(h_m.Get()).c_str(),
-                            PrettyDescriptor(klass->GetSuperClass()).c_str(),
-                            error_msg.c_str());
-=======
-      h_m.Assign(klass->GetVTableEntry(i));
-      super_h_m.Assign(klass->GetSuperClass()->GetVTableEntry(i));
-      if (h_m.Get() != super_h_m.Get()) {
-        if (UNLIKELY(!HasSameSignatureWithDifferentClassLoaders(self, klass, super_klass,
-                                                                h_m, super_h_m))) {
-          self->AssertPendingException();
->>>>>>> a2ea7405
@@ -3246 +3077,0 @@ bool ClassLinker::ValidateSuperClassDescriptors(Handle<mirror::Class> klass) {
-<<<<<<< HEAD
@@ -3254,20 +3084,0 @@ bool ClassLinker::ValidateSuperClassDescriptors(Handle<mirror::Class> klass) {
-||||||| c9d450554e
-        h_m.Assign(klass->GetIfTable()->GetMethodArray(i)->GetWithoutChecks(j));
-        super_h_m.Assign(klass->GetIfTable()->GetInterface(i)->GetVirtualMethod(j));
-        if (h_m.Get() != super_h_m.Get()) {
-          std::string error_msg;
-          if (!HasSameSignatureWithDifferentClassLoaders(self, h_m, super_h_m, &error_msg)) {
-            ThrowLinkageError(klass.Get(),
-                              "Class %s method %s resolves differently in interface %s: %s",
-                              PrettyDescriptor(klass.Get()).c_str(),
-                              PrettyMethod(h_m.Get()).c_str(),
-                              PrettyDescriptor(klass->GetIfTable()->GetInterface(i)).c_str(),
-                              error_msg.c_str());
-=======
-        h_m.Assign(klass->GetIfTable()->GetMethodArray(i)->GetWithoutChecks(j));
-        super_h_m.Assign(super_klass->GetVirtualMethod(j));
-        if (h_m.Get() != super_h_m.Get()) {
-          if (UNLIKELY(!HasSameSignatureWithDifferentClassLoaders(self, klass, super_klass,
-                                                                  h_m, super_h_m))) {
-            self->AssertPendingException();
->>>>>>> a2ea7405
