--- a/output/duckdb/01e0b481-39bc18a2-c1fbd173/src@include@parser@sql_node_visitor.no_comments_mergebot.hpp
+++ b/output/duckdb/01e0b481-39bc18a2-c1fbd173/src@include@parser@sql_node_visitor.no_comments_truth.hpp
@@ -41 +41,2 @@ public:
-virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyStatement &) {
+ virtual ~SQLNodeVisitor(){};
+ virtual std::unique_ptr<SQLStatement> Visit(CopyStatement &) {
@@ -43 +44,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(AlterTableStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(AlterTableStatement &) {
@@ -45 +47,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(CreateSchemaStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(CreateSchemaStatement &) {
@@ -47 +50,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(CreateTableStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(CreateTableStatement &) {
@@ -49 +53,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(DeleteStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(DeleteStatement &) {
@@ -51 +56,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(DropSchemaStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(DropSchemaStatement &) {
@@ -53 +59,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(DropTableStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(DropTableStatement &) {
@@ -55 +62,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(InsertStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(InsertStatement &) {
@@ -57 +65,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(SelectStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(SelectStatement &) {
@@ -59 +68,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(TransactionStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(TransactionStatement &) {
@@ -61 +71,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- }virtual std::unique_ptr<SQLStatement> Visit(UpdateStatement &) {
+ };
+ virtual std::unique_ptr<SQLStatement> Visit(UpdateStatement &) {
@@ -63 +74,2 @@ virtual ~SQLNodeVisitor(){}virtual std::unique_ptr<SQLStatement> Visit(CopyState
- } virtual std::unique_ptr<Expression> Visit(AggregateExpression &expr);
+ };
+ virtual std::unique_ptr<Expression> Visit(AggregateExpression &expr);
@@ -78 +90,2 @@ virtual std::unique_ptr<Constraint> Visit(NotNullConstraint &expr) {
- } virtual std::unique_ptr<Constraint> Visit(CheckConstraint &expr);
+ };
+ virtual std::unique_ptr<Constraint> Visit(CheckConstraint &expr);
@@ -81 +94,2 @@ virtual std::unique_ptr<Constraint> Visit(ParsedConstraint &expr) {
- }virtual std::unique_ptr<TableRef> Visit(BaseTableRef &expr) {
+ };
+ virtual std::unique_ptr<TableRef> Visit(BaseTableRef &expr) {
@@ -83 +97,2 @@ virtual std::unique_ptr<Constraint> Visit(ParsedConstraint &expr) {
- } virtual std::unique_ptr<TableRef> Visit(CrossProductRef &expr);
+ };
+ virtual std::unique_ptr<TableRef> Visit(CrossProductRef &expr);
@@ -87 +102,2 @@ virtual std::unique_ptr<TableRef> Visit(SubqueryRef &expr) {
- }virtual std::unique_ptr<TableRef> Visit(TableFunction &expr) {
+ };
+ virtual std::unique_ptr<TableRef> Visit(TableFunction &expr) {
@@ -89,2 +105,2 @@ virtual std::unique_ptr<TableRef> Visit(SubqueryRef &expr) {
- } template <class T>
- void AcceptChild(std::unique_ptr<T> *accept) {
+ };
+ template <class T> void AcceptChild(std::unique_ptr<T> *accept) {
