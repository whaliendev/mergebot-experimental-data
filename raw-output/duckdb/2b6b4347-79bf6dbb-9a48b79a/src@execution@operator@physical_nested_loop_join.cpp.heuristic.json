[
  {
    "desc": "Merge conflict caused by formatting issues.",
    "confidence": 0.7,
    "index": 2,
    "label": "",
    "code": [
      "\t\t\t\t// first duplicate the values of the left side using the",
      "\t\t\t\t// selection vector"
    ]
  },
  {
    "code": [
      "\t\tauto &right_chunk = *state->right_chunks.chunks[state->right_chunk];",
      "\t\tassert(right_chunk.count <= STANDARD_VECTOR_SIZE);",
      ""
    ],
    "label": "",
    "index": 0,
    "confidence": 0.7,
    "desc": "De facto one-sided modification, accept their side."
  },
  {
    "desc": "De facto one-sided modification, accept their side.",
    "confidence": 0.7,
    "index": 1,
    "label": "",
    "code": [
      "\t\tchunk.SetSelectionVector(final_result);",
      "\t\tif (chunk.count > 0) {"
    ]
  },
  {
    "desc": "De facto one-sided modification, accept their side.",
    "confidence": 0.7,
    "index": 3,
    "label": "",
    "code": [
      "\t\tif (state->right_chunk >= state->right_chunks.chunks.size()) {",
      "\t\t\t// if we have exhausted all the chunks, move to the next tuple in",
      "\t\t\t// the left set"
    ]
  },
  {
    "code": [
      "\t} while (chunk.count == 0);",
      "",
      "\tchunk.Verify();"
    ],
    "label": "",
    "index": 4,
    "confidence": 0.7,
    "desc": "De facto one-sided modification, accept their side."
  }
]