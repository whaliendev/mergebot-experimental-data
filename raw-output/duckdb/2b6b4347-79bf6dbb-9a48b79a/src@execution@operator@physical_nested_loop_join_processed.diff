--- a/output/duckdb/2b6b4347-79bf6dbb-9a48b79a/src@execution@operator@physical_nested_loop_join.no_comments_mergebot.cpp
+++ b/output/duckdb/2b6b4347-79bf6dbb-9a48b79a/src@execution@operator@physical_nested_loop_join.no_comments_truth.cpp
@@ -63 +67,0 @@ void PhysicalNestedLoopJoin::GetChunk(DataChunk &chunk,
-  assert(right_chunk.count <= STANDARD_VECTOR_SIZE);
@@ -109 +112,0 @@ void PhysicalNestedLoopJoin::GetChunk(DataChunk &chunk,
-<<<<<<< HEAD
@@ -112,26 +114,0 @@ void PhysicalNestedLoopJoin::GetChunk(DataChunk &chunk,
-||||||| 9a48b79af8
-  auto sel_vector = std::unique_ptr<sel_t[]>(new sel_t[final_result.count]);
-  size_t current_index = 0;
-  bool *join_condition = (bool *)final_result.data;
-  for(size_t i = 0; i < final_result.count; i++) {
-   if (join_condition[i]) {
-    sel_vector[current_index++] = i;
-   }
-  }
-  chunk.count = current_index;
-  if (current_index > 0) {
-   chunk.sel_vector = move(sel_vector);
-=======
-  auto sel_vector =
-      std::unique_ptr<sel_t[]>(new sel_t[final_result.count]);
-  size_t current_index = 0;
-  bool *join_condition = (bool *)final_result.data;
-  for (size_t i = 0; i < final_result.count; i++) {
-   if (join_condition[i]) {
-    sel_vector[current_index++] = i;
-   }
-  }
-  chunk.count = current_index;
-  if (current_index > 0) {
-   chunk.sel_vector = move(sel_vector);
->>>>>>> 79bf6dbb
@@ -139,4 +115,0 @@ void PhysicalNestedLoopJoin::GetChunk(DataChunk &chunk,
-<<<<<<< HEAD
-||||||| 9a48b79af8
-=======
->>>>>>> 79bf6dbb
@@ -156 +128,0 @@ void PhysicalNestedLoopJoin::GetChunk(DataChunk &chunk,
-<<<<<<< HEAD
@@ -158,5 +129,0 @@ void PhysicalNestedLoopJoin::GetChunk(DataChunk &chunk,
-||||||| 9a48b79af8
-  if (state->right_chunk >= state->right_chunks.size()) {
-=======
-  if (state->right_chunk >= state->right_chunks.size()) {
->>>>>>> 79bf6dbb
