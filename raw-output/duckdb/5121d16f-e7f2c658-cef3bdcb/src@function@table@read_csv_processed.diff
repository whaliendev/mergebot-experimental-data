--- a/output/duckdb/5121d16f-e7f2c658-cef3bdcb/src@function@table@read_csv.no_comments_mergebot.cpp
+++ b/output/duckdb/5121d16f-e7f2c658-cef3bdcb/src@function@table@read_csv.no_comments_truth.cpp
@@ -243,3 +243 @@ public:
- () = delete;{
- }
- () = delete;{
+ ~ParallelCSVGlobalState() override {
@@ -248,0 +247 @@ public:
+public:
@@ -250 +249 @@ public:
- bool Next(ClientContext &context, ReadCSVData &bind_data, unique_ptr<ParallelCSVReader> &reader);
+ bool Next(ClientContext &context, const ReadCSVData &bind_data, unique_ptr<ParallelCSVReader> &reader);
@@ -338 +337,2 @@ void ParallelCSVGlobalState::Verify() {
-bool ParallelCSVGlobalState::Next(ClientContext &context, ReadCSVData &bind_data, unique_ptr<ParallelCSVReader> &reader) {
+bool ParallelCSVGlobalState::Next(ClientContext &context, const ReadCSVData &bind_data,
+                                  unique_ptr<ParallelCSVReader> &reader) {
@@ -418,2 +418 @@ unique_ptr<LocalTableFunctionState> ParallelReadCSVInitLocal(ExecutionContext &c
- auto &csv_data = (ReadCSVData &)*input.bind_data;
-<<<<<<< HEAD
+ auto &csv_data = input.bind_data->Cast<ReadCSVData>();
@@ -421,7 +419,0 @@ unique_ptr<LocalTableFunctionState> ParallelReadCSVInitLocal(ExecutionContext &c
- auto next_local_buffer = global_state.Next(context.client, csv_data);
-||||||| cef3bdcb8c
- auto &global_state = (ParallelCSVGlobalState &)*global_state_p;
- auto next_local_buffer = global_state.Next(context.client, csv_data);
-=======
- auto &global_state = (ParallelCSVGlobalState &)*global_state_p;
->>>>>>> e7f2c658
@@ -437 +429 @@ static void ParallelReadCSVFunction(ClientContext &context, TableFunctionInput &
- auto &bind_data = (ReadCSVData &)*data_p.bind_data;
+ auto &bind_data = data_p.bind_data->Cast<ReadCSVData>();
