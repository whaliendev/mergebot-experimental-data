--- a/./output/duckdb/602d6cd6-a0f3c940-524e8754/src@common@types@column_data_allocator.no_comments_merged.cpp
+++ b/./output/duckdb/602d6cd6-a0f3c940-524e8754/src@common@types@column_data_allocator.no_comments_truth.cpp
@@ -36,13 +36 @@ BufferHandle ColumnDataAllocator::Pin(uint32_t block_id) {
-<<<<<<< HEAD
-void ColumnDataAllocator::AllocateBlock(idx_t size) {
-||||||| 524e8754d6
-BufferHandle ColumnDataAllocator::PinInternal(uint32_t block_id) {
- return alloc.buffer_manager->Pin(blocks[block_id].handle);
-}
-void ColumnDataAllocator::AllocateBlock() {
-=======
-BufferHandle ColumnDataAllocator::PinInternal(uint32_t block_id) {
- return alloc.buffer_manager->Pin(blocks[block_id].handle);
-}
-BufferHandle ColumnDataAllocator::AllocateBlock() {
->>>>>>> a0f3c940
+BufferHandle ColumnDataAllocator::AllocateBlock(idx_t size) {
@@ -53 +40,0 @@ BufferHandle ColumnDataAllocator::AllocateBlock() {
-<<<<<<< HEAD
@@ -55,8 +42 @@ BufferHandle ColumnDataAllocator::AllocateBlock() {
- data.handle = alloc.buffer_manager->RegisterMemory(block_size, false);
-||||||| 524e8754d6
- data.capacity = Storage::BLOCK_SIZE;
- data.handle = alloc.buffer_manager->RegisterMemory(Storage::BLOCK_SIZE, false);
-=======
- data.capacity = Storage::BLOCK_SIZE;
- auto pin = alloc.buffer_manager->Allocate(Storage::BLOCK_SIZE, false, &data.handle);
->>>>>>> a0f3c940
+ auto pin = alloc.buffer_manager->Allocate(block_size, false, &data.handle);
@@ -95,10 +75 @@ void ColumnDataAllocator::AllocateBuffer(idx_t size, uint32_t &block_id, uint32_
-<<<<<<< HEAD
-  AllocateBlock(size);
-  if (chunk_state && !blocks.empty()) {
-   auto &last_block = blocks.back();
-||||||| 524e8754d6
-  AllocateBlock();
-  if (chunk_state && !blocks.empty()) {
-   auto &last_block = blocks.back();
-=======
-  auto pinned_block = AllocateBlock();
+  auto pinned_block = AllocateBlock(size);
@@ -107 +77,0 @@ void ColumnDataAllocator::AllocateBuffer(idx_t size, uint32_t &block_id, uint32_
->>>>>>> a0f3c940
