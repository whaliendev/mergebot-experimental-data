diff --git a/output/duckdb/a9e4df83-154c70e4-9a649cfa/src@execution@operator@persistent@buffered_csv_reader.no_comments_mergebot.cpp b/output/duckdb/a9e4df83-154c70e4-9a649cfa/src@execution@operator@persistent@buffered_csv_reader.no_comments_truth.cpp
index b35b702..13503b5 100644
--- a/output/duckdb/a9e4df83-154c70e4-9a649cfa/src@execution@operator@persistent@buffered_csv_reader.no_comments_mergebot.cpp
+++ b/output/duckdb/a9e4df83-154c70e4-9a649cfa/src@execution@operator@persistent@buffered_csv_reader.no_comments_truth.cpp
@@ -8 +7,0 @@
-#include "duckdb/execution/operator/persistent/physical_copy_from_file.hpp"
@@ -136,7 +134,0 @@ void BufferedCSVReader::ConfigureSampling() {
-<<<<<<< HEAD
-  throw InvalidInputException("Sample size (%d) cannot be bigger than STANDARD_VECTOR_SIZE (%d)",
-                       options.sample_size, STANDARD_VECTOR_SIZE);
-||||||| 9a649cfaeb
-  throw ParserException("Chunk size (%d) cannot be bigger than STANDARD_VECTOR_SIZE (%d)",
-                       options.sample_size, STANDARD_VECTOR_SIZE);
-=======
@@ -145 +136,0 @@ void BufferedCSVReader::ConfigureSampling() {
->>>>>>> 154c70e4
@@ -147 +138 @@ void BufferedCSVReader::ConfigureSampling() {
-  throw InvalidInputException("Sample size cannot be smaller than 1.");
+  throw ParserException("Chunk size cannot be smaller than 1.");
@@ -347 +338 @@ vector<LogicalType> BufferedCSVReader::SniffCSV(vector<LogicalType> requested_ty
-     } catch (const InvalidInputException &e) {
+     } catch (const ParserException &e) {
@@ -523 +514 @@ vector<LogicalType> BufferedCSVReader::SniffCSV(vector<LogicalType> requested_ty
-   throw InvalidInputException("Error while determining column types: found %lld columns but expected %d",
+   throw ParserException("Error while determining column types: found %lld columns but expected %d",
@@ -532 +523 @@ vector<LogicalType> BufferedCSVReader::SniffCSV(vector<LogicalType> requested_ty
-   } catch (const InvalidInputException &e) {
+   } catch (const ParserException &e) {
@@ -717,5 +707,0 @@ in_quotes:
-<<<<<<< HEAD
- throw InvalidInputException("Error on line %s: unterminated quotes", GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
- throw ParserException("Error on line %s: unterminated quotes", GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -724 +709,0 @@ in_quotes:
->>>>>>> 154c70e4
@@ -744,9 +728,0 @@ unquote:
-<<<<<<< HEAD
-    throw InvalidInputException(
-        "Error on line %s: quote should be followed by end of value, end of row or another quote",
-        GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
-    throw ParserException(
-        "Error on line %s: quote should be followed by end of value, end of row or another quote",
-        GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -756 +731,0 @@ unquote:
->>>>>>> 154c70e4
@@ -768,7 +742,0 @@ unquote:
-<<<<<<< HEAD
- throw InvalidInputException("Error on line %s: quote should be followed by end of value, end of row or another quote",
-                       GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
- throw ParserException("Error on line %s: quote should be followed by end of value, end of row or another quote",
-                       GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -778 +745,0 @@ unquote:
->>>>>>> 154c70e4
@@ -790,7 +756,0 @@ handle_escape:
-<<<<<<< HEAD
-    throw InvalidInputException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                          GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
-    throw ParserException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                          GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -800 +759,0 @@ handle_escape:
->>>>>>> 154c70e4
@@ -807,7 +765,0 @@ handle_escape:
-<<<<<<< HEAD
- throw InvalidInputException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                       GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
- throw ParserException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                       GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -816 +767,0 @@ handle_escape:
->>>>>>> 154c70e4
@@ -910,5 +860,0 @@ in_quotes:
-<<<<<<< HEAD
- throw InvalidInputException("Error on line %s: unterminated quotes", GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
- throw ParserException("Error on line %s: unterminated quotes", GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -917 +862,0 @@ in_quotes:
->>>>>>> 154c70e4
@@ -934,7 +878,0 @@ unquote:
-<<<<<<< HEAD
-  throw InvalidInputException("Error on line %s: quote should be followed by end of value, end of row or another quote",
-                        GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
-  throw ParserException("Error on line %s: quote should be followed by end of value, end of row or another quote",
-                        GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -944 +881,0 @@ unquote:
->>>>>>> 154c70e4
@@ -949,7 +885,0 @@ handle_escape:
-<<<<<<< HEAD
-  throw InvalidInputException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                        GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
-  throw ParserException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                        GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -958 +887,0 @@ handle_escape:
->>>>>>> 154c70e4
@@ -961,7 +889,0 @@ handle_escape:
-<<<<<<< HEAD
-  throw InvalidInputException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                        GetLineNumberStr(linenr, linenr_estimated).c_str());
-||||||| 9a649cfaeb
-  throw ParserException("Error on line %s: neither QUOTE nor ESCAPE is proceeded by ESCAPE",
-                        GetLineNumberStr(linenr, linenr_estimated).c_str());
-=======
@@ -970 +891,0 @@ handle_escape:
->>>>>>> 154c70e4
@@ -1005 +926 @@ bool BufferedCSVReader::ReadBuffer(idx_t &start) {
-  throw InvalidInputException("Maximum line size of %llu bytes exceeded!", MAXIMUM_CSV_LINE_SIZE);
+  throw ParserException("Maximum line size of %llu bytes exceeded!", MAXIMUM_CSV_LINE_SIZE);
@@ -1045 +966 @@ void BufferedCSVReader::AddValue(char *str_val, idx_t length, idx_t &column, vec
-  throw InvalidInputException("Error on line %s: expected %lld values but got %d",
+  throw ParserException("Error on line %s: expected %lld values but got %d",
@@ -1080 +1001 @@ bool BufferedCSVReader::AddRow(DataChunk &insert_chunk, idx_t &column) {
-  throw InvalidInputException("Error on line %s: expected %lld values but got %d",
+  throw ParserException("Error on line %s: expected %lld values but got %d",
@@ -1113,27 +1033,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
-<<<<<<< HEAD
-     switch (utf_type) {
-     case UnicodeType::INVALID:
-      throw InvalidInputException("Error between line %d and %d: file is not valid UTF8",
-                            linenr - parse_chunk.size(), linenr);
-     case UnicodeType::ASCII:
-      break;
-     case UnicodeType::UNICODE: {
-      auto normie = Utf8Proc::Normalize(s.GetData());
-      parse_data[i] = StringVector::AddString(parse_chunk.data[col_idx], normie);
-      free(normie);
-      break;
-     }
-||||||| 9a649cfaeb
-     switch (utf_type) {
-     case UnicodeType::INVALID:
-      throw ParserException("Error between line %d and %d: file is not valid UTF8",
-                            linenr - parse_chunk.size(), linenr);
-     case UnicodeType::ASCII:
-      break;
-     case UnicodeType::UNICODE: {
-      auto normie = Utf8Proc::Normalize(s.GetData());
-      parse_data[i] = StringVector::AddString(parse_chunk.data[col_idx], normie);
-      free(normie);
-      break;
-     }
-=======
@@ -1143 +1036,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
->>>>>>> 154c70e4
@@ -1154,7 +1046,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
-<<<<<<< HEAD
-    throw InvalidInputException("Error between line %llu and %llu: %s", linenr - parse_chunk.size(), linenr,
-                          e.what());
-||||||| 9a649cfaeb
-    throw ParserException("Error between line %llu and %llu: %s", linenr - parse_chunk.size(), linenr,
-                          e.what());
-=======
@@ -1163 +1048,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
->>>>>>> 154c70e4
@@ -1173,7 +1057,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
-<<<<<<< HEAD
-    throw InvalidInputException("Error between line %llu and %llu: %s", linenr - parse_chunk.size(), linenr,
-                          e.what());
-||||||| 9a649cfaeb
-    throw ParserException("Error between line %llu and %llu: %s", linenr - parse_chunk.size(), linenr,
-                          e.what());
-=======
@@ -1182 +1059,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
->>>>>>> 154c70e4
@@ -1188,7 +1064,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
-<<<<<<< HEAD
-    throw InvalidInputException("Error between line %llu and %llu: %s", linenr - parse_chunk.size(), linenr,
-                          e.what());
-||||||| 9a649cfaeb
-    throw ParserException("Error between line %llu and %llu: %s", linenr - parse_chunk.size(), linenr,
-                          e.what());
-=======
@@ -1197 +1066,0 @@ void BufferedCSVReader::Flush(DataChunk &insert_chunk) {
->>>>>>> 154c70e4
