--- a/./output/duckdb/b3579b11-e4dd1e9d-d02b472c/src@include@duckdb@common@case_insensitive_map.no_comments_merged.hpp
+++ b/./output/duckdb/b3579b11-e4dd1e9d-d02b472c/src@include@duckdb@common@case_insensitive_map.no_comments_truth.hpp
@@ -23,10 +22,0 @@ using case_insensitive_set_t = unordered_set<string, CaseInsensitiveStringHashFu
-<<<<<<< HEAD
-struct CaseInsensitiveStringCompare {
- bool operator()(const string &a, const string &b) const {
-  return StringUtil::CILessThan(a, b);
- }
-};
-template <typename T>
-using case_insensitive_ordered_map_t = map<string, T, CaseInsensitiveStringCompare>;
-||||||| d02b472cbf
-=======
@@ -40 +29,0 @@ using case_insensitive_tree_t = map<string, T, CaseInsensitiveStringCompare>;
->>>>>>> e4dd1e9d
