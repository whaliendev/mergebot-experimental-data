--- a/./output/duckdb/b8717a28-d84e329b-4161f39c/src@parser@transform@statement@transform_pivot_stmt.no_comments_merged.cpp
+++ b/./output/duckdb/b8717a28-d84e329b-4161f39c/src@parser@transform@statement@transform_pivot_stmt.no_comments_truth.cpp
@@ -53,7 +53 @@ unique_ptr<SQLStatement> Transformer::GenerateCreateEnumStmt(unique_ptr<CreatePi
-<<<<<<< HEAD
- auto cast = make_unique<CastExpression>(LogicalType::VARCHAR, std::move(columnref));
-||||||| 4161f39ca1
- auto cast = make_unique<CastExpression>(LogicalType::VARCHAR, columnref->Copy());
-=======
- auto cast = make_uniq<CastExpression>(LogicalType::VARCHAR, columnref->Copy());
->>>>>>> d84e329b
+ auto cast = make_uniq<CastExpression>(LogicalType::VARCHAR, std::move(columnref));
@@ -63,9 +57 @@ unique_ptr<SQLStatement> Transformer::GenerateCreateEnumStmt(unique_ptr<CreatePi
-<<<<<<< HEAD
- select_node->modifiers.push_back(make_unique<DistinctModifier>());
- auto modifier = make_unique<OrderModifier>();
- modifier->orders.emplace_back(OrderType::ASCENDING, OrderByNullType::ORDER_DEFAULT,
-                               make_unique<ConstantExpression>(Value::INTEGER(1)));
-||||||| 4161f39ca1
- auto modifier = make_unique<OrderModifier>();
- modifier->orders.emplace_back(OrderType::ASCENDING, OrderByNullType::ORDER_DEFAULT, std::move(columnref));
-=======
+ select_node->modifiers.push_back(make_uniq<DistinctModifier>());
@@ -73,2 +59,2 @@ unique_ptr<SQLStatement> Transformer::GenerateCreateEnumStmt(unique_ptr<CreatePi
- modifier->orders.emplace_back(OrderType::ASCENDING, OrderByNullType::ORDER_DEFAULT, std::move(columnref));
->>>>>>> d84e329b
+ modifier->orders.emplace_back(OrderType::ASCENDING, OrderByNullType::ORDER_DEFAULT,
+                               make_uniq<ConstantExpression>(Value::INTEGER(1)));
