--- a/./output/duckdb/b8717a28-d84e329b-4161f39c/src@planner@binder@query_node@bind_select_node.no_comments_merged.cpp
+++ b/./output/duckdb/b8717a28-d84e329b-4161f39c/src@planner@binder@query_node@bind_select_node.no_comments_truth.cpp
@@ -106,2 +106 @@ void Binder::BindModifiers(OrderBinder &order_binder, QueryNode &statement, Boun
-<<<<<<< HEAD
-   auto bound_distinct = make_unique<BoundDistinctModifier>();
+   auto bound_distinct = make_uniq<BoundDistinctModifier>();
@@ -110,5 +108,0 @@ void Binder::BindModifiers(OrderBinder &order_binder, QueryNode &statement, Boun
-||||||| 4161f39ca1
-   auto bound_distinct = make_unique<BoundDistinctModifier>();
-=======
-   auto bound_distinct = make_uniq<BoundDistinctModifier>();
->>>>>>> d84e329b
@@ -200 +193,0 @@ void Binder::BindModifierTypes(BoundQueryNode &result, const vector<LogicalType>
-<<<<<<< HEAD
@@ -207,31 +199,0 @@ void Binder::BindModifierTypes(BoundQueryNode &result, const vector<LogicalType>
-||||||| 4161f39ca1
-   if (distinct.target_distincts.empty()) {
-    for (idx_t i = 0; i < sql_types.size(); i++) {
-     distinct.target_distincts.push_back(
-         make_unique<BoundColumnRefExpression>(sql_types[i], ColumnBinding(projection_index, i)));
-    }
-   } else {
-    for (auto &expr : distinct.target_distincts) {
-     D_ASSERT(expr->type == ExpressionType::BOUND_COLUMN_REF);
-     auto &bound_colref = (BoundColumnRefExpression &)*expr;
-     if (bound_colref.binding.column_index == DConstants::INVALID_INDEX) {
-      throw BinderException("Ambiguous name in DISTINCT ON!");
-     }
-     D_ASSERT(bound_colref.binding.column_index < sql_types.size());
-     bound_colref.return_type = sql_types[bound_colref.binding.column_index];
-=======
-   if (distinct.target_distincts.empty()) {
-    for (idx_t i = 0; i < sql_types.size(); i++) {
-     distinct.target_distincts.push_back(
-         make_uniq<BoundColumnRefExpression>(sql_types[i], ColumnBinding(projection_index, i)));
-    }
-   } else {
-    for (auto &expr : distinct.target_distincts) {
-     D_ASSERT(expr->type == ExpressionType::BOUND_COLUMN_REF);
-     auto &bound_colref = (BoundColumnRefExpression &)*expr;
-     if (bound_colref.binding.column_index == DConstants::INVALID_INDEX) {
-      throw BinderException("Ambiguous name in DISTINCT ON!");
-     }
-     D_ASSERT(bound_colref.binding.column_index < sql_types.size());
-     bound_colref.return_type = sql_types[bound_colref.binding.column_index];
->>>>>>> d84e329b
