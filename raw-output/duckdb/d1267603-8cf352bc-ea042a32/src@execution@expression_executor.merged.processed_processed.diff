--- a/./output/duckdb/d1267603-8cf352bc-ea042a32/src@execution@expression_executor.no_comments_merged.cpp
+++ b/./output/duckdb/d1267603-8cf352bc-ea042a32/src@execution@expression_executor.no_comments_truth.cpp
@@ -47 +46,0 @@ void ExpressionExecutor::ExecuteExpression(DataChunk &input, Vector &result) {
-<<<<<<< HEAD
@@ -51,28 +49,0 @@ void ExpressionExecutor::ExecuteExpression(Vector &result) {
-||||||| ea042a3262
-void ExpressionExecutor::Merge(std::vector<std::unique_ptr<Expression>> &expressions, Vector &result) {
- assert(expressions.size() > 0);
- ExecuteExpression(*expressions[0], result);
- for (index_t i = 1; i < expressions.size(); i++) {
-  MergeExpression(*expressions[i], result);
- }
-=======
-void ExpressionExecutor::Merge(std::vector<std::unique_ptr<Expression>> &expressions) {
- assert(expressions.size() > 0);
- for (index_t i = 0; i < expressions.size(); i++) {
-  if (chunk->size() != 0) {
-   Vector intermediate;
-   Execute(*expressions[i], intermediate);
-   assert(intermediate.type == TypeId::BOOLEAN);
-   if (intermediate.IsConstant()) {
-    if (!intermediate.data[0] || intermediate.nullmask[0]) {
-     chunk->data[0].count = 0;
-     break;
-    }
-   } else {
-    chunk->SetSelectionVector(intermediate);
-   }
-  } else {
-   break;
-  }
- }
->>>>>>> 8cf352bc
@@ -101,18 +71,0 @@ void ExpressionExecutor::ExecuteExpression(index_t expr_idx, Vector &result) {
-<<<<<<< HEAD
-}
-||||||| ea042a3262
- assert(result.type == vector.type);
- vector.Move(result);
-}
-void ExpressionExecutor::MergeExpression(Expression &expr, Vector &result) {
- Vector intermediate;
- Execute(expr, intermediate);
- assert(result.type == TypeId::BOOLEAN);
- assert(intermediate.type == TypeId::BOOLEAN);
- StaticVector<bool> and_result;
- VectorOperations::And(result, intermediate, and_result);
- and_result.Move(result);
-}
-=======
- assert(result.type == vector.type);
- vector.Move(result);
@@ -120 +72,0 @@ void ExpressionExecutor::MergeExpression(Expression &expr, Vector &result) {
->>>>>>> 8cf352bc
