[
  {
    "code": [
      "void GeneneralConf::initSaveAfterCopy() {",
      "    m_saveAfterCopy = new QCheckBox(tr(\"Save image after copy\"), this);",
      "    m_saveAfterCopy->setToolTip(tr(\"Save image file after copying it\"));",
      "    m_layout->addWidget(m_saveAfterCopy);",
      "    connect(m_saveAfterCopy, &QCheckBox::clicked, this, ",
      "        &GeneneralConf::saveAfterCopyChanged);",
      "",
      "    QHBoxLayout *pathLayout = new QHBoxLayout();",
      "    m_layout->addStretch();",
      "    QGroupBox *box = new QGroupBox(tr(\"Save Path\"));",
      "    box->setFlat(true);",
      "    box->setLayout(pathLayout);",
      "    m_layout->addWidget(box);",
      "",
      "    m_savePath = new QLineEdit(",
      "        QStandardPaths::writableLocation(QStandardPaths::PicturesLocation), ",
      "        this);",
      "    m_savePath->setDisabled(true);",
      "    QString foreground = this->palette().foreground().color().name();",
      "    m_savePath->setStyleSheet(QStringLiteral(\"color: %1\").arg(foreground));",
      "    pathLayout->addWidget(m_savePath);",
      "",
      "    m_changeSaveButton = new QPushButton(tr(\"Change...\"), this);",
      "    pathLayout->addWidget(m_changeSaveButton);",
      "    connect(m_changeSaveButton, &QPushButton::clicked, this, ",
      "        &GeneneralConf::changeSavePath);",
      "}",
      "void GeneneralConf::saveAfterCopyChanged(bool checked) {",
      "    ConfigHandler().setSaveAfterCopy(checked);",
      "}",
      "void GeneneralConf::initCopyAndCloseAfterUpload()",
      "{",
      "    m_copyAndCloseAfterUpload = new QCheckBox(tr(\"Copy URL after upload\"), this);",
      "    ConfigHandler config;",
      "    m_copyAndCloseAfterUpload->setChecked(config.copyAndCloseAfterUploadEnabled());",
      "    m_copyAndCloseAfterUpload->setToolTip(tr(\"Copy URL and close window after upload\"));",
      "    m_layout->addWidget(m_copyAndCloseAfterUpload);",
      "",
      "    connect(m_copyAndCloseAfterUpload, &QCheckBox::clicked, [](bool checked) {",
      "        ConfigHandler().setCopyAndCloseAfterUploadEnabled(checked);",
      "    });",
      "}",
      "void GeneneralConf::changeSavePath() {",
      "    QString path = QFileDialog::getExistingDirectory(",
      "        this,",
      "        tr(\"Choose a Folder\"),",
      "        QStandardPaths::writableLocation(QStandardPaths::PicturesLocation),",
      "        QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks);",
      "    if (path.isEmpty()) {",
      "        return;",
      "    }",
      "    if (!QFileInfo(path).isWritable()) {",
      "        QMessageBox::about(this, tr(\"Error\"), ",
      "            tr(\"Unable to write to directory.\"));",
      "        return;",
      "    }",
      "    m_savePath->setText(path);",
      "    ConfigHandler().setSaveAfterCopyPath(path);",
      "}"
    ],
    "label": "",
    "index": 2,
    "confidence": 0.4,
    "desc": "List merge."
  }
]