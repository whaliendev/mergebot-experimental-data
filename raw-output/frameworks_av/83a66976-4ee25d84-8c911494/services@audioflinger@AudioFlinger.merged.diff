diff --git a/./output/frameworks_av/83a66976-4ee25d84-8c911494/services@audioflinger@AudioFlinger.no_comments_merged.h b/./output/frameworks_av/83a66976-4ee25d84-8c911494/services@audioflinger@AudioFlinger.no_comments_truth.h
index e177d19..746b17f 100644
--- a/./output/frameworks_av/83a66976-4ee25d84-8c911494/services@audioflinger@AudioFlinger.no_comments_merged.h
+++ b/./output/frameworks_av/83a66976-4ee25d84-8c911494/services@audioflinger@AudioFlinger.no_comments_truth.h
@@ -3 +2,0 @@
-<<<<<<< HEAD
@@ -6,8 +4,0 @@
-||||||| 8c9114940a
-#include "ResamplerBufferProvider.h"
-namespace android { class AudioFlinger; }
-#include "IAfPatchPanel.h"
-=======
-#include "ResamplerBufferProvider.h"
-#include "IAfPatchPanel.h"
->>>>>>> 4ee25d84
@@ -47 +37,0 @@ public:
-private:
@@ -148 +137,0 @@ private:
-<<<<<<< HEAD
@@ -151,5 +139,0 @@ private:
-||||||| 8c9114940a
-            std::vector<media::audio::common::AudioMMapPolicyInfo>* policyInfos) override;
-=======
-            std::vector<media::audio::common::AudioMMapPolicyInfo>* policyInfos) final;
->>>>>>> 4ee25d84
@@ -197 +180,0 @@ private:
-<<<<<<< HEAD
@@ -203,7 +185,0 @@ private:
-||||||| 8c9114940a
-    Mutex& mutex() const final { return mLock; }
-    sp<IAfThreadBase> checkOutputThread_l(audio_io_handle_t ioHandle) const final REQUIRES(mLock);
-=======
-    Mutex& mutex() const final { return mLock; }
-    sp<IAfThreadBase> checkOutputThread_l(audio_io_handle_t ioHandle) const final REQUIRES(mLock);
->>>>>>> 4ee25d84
@@ -239 +214,0 @@ private:
-<<<<<<< HEAD
@@ -281,37 +255,0 @@ private:
-||||||| 8c9114940a
-    status_t listAudioPorts(unsigned int* num_ports, struct audio_port* ports) const;
-=======
-    bool isNonOffloadableGlobalEffectEnabled_l() const final;
-    bool btNrecIsOff() const final { return mBtNrecIsOff.load(); }
-    float masterVolume_l() const final;
-    bool masterMute_l() const final;
-    float getMasterBalance_l() const;
-    bool streamMute_l(audio_stream_type_t stream) const final { return mStreamTypes[stream].mute; }
-    audio_mode_t getMode() const final { return mMode; }
-    bool isLowRamDevice() const final { return mIsLowRamDevice; }
-    std::optional<media::AudioVibratorInfo> getDefaultVibratorInfo_l() const final;
-    const sp<IAfPatchPanel>& getPatchPanel() const final { return mPatchPanel; }
-    const sp<MelReporter>& getMelReporter() const final { return mMelReporter; }
-    const sp<EffectsFactoryHalInterface>& getEffectsFactoryHal() const final {
-        return mEffectsFactoryHal;
-    }
-    sp<IAudioManager> getOrCreateAudioManager() final;
-    bool updateOrphanEffectChains(const sp<IAfEffectModule>& effect) final;
-    status_t moveEffectChain_l(audio_session_t sessionId,
-            IAfPlaybackThread* srcThread, IAfPlaybackThread* dstThread) final;
-    void requestLogMerge() final;
-    sp<NBLog::Writer> newWriter_l(size_t size, const char *name) final;
-    void unregisterWriter(const sp<NBLog::Writer>& writer) final;
-    sp<audioflinger::SyncEvent> createSyncEvent(AudioSystem::sync_event_t type,
-            audio_session_t triggerSession,
-            audio_session_t listenerSession,
-            const audioflinger::SyncEventCallback& callBack,
-            const wp<IAfTrackBase>& cookie) final;
-    void ioConfigChanged(audio_io_config_event_t event,
-            const sp<AudioIoDescriptor>& ioDesc,
-            pid_t pid = 0) final;
-    void onNonOffloadableGlobalEffectEnable() final;
-    void onSupportedLatencyModesChanged(
-            audio_io_handle_t output, const std::vector<audio_latency_mode_t>& modes) final;
-    status_t listAudioPorts(unsigned int* num_ports, struct audio_port* ports) const;
->>>>>>> 4ee25d84
@@ -319 +256,0 @@ private:
-<<<<<<< HEAD
@@ -322,4 +258,0 @@ public:
-||||||| 8c9114940a
-=======
-public:
->>>>>>> 4ee25d84
@@ -334 +266,0 @@ public:
-<<<<<<< HEAD
@@ -336,12 +267,0 @@ public:
-||||||| 8c9114940a
-                            audio_port_handle_t *handle);
-    static os::HapticScale onExternalVibrationStart(
-        const sp<os::ExternalVibration>& externalVibration);
-    static void onExternalVibrationStop(const sp<os::ExternalVibration>& externalVibration);
-    std::optional<media::AudioVibratorInfo> getDefaultVibratorInfo_l();
-=======
-                            audio_port_handle_t *handle);
-    static os::HapticScale onExternalVibrationStart(
-        const sp<os::ExternalVibration>& externalVibration);
-    static void onExternalVibrationStop(const sp<os::ExternalVibration>& externalVibration);
->>>>>>> 4ee25d84
@@ -352 +271,0 @@ private:
-<<<<<<< HEAD
@@ -355,15 +273,0 @@ private:
-||||||| 8c9114940a
-    Mutex mUnregisteredWritersLock;
-public:
-    static inline std::atomic<AudioFlinger *> gAudioFlinger = nullptr;
-    sp<audioflinger::SyncEvent> createSyncEvent(AudioSystem::sync_event_t type,
-                                        audio_session_t triggerSession,
-                                        audio_session_t listenerSession,
-                                        const audioflinger::SyncEventCallback& callBack,
-                                        const wp<IAfTrackBase>& cookie);
-    bool btNrecIsOff() const { return mBtNrecIsOff.load(); }
-private:
-               audio_mode_t getMode() const { return mMode; }
-=======
-    Mutex mUnregisteredWritersLock;
->>>>>>> 4ee25d84
@@ -376 +279,0 @@ private:
-<<<<<<< HEAD
@@ -378,91 +280,0 @@ private:
-||||||| 8c9114940a
-                                                audio_devices_t deviceType);
-    static const bool kEnableExtendedChannels = true;
-    static inline bool isValidPcmSinkChannelMask(audio_channel_mask_t channelMask) {
-        switch (audio_channel_mask_get_representation(channelMask)) {
-        case AUDIO_CHANNEL_REPRESENTATION_POSITION: {
-            const uint32_t channelCount = audio_channel_count_from_out_mask(
-                    static_cast<audio_channel_mask_t>(channelMask & ~AUDIO_CHANNEL_HAPTIC_ALL));
-            const uint32_t maxChannelCount = kEnableExtendedChannels
-                    ? AudioMixer::MAX_NUM_CHANNELS : FCC_2;
-            if (channelCount < FCC_2
-                    || channelCount > maxChannelCount) {
-                return false;
-            }
-            return audio_channel_position_mask_is_out_canonical(channelMask);
-            }
-        case AUDIO_CHANNEL_REPRESENTATION_INDEX:
-            if (kEnableExtendedChannels) {
-                const uint32_t channelCount = audio_channel_count_from_out_mask(channelMask);
-                if (channelCount >= FCC_2
-                        && channelCount <= AudioMixer::MAX_NUM_CHANNELS) {
-                    return true;
-                }
-            }
-            return false;
-        default:
-            return false;
-        }
-    }
-    static const bool kEnableExtendedPrecision = true;
-    static inline bool isValidPcmSinkFormat(audio_format_t format) {
-        switch (format) {
-        case AUDIO_FORMAT_PCM_16_BIT:
-            return true;
-        case AUDIO_FORMAT_PCM_FLOAT:
-        case AUDIO_FORMAT_PCM_24_BIT_PACKED:
-        case AUDIO_FORMAT_PCM_32_BIT:
-        case AUDIO_FORMAT_PCM_8_24_BIT:
-            return kEnableExtendedPrecision;
-        default:
-            return false;
-        }
-    }
-    static nsecs_t mStandbyTimeInNsecs;
-=======
-                                                audio_devices_t deviceType);
-    static const bool kEnableExtendedChannels = true;
-public:
-    static inline std::atomic<AudioFlinger*> gAudioFlinger = nullptr;
-    static inline bool isValidPcmSinkChannelMask(audio_channel_mask_t channelMask) {
-        switch (audio_channel_mask_get_representation(channelMask)) {
-        case AUDIO_CHANNEL_REPRESENTATION_POSITION: {
-            const uint32_t channelCount = audio_channel_count_from_out_mask(
-                    static_cast<audio_channel_mask_t>(channelMask & ~AUDIO_CHANNEL_HAPTIC_ALL));
-            const uint32_t maxChannelCount = kEnableExtendedChannels
-                    ? AudioMixer::MAX_NUM_CHANNELS : FCC_2;
-            if (channelCount < FCC_2
-                    || channelCount > maxChannelCount) {
-                return false;
-            }
-            return audio_channel_position_mask_is_out_canonical(channelMask);
-            }
-        case AUDIO_CHANNEL_REPRESENTATION_INDEX:
-            if (kEnableExtendedChannels) {
-                const uint32_t channelCount = audio_channel_count_from_out_mask(channelMask);
-                if (channelCount >= FCC_2
-                        && channelCount <= AudioMixer::MAX_NUM_CHANNELS) {
-                    return true;
-                }
-            }
-            return false;
-        default:
-            return false;
-        }
-    }
-    static const bool kEnableExtendedPrecision = true;
-    static inline bool isValidPcmSinkFormat(audio_format_t format) {
-        switch (format) {
-        case AUDIO_FORMAT_PCM_16_BIT:
-            return true;
-        case AUDIO_FORMAT_PCM_FLOAT:
-        case AUDIO_FORMAT_PCM_24_BIT_PACKED:
-        case AUDIO_FORMAT_PCM_32_BIT:
-        case AUDIO_FORMAT_PCM_8_24_BIT:
-            return kEnableExtendedPrecision;
-        default:
-            return false;
-        }
-    }
-    static nsecs_t mStandbyTimeInNsecs;
->>>>>>> 4ee25d84
@@ -470,11 +281,0 @@ public:
-<<<<<<< HEAD
-||||||| 8c9114940a
-    static const int kDumpLockTimeoutNs = 1 * NANOS_PER_SECOND;
-public:
-    static bool dumpTryLock(Mutex& mutex);
-private:
-=======
-    static const int kDumpLockTimeoutNs = 1 * NANOS_PER_SECOND;
-    static bool dumpTryLock(Mutex& mutex);
-private:
->>>>>>> 4ee25d84
@@ -515 +315,0 @@ private:
-<<<<<<< HEAD
@@ -517,6 +316,0 @@ private:
-||||||| 8c9114940a
-    const sp<MediaLogNotifier> mMediaLogNotifier;
-    void requestLogMerge();
-=======
-    const sp<MediaLogNotifier> mMediaLogNotifier;
->>>>>>> 4ee25d84
@@ -555 +348,0 @@ private:
-<<<<<<< HEAD
@@ -557,9 +349,0 @@ private:
-||||||| 8c9114940a
-public:
-                bool isNonOffloadableGlobalEffectEnabled_l();
-private:
-                void onNonOffloadableGlobalEffectEnable();
-                bool isSessionAcquired_l(audio_session_t audioSession);
-=======
-                bool isSessionAcquired_l(audio_session_t audioSession);
->>>>>>> 4ee25d84
@@ -567 +350,0 @@ private:
-<<<<<<< HEAD
@@ -569,10 +351,0 @@ private:
-||||||| 8c9114940a
-                sp<IAfEffectChain> getOrphanEffectChain_l(audio_session_t session);
-public:
-                bool updateOrphanEffectChains(const sp<IAfEffectModule>& effect);
-private:
-                std::vector< sp<IAfEffectModule> > purgeStaleEffects_l();
-=======
-                sp<IAfEffectChain> getOrphanEffectChain_l(audio_session_t session);
-                std::vector< sp<IAfEffectModule> > purgeStaleEffects_l();
->>>>>>> 4ee25d84
@@ -593 +365,0 @@ private:
-<<<<<<< HEAD
@@ -595,7 +366,0 @@ private:
-||||||| 8c9114940a
-public:
-    mutable Mutex mLock;
-=======
-    mutable Mutex mLock;
->>>>>>> 4ee25d84
-<<<<<<< HEAD
@@ -603,6 +367,0 @@ public:
-||||||| 8c9114940a
-private:
-    mutable Mutex mClientLock;
-=======
-    mutable Mutex mClientLock;
->>>>>>> 4ee25d84
@@ -658 +416,0 @@ private:
-<<<<<<< HEAD
@@ -660,8 +417,0 @@ private:
-||||||| 8c9114940a
-                float masterVolume_l() const;
-                float getMasterBalance_l() const;
-                bool masterMute_l() const;
-                AudioHwDevice* loadHwModule_l(const char *name);
-=======
-                AudioHwDevice* loadHwModule_l(const char *name);
->>>>>>> 4ee25d84
@@ -673 +422,0 @@ private:
-<<<<<<< HEAD
@@ -675,6 +423,0 @@ private:
-||||||| 8c9114940a
-private:
-    sp<Client> registerPid(pid_t pid);
-=======
-    sp<Client> registerPid(pid_t pid);
->>>>>>> 4ee25d84
@@ -691 +433,0 @@ private:
-<<<<<<< HEAD
@@ -696,12 +437,0 @@ private:
-||||||| 8c9114940a
-private:
-    std::atomic<bool> mIsLowRamDevice;
-    bool mIsDeviceTypeKnown;
-    int64_t mTotalMemory;
-    std::atomic<size_t> mClientSharedHeapSize;
-=======
-    std::atomic<bool> mIsLowRamDevice;
-    bool mIsDeviceTypeKnown;
-    int64_t mTotalMemory;
-    std::atomic<size_t> mClientSharedHeapSize;
->>>>>>> 4ee25d84
@@ -711 +440,0 @@ private:
-<<<<<<< HEAD
@@ -714,7 +442,0 @@ private:
-||||||| 8c9114940a
-public:
-    sp<EffectsFactoryHalInterface> mEffectsFactoryHal;
-private:
-=======
-    sp<EffectsFactoryHalInterface> mEffectsFactoryHal;
->>>>>>> 4ee25d84
@@ -732,8 +453,0 @@ private:
-<<<<<<< HEAD
-||||||| 8c9114940a
-    static constexpr int32_t kMaxSharedAudioHistoryMs = 5000;
-=======
-public:
-    static constexpr int32_t kMaxSharedAudioHistoryMs = 5000;
-private:
->>>>>>> 4ee25d84
