diff --git a/output/frameworks_av/b82a9f10-566be7c3-66e05682/services@audioflinger@Threads.no_comments_mergebot.cpp b/output/frameworks_av/b82a9f10-566be7c3-66e05682/services@audioflinger@Threads.no_comments_truth.cpp
index 4e42689..7957b7a 100644
--- a/output/frameworks_av/b82a9f10-566be7c3-66e05682/services@audioflinger@Threads.no_comments_mergebot.cpp
+++ b/output/frameworks_av/b82a9f10-566be7c3-66e05682/services@audioflinger@Threads.no_comments_truth.cpp
@@ -85,0 +86,6 @@ private:
+CpuStats::CpuStats()
+#ifdef DEBUG_CPU_USAGE
+    : mCpuNum(-1), mCpukHz(-1)
+#endif
+{
+}
@@ -148 +154 @@ void CpuStats::sample(const String8 &title
-}
+};
@@ -162 +167,0 @@ AudioFlinger::ThreadBase::~ThreadBase()
-    for (size_t i {
@@ -323 +327,0 @@ void AudioFlinger::ThreadBase::dumpBase(int fd, const Vector<String16>& args __u
-<<<<<<< HEAD
@@ -328 +332 @@ void AudioFlinger::ThreadBase::dumpBase(int fd, const Vector<String16>& args __u
-    fdprintf(fd, "  HAL frame count: %d\n", mFrameCount);
+    fdprintf(fd, "  HAL frame count: %zu\n", mFrameCount);
@@ -334 +338 @@ void AudioFlinger::ThreadBase::dumpBase(int fd, const Vector<String16>& args __u
-    fdprintf(fd, "  Frame size: %u\n", mFrameSize);
+    fdprintf(fd, "  Frame size: %zu\n", mFrameSize);
@@ -340 +344 @@ void AudioFlinger::ThreadBase::dumpBase(int fd, const Vector<String16>& args __u
-            fdprintf(fd, "\n   %02d    ", i);
+            fdprintf(fd, "\n   %02zu    ", i);
@@ -342,53 +345,0 @@ void AudioFlinger::ThreadBase::dumpBase(int fd, const Vector<String16>& args __u
-||||||| 66e05682e4
-    snprintf(buffer, SIZE, "io handle: %d\n", mId);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "TID: %d\n", getTid());
-    result.append(buffer);
-    snprintf(buffer, SIZE, "standby: %d\n", mStandby);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Sample rate: %u\n", mSampleRate);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "HAL frame count: %d\n", mFrameCount);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Channel Count: %u\n", mChannelCount);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Channel Mask: 0x%08x\n", mChannelMask);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Format: %d\n", mFormat);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Frame size: %u\n", mFrameSize);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "\nPending setParameters commands: \n");
-    result.append(buffer);
-    result.append(" Index Command");
-    for (size_t i = 0; i < mNewParameters.size(); ++i) {
-        snprintf(buffer, SIZE, "\n %02d    ", i);
-        result.append(buffer);
-        result.append(mNewParameters[i]);
-=======
-    snprintf(buffer, SIZE, "io handle: %d\n", mId);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "TID: %d\n", getTid());
-    result.append(buffer);
-    snprintf(buffer, SIZE, "standby: %d\n", mStandby);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Sample rate: %u\n", mSampleRate);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "HAL frame count: %zu\n", mFrameCount);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Channel Count: %u\n", mChannelCount);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Channel Mask: 0x%08x\n", mChannelMask);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Format: %d\n", mFormat);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Frame size: %zu\n", mFrameSize);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "\nPending setParameters commands: \n");
-    result.append(buffer);
-    result.append(" Index Command");
-    for (size_t i = 0; i < mNewParameters.size(); ++i) {
-        snprintf(buffer, SIZE, "\n %02zu    ", i);
-        result.append(buffer);
-        result.append(mNewParameters[i]);
->>>>>>> 566be7c3
@@ -420 +370,0 @@ void AudioFlinger::ThreadBase::dumpEffectChains(int fd, const Vector<String16>&
-<<<<<<< HEAD
@@ -422,6 +372 @@ void AudioFlinger::ThreadBase::dumpEffectChains(int fd, const Vector<String16>&
-    snprintf(buffer, SIZE, "  %d Effect Chains\n", numEffectChains);
-||||||| 66e05682e4
-    snprintf(buffer, SIZE, "\n- %d Effect Chains:\n", mEffectChains.size());
-=======
-    snprintf(buffer, SIZE, "\n- %zu Effect Chains:\n", mEffectChains.size());
->>>>>>> 566be7c3
+    snprintf(buffer, SIZE, "  %zu Effect Chains\n", numEffectChains);
@@ -918,3 +862,0 @@ AudioFlinger::PlaybackThread::~PlaybackThread()
-}{
-    mAudioFlinger->unregisterWriter(mNBLogWriter);
-    delete[] mMixBuffer;
@@ -988 +929,0 @@ void AudioFlinger::PlaybackThread::dumpInternals(int fd, const Vector<String16>&
-<<<<<<< HEAD
@@ -990 +931 @@ void AudioFlinger::PlaybackThread::dumpInternals(int fd, const Vector<String16>&
-    fdprintf(fd, "  Normal frame count: %d\n", mNormalFrameCount);
+    fdprintf(fd, "  Normal frame count: %zu\n", mNormalFrameCount);
@@ -997,45 +937,0 @@ void AudioFlinger::PlaybackThread::dumpInternals(int fd, const Vector<String16>&
-||||||| 66e05682e4
-    const size_t SIZE = 256;
-    char buffer[SIZE];
-    String8 result;
-    snprintf(buffer, SIZE, "\nOutput thread %p internals\n", this);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Normal frame count: %d\n", mNormalFrameCount);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "last write occurred (msecs): %llu\n",
-            ns2ms(systemTime() - mLastWriteTime));
-    result.append(buffer);
-    snprintf(buffer, SIZE, "total writes: %d\n", mNumWrites);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "delayed writes: %d\n", mNumDelayedWrites);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "blocked in write: %d\n", mInWrite);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "suspend count: %d\n", mSuspended);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "mix buffer : %p\n", mMixBuffer);
-    result.append(buffer);
-    write(fd, result.string(), result.size());
-=======
-    const size_t SIZE = 256;
-    char buffer[SIZE];
-    String8 result;
-    snprintf(buffer, SIZE, "\nOutput thread %p internals\n", this);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "Normal frame count: %zu\n", mNormalFrameCount);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "last write occurred (msecs): %llu\n",
-            ns2ms(systemTime() - mLastWriteTime));
-    result.append(buffer);
-    snprintf(buffer, SIZE, "total writes: %d\n", mNumWrites);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "delayed writes: %d\n", mNumDelayedWrites);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "blocked in write: %d\n", mInWrite);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "suspend count: %d\n", mSuspended);
-    result.append(buffer);
-    snprintf(buffer, SIZE, "mix buffer : %p\n", mMixBuffer);
-    result.append(buffer);
-    write(fd, result.string(), result.size());
->>>>>>> 566be7c3
@@ -2985 +2881,2 @@ void AudioFlinger::DirectOutputThread::threadLoop_sleepTime()
-int AudioFlinger::DirectOutputThread::getTrackName_l(audio_channel_mask_t channelMask __unused, int sessionId __unused)
+int AudioFlinger::DirectOutputThread::getTrackName_l(audio_channel_mask_t channelMask __unused,
+        int sessionId __unused)
@@ -3528,5 +3424,0 @@ AudioFlinger::RecordThread::~RecordThread()
-}{
-    mAudioFlinger->unregisterWriter(mNBLogWriter);
-    delete[] mRsmpInBuffer;
-    delete mResampler;
-    delete[] mRsmpOutBuffer;
@@ -3810 +3702,11 @@ void AudioFlinger::RecordThread::inputStandBy()
-sp<AudioFlinger::RecordThread::RecordTrack> AudioFlinger::RecordThread::createRecordTrack_l(const sp<AudioFlinger::Client>& client, uint32_t sampleRate, audio_format_t format, audio_channel_mask_t channelMask, size_t *pFrameCount, int sessionId, int uid, IAudioFlinger::track_flags_t *flags, pid_t tid, status_t *status)
+sp<AudioFlinger::RecordThread::RecordTrack> AudioFlinger::RecordThread::createRecordTrack_l(
+        const sp<AudioFlinger::Client>& client,
+        uint32_t sampleRate,
+        audio_format_t format,
+        audio_channel_mask_t channelMask,
+        size_t *pFrameCount,
+        int sessionId,
+        int uid,
+        IAudioFlinger::track_flags_t *flags,
+        pid_t tid,
+        status_t *status)
@@ -4041 +3942,0 @@ void AudioFlinger::RecordThread::dumpInternals(int fd, const Vector<String16>& a
-<<<<<<< HEAD
@@ -4043,2 +3944,2 @@ void AudioFlinger::RecordThread::dumpInternals(int fd, const Vector<String16>& a
-        fdprintf(fd, "  In index: %d\n", mRsmpInIndex);
-        fdprintf(fd, "  Buffer size: %u bytes\n", mBufferSize);
+        fdprintf(fd, "  In index: %zu\n", mRsmpInIndex);
+        fdprintf(fd, "  Buffer size: %zu bytes\n", mBufferSize);
@@ -4048,29 +3948,0 @@ void AudioFlinger::RecordThread::dumpInternals(int fd, const Vector<String16>& a
-||||||| 66e05682e4
-    snprintf(buffer, SIZE, "\nInput thread %p internals\n", this);
-    result.append(buffer);
-    if (mActiveTrack != 0) {
-        snprintf(buffer, SIZE, "In index: %d\n", mRsmpInIndex);
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Buffer size: %u bytes\n", mBufferSize);
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Resampling: %d\n", (mResampler != NULL));
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Out channel count: %u\n", mReqChannelCount);
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Out sample rate: %u\n", mReqSampleRate);
-        result.append(buffer);
-=======
-    snprintf(buffer, SIZE, "\nInput thread %p internals\n", this);
-    result.append(buffer);
-    if (mActiveTrack != 0) {
-        snprintf(buffer, SIZE, "In index: %zu\n", mRsmpInIndex);
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Buffer size: %zu bytes\n", mBufferSize);
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Resampling: %d\n", (mResampler != NULL));
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Out channel count: %u\n", mReqChannelCount);
-        result.append(buffer);
-        snprintf(buffer, SIZE, "Out sample rate: %u\n", mReqSampleRate);
-        result.append(buffer);
->>>>>>> 566be7c3
@@ -4396 +4268 @@ size_t AudioFlinger::RecordThread::removeEffectChain_l(const sp<EffectChain>& ch
-}
+};
