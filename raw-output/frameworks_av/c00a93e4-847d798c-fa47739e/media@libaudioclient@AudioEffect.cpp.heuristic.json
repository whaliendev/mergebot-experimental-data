[
  {
    "code": [
      "status_t AudioEffect::set(const char *typeStr,",
      "                const char *uuidStr,",
      "                int32_t priority,",
      "                effect_callback_t cbf,",
      "                void* user,",
      "                audio_session_t sessionId,",
      "                audio_io_handle_t io,",
      "                const AudioDeviceTypeAddr& device,",
      "                bool probe)",
      "{",
      "    effect_uuid_t type;",
      "    effect_uuid_t *pType = nullptr;",
      "    effect_uuid_t uuid;",
      "    effect_uuid_t *pUuid = nullptr;",
      "",
      "    ALOGV(\"AudioEffect::set string\\n - type: %s\\n - uuid: %s\",",
      "            typeStr ? typeStr : \"nullptr\", uuidStr ? uuidStr : \"nullptr\");",
      "",
      "    if (stringToGuid(typeStr, &type) == NO_ERROR) {",
      "        pType = &type;",
      "    }",
      "    if (stringToGuid(uuidStr, &uuid) == NO_ERROR) {",
      "        pUuid = &uuid;",
      "    }",
      "",
      "    return set(pType, pUuid, priority, cbf, user, sessionId, io, device, probe);",
      "}",
      "status_t AudioEffect::set(const char *typeStr,",
      "                const char *uuidStr,",
      "                int32_t priority,",
      "                effect_callback_t cbf,",
      "                void* user,",
      "                audio_session_t sessionId,",
      "                audio_io_handle_t io,",
      "                const AudioDeviceTypeAddr& device)",
      "{",
      "    effect_uuid_t type;",
      "    effect_uuid_t *pType = nullptr;",
      "    effect_uuid_t uuid;",
      "    effect_uuid_t *pUuid = nullptr;",
      "",
      "    ALOGV(\"AudioEffect::set string\\n - type: %s\\n - uuid: %s\",",
      "            typeStr ? typeStr : \"nullptr\", uuidStr ? uuidStr : \"nullptr\");",
      "",
      "    if (stringToGuid(typeStr, &type) == NO_ERROR) {",
      "        pType = &type;",
      "    }",
      "    if (stringToGuid(uuidStr, &uuid) == NO_ERROR) {",
      "        pUuid = &uuid;",
      "    }",
      "",
      "    return set(pType, pUuid, priority, cbf, user, sessionId, io, device);",
      "}"
    ],
    "label": "",
    "index": 0,
    "confidence": 0.4,
    "desc": "List merge."
  }
]