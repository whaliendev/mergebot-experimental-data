[
  {
    "desc": "Declarations merge.",
    "confidence": 0.5,
    "index": 1,
    "label": "",
    "code": [
      "const AudioDeviceTypeAddr& device = {},",
      "                            bool probe = false);",
      "const AudioDeviceTypeAddr& device = {});",
      "/*",
      "     * Same as above but with type and uuid specified by character strings.",
      "     */",
      "status_t    set(const char *typeStr,",
      "                            const char *uuidStr = NULL,",
      "                            int32_t priority = 0,",
      "                            effect_callback_t cbf = NULL,",
      "                            void* user = NULL,",
      "                            audio_session_t sessionId = AUDIO_SESSION_OUTPUT_MIX,",
      "                            audio_io_handle_t io = AUDIO_IO_HANDLE_NONE,",
      "                            const AudioDeviceTypeAddr& device = {},",
      "                            bool probe = false);",
      "/*",
      "     * Same as above but with type and uuid specified by character strings.",
      "     */",
      "status_t    set(const char *typeStr,",
      "                            const char *uuidStr = NULL,",
      "                            int32_t priority = 0,",
      "                            effect_callback_t cbf = NULL,",
      "                            void* user = NULL,",
      "                            audio_session_t sessionId = AUDIO_SESSION_OUTPUT_MIX,",
      "                            audio_io_handle_t io = AUDIO_IO_HANDLE_NONE,",
      "                            const AudioDeviceTypeAddr& device = {});"
    ]
  },
  {
    "code": [
      "    effect_param_cblk_t*    mCblk = nullptr;    // control block for deferred parameter setting",
      "    pid_t                   mClientPid = (pid_t)-1;",
      "    uid_t                   mClientUid = (uid_t)-1;"
    ],
    "label": "",
    "index": 3,
    "confidence": 0.7,
    "desc": "Our side contains all the modifications, accept our side"
  }
]