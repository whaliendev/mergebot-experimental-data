diff --git a/output/frameworks_native/32dca72b-f76b5eb5-9243c105/libs@binder@LazyServiceRegistrar.no_comments_mergebot.cpp b/output/frameworks_native/32dca72b-f76b5eb5-9243c105/libs@binder@LazyServiceRegistrar.no_comments_truth.cpp
index 8e4345b..2691901 100644
--- a/output/frameworks_native/32dca72b-f76b5eb5-9243c105/libs@binder@LazyServiceRegistrar.no_comments_mergebot.cpp
+++ b/output/frameworks_native/32dca72b-f76b5eb5-9243c105/libs@binder@LazyServiceRegistrar.no_comments_truth.cpp
@@ -39 +38,0 @@ private:
-    std::map<std::string, Service>::iterator assertRegisteredService(const sp<IBinder>& service);
@@ -41 +40,2 @@ private:
-bool ClientCounterCallbackImpl::registerService(const sp<IBinder>& service, const std::string& name, bool allowIsolated, int dumpFlags) {
+bool ClientCounterCallbackImpl::registerService(const sp<IBinder>& service, const std::string& name,
+                                            bool allowIsolated, int dumpFlags) {
@@ -109 +108,0 @@ void ClientCounterCallbackImpl::tryShutdown() {
-public:
@@ -115,39 +113,0 @@ bool ClientCounterCallback::registerService(const sp<IBinder>& service, const st
-<<<<<<< HEAD
-    auto manager = interface_cast<AidlServiceManager>(asBinder(defaultServiceManager()));
-    bool reRegister = mRegisteredServices.count(name) > 0;
-    std::string regStr = (reRegister) ? "Re-registering" : "Registering";
-    ALOGI("%s service %s", regStr.c_str(), name.c_str());
-    if (!manager->addService(name.c_str(), service, allowIsolated, dumpFlags).isOk()) {
-        ALOGE("Failed to register service %s", name.c_str());
-        return false;
-    }
-    if (!reRegister) {
-        if (!manager->registerClientCallback(name, service, this).isOk()) {
-            ALOGE("Failed to add client callback for service %s", name.c_str());
-            return false;
-        }
-        mRegisteredServices[name] = {
-              .service = service,
-              .allowIsolated = allowIsolated,
-              .dumpFlags = dumpFlags
-        };
-    }
-    return true;
-||||||| 9243c1057f
-    auto manager = interface_cast<AidlServiceManager>(asBinder(defaultServiceManager()));
-    bool reRegister = mRegisteredServices.count(name) > 0;
-    std::string regStr = (reRegister) ? "Re-registering" : "Registering";
-    ALOGI("%s service %s", regStr.c_str(), name.c_str());
-    if (!manager->addService(name.c_str(), service, allowIsolated, dumpFlags).isOk()) {
-        ALOGE("Failed to register service %s", name.c_str());
-        return false;
-    }
-    if (!reRegister) {
-        if (!manager->registerClientCallback(name, service, this).isOk()) {
-            ALOGE("Failed to add client callback for service %s", name.c_str());
-            return false;
-        }
-        mRegisteredServices[name] = {service, allowIsolated, dumpFlags};
-    }
-    return true;
-=======
@@ -155 +115,3 @@ bool ClientCounterCallback::registerService(const sp<IBinder>& service, const st
->>>>>>> f76b5eb5
+}
+void ClientCounterCallback::forcePersist(bool persist) {
+    mImpl->forcePersist(persist);
