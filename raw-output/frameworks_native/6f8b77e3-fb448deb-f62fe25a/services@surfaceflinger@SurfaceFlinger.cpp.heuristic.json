[
  {
    "code": [
      "void SurfaceFlinger::dumpHwcLayersMinidumpLocked(std::string& result) const {",
      "    for (const auto& [token, display] : mDisplays) {",
      "        const auto displayId = HalDisplayId::tryCast(display->getId());",
      "        if (!displayId) {",
      "            continue;",
      "        }",
      "",
      "        StringAppendF(&result, \"Display %s (%s) HWC layers:\\n\", to_string(*displayId).c_str(),",
      "                      (isDisplayActiveLocked(display) ? \"active\" : \"inactive\"));",
      "        Layer::miniDumpHeader(result);",
      "",
      "        const DisplayDevice& ref = *display;",
      "        mCurrentState.traverseInZOrder([&](Layer* layer) { layer->miniDump(result, ref); });",
      "        result.append(\"\\n\");",
      "    }",
      "}",
      "",
      "void SurfaceFlinger::dumpAllLocked(const DumpArgs& args, const std::string& compositionLayers,",
      "                                   std::string& result) const {"
    ],
    "label": "",
    "index": 0,
    "confidence": 0.7,
    "desc": "Added code or method extraction, accept our side."
  }
]