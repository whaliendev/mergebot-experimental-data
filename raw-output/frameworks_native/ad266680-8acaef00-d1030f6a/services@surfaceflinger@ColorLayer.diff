diff --git a/output/frameworks_native/ad266680-8acaef00-d1030f6a/services@surfaceflinger@ColorLayer.no_comments_mergebot.cpp b/output/frameworks_native/ad266680-8acaef00-d1030f6a/services@surfaceflinger@ColorLayer.no_comments_truth.cpp
index 5128d08..70f111e 100644
--- a/output/frameworks_native/ad266680-8acaef00-d1030f6a/services@surfaceflinger@ColorLayer.no_comments_mergebot.cpp
+++ b/output/frameworks_native/ad266680-8acaef00-d1030f6a/services@surfaceflinger@ColorLayer.no_comments_truth.cpp
@@ -12 +11,0 @@
-#include "RenderEngine/RenderEngine.h"
@@ -41 +39,0 @@ void ColorLayer::setPerFrameData(const sp<const DisplayDevice>& display) {
-<<<<<<< HEAD
@@ -45,24 +42,0 @@ void ColorLayer::setPerFrameData(const sp<const DisplayDevice>& display) {
-||||||| d1030f6a7d
-    auto hwcId = displayDevice->getHwcDisplayId();
-    auto& hwcInfo = getBE().mHwcLayers[hwcId];
-    auto& hwcLayer = hwcInfo.layer;
-    auto error = hwcLayer->setVisibleRegion(visible);
-    if (error != HWC2::Error::None) {
-        ALOGE("[%s] Failed to set visible region: %s (%d)", mName.string(),
-              to_string(error).c_str(), static_cast<int32_t>(error));
-        visible.dump(LOG_TAG);
-    }
-=======
-    auto hwcId = displayDevice->getHwcDisplayId();
-    if (!hasHwcLayer(hwcId)) {
-        return;
-    }
-    auto& hwcInfo = getBE().mHwcLayers[hwcId];
-    auto& hwcLayer = hwcInfo.layer;
-    auto error = hwcLayer->setVisibleRegion(visible);
-    if (error != HWC2::Error::None) {
-        ALOGE("[%s] Failed to set visible region: %s (%d)", mName.string(),
-              to_string(error).c_str(), static_cast<int32_t>(error));
-        visible.dump(LOG_TAG);
-    }
->>>>>>> 8acaef00
@@ -77 +51 @@ void ColorLayer::setPerFrameData(const sp<const DisplayDevice>& display) {
-}
+};
