--- a/./output/grpc/cf34fa58-3bf7b714-d1fefe89/src@core@lib@iomgr@ev_epoll1_linux.no_comments_merged.c
+++ b/./output/grpc/cf34fa58-3bf7b714-d1fefe89/src@core@lib@iomgr@ev_epoll1_linux.no_comments_truth.c
@@ -555,9 +554,0 @@ static bool begin_worker(grpc_pollset *pollset, grpc_pollset_worker *worker,
-<<<<<<< HEAD
-static bool check_neighbourhood_for_available_poller(
-    grpc_exec_ctx *exec_ctx, pollset_neighbourhood *neighbourhood) {
-  GPR_TIMER_BEGIN("check_neighbourhood_for_available_poller", 0);
-||||||| d1fefe89da
-static bool check_neighbourhood_for_available_poller(
-    pollset_neighbourhood *neighbourhood) {
-  GPR_TIMER_BEGIN("check_neighbourhood_for_available_poller", 0);
-=======
@@ -565 +556 @@ static bool check_neighborhood_for_available_poller(
-    pollset_neighborhood *neighborhood) {
+    grpc_exec_ctx *exec_ctx, pollset_neighborhood *neighborhood) {
@@ -567 +557,0 @@ static bool check_neighborhood_for_available_poller(
->>>>>>> 3bf7b714
@@ -658,21 +647,0 @@ static void end_worker(grpc_exec_ctx *exec_ctx, grpc_pollset *pollset,
-<<<<<<< HEAD
-      bool scan_state[MAX_NEIGHBOURHOODS];
-      for (size_t i = 0; !found_worker && i < g_num_neighbourhoods; i++) {
-        pollset_neighbourhood *neighbourhood =
-            &g_neighbourhoods[(poller_neighbourhood_idx + i) %
-                              g_num_neighbourhoods];
-        if (gpr_mu_trylock(&neighbourhood->mu)) {
-          found_worker =
-              check_neighbourhood_for_available_poller(exec_ctx, neighbourhood);
-          gpr_mu_unlock(&neighbourhood->mu);
-||||||| d1fefe89da
-      bool scan_state[MAX_NEIGHBOURHOODS];
-      for (size_t i = 0; !found_worker && i < g_num_neighbourhoods; i++) {
-        pollset_neighbourhood *neighbourhood =
-            &g_neighbourhoods[(poller_neighbourhood_idx + i) %
-                              g_num_neighbourhoods];
-        if (gpr_mu_trylock(&neighbourhood->mu)) {
-          found_worker =
-              check_neighbourhood_for_available_poller(neighbourhood);
-          gpr_mu_unlock(&neighbourhood->mu);
-=======
@@ -685 +654,2 @@ static void end_worker(grpc_exec_ctx *exec_ctx, grpc_pollset *pollset,
-          found_worker = check_neighborhood_for_available_poller(neighborhood);
+          found_worker =
+              check_neighborhood_for_available_poller(exec_ctx, neighborhood);
@@ -687 +656,0 @@ static void end_worker(grpc_exec_ctx *exec_ctx, grpc_pollset *pollset,
->>>>>>> 3bf7b714
@@ -695,16 +663,0 @@ static void end_worker(grpc_exec_ctx *exec_ctx, grpc_pollset *pollset,
-<<<<<<< HEAD
-        pollset_neighbourhood *neighbourhood =
-            &g_neighbourhoods[(poller_neighbourhood_idx + i) %
-                              g_num_neighbourhoods];
-        gpr_mu_lock(&neighbourhood->mu);
-        found_worker =
-            check_neighbourhood_for_available_poller(exec_ctx, neighbourhood);
-        gpr_mu_unlock(&neighbourhood->mu);
-||||||| d1fefe89da
-        pollset_neighbourhood *neighbourhood =
-            &g_neighbourhoods[(poller_neighbourhood_idx + i) %
-                              g_num_neighbourhoods];
-        gpr_mu_lock(&neighbourhood->mu);
-        found_worker = check_neighbourhood_for_available_poller(neighbourhood);
-        gpr_mu_unlock(&neighbourhood->mu);
-=======
@@ -715 +668,2 @@ static void end_worker(grpc_exec_ctx *exec_ctx, grpc_pollset *pollset,
-        found_worker = check_neighborhood_for_available_poller(neighborhood);
+        found_worker =
+            check_neighborhood_for_available_poller(exec_ctx, neighborhood);
@@ -717 +670,0 @@ static void end_worker(grpc_exec_ctx *exec_ctx, grpc_pollset *pollset,
->>>>>>> 3bf7b714
