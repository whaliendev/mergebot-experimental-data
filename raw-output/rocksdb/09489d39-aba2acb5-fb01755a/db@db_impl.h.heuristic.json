[
  {
    "code": [
      "virtual bool GetProperty(const Slice& property, std::string* value);",
      "virtual void GetApproximateSizes(const Range* range, int n, uint64_t* sizes);",
      "virtual Status CompactRange(const Slice* begin, const Slice* end,",
      "                              bool reduce_level = false, int target_level = -1);",
      "virtual int NumberLevels();",
      "virtual int MaxMemCompactionLevel();",
      "virtual int Level0StopWriteTrigger();",
      "using DB::GetProperty;",
      "virtual bool GetProperty(const ColumnFamilyHandle& column_family,",
      "                           const Slice& property, std::string* value);",
      "using DB::GetApproximateSizes;",
      "virtual void GetApproximateSizes(const ColumnFamilyHandle& column_family,",
      "                                   const Range* range, int n, uint64_t* sizes);",
      "using DB::CompactRange;",
      "virtual void CompactRange(const ColumnFamilyHandle& column_family,",
      "                            const Slice* begin, const Slice* end,",
      "                            bool reduce_level = false, int target_level = -1);",
      "using DB::NumberLevels;",
      "virtual int NumberLevels(const ColumnFamilyHandle& column_family);",
      "using DB::MaxMemCompactionLevel;",
      "virtual int MaxMemCompactionLevel(const ColumnFamilyHandle& column_family);",
      "using DB::Level0StopWriteTrigger;",
      "virtual int Level0StopWriteTrigger(const ColumnFamilyHandle& column_family);"
    ],
    "label": "",
    "index": 0,
    "confidence": 0.5,
    "desc": "Declarations merge."
  }
]