--- a/output/rocksdb/09489d39-aba2acb5-fb01755a/include@rocksdb@db.no_comments_mergebot.h
+++ b/output/rocksdb/09489d39-aba2acb5-fb01755a/include@rocksdb@db.no_comments_truth.h
@@ -71,0 +75,4 @@ public:
+  Status Put(const WriteOptions& options, const Slice& key,
+             const Slice& value) {
+    return Put(options, default_column_family, key, value);
+  }
@@ -74,0 +82,10 @@ public:
+  Status Delete(const WriteOptions& options, const Slice& key) {
+    return Delete(options, default_column_family, key);
+  }
+  virtual Status Merge(const WriteOptions& options,
+                       const ColumnFamilyHandle& column_family,
+                       const Slice& key, const Slice& value) = 0;
+  Status Merge(const WriteOptions& options, const Slice& key,
+               const Slice& value) {
+    return Merge(options, default_column_family, key, value);
+  }
@@ -78,0 +96,23 @@ public:
+  Status Get(const ReadOptions& options, const Slice& key, std::string* value) {
+    return Get(options, default_column_family, key, value);
+  }
+  virtual std::vector<Status> MultiGet(
+      const ReadOptions& options,
+      const std::vector<ColumnFamilyHandle>& column_family,
+      const std::vector<Slice>& keys, std::vector<std::string>* values) = 0;
+  std::vector<Status> MultiGet(const ReadOptions& options,
+                               const std::vector<Slice>& keys,
+                               std::vector<std::string>* values) {
+    return MultiGet(options, std::vector<ColumnFamilyHandle>(
+                                 keys.size(), default_column_family),
+                    keys, values);
+  }
+  virtual bool KeyMayExist(const ReadOptions& options,
+                           const ColumnFamilyHandle& column_family,
+                           const Slice& key, std::string* value,
+                           bool* value_found = nullptr) {
+    if (value_found != nullptr) {
+      *value_found = false;
+    }
+    return true;
+  }
@@ -102,2 +142,4 @@ public:
-<<<<<<< HEAD
-  virtual void CompactRange(const ColumnFamilyHandle& column_family,
+  void GetApproximateSizes(const Range* range, int n, uint64_t* sizes) {
+    GetApproximateSizes(default_column_family, range, n, sizes);
+  }
+  virtual Status CompactRange(const ColumnFamilyHandle& column_family,
@@ -105,5 +146,0 @@ public:
-||||||| fb01755aa
-  virtual void CompactRange(const Slice* begin, const Slice* end,
-=======
-  virtual Status CompactRange(const Slice* begin, const Slice* end,
->>>>>>> aba2acb5
@@ -111,0 +149,18 @@ public:
+  Status CompactRange(const Slice* begin, const Slice* end,
+                    bool reduce_level = false, int target_level = -1) {
+    return CompactRange(default_column_family, begin, end, reduce_level, target_level);
+  }
+  virtual int NumberLevels(const ColumnFamilyHandle& column_family) = 0;
+  int NumberLevels() {
+    return NumberLevels(default_column_family);
+  }
+  virtual int MaxMemCompactionLevel(
+      const ColumnFamilyHandle& column_family) = 0;
+  int MaxMemCompactionLevel() {
+    return MaxMemCompactionLevel(default_column_family);
+  }
+  virtual int Level0StopWriteTrigger(
+      const ColumnFamilyHandle& column_family) = 0;
+  int Level0StopWriteTrigger() {
+    return Level0StopWriteTrigger(default_column_family);
+  }
@@ -139,42 +193,0 @@ private:
-public:
-  virtual Status Merge(const WriteOptions& options,
-                       const ColumnFamilyHandle& column_family,
-                       const Slice& key, const Slice& value) = 0;
-  Status Get(const ReadOptions& options, const Slice& key, std::string* value) {
-    return Get(options, default_column_family, key, value);
-  }
-  virtual std::vector<Status> MultiGet(
-      const ReadOptions& options,
-      const std::vector<ColumnFamilyHandle>& column_family,
-      const std::vector<Slice>& keys, std::vector<std::string>* values) = 0;
-  std::vector<Status> MultiGet(const ReadOptions& options, const std::vector<Slice>& keys, std::vector<std::string>* values) {
-    return MultiGet(options, std::vector<ColumnFamilyHandle>(
-                                 keys.size(), default_column_family),
-                    keys, values);
-  }
-  virtual bool KeyMayExist(const ReadOptions& options, const ColumnFamilyHandle& column_family, const Slice& key, std::string* value, bool* value_found = nullptr) {
-    if (value_found != nullptr) {
-      *value_found = false;
-    }
-    return true;
-  }
-  void GetApproximateSizes(const Range* range, int n, uint64_t* sizes) {GetApproximateSizes(default_column_family, range, n, sizes){
-    GetApproximateSizes(default_column_family, range, n, sizes);
-  }
-  void CompactRange(const Slice* begin, const Slice* end, bool reduce_level = false, int target_level = -1) {
-    CompactRange(default_column_family, begin, end, reduce_level, target_level);
-  }
-  virtual int NumberLevels(const ColumnFamilyHandle& column_family) = 0;
-  int NumberLevels() {
-    return NumberLevels(default_column_family);
-  }
-  virtual int MaxMemCompactionLevel(
-      const ColumnFamilyHandle& column_family) = 0;
-  int MaxMemCompactionLevel() {
-    return MaxMemCompactionLevel(default_column_family);
-  }
-  virtual int Level0StopWriteTrigger(
-      const ColumnFamilyHandle& column_family) = 0;
-  int Level0StopWriteTrigger() {
-    return Level0StopWriteTrigger(default_column_family);
-  }
