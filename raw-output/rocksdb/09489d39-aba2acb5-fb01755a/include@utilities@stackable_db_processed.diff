--- a/output/rocksdb/09489d39-aba2acb5-fb01755a/include@utilities@stackable_db.no_comments_mergebot.h
+++ b/output/rocksdb/09489d39-aba2acb5-fb01755a/include@utilities@stackable_db.no_comments_truth.h
@@ -9,2 +8,0 @@ public:
-  }{
-    delete db_;
@@ -14,0 +13 @@ public:
+  using DB::Put;
@@ -19,0 +19 @@ public:
+  using DB::Get;
@@ -24,0 +25,9 @@ public:
+  using DB::MultiGet;
+  virtual std::vector<Status> MultiGet(
+      const ReadOptions& options,
+      const std::vector<ColumnFamilyHandle>& column_family,
+      const std::vector<Slice>& keys,
+      std::vector<std::string>* values) override {
+    return db_->MultiGet(options, column_family, keys, values);
+  }
+  using DB::KeyMayExist;
@@ -30,0 +40,7 @@ public:
+  using DB::Delete;
+  virtual Status Delete(const WriteOptions& wopts,
+                        const ColumnFamilyHandle& column_family,
+                        const Slice& key) override {
+    return db_->Delete(wopts, column_family, key);
+  }
+  using DB::Merge;
@@ -39,0 +56,12 @@ public:
+  using DB::NewIterator;
+  virtual Iterator* NewIterator(const ReadOptions& opts,
+                                const ColumnFamilyHandle& column_family)
+      override {
+    return db_->NewIterator(opts, column_family);
+  }
+  virtual Status NewIterators(
+      const ReadOptions& options,
+      const std::vector<ColumnFamilyHandle>& column_family,
+      std::vector<Iterator*>* iterators) {
+    return db_->NewIterators(options, column_family, iterators);
+  }
@@ -46 +74,16 @@ public:
-  virtual Status CompactRange(const ColumnFamilyHandle& column_family, const Slice* begin, const Slice* end, bool reduce_level = false, int target_level = -1) override {
+  using DB::GetProperty;
+  virtual bool GetProperty(const ColumnFamilyHandle& column_family,
+                           const Slice& property, std::string* value) override {
+      return db_->GetProperty(column_family, property, value);
+  }
+  using DB::GetApproximateSizes;
+  virtual void GetApproximateSizes(const ColumnFamilyHandle& column_family,
+                                   const Range* r, int n,
+                                   uint64_t* sizes) override {
+      return db_->GetApproximateSizes(column_family, r, n, sizes);
+  }
+  using DB::CompactRange;
+  virtual Status CompactRange(const ColumnFamilyHandle& column_family,
+                              const Slice* begin, const Slice* end,
+                              bool reduce_level = false,
+                              int target_level = -1) override {
@@ -49,0 +93,10 @@ public:
+  using DB::NumberLevels;
+  virtual int NumberLevels(const ColumnFamilyHandle& column_family) override {
+    return db_->NumberLevels(column_family);
+  }
+  using DB::MaxMemCompactionLevel;
+  virtual int MaxMemCompactionLevel(const ColumnFamilyHandle& column_family)
+      override {
+    return db_->MaxMemCompactionLevel(column_family);
+  }
+  using DB::Level0StopWriteTrigger;
@@ -60 +113,8 @@ public:
-  virtual Status Flush(const FlushOptions& fopts, const ColumnFamilyHandle& column_family) override {
+  using DB::GetOptions;
+  virtual const Options& GetOptions(const ColumnFamilyHandle& column_family)
+      const override {
+    return db_->GetOptions(column_family);
+  }
+  using DB::Flush;
+  virtual Status Flush(const FlushOptions& fopts,
+                       const ColumnFamilyHandle& column_family) override {
@@ -92,31 +151,0 @@ protected:
-public:
-  virtual std::vector<Status> MultiGet(const ReadOptions& options, const std::vector<ColumnFamilyHandle>& column_family, const std::vector<Slice>& keys, std::vector<std::string>* values) override {
-    return db_->MultiGet(options, column_family, keys, values);
-  }
-  virtual Status Delete(const WriteOptions& wopts, const ColumnFamilyHandle& column_family, const Slice& key) override {
-    return db_->Delete(wopts, column_family, key);
-  }
-  virtual Iterator* NewIterator(const ReadOptions& opts, const ColumnFamilyHandle& column_family)
-      override {
-    return db_->NewIterator(opts, column_family);
-  }
-  virtual Status NewIterators(const ReadOptions& options, const std::vector<ColumnFamilyHandle>& column_family, std::vector<Iterator*>* iterators) {
-    return db_->NewIterators(options, column_family, iterators);
-  }
-  virtual bool GetProperty(const ColumnFamilyHandle& column_family, const Slice& property, std::string* value) override {
-      return db_->GetProperty(column_family, property, value);
-  }
-  virtual void GetApproximateSizes(const ColumnFamilyHandle& column_family, const Range* r, int n, uint64_t* sizes) override {
-      return db_->GetApproximateSizes(column_family, r, n, sizes);
-  }
-  virtual int NumberLevels(const ColumnFamilyHandle& column_family) override {
-    return db_->NumberLevels(column_family);
-  }
-  virtual int MaxMemCompactionLevel(const ColumnFamilyHandle& column_family)
-      override {
-    return db_->MaxMemCompactionLevel(column_family);
-  }
-  virtual const Options& GetOptions(const ColumnFamilyHandle& column_family)
-      const override {
-    return db_->GetOptions(column_family);
-  }
