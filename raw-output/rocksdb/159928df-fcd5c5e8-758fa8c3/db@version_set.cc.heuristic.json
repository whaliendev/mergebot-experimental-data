[
  {
    "desc": "List merge.",
    "confidence": 0.4,
    "index": 1,
    "label": "",
    "code": [
      "void Version::Finalize(std::vector<uint64_t>& size_being_compacted) {",
      "  assert(!finalized_);",
      "  finalized_ = true;",
      "  // Pre-sort level0 for Get()",
      "  if (cfd_->options()->compaction_style == kCompactionStyleUniversal) {",
      "    std::sort(files_[0].begin(), files_[0].end(), NewestFirstBySeqNo);",
      "  } else {",
      "    std::sort(files_[0].begin(), files_[0].end(), NewestFirst);",
      "  }",
      "void Version::ComputeCompactionScore(",
      "    std::vector<uint64_t>& size_being_compacted) {"
    ]
  },
  {
    "code": [],
    "label": "",
    "index": 3,
    "confidence": 0.7,
    "desc": "Single side deletion."
  }
]