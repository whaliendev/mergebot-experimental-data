diff --git a/output/rocksdb/2dcbb3b4-b1fafcac-44756260/db@db_test2.no_comments_mergebot.cc b/output/rocksdb/2dcbb3b4-b1fafcac-44756260/db@db_test2.no_comments_truth.cc
index 57fce85..8bf972b 100644
--- a/output/rocksdb/2dcbb3b4-b1fafcac-44756260/db@db_test2.no_comments_mergebot.cc
+++ b/output/rocksdb/2dcbb3b4-b1fafcac-44756260/db@db_test2.no_comments_truth.cc
@@ -10,4 +10,41 @@ public:
-TEST_F(DBTest2, DISABLED_FirstSnapshotTest) {
-  Options options;
-  options.write_buffer_size = 100000;
-  options = CurrentOptions(options);
+TEST_F(DBTest2, IteratorPropertyVersionNumber) {
+  Put("", "");
+  Iterator* iter1 = db_->NewIterator(ReadOptions());
+  std::string prop_value;
+  ASSERT_OK(
+      iter1->GetProperty("rocksdb.iterator.super-version-number", &prop_value));
+  uint64_t version_number1 =
+      static_cast<uint64_t>(std::atoi(prop_value.c_str()));
+  Put("", "");
+  Flush();
+  Iterator* iter2 = db_->NewIterator(ReadOptions());
+  ASSERT_OK(
+      iter2->GetProperty("rocksdb.iterator.super-version-number", &prop_value));
+  uint64_t version_number2 =
+      static_cast<uint64_t>(std::atoi(prop_value.c_str()));
+  ASSERT_GT(version_number2, version_number1);
+  Put("", "");
+  Iterator* iter3 = db_->NewIterator(ReadOptions());
+  ASSERT_OK(
+      iter3->GetProperty("rocksdb.iterator.super-version-number", &prop_value));
+  uint64_t version_number3 =
+      static_cast<uint64_t>(std::atoi(prop_value.c_str()));
+  ASSERT_EQ(version_number2, version_number3);
+  iter1->SeekToFirst();
+  ASSERT_OK(
+      iter1->GetProperty("rocksdb.iterator.super-version-number", &prop_value));
+  uint64_t version_number1_new =
+      static_cast<uint64_t>(std::atoi(prop_value.c_str()));
+  ASSERT_EQ(version_number1, version_number1_new);
+  delete iter1;
+  delete iter2;
+  delete iter3;
+}
+TEST_F(DBTest2, CacheIndexAndFilterWithDBRestart) {
+  Options options = CurrentOptions();
+  options.create_if_missing = true;
+  options.statistics = rocksdb::CreateDBStatistics();
+  BlockBasedTableOptions table_options;
+  table_options.cache_index_and_filter_blocks = true;
+  table_options.filter_policy.reset(NewBloomFilterPolicy(20));
+  options.table_factory.reset(new BlockBasedTableFactory(table_options));
@@ -15,4 +52,6 @@ TEST_F(DBTest2, DISABLED_FirstSnapshotTest) {
-  const Snapshot* s1 = db_->GetSnapshot();
-  Put(1, "k1", std::string(100000, 'x'));
-  Put(1, "k2", std::string(100000, 'y'));
-  db_->ReleaseSnapshot(s1);
+  Put(1, "a", "begin");
+  Put(1, "z", "end");
+  ASSERT_OK(Flush(1));
+  TryReopenWithColumnFamilies({"default", "pikachu"}, options);
+  std::string value;
+  value = Get(1, "a");
@@ -449,10 +487,0 @@ TEST_F(DBTest2, DISABLED_FirstSnapshotTest) {
-TEST_F(DBTest2, DISABLED_FirstSnapshotTest) {
-  Options options;
-  options.write_buffer_size = 100000;
-  options = CurrentOptions(options);
-  CreateAndReopenWithCF({"pikachu"}, options);
-  const Snapshot* s1 = db_->GetSnapshot();
-  Put(1, "k1", std::string(100000, 'x'));
-  Put(1, "k2", std::string(100000, 'y'));
-  db_->ReleaseSnapshot(s1);
-}
