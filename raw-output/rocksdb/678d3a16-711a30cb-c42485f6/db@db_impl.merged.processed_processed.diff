--- a/./output/rocksdb/678d3a16-711a30cb-c42485f6/db@db_impl.no_comments_merged.cc
+++ b/./output/rocksdb/678d3a16-711a30cb-c42485f6/db@db_impl.no_comments_truth.cc
@@ -1492 +1491,0 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {
-<<<<<<< HEAD
@@ -1495,20 +1493,0 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {
-||||||| c42485f67
-      char* kptr = (char*)key.data();
-      std::string kstr;
-      if (bottommost_level && ikey.sequence < earliest_snapshot &&
-         ikey.type != kTypeMerge) {
-        assert(ikey.type != kTypeDeletion);
-        kstr.assign(key.data(), key.size());
-        kptr = (char *)kstr.c_str();
-        UpdateInternalKey(kptr, key.size(), (uint64_t)0, ikey.type);
-=======
-      char* kptr = (char*)key.data();
-      std::string kstr;
-      if (options_.compaction_style == kCompactionStyleLevel &&
-          bottommost_level && ikey.sequence < earliest_snapshot &&
-         ikey.type != kTypeMerge) {
-        assert(ikey.type != kTypeDeletion);
-        kstr.assign(key.data(), key.size());
-        kptr = (char *)kstr.c_str();
-        UpdateInternalKey(kptr, key.size(), (uint64_t)0, ikey.type);
->>>>>>> 711a30cb
@@ -1519 +1498,2 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {
-        if (bottommost_level && ikey.sequence < earliest_snapshot &&
+        if (options_.compaction_style == kCompactionStyleLevel &&
+            bottommost_level && ikey.sequence < earliest_snapshot &&
@@ -1526,5 +1506,6 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {
-<<<<<<< HEAD
-||||||| c42485f67
-      }
-      if (compact->builder->NumEntries() == 0) {
-        compact->current_output()->smallest.DecodeFrom(newkey);
+        Slice newkey(kptr, key.size());
+        assert((key.clear(), 1));
+        if (compact->builder == nullptr) {
+          status = OpenCompactionOutputFile(compact);
+          if (!status.ok()) {
+            break;
@@ -1532,3 +1512,0 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {
-      compact->current_output()->largest.DecodeFrom(newkey);
-      compact->builder->Add(newkey, value);
-=======
@@ -1548,14 +1525,0 @@ Status DBImpl::DoCompactionWork(CompactionState* compact) {
->>>>>>> 711a30cb
-        Slice newkey(kptr, key.size());
-        assert((key.clear(), 1));
-        if (compact->builder == nullptr) {
-          status = OpenCompactionOutputFile(compact);
-          if (!status.ok()) {
-            break;
-          }
-        }
-        if (compact->builder->NumEntries() == 0) {
-          compact->current_output()->smallest.DecodeFrom(newkey);
-        }
-        compact->current_output()->largest.DecodeFrom(newkey);
-        compact->builder->Add(newkey, value);
