--- a/./output/rocksdb/9f15092e-e5fa4944-abeee9f2/db@db_impl.no_comments_merged.h
+++ b/./output/rocksdb/9f15092e-e5fa4944-abeee9f2/db@db_impl.no_comments_truth.h
@@ -129 +128,0 @@ class DBImpl : public DB {
-<<<<<<< HEAD
@@ -132,59 +130,0 @@ class DBImpl : public DB {
-||||||| abeee9f2c
-  void TEST_GetFilesMetaData(std::vector<std::vector<FileMetaData>>* metadata);
-  struct SuperVersion {
-    MemTable* mem;
-    MemTableListVersion* imm;
-    Version* current;
-    std::atomic<uint32_t> refs;
-    autovector<MemTable*> to_delete;
-    uint64_t version_number;
-    DBImpl* db;
-    SuperVersion() = default;
-    ~SuperVersion();
-    SuperVersion* Ref();
-    bool Unref();
-    void Cleanup();
-    void Init(MemTable* new_mem, MemTableListVersion* new_imm,
-              Version* new_current);
-  };
-  static void SuperVersionUnrefHandle(void* ptr) {
-    DBImpl::SuperVersion* sv = static_cast<DBImpl::SuperVersion*>(ptr);
-    if (sv->Unref()) {
-      sv->db->mutex_.Lock();
-      sv->Cleanup();
-      sv->db->mutex_.Unlock();
-      delete sv;
-    }
-  }
-=======
-  void TEST_GetFilesMetaData(std::vector<std::vector<FileMetaData>>* metadata);
-  struct SuperVersion {
-    MemTable* mem;
-    MemTableListVersion* imm;
-    Version* current;
-    std::atomic<uint32_t> refs;
-    autovector<MemTable*> to_delete;
-    uint64_t version_number;
-    DBImpl* db;
-    SuperVersion() = default;
-    ~SuperVersion();
-    SuperVersion* Ref();
-    bool Unref();
-    void Cleanup();
-    void Init(MemTable* new_mem, MemTableListVersion* new_imm,
-              Version* new_current);
-    static int dummy;
-    static void* const kSVInUse;
-    static void* const kSVObsolete;
-  };
-  static void SuperVersionUnrefHandle(void* ptr) {
-    assert(ptr != SuperVersion::kSVInUse);
-    DBImpl::SuperVersion* sv = static_cast<DBImpl::SuperVersion*>(ptr);
-    if (sv->Unref()) {
-      sv->db->mutex_.Lock();
-      sv->Cleanup();
-      sv->db->mutex_.Unlock();
-      delete sv;
-    }
-  }
->>>>>>> e5fa4944
