diff --git a/./output/rocksdb/b20486f2-9dc29414-4e91f27c/table@block_based_table_reader.no_comments_merged.cc b/./output/rocksdb/b20486f2-9dc29414-4e91f27c/table@block_based_table_reader.no_comments_truth.cc
index 3510801..50dfe62 100644
--- a/./output/rocksdb/b20486f2-9dc29414-4e91f27c/table@block_based_table_reader.no_comments_merged.cc
+++ b/./output/rocksdb/b20486f2-9dc29414-4e91f27c/table@block_based_table_reader.no_comments_truth.cc
@@ -163,11 +162,0 @@ Status BlockBasedTable::Open(const Options& options, const EnvOptions& soptions,
-<<<<<<< HEAD
-||||||| 4e91f27c3
-  if (size < Footer::kEncodedLength) {
-    return Status::InvalidArgument("file is too short to be an sstable");
-  }
-=======
-  if (file_size < Footer::kEncodedLength) {
-    return Status::InvalidArgument("file is too short to be an sstable");
-  }
->>>>>>> 9dc29414
-<<<<<<< HEAD
@@ -175,24 +164 @@ Status BlockBasedTable::Open(const Options& options, const EnvOptions& soptions,
-  auto s = ReadFooterFromFile(file.get(), size, &footer);
-||||||| 4e91f27c3
-  char footer_space[Footer::kEncodedLength];
-  Slice footer_input;
-  Status s = file->Read(size - Footer::kEncodedLength, Footer::kEncodedLength,
-                        &footer_input, footer_space);
-  if (!s.ok()) return s;
-  if (footer_input.size() != Footer::kEncodedLength) {
-    return Status::InvalidArgument("file is too short to be an sstable");
-  }
-  Footer footer;
-  s = footer.DecodeFrom(&footer_input);
-=======
-  char footer_space[Footer::kEncodedLength];
-  Slice footer_input;
-  Status s = file->Read(file_size - Footer::kEncodedLength,
-                        Footer::kEncodedLength, &footer_input, footer_space);
-  if (!s.ok()) return s;
-  if (footer_input.size() != Footer::kEncodedLength) {
-    return Status::InvalidArgument("file is too short to be an sstable");
-  }
-  Footer footer;
-  s = footer.DecodeFrom(&footer_input);
->>>>>>> 9dc29414
+  auto s = ReadFooterFromFile(file.get(), file_size, &footer);
@@ -214,7 +180,2 @@ Status BlockBasedTable::Open(const Options& options, const EnvOptions& soptions,
-      s = ReadProperties(
-          meta_iter->value(),
-          rep->file.get(),
-          rep->options.env,
-          rep->options.info_log.get(),
-          &rep->table_properties
-      );
+      s = ReadProperties(meta_iter->value(), rep->file.get(), rep->options.env,
+                         rep->options.info_log.get(), &rep->table_properties);
