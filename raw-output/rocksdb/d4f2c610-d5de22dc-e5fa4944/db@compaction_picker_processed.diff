--- a/output/rocksdb/d4f2c610-d5de22dc-e5fa4944/db@compaction_picker.no_comments_mergebot.cc
+++ b/output/rocksdb/d4f2c610-d5de22dc-e5fa4944/db@compaction_picker.no_comments_truth.cc
@@ -3 +2,0 @@
-#include "util/statistics.h"
@@ -4,0 +4 @@
+#include "util/statistics.h"
@@ -619,22 +618,0 @@ Compaction* UniversalCompactionPicker::PickCompactionUniversalSizeAmp(
-namespace {
-uint64_t TotalFileSize(const std::vector<FileMetaData*>& files) {
-  uint64_t sum = 0;
-  for (size_t i = 0; i < files.size() && files[i]; i++) {
-    sum += files[i]->file_size;
-  }
-  return sum;
-}
-uint64_t MultiplyCheckOverflow(uint64_t op1, int op2) {
-  if (op1 == 0) {
-    return 0;
-  }
-  if (op2 <= 0) {
-    return op1;
-  }
-  uint64_t casted_op2 = (uint64_t) op2;
-  if (std::numeric_limits<uint64_t>::max() / op1 < casted_op2) {
-    return op1;
-  }
-  return op1 * casted_op2;
-}
-}
