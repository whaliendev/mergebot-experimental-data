[
  {
    "desc": "Single side deletion.",
    "confidence": 0.7,
    "index": 0,
    "label": "",
    "code": []
  },
  {
    "code": [],
    "label": "",
    "index": 1,
    "confidence": 0.7,
    "desc": "Single side deletion."
  },
  {
    "desc": "List merge.",
    "confidence": 0.4,
    "index": 2,
    "label": "",
    "code": [
      "Status DBImpl::WriteLevel0Table(autovector<MemTable*>& mems, VersionEdit* edit,",
      "                                uint64_t* filenumber,",
      "                                LogBuffer* log_buffer) {",
      "Status DBImpl::WriteLevel0Table(ColumnFamilyData* cfd,",
      "                                autovector<MemTable*>& mems, VersionEdit* edit,",
      "                                uint64_t* filenumber) {"
    ]
  },
  {
    "desc": "List merge.",
    "confidence": 0.4,
    "index": 3,
    "label": "",
    "code": [
      "Status DBImpl::FlushMemTableToOutputFile(bool* madeProgress,",
      "                                         DeletionState& deletion_state,",
      "                                         LogBuffer* log_buffer) {",
      "Status DBImpl::FlushMemTableToOutputFile(ColumnFamilyData* cfd,",
      "                                         bool* madeProgress,",
      "                                         DeletionState& deletion_state) {"
    ]
  },
  {
    "code": [],
    "label": "",
    "index": 6,
    "confidence": 0.7,
    "desc": "Single side deletion."
  },
  {
    "code": [
      "    // SuperVersion can become stale. It will eventually get refreshed either",
      "    // on the next GetImpl() call or next SuperVersion installation.",
      "    thread_local_sv = cfd->GetThreadLocalSuperVersion();",
      "    void* ptr = thread_local_sv->Swap(SuperVersion::kSVInUse);"
    ],
    "label": "",
    "index": 8,
    "confidence": 0.7,
    "desc": "De facto one-sided modification, accept their side."
  }
]