diff --git a/output/rocksdb/e86d7dff-577556d5-b9ce156e/util@options.no_comments_mergebot.cc b/output/rocksdb/e86d7dff-577556d5-b9ce156e/util@options.no_comments_truth.cc
index d91da9e..e67da3f 100644
--- a/output/rocksdb/e86d7dff-577556d5-b9ce156e/util@options.no_comments_mergebot.cc
+++ b/output/rocksdb/e86d7dff-577556d5-b9ce156e/util@options.no_comments_truth.cc
@@ -16,5 +16,196 @@ namespace rocksdb {
-Options::Options(): DBOptions(), ColumnFamilyOptions(), comparator(BytewiseComparator()), merge_operator(nullptr), compaction_filter(nullptr), compaction_filter_factory(std::shared_ptr<CompactionFilterFactory>(
-          new DefaultCompactionFilterFactory())), compaction_filter_factory_v2(
-            new DefaultCompactionFilterFactoryV2(
-              NewFixedPrefixTransform(8))), create_if_missing(false), error_if_exists(false), paranoid_checks(false), env(Env::Default()), info_log(nullptr), info_log_level(INFO), write_buffer_size(4 << 20), max_write_buffer_number(2), min_write_buffer_number_to_merge(1), max_open_files(1000), block_cache(nullptr), block_cache_compressed(nullptr), block_size(4096), block_restart_interval(16), compression(kSnappyCompression), filter_policy(nullptr), prefix_extractor(nullptr), whole_key_filtering(true), num_levels(7), level0_file_num_compaction_trigger(4), level0_slowdown_writes_trigger(8), level0_stop_writes_trigger(12), max_mem_compaction_level(2), target_file_size_base(2 * 1048576), target_file_size_multiplier(1), max_bytes_for_level_base(10 * 1048576), max_bytes_for_level_multiplier(10), max_bytes_for_level_multiplier_additional(num_levels, 1), expanded_compaction_factor(25), source_compaction_factor(1), max_grandparent_overlap_factor(10), disableDataSync(false), use_fsync(false), db_stats_log_interval(1800), db_log_dir(""), wal_dir(""), disable_seek_compaction(false), delete_obsolete_files_period_micros(6 * 60 * 60 * 1000000UL), max_background_compactions(1), max_background_flushes(0), max_log_file_size(0), log_file_time_to_roll(0), keep_log_file_num(1000), soft_rate_limit(0.0), hard_rate_limit(0.0), rate_limit_delay_max_milliseconds(1000), max_manifest_file_size(std::numeric_limits<uint64_t>::max()), no_block_cache(false), table_cache_numshardbits(4), table_cache_remove_scan_count_limit(16), arena_block_size(0), disable_auto_compactions(false), WAL_ttl_seconds(0), WAL_size_limit_MB(0), manifest_preallocation_size(4 * 1024 * 1024), purge_redundant_kvs_while_flush(true), allow_os_buffer(true), allow_mmap_reads(false), allow_mmap_writes(true), is_fd_close_on_exec(true), skip_log_error_on_recovery(false), stats_dump_period_sec(3600), block_size_deviation(10), advise_random_on_open(true), access_hint_on_compaction_start(NORMAL), use_adaptive_mutex(false), bytes_per_sync(0), compaction_style(kCompactionStyleLevel), verify_checksums_in_compaction(true), filter_deletes(false), max_sequential_skip_in_iterations(8), memtable_factory(std::shared_ptr<SkipListFactory>(new SkipListFactory)), table_factory(
-          std::shared_ptr<TableFactory>(new BlockBasedTableFactory())), inplace_update_support(false), inplace_update_num_locks(10000), inplace_callback(nullptr), memtable_prefix_bloom_bits(0), memtable_prefix_bloom_probes(6), max_successive_merges(0), min_partial_merge_operands(2), allow_thread_local(true), compaction_filter_factory_v2(new DefaultCompactionFilterFactoryV2()), paranoid_checks(true), max_open_files(5000), level0_slowdown_writes_trigger(20), level0_stop_writes_trigger(24), disable_seek_compaction(true), max_background_flushes(1), allow_mmap_writes(false), bloom_locality(0) {}
+ColumnFamilyOptions::ColumnFamilyOptions()
+    : comparator(BytewiseComparator()),
+      merge_operator(nullptr),
+      compaction_filter(nullptr),
+      compaction_filter_factory(std::shared_ptr<CompactionFilterFactory>(
+          new DefaultCompactionFilterFactory())),
+      compaction_filter_factory_v2(
+          new DefaultCompactionFilterFactoryV2()),
+      write_buffer_size(4 << 20),
+      max_write_buffer_number(2),
+      min_write_buffer_number_to_merge(1),
+      block_cache(nullptr),
+      block_cache_compressed(nullptr),
+      block_size(4096),
+      block_restart_interval(16),
+      compression(kSnappyCompression),
+      filter_policy(nullptr),
+      prefix_extractor(nullptr),
+      whole_key_filtering(true),
+      num_levels(7),
+      level0_file_num_compaction_trigger(4),
+      level0_slowdown_writes_trigger(20),
+      level0_stop_writes_trigger(24),
+      max_mem_compaction_level(2),
+      target_file_size_base(2 * 1048576),
+      target_file_size_multiplier(1),
+      max_bytes_for_level_base(10 * 1048576),
+      max_bytes_for_level_multiplier(10),
+      max_bytes_for_level_multiplier_additional(num_levels, 1),
+      expanded_compaction_factor(25),
+      source_compaction_factor(1),
+      max_grandparent_overlap_factor(10),
+      disable_seek_compaction(true),
+      soft_rate_limit(0.0),
+      hard_rate_limit(0.0),
+      rate_limit_delay_max_milliseconds(1000),
+      no_block_cache(false),
+      arena_block_size(0),
+      disable_auto_compactions(false),
+      purge_redundant_kvs_while_flush(true),
+      block_size_deviation(10),
+      compaction_style(kCompactionStyleLevel),
+      verify_checksums_in_compaction(true),
+      filter_deletes(false),
+      max_sequential_skip_in_iterations(8),
+      memtable_factory(std::shared_ptr<SkipListFactory>(new SkipListFactory)),
+      table_factory(
+          std::shared_ptr<TableFactory>(new BlockBasedTableFactory())),
+      inplace_update_support(false),
+      inplace_update_num_locks(10000),
+      inplace_callback(nullptr),
+      memtable_prefix_bloom_bits(0),
+      memtable_prefix_bloom_probes(6),
+      max_successive_merges(0),
+      min_partial_merge_operands(2) {
+  assert(memtable_factory.get() != nullptr);
+}
+ColumnFamilyOptions::ColumnFamilyOptions(const Options& options)
+    : comparator(options.comparator),
+      merge_operator(options.merge_operator),
+      compaction_filter(options.compaction_filter),
+      compaction_filter_factory(options.compaction_filter_factory),
+      compaction_filter_factory_v2(options.compaction_filter_factory_v2),
+      write_buffer_size(options.write_buffer_size),
+      max_write_buffer_number(options.max_write_buffer_number),
+      min_write_buffer_number_to_merge(
+          options.min_write_buffer_number_to_merge),
+      block_cache(options.block_cache),
+      block_cache_compressed(options.block_cache_compressed),
+      block_size(options.block_size),
+      block_restart_interval(options.block_restart_interval),
+      compression(options.compression),
+      compression_per_level(options.compression_per_level),
+      compression_opts(options.compression_opts),
+      filter_policy(options.filter_policy),
+      prefix_extractor(options.prefix_extractor),
+      whole_key_filtering(options.whole_key_filtering),
+      num_levels(options.num_levels),
+      level0_file_num_compaction_trigger(
+          options.level0_file_num_compaction_trigger),
+      level0_slowdown_writes_trigger(options.level0_slowdown_writes_trigger),
+      level0_stop_writes_trigger(options.level0_stop_writes_trigger),
+      max_mem_compaction_level(options.max_mem_compaction_level),
+      target_file_size_base(options.target_file_size_base),
+      target_file_size_multiplier(options.target_file_size_multiplier),
+      max_bytes_for_level_base(options.max_bytes_for_level_base),
+      max_bytes_for_level_multiplier(options.max_bytes_for_level_multiplier),
+      max_bytes_for_level_multiplier_additional(
+          options.max_bytes_for_level_multiplier_additional),
+      expanded_compaction_factor(options.expanded_compaction_factor),
+      source_compaction_factor(options.source_compaction_factor),
+      max_grandparent_overlap_factor(options.max_grandparent_overlap_factor),
+      disable_seek_compaction(options.disable_seek_compaction),
+      soft_rate_limit(options.soft_rate_limit),
+      hard_rate_limit(options.hard_rate_limit),
+      rate_limit_delay_max_milliseconds(
+          options.rate_limit_delay_max_milliseconds),
+      no_block_cache(options.no_block_cache),
+      arena_block_size(options.arena_block_size),
+      disable_auto_compactions(options.disable_auto_compactions),
+      purge_redundant_kvs_while_flush(options.purge_redundant_kvs_while_flush),
+      block_size_deviation(options.block_size_deviation),
+      compaction_style(options.compaction_style),
+      verify_checksums_in_compaction(options.verify_checksums_in_compaction),
+      compaction_options_universal(options.compaction_options_universal),
+      filter_deletes(options.filter_deletes),
+      max_sequential_skip_in_iterations(
+          options.max_sequential_skip_in_iterations),
+      memtable_factory(options.memtable_factory),
+      table_factory(options.table_factory),
+      table_properties_collectors(options.table_properties_collectors),
+      inplace_update_support(options.inplace_update_support),
+      inplace_update_num_locks(options.inplace_update_num_locks),
+      inplace_callback(options.inplace_callback),
+      memtable_prefix_bloom_bits(options.memtable_prefix_bloom_bits),
+      memtable_prefix_bloom_probes(options.memtable_prefix_bloom_probes),
+      max_successive_merges(options.max_successive_merges),
+      min_partial_merge_operands(options.min_partial_merge_operands) {
+  assert(memtable_factory.get() != nullptr);
+}
+DBOptions::DBOptions()
+    : create_if_missing(false),
+      error_if_exists(false),
+      paranoid_checks(true),
+      env(Env::Default()),
+      info_log(nullptr),
+      info_log_level(INFO),
+      max_open_files(5000),
+      statistics(nullptr),
+      disableDataSync(false),
+      use_fsync(false),
+      db_stats_log_interval(1800),
+      db_log_dir(""),
+      wal_dir(""),
+      delete_obsolete_files_period_micros(6 * 60 * 60 * 1000000UL),
+      max_background_compactions(1),
+      max_background_flushes(1),
+      max_log_file_size(0),
+      log_file_time_to_roll(0),
+      keep_log_file_num(1000),
+      max_manifest_file_size(std::numeric_limits<uint64_t>::max()),
+      table_cache_numshardbits(4),
+      table_cache_remove_scan_count_limit(16),
+      WAL_ttl_seconds(0),
+      WAL_size_limit_MB(0),
+      manifest_preallocation_size(4 * 1024 * 1024),
+      allow_os_buffer(true),
+      allow_mmap_reads(false),
+      allow_mmap_writes(false),
+      is_fd_close_on_exec(true),
+      skip_log_error_on_recovery(false),
+      stats_dump_period_sec(3600),
+      advise_random_on_open(true),
+      access_hint_on_compaction_start(NORMAL),
+      use_adaptive_mutex(false),
+      bytes_per_sync(0),
+      allow_thread_local(true) {}
+DBOptions::DBOptions(const Options& options)
+    : create_if_missing(options.create_if_missing),
+      error_if_exists(options.error_if_exists),
+      paranoid_checks(options.paranoid_checks),
+      env(options.env),
+      info_log(options.info_log),
+      info_log_level(options.info_log_level),
+      max_open_files(options.max_open_files),
+      statistics(options.statistics),
+      disableDataSync(options.disableDataSync),
+      use_fsync(options.use_fsync),
+      db_stats_log_interval(options.db_stats_log_interval),
+      db_log_dir(options.db_log_dir),
+      wal_dir(options.wal_dir),
+      delete_obsolete_files_period_micros(
+          options.delete_obsolete_files_period_micros),
+      max_background_compactions(options.max_background_compactions),
+      max_background_flushes(options.max_background_flushes),
+      max_log_file_size(options.max_log_file_size),
+      log_file_time_to_roll(options.log_file_time_to_roll),
+      keep_log_file_num(options.keep_log_file_num),
+      max_manifest_file_size(options.max_manifest_file_size),
+      table_cache_numshardbits(options.table_cache_numshardbits),
+      table_cache_remove_scan_count_limit(
+          options.table_cache_remove_scan_count_limit),
+      WAL_ttl_seconds(options.WAL_ttl_seconds),
+      WAL_size_limit_MB(options.WAL_size_limit_MB),
+      manifest_preallocation_size(options.manifest_preallocation_size),
+      allow_os_buffer(options.allow_os_buffer),
+      allow_mmap_reads(options.allow_mmap_reads),
+      allow_mmap_writes(options.allow_mmap_writes),
+      is_fd_close_on_exec(options.is_fd_close_on_exec),
+      skip_log_error_on_recovery(options.skip_log_error_on_recovery),
+      stats_dump_period_sec(options.stats_dump_period_sec),
+      advise_random_on_open(options.advise_random_on_open),
+      access_hint_on_compaction_start(options.access_hint_on_compaction_start),
+      use_adaptive_mutex(options.use_adaptive_mutex),
+      bytes_per_sync(options.bytes_per_sync),
+      allow_thread_local(options.allow_thread_local) {}
@@ -82 +273,2 @@ void DBOptions::Dump(Logger* log) const {
-}void ColumnFamilyOptions::Dump(Logger* log) const {
+}
+void ColumnFamilyOptions::Dump(Logger* log) const {
@@ -234,18 +425,0 @@ Options::PrepareForBulkLoad()
-ColumnFamilyOptions::ColumnFamilyOptions(): comparator(BytewiseComparator()), merge_operator(nullptr), compaction_filter(nullptr), compaction_filter_factory(std::shared_ptr<CompactionFilterFactory>(
-          new DefaultCompactionFilterFactory())), compaction_filter_factory_v2(
-          new DefaultCompactionFilterFactoryV2(NewFixedPrefixTransform(8))), write_buffer_size(4 << 20), max_write_buffer_number(2), min_write_buffer_number_to_merge(1), block_cache(nullptr), block_cache_compressed(nullptr), block_size(4096), block_restart_interval(16), compression(kSnappyCompression), filter_policy(nullptr), prefix_extractor(nullptr), whole_key_filtering(true), num_levels(7), level0_file_num_compaction_trigger(4), level0_slowdown_writes_trigger(8), level0_stop_writes_trigger(12), max_mem_compaction_level(2), target_file_size_base(2 * 1048576), target_file_size_multiplier(1), max_bytes_for_level_base(10 * 1048576), max_bytes_for_level_multiplier(10), max_bytes_for_level_multiplier_additional(num_levels, 1), expanded_compaction_factor(25), source_compaction_factor(1), max_grandparent_overlap_factor(10), disable_seek_compaction(false), soft_rate_limit(0.0), hard_rate_limit(0.0), rate_limit_delay_max_milliseconds(1000), no_block_cache(false), arena_block_size(0), disable_auto_compactions(false), purge_redundant_kvs_while_flush(true), block_size_deviation(10), compaction_style(kCompactionStyleLevel), verify_checksums_in_compaction(true), filter_deletes(false), max_sequential_skip_in_iterations(8), memtable_factory(std::shared_ptr<SkipListFactory>(new SkipListFactory)), table_factory(
-          std::shared_ptr<TableFactory>(new BlockBasedTableFactory())), inplace_update_support(false), inplace_update_num_locks(10000), inplace_callback(nullptr), memtable_prefix_bloom_bits(0), memtable_prefix_bloom_probes(6), max_successive_merges(0), min_partial_merge_operands(2) {
-  assert(memtable_factory.get() != nullptr);
-}
-ColumnFamilyOptions::ColumnFamilyOptions(const Options& options): comparator(options.comparator), merge_operator(options.merge_operator), compaction_filter(options.compaction_filter), compaction_filter_factory(options.compaction_filter_factory), compaction_filter_factory_v2(options.compaction_filter_factory_v2), write_buffer_size(options.write_buffer_size), max_write_buffer_number(options.max_write_buffer_number), min_write_buffer_number_to_merge(
-          options.min_write_buffer_number_to_merge), block_cache(options.block_cache), block_cache_compressed(options.block_cache_compressed), block_size(options.block_size), block_restart_interval(options.block_restart_interval), compression(options.compression), compression_per_level(options.compression_per_level), compression_opts(options.compression_opts), filter_policy(options.filter_policy), prefix_extractor(options.prefix_extractor), whole_key_filtering(options.whole_key_filtering), num_levels(options.num_levels), level0_file_num_compaction_trigger(
-          options.level0_file_num_compaction_trigger), level0_slowdown_writes_trigger(options.level0_slowdown_writes_trigger), level0_stop_writes_trigger(options.level0_stop_writes_trigger), max_mem_compaction_level(options.max_mem_compaction_level), target_file_size_base(options.target_file_size_base), target_file_size_multiplier(options.target_file_size_multiplier), max_bytes_for_level_base(options.max_bytes_for_level_base), max_bytes_for_level_multiplier(options.max_bytes_for_level_multiplier), max_bytes_for_level_multiplier_additional(
-          options.max_bytes_for_level_multiplier_additional), expanded_compaction_factor(options.expanded_compaction_factor), source_compaction_factor(options.source_compaction_factor), max_grandparent_overlap_factor(options.max_grandparent_overlap_factor), disable_seek_compaction(options.disable_seek_compaction), soft_rate_limit(options.soft_rate_limit), hard_rate_limit(options.hard_rate_limit), rate_limit_delay_max_milliseconds(
-          options.rate_limit_delay_max_milliseconds), no_block_cache(options.no_block_cache), arena_block_size(options.arena_block_size), disable_auto_compactions(options.disable_auto_compactions), purge_redundant_kvs_while_flush(options.purge_redundant_kvs_while_flush), block_size_deviation(options.block_size_deviation), compaction_style(options.compaction_style), verify_checksums_in_compaction(options.verify_checksums_in_compaction), compaction_options_universal(options.compaction_options_universal), filter_deletes(options.filter_deletes), max_sequential_skip_in_iterations(
-          options.max_sequential_skip_in_iterations), memtable_factory(options.memtable_factory), table_factory(options.table_factory), table_properties_collectors(options.table_properties_collectors), inplace_update_support(options.inplace_update_support), inplace_update_num_locks(options.inplace_update_num_locks), inplace_callback(options.inplace_callback), memtable_prefix_bloom_bits(options.memtable_prefix_bloom_bits), memtable_prefix_bloom_probes(options.memtable_prefix_bloom_probes), max_successive_merges(options.max_successive_merges), min_partial_merge_operands(options.min_partial_merge_operands) {
-  assert(memtable_factory.get() != nullptr);
-}
-DBOptions::DBOptions(): create_if_missing(false), error_if_exists(false), paranoid_checks(false), env(Env::Default()), info_log(nullptr), info_log_level(INFO), max_open_files(1000), statistics(nullptr), disableDataSync(false), use_fsync(false), db_stats_log_interval(1800), db_log_dir(""), wal_dir(""), delete_obsolete_files_period_micros(6 * 60 * 60 * 1000000UL), max_background_compactions(1), max_background_flushes(1), max_log_file_size(0), log_file_time_to_roll(0), keep_log_file_num(1000), max_manifest_file_size(std::numeric_limits<uint64_t>::max()), table_cache_numshardbits(4), table_cache_remove_scan_count_limit(16), WAL_ttl_seconds(0), WAL_size_limit_MB(0), manifest_preallocation_size(4 * 1024 * 1024), allow_os_buffer(true), allow_mmap_reads(false), allow_mmap_writes(true), is_fd_close_on_exec(true), skip_log_error_on_recovery(false), stats_dump_period_sec(3600), advise_random_on_open(true), access_hint_on_compaction_start(NORMAL), use_adaptive_mutex(false), bytes_per_sync(0), allow_thread_local(true) {}
-DBOptions::DBOptions(const Options& options): create_if_missing(options.create_if_missing), error_if_exists(options.error_if_exists), paranoid_checks(options.paranoid_checks), env(options.env), info_log(options.info_log), info_log_level(options.info_log_level), max_open_files(options.max_open_files), statistics(options.statistics), disableDataSync(options.disableDataSync), use_fsync(options.use_fsync), db_stats_log_interval(options.db_stats_log_interval), db_log_dir(options.db_log_dir), wal_dir(options.wal_dir), delete_obsolete_files_period_micros(
-          options.delete_obsolete_files_period_micros), max_background_compactions(options.max_background_compactions), max_background_flushes(options.max_background_flushes), max_log_file_size(options.max_log_file_size), log_file_time_to_roll(options.log_file_time_to_roll), keep_log_file_num(options.keep_log_file_num), max_manifest_file_size(options.max_manifest_file_size), table_cache_numshardbits(options.table_cache_numshardbits), table_cache_remove_scan_count_limit(
-          options.table_cache_remove_scan_count_limit), WAL_ttl_seconds(options.WAL_ttl_seconds), WAL_size_limit_MB(options.WAL_size_limit_MB), manifest_preallocation_size(options.manifest_preallocation_size), allow_os_buffer(options.allow_os_buffer), allow_mmap_reads(options.allow_mmap_reads), allow_mmap_writes(options.allow_mmap_writes), is_fd_close_on_exec(options.is_fd_close_on_exec), skip_log_error_on_recovery(options.skip_log_error_on_recovery), stats_dump_period_sec(options.stats_dump_period_sec), advise_random_on_open(options.advise_random_on_open), access_hint_on_compaction_start(options.access_hint_on_compaction_start), use_adaptive_mutex(options.use_adaptive_mutex), bytes_per_sync(options.bytes_per_sync), allow_thread_local(options.allow_thread_local) {}
