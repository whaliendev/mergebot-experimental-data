diff --git a/./output/system_core/428ebfa5-0e63e61e-5f4e8eac/init@init_first_stage.no_comments_merged.cpp b/./output/system_core/428ebfa5-0e63e61e-5f4e8eac/init@init_first_stage.no_comments_truth.cpp
index d531bcc..a911658 100644
--- a/./output/system_core/428ebfa5-0e63e61e-5f4e8eac/init@init_first_stage.no_comments_merged.cpp
+++ b/./output/system_core/428ebfa5-0e63e61e-5f4e8eac/init@init_first_stage.no_comments_truth.cpp
@@ -3,0 +4 @@
+#include <chrono>
@@ -16,0 +18 @@
+using namespace std::chrono_literals;
@@ -25,2 +27,2 @@ class FirstStageMount {
-    void InitRequiredDevices();
-    void InitVerityDevice(const std::string& verity_device);
+    bool InitRequiredDevices();
+    bool InitVerityDevice(const std::string& verity_device);
@@ -89 +90,0 @@ bool FirstStageMount::DoFirstStageMount() {
-<<<<<<< HEAD
@@ -93,16 +94 @@ bool FirstStageMount::InitDevices() {
-||||||| 5f4e8eac8
-bool FirstStageMount::InitDevices() { return GetRequiredDevices() && InitRequiredDevices(); }
-=======
-bool FirstStageMount::InitDevices() {
-    if (!GetRequiredDevices()) return false;
-    InitRequiredDevices();
-    if (!required_devices_partition_names_.empty()) {
-        LOG(ERROR) << __FUNCTION__ << "(): partition(s) not found: "
-                   << android::base::Join(required_devices_partition_names_, ", ");
-        return false;
-    } else {
-        return true;
-    }
-}
->>>>>>> 0e63e61e
-void FirstStageMount::InitRequiredDevices() {
+bool FirstStageMount::InitRequiredDevices() {
@@ -110 +96 @@ void FirstStageMount::InitRequiredDevices() {
-        return;
+        return true;
@@ -114 +99,0 @@ void FirstStageMount::InitRequiredDevices() {
-<<<<<<< HEAD
@@ -132,23 +116,0 @@ void FirstStageMount::InitRequiredDevices() {
-||||||| 5f4e8eac8
-        bool found = false;
-        auto dm_callback = [&dm_path, &found](uevent* uevent) -> coldboot_action_t {
-            if (uevent->path && uevent->path == dm_path) {
-                found = true;
-                return COLDBOOT_STOP;
-            }
-            return COLDBOOT_CONTINUE;
-        };
-        device_init(("/sys" + dm_path).c_str(), dm_callback);
-        if (!found) {
-            device_poll(dm_callback, 10s);
-        }
-        if (!found) {
-            LOG(ERROR) << "device-mapper device not found";
-            return false;
-        }
-=======
-        device_init(("/sys" + dm_path).c_str(), [&dm_path](uevent* uevent) -> coldboot_action_t {
-            if (uevent->path && uevent->path == dm_path) return COLDBOOT_STOP;
-            return COLDBOOT_CONTINUE;
-        });
->>>>>>> 0e63e61e
@@ -156 +117,0 @@ void FirstStageMount::InitRequiredDevices() {
-<<<<<<< HEAD
@@ -167,18 +127,0 @@ void FirstStageMount::InitRequiredDevices() {
-||||||| 5f4e8eac8
-    auto uevent_callback = [this](uevent* uevent) -> coldboot_action_t {
-        return ColdbootCallback(uevent);
-    };
-    device_init(nullptr, uevent_callback);
-    if (!required_devices_partition_names_.empty()) {
-        device_poll(uevent_callback, 10s);
-    }
-    if (!required_devices_partition_names_.empty()) {
-        LOG(ERROR) << __PRETTY_FUNCTION__ << ": partition(s) not found: "
-                   << android::base::Join(required_devices_partition_names_, ", ");
-        return false;
-    }
-=======
-    device_init(nullptr,
-                [this](uevent* uevent) -> coldboot_action_t { return ColdbootCallback(uevent); });
->>>>>>> 0e63e61e
-<<<<<<< HEAD
@@ -186,6 +128,0 @@ void FirstStageMount::InitRequiredDevices() {
-||||||| 5f4e8eac8
-    device_close();
-    return true;
-=======
-    device_close();
->>>>>>> 0e63e61e
@@ -212 +149 @@ ListenerAction FirstStageMount::UeventCallback(const Uevent& uevent) {
-void FirstStageMount::InitVerityDevice(const std::string& verity_device) {
+bool FirstStageMount::InitVerityDevice(const std::string& verity_device) {
@@ -215 +152 @@ void FirstStageMount::InitVerityDevice(const std::string& verity_device) {
-<<<<<<< HEAD
+    bool found = false;
@@ -218,7 +154,0 @@ void FirstStageMount::InitVerityDevice(const std::string& verity_device) {
-||||||| 5f4e8eac8
-    auto verity_callback = [&](uevent* uevent) -> coldboot_action_t {
-        if (uevent->device_name && uevent->device_name == device_name) {
-=======
-    device_init(syspath.c_str(), [&](uevent* uevent) -> coldboot_action_t {
-        if (uevent->device_name && uevent->device_name == device_name) {
->>>>>>> 0e63e61e
@@ -226 +155,0 @@ void FirstStageMount::InitVerityDevice(const std::string& verity_device) {
-<<<<<<< HEAD
@@ -230,6 +158,0 @@ void FirstStageMount::InitVerityDevice(const std::string& verity_device) {
-||||||| 5f4e8eac8
-            found = true;
-            return COLDBOOT_STOP;
-=======
-            return COLDBOOT_STOP;
->>>>>>> 0e63e61e
@@ -237 +159,0 @@ void FirstStageMount::InitVerityDevice(const std::string& verity_device) {
-<<<<<<< HEAD
@@ -249,18 +170,0 @@ void FirstStageMount::InitVerityDevice(const std::string& verity_device) {
-||||||| 5f4e8eac8
-        return COLDBOOT_CONTINUE;
-    };
-    device_init(syspath.c_str(), verity_callback);
-    if (!found) {
-        device_poll(verity_callback, 10s);
-    }
-    if (!found) {
-        LOG(ERROR) << "dm-verity device not found";
-        return false;
-    }
-    device_close();
-    return true;
-=======
-        return COLDBOOT_CONTINUE;
-    });
-    device_close();
->>>>>>> 0e63e61e
@@ -316 +220 @@ bool FirstStageMountVBootV1::SetUpDmVerity(fstab_rec* fstab_rec) {
-            InitVerityDevice(fstab_rec->blk_device);
+            return InitVerityDevice(fstab_rec->blk_device);
