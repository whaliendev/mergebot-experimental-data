--- a/output/system_core/9abdef0c-ef52ae14-79af3c6d/init@util_test.no_comments_mergebot.cpp
+++ b/output/system_core/9abdef0c-ef52ae14-79af3c6d/init@util_test.no_comments_truth.cpp
@@ -8,34 +8 @@
-TEST(util, write_file_exist, read_file_success, write_file_binary){
-<<<<<<< HEAD
-    std::string s2("");
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
-<<<<<<< HEAD
-    std::string s2("");
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
-<<<<<<< HEAD
-    std::string s2("");
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
+TEST(util, read_file_ENOENT) {
@@ -43,47 +10,4 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-  EXPECT_TRUE(read_file("/proc/version", &s));
-  EXPECT_GT(s.length(), 6U);
-  EXPECT_EQ('\n', s[s.length() - 1]);
-  s[5] = 0;
-  EXPECT_STREQ("Linux", s.c_str());
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
+  errno = 0;
+  EXPECT_FALSE(read_file("/proc/does-not-exist", &s));
+  EXPECT_EQ(ENOENT, errno);
+  EXPECT_EQ("", s);
@@ -91,14 +15,2 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-TEST(util, write_file_exist, read_file_success, write_file_binary){
-<<<<<<< HEAD
-    std::string s2("");
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
-<<<<<<< HEAD
-    std::string s2("");
+TEST(util, read_file_group_writeable) {
+    std::string s("hello");
@@ -107,9 +19,7 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
-<<<<<<< HEAD
-    std::string s2("");
+    EXPECT_TRUE(write_file(tf.path, s)) << strerror(errno);
+    EXPECT_NE(-1, fchmodat(AT_FDCWD, tf.path, 0620, AT_SYMLINK_NOFOLLOW)) << strerror(errno);
+    EXPECT_FALSE(read_file(tf.path, &s)) << strerror(errno);
+    EXPECT_EQ("", s);
+}
+TEST(util, read_file_world_writeable) {
+    std::string s("hello");
@@ -118,7 +28,13 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
+    EXPECT_TRUE(write_file(tf.path, s.c_str())) << strerror(errno);
+    EXPECT_NE(-1, fchmodat(AT_FDCWD, tf.path, 0602, AT_SYMLINK_NOFOLLOW)) << strerror(errno);
+    EXPECT_FALSE(read_file(tf.path, &s)) << strerror(errno);
+    EXPECT_EQ("", s);
+}
+TEST(util, read_file_symbolic_link) {
+    std::string s("hello");
+    errno = 0;
+    EXPECT_FALSE(read_file("/charger", &s));
+    EXPECT_EQ(ELOOP, errno);
+    EXPECT_EQ("", s);
+}
+TEST(util, read_file_success) {
@@ -131,29 +47,2 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
-=======
+}
+TEST(util, write_file_binary) {
@@ -172 +60,0 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
->>>>>>> ef52ae14
@@ -174,24 +62,16 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-TEST(util, write_file_exist, read_file_success, write_file_binary){
-<<<<<<< HEAD
-    std::string s2("");
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
-<<<<<<< HEAD
-    std::string s2("");
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, "1hello1")) << strerror(errno);
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("1hello1", s2.c_str());
-    EXPECT_TRUE(write_file(tf.path, "2ll2"));
-    EXPECT_TRUE(read_file(tf.path, &s2));
-    EXPECT_STREQ("2ll2", s2.c_str());
-||||||| 79af3c6d6
-<<<<<<< HEAD
+TEST(util, write_file_not_exist) {
+    std::string s("hello");
+    std::string s2("hello");
+    TemporaryDir test_dir;
+    std::string path = android::base::StringPrintf("%s/does-not-exist", test_dir.path);
+    EXPECT_TRUE(write_file(path, s));
+    EXPECT_TRUE(read_file(path, &s2));
+    EXPECT_EQ(s, s2);
+    struct stat sb;
+    int fd = open(path.c_str(), O_RDONLY | O_NOFOLLOW | O_CLOEXEC);
+    EXPECT_NE(-1, fd);
+    EXPECT_EQ(0, fstat(fd, &sb));
+    EXPECT_EQ((const unsigned int)(S_IRUSR | S_IWUSR), sb.st_mode & 0777);
+    EXPECT_EQ(0, unlink(path.c_str()));
+}
+TEST(util, write_file_exist) {
@@ -207,41 +87,9 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-||||||| 79af3c6d6
-  std::string s("hello");
-  EXPECT_TRUE(read_file("/proc/version", &s));
-  EXPECT_GT(s.length(), 6U);
-  EXPECT_EQ('\n', s[s.length() - 1]);
-  s[5] = 0;
-  EXPECT_STREQ("Linux", s.c_str());
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
-    TemporaryFile tf;
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
-=======
-    std::string contents("abcd");
-    contents.push_back('\0');
-    contents.push_back('\0');
-    contents.append("dcba");
-    ASSERT_EQ(10u, contents.size());
+}
+TEST(util, decode_uid) {
+  EXPECT_EQ(0U, decode_uid("root"));
+  EXPECT_EQ(UINT_MAX, decode_uid("toot"));
+  EXPECT_EQ(123U, decode_uid("123"));
+}
+TEST(util, is_dir) {
+    TemporaryDir test_dir;
+    EXPECT_TRUE(is_dir(test_dir.path));
@@ -249,7 +97 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
-    ASSERT_TRUE(tf.fd != -1);
-    EXPECT_TRUE(write_file(tf.path, contents)) << strerror(errno);
-    std::string read_back_contents;
-    EXPECT_TRUE(read_file(tf.path, &read_back_contents)) << strerror(errno);
-    EXPECT_EQ(contents, read_back_contents);
-    EXPECT_EQ(10u, read_back_contents.size());
->>>>>>> ef52ae14
+    EXPECT_FALSE(is_dir(tf.path));
@@ -256,0 +99 @@ TEST(util, write_file_exist, read_file_success, write_file_binary){
+#include <selinux/label.h>
