[
  {
    "code": [
      "    constexpr const char native_watchdog_reboot_time[] = \"persist.init.svc.last_fatal_reboot_epoch\";",
      "    uint64_t throttle_window =",
      "            std::chrono::duration_cast<std::chrono::seconds>(std::chrono::hours(24)).count();",
      "    if (((flags_ & SVC_CRITICAL) || is_process_updatable) && !(flags_ & SVC_RESTART) &&",
      "        !was_last_exit_ok_) {"
    ],
    "label": "",
    "index": 0,
    "confidence": 0.7,
    "desc": "Added code or method extraction, accept our side."
  }
]