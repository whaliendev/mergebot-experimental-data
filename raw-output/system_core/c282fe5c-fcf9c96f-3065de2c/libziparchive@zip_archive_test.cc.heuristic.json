[
  {
    "code": [
      "// A zip file whose local file header at offset zero is corrupted.",
      "static const uint8_t kZipFileWithBrokenLfhSignature[] = {",
      "    //[lfh-sig-----------], [lfh contents---------------------------------",
      "    0x50, 0x4b, 0xff, 0xff, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x80,",
      "    //--------------------------------------------------------------------",
      "    0x09, 0x4b, 0xa8, 0x65, 0x32, 0x7e, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,",
      "    //-------------------------------]  [file-name-----------------], [---",
      "    0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x61, 0x2e, 0x74, 0x78, 0x74, 0x55,",
      "    // entry-contents------------------------------------------------------",
      "    0x54, 0x09, 0x00, 0x03, 0x51, 0x24, 0x8b, 0x59, 0x51, 0x24, 0x8b, 0x59,",
      "    //--------------------------------------------------------------------",
      "    0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0x89, 0x42, 0x00, 0x00, 0x04, 0x88,",
      "    //-------------------------------------], [cd-record-sig-------], [---",
      "    0x13, 0x00, 0x00, 0x66, 0x6f, 0x6f, 0x0a, 0x50, 0x4b, 0x01, 0x02, 0x1e,",
      "    // cd-record-----------------------------------------------------------",
      "    0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x80, 0x09, 0x4b, 0xa8,",
      "    //--------------------------------------------------------------------",
      "    0x65, 0x32, 0x7e, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,",
      "    //--------------------------------------------------------------------",
      "    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa0,",
      "    //-]  [lfh-file-header-off-], [file-name-----------------], [extra----",
      "    0x81, 0x00, 0x00, 0x00, 0x00, 0x61, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54,",
      "    //--------------------------------------------------------------------",
      "    0x05, 0x00, 0x03, 0x51, 0x24, 0x8b, 0x59, 0x75, 0x78, 0x0b, 0x00, 0x01,",
      "    //-------------------------------------------------------], [eocd-sig-",
      "    0x04, 0x89, 0x42, 0x00, 0x00, 0x04, 0x88, 0x13, 0x00, 0x00, 0x50, 0x4b,",
      "    //-------], [---------------------------------------------------------",
      "    0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x4b, 0x00,",
      "    //-------------------------------------------]",
      "    0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00};",
      "TEST(ziparchive, BrokenLfhSignature) {",
      "  char kTempFilePattern[] = \"zip_archive_input_XXXXXX\";",
      "  int fd = make_temporary_file(kTempFilePattern);",
      "  ASSERT_NE(-1, fd);",
      "",
      "  ASSERT_EQ(static_cast<int32_t>(sizeof(kZipFileWithBrokenLfhSignature)),",
      "      TEMP_FAILURE_RETRY(write(fd, kZipFileWithBrokenLfhSignature,",
      "                               sizeof(kZipFileWithBrokenLfhSignature))));",
      "  ZipArchiveHandle handle;",
      "  ASSERT_EQ(-1, OpenArchiveFd(fd, \"LeadingNonZipBytes\", &handle));",
      "  close(fd);",
      "}",
      "// A zip file whose local file header at offset zero is corrupted.",
      "static const std::vector<uint8_t> kZipFileWithBrokenLfhSignature{",
      "    //[lfh-sig-----------], [lfh contents---------------------------------",
      "    0x50, 0x4b, 0xff, 0xff, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x80,",
      "    //--------------------------------------------------------------------",
      "    0x09, 0x4b, 0xa8, 0x65, 0x32, 0x7e, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,",
      "    //-------------------------------]  [file-name-----------------], [---",
      "    0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x61, 0x2e, 0x74, 0x78, 0x74, 0x55,",
      "    // entry-contents------------------------------------------------------",
      "    0x54, 0x09, 0x00, 0x03, 0x51, 0x24, 0x8b, 0x59, 0x51, 0x24, 0x8b, 0x59,",
      "    //--------------------------------------------------------------------",
      "    0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0x89, 0x42, 0x00, 0x00, 0x04, 0x88,",
      "    //-------------------------------------], [cd-record-sig-------], [---",
      "    0x13, 0x00, 0x00, 0x66, 0x6f, 0x6f, 0x0a, 0x50, 0x4b, 0x01, 0x02, 0x1e,",
      "    // cd-record-----------------------------------------------------------",
      "    0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x80, 0x09, 0x4b, 0xa8,",
      "    //--------------------------------------------------------------------",
      "    0x65, 0x32, 0x7e, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,",
      "    //--------------------------------------------------------------------",
      "    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa0,",
      "    //-]  [lfh-file-header-off-], [file-name-----------------], [extra----",
      "    0x81, 0x00, 0x00, 0x00, 0x00, 0x61, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54,",
      "    //--------------------------------------------------------------------",
      "    0x05, 0x00, 0x03, 0x51, 0x24, 0x8b, 0x59, 0x75, 0x78, 0x0b, 0x00, 0x01,",
      "    //-------------------------------------------------------], [eocd-sig-",
      "    0x04, 0x89, 0x42, 0x00, 0x00, 0x04, 0x88, 0x13, 0x00, 0x00, 0x50, 0x4b,",
      "    //-------], [---------------------------------------------------------",
      "    0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x4b, 0x00,",
      "    //-------------------------------------------]",
      "    0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00};",
      "TEST(ziparchive, BrokenLfhSignature) {",
      "  TemporaryFile tmp_file;",
      "  ASSERT_NE(-1, tmp_file.fd);",
      "  ASSERT_TRUE(android::base::WriteFully(tmp_file.fd, &kZipFileWithBrokenLfhSignature[0],",
      "                                        kZipFileWithBrokenLfhSignature.size()));",
      "  ZipArchiveHandle handle;",
      "  ASSERT_EQ(-1, OpenArchiveFd(tmp_file.fd, \"LeadingNonZipBytes\", &handle));",
      "}"
    ],
    "label": "",
    "index": 0,
    "confidence": 0.4,
    "desc": "List merge."
  }
]