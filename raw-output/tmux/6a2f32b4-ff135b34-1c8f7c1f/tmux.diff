diff --git a/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_mergebot.h b/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_truth.h
index 0d931fa..214d417 100644
--- a/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_mergebot.h
+++ b/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_truth.h
@@ -4,4 +3,0 @@
-#include <sys/queue.h>
-#include <sys/tree.h>
-#include <bitstring.h>
-#include <stdint.h>
@@ -51,0 +48 @@ struct winlink;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -73,0 +71,2 @@ struct winlink;
+#define KEYC_IS_MOUSE(key) (((key) & KEYC_MASK_KEY) >= KEYC_MOUSE && \
+    ((key) & KEYC_MASK_KEY) < KEYC_BSPACE)
@@ -74,0 +74,14 @@ struct winlink;
+#define KEYC_MOUSE_KEY(name) \
+ KEYC_ ## name ## _PANE, \
+ KEYC_ ## name ## _STATUS, \
+ KEYC_ ## name ## _STATUS_LEFT, \
+ KEYC_ ## name ## _STATUS_RIGHT, \
+ KEYC_ ## name ## _STATUS_DEFAULT, \
+ KEYC_ ## name ## _BORDER
+#define KEYC_MOUSE_STRING(name,s) \
+ { #s "Pane", KEYC_ ## name ## _PANE }, \
+ { #s "Status", KEYC_ ## name ## _STATUS }, \
+ { #s "StatusLeft", KEYC_ ## name ## _STATUS_LEFT }, \
+ { #s "StatusRight", KEYC_ ## name ## _STATUS_RIGHT }, \
+ { #s "StatusDefault", KEYC_ ## name ## _STATUS_DEFAULT }, \
+ { #s "Border", KEYC_ ## name ## _BORDER }
@@ -151 +164,213 @@ enum tty_code_code {
-TTYC_ACSC,TTYC_AX,TTYC_BCE,TTYC_BEL,TTYC_BLINK,TTYC_BOLD,TTYC_CIVIS,TTYC_CLEAR,TTYC_CNORM,TTYC_COLORS,TTYC_CR,TTYC_CS,TTYC_CSR,TTYC_CUB,TTYC_CUB1,TTYC_CUD,TTYC_CUD1,TTYC_CUF,TTYC_CUF1,TTYC_CUP,TTYC_CUU,TTYC_CUU1,TTYC_CVVIS,TTYC_DCH,TTYC_DCH1,TTYC_DIM,TTYC_DL,TTYC_DL1,TTYC_E3,TTYC_ECH,TTYC_ED,TTYC_EL,TTYC_EL1,TTYC_ENACS,TTYC_FSL,TTYC_HOME,TTYC_HPA,TTYC_ICH,TTYC_ICH1,TTYC_IL,TTYC_IL1,TTYC_INDN,TTYC_INVIS,TTYC_KCBT,TTYC_KCUB1,TTYC_KCUD1,TTYC_KCUF1,TTYC_KCUU1,TTYC_KDC2,TTYC_KDC3,TTYC_KDC4,TTYC_KDC5,TTYC_KDC6,TTYC_KDC7,TTYC_KDCH1,TTYC_KDN2,TTYC_KDN3,TTYC_KDN4,TTYC_KDN5,TTYC_KDN6,TTYC_KDN7,TTYC_KEND,TTYC_KEND2,TTYC_KEND3,TTYC_KEND4,TTYC_KEND5,TTYC_KEND6,TTYC_KEND7,TTYC_KF1,TTYC_KF10,TTYC_KF11,TTYC_KF12,TTYC_KF13,TTYC_KF14,TTYC_KF15,TTYC_KF16,TTYC_KF17,TTYC_KF18,TTYC_KF19,TTYC_KF2,TTYC_KF20,TTYC_KF21,TTYC_KF22,TTYC_KF23,TTYC_KF24,TTYC_KF25,TTYC_KF26,TTYC_KF27,TTYC_KF28,TTYC_KF29,TTYC_KF3,TTYC_KF30,TTYC_KF31,TTYC_KF32,TTYC_KF33,TTYC_KF34,TTYC_KF35,TTYC_KF36,TTYC_KF37,TTYC_KF38,TTYC_KF39,TTYC_KF4,TTYC_KF40,TTYC_KF41,TTYC_KF42,TTYC_KF43,TTYC_KF44,TTYC_KF45,TTYC_KF46,TTYC_KF47,TTYC_KF48,TTYC_KF49,TTYC_KF5,TTYC_KF50,TTYC_KF51,TTYC_KF52,TTYC_KF53,TTYC_KF54,TTYC_KF55,TTYC_KF56,TTYC_KF57,TTYC_KF58,TTYC_KF59,TTYC_KF6,TTYC_KF60,TTYC_KF61,TTYC_KF62,TTYC_KF63,TTYC_KF7,TTYC_KF8,TTYC_KF9,TTYC_KHOM2,TTYC_KHOM3,TTYC_KHOM4,TTYC_KHOM5,TTYC_KHOM6,TTYC_KHOM7,TTYC_KHOME,TTYC_KIC2,TTYC_KIC3,TTYC_KIC4,TTYC_KIC5,TTYC_KIC6,TTYC_KIC7,TTYC_KICH1,TTYC_KIND,TTYC_KLFT2,TTYC_KLFT3,TTYC_KLFT4,TTYC_KLFT5,TTYC_KLFT6,TTYC_KLFT7,TTYC_KMOUS,TTYC_KNP,TTYC_KNXT2,TTYC_KNXT3,TTYC_KNXT4,TTYC_KNXT5,TTYC_KNXT6,TTYC_KNXT7,TTYC_KPP,TTYC_KPRV2,TTYC_KPRV3,TTYC_KPRV4,TTYC_KPRV5,TTYC_KPRV6,TTYC_KPRV7,TTYC_KRI,TTYC_KRIT2,TTYC_KRIT3,TTYC_KRIT4,TTYC_KRIT5,TTYC_KRIT6,TTYC_KRIT7,TTYC_KUP2,TTYC_KUP3,TTYC_KUP4,TTYC_KUP5,TTYC_KUP6,TTYC_KUP7,TTYC_MS,TTYC_OP,TTYC_REV,TTYC_RGB,TTYC_RI,TTYC_RIN,TTYC_RMACS,TTYC_RMCUP,TTYC_RMKX,TTYC_SE,TTYC_SETAB,TTYC_SETAF,TTYC_SETRGBB,TTYC_SETRGBF,TTYC_SETULC,TTYC_SGR0,TTYC_SITM,TTYC_SMACS,TTYC_SMCUP,TTYC_SMOL,TTYC_SMKX,TTYC_SMSO,TTYC_SMULX,TTYC_SMUL,TTYC_SMXX,TTYC_SS,TTYC_TC,TTYC_TSL,TTYC_U8,TTYC_VPA,TTYC_XENL,TTYC_XT,};
+ TTYC_ACSC,
+ TTYC_AX,
+ TTYC_BCE,
+ TTYC_BEL,
+ TTYC_BLINK,
+ TTYC_BOLD,
+ TTYC_CIVIS,
+ TTYC_CLEAR,
+ TTYC_CNORM,
+ TTYC_COLORS,
+ TTYC_CR,
+ TTYC_CS,
+ TTYC_CSR,
+ TTYC_CUB,
+ TTYC_CUB1,
+ TTYC_CUD,
+ TTYC_CUD1,
+ TTYC_CUF,
+ TTYC_CUF1,
+ TTYC_CUP,
+ TTYC_CUU,
+ TTYC_CUU1,
+ TTYC_CVVIS,
+ TTYC_DCH,
+ TTYC_DCH1,
+ TTYC_DIM,
+ TTYC_DL,
+ TTYC_DL1,
+ TTYC_E3,
+ TTYC_ECH,
+ TTYC_ED,
+ TTYC_EL,
+ TTYC_EL1,
+ TTYC_ENACS,
+ TTYC_FSL,
+ TTYC_HOME,
+ TTYC_HPA,
+ TTYC_ICH,
+ TTYC_ICH1,
+ TTYC_IL,
+ TTYC_IL1,
+ TTYC_INDN,
+ TTYC_INVIS,
+ TTYC_KCBT,
+ TTYC_KCUB1,
+ TTYC_KCUD1,
+ TTYC_KCUF1,
+ TTYC_KCUU1,
+ TTYC_KDC2,
+ TTYC_KDC3,
+ TTYC_KDC4,
+ TTYC_KDC5,
+ TTYC_KDC6,
+ TTYC_KDC7,
+ TTYC_KDCH1,
+ TTYC_KDN2,
+ TTYC_KDN3,
+ TTYC_KDN4,
+ TTYC_KDN5,
+ TTYC_KDN6,
+ TTYC_KDN7,
+ TTYC_KEND,
+ TTYC_KEND2,
+ TTYC_KEND3,
+ TTYC_KEND4,
+ TTYC_KEND5,
+ TTYC_KEND6,
+ TTYC_KEND7,
+ TTYC_KF1,
+ TTYC_KF10,
+ TTYC_KF11,
+ TTYC_KF12,
+ TTYC_KF13,
+ TTYC_KF14,
+ TTYC_KF15,
+ TTYC_KF16,
+ TTYC_KF17,
+ TTYC_KF18,
+ TTYC_KF19,
+ TTYC_KF2,
+ TTYC_KF20,
+ TTYC_KF21,
+ TTYC_KF22,
+ TTYC_KF23,
+ TTYC_KF24,
+ TTYC_KF25,
+ TTYC_KF26,
+ TTYC_KF27,
+ TTYC_KF28,
+ TTYC_KF29,
+ TTYC_KF3,
+ TTYC_KF30,
+ TTYC_KF31,
+ TTYC_KF32,
+ TTYC_KF33,
+ TTYC_KF34,
+ TTYC_KF35,
+ TTYC_KF36,
+ TTYC_KF37,
+ TTYC_KF38,
+ TTYC_KF39,
+ TTYC_KF4,
+ TTYC_KF40,
+ TTYC_KF41,
+ TTYC_KF42,
+ TTYC_KF43,
+ TTYC_KF44,
+ TTYC_KF45,
+ TTYC_KF46,
+ TTYC_KF47,
+ TTYC_KF48,
+ TTYC_KF49,
+ TTYC_KF5,
+ TTYC_KF50,
+ TTYC_KF51,
+ TTYC_KF52,
+ TTYC_KF53,
+ TTYC_KF54,
+ TTYC_KF55,
+ TTYC_KF56,
+ TTYC_KF57,
+ TTYC_KF58,
+ TTYC_KF59,
+ TTYC_KF6,
+ TTYC_KF60,
+ TTYC_KF61,
+ TTYC_KF62,
+ TTYC_KF63,
+ TTYC_KF7,
+ TTYC_KF8,
+ TTYC_KF9,
+ TTYC_KHOM2,
+ TTYC_KHOM3,
+ TTYC_KHOM4,
+ TTYC_KHOM5,
+ TTYC_KHOM6,
+ TTYC_KHOM7,
+ TTYC_KHOME,
+ TTYC_KIC2,
+ TTYC_KIC3,
+ TTYC_KIC4,
+ TTYC_KIC5,
+ TTYC_KIC6,
+ TTYC_KIC7,
+ TTYC_KICH1,
+ TTYC_KIND,
+ TTYC_KLFT2,
+ TTYC_KLFT3,
+ TTYC_KLFT4,
+ TTYC_KLFT5,
+ TTYC_KLFT6,
+ TTYC_KLFT7,
+ TTYC_KMOUS,
+ TTYC_KNP,
+ TTYC_KNXT2,
+ TTYC_KNXT3,
+ TTYC_KNXT4,
+ TTYC_KNXT5,
+ TTYC_KNXT6,
+ TTYC_KNXT7,
+ TTYC_KPP,
+ TTYC_KPRV2,
+ TTYC_KPRV3,
+ TTYC_KPRV4,
+ TTYC_KPRV5,
+ TTYC_KPRV6,
+ TTYC_KPRV7,
+ TTYC_KRI,
+ TTYC_KRIT2,
+ TTYC_KRIT3,
+ TTYC_KRIT4,
+ TTYC_KRIT5,
+ TTYC_KRIT6,
+ TTYC_KRIT7,
+ TTYC_KUP2,
+ TTYC_KUP3,
+ TTYC_KUP4,
+ TTYC_KUP5,
+ TTYC_KUP6,
+ TTYC_KUP7,
+ TTYC_MS,
+ TTYC_OP,
+ TTYC_REV,
+ TTYC_RGB,
+ TTYC_RI,
+ TTYC_RIN,
+ TTYC_RMACS,
+ TTYC_RMCUP,
+ TTYC_RMKX,
+ TTYC_SE,
+ TTYC_SETAB,
+ TTYC_SETAF,
+ TTYC_SETRGBB,
+ TTYC_SETRGBF,
+ TTYC_SETULC,
+ TTYC_SGR0,
+ TTYC_SITM,
+ TTYC_SMACS,
+ TTYC_SMCUP,
+ TTYC_SMOL,
+ TTYC_SMKX,
+ TTYC_SMSO,
+ TTYC_SMULX,
+ TTYC_SMUL,
+ TTYC_SMXX,
+ TTYC_SS,
+ TTYC_TC,
+ TTYC_TSL,
+ TTYC_U8,
+ TTYC_VPA,
+ TTYC_XENL,
+ TTYC_XT,
+};
@@ -153,2 +378,22 @@ enum msgtype {
-MSG_VERSION = 12,MSG_IDENTIFY_FLAGS = 100,MSG_IDENTIFY_TERM,MSG_IDENTIFY_TTYNAME,MSG_IDENTIFY_OLDCWD,
-MSG_IDENTIFY_STDIN,MSG_IDENTIFY_ENVIRON,MSG_IDENTIFY_DONE,MSG_IDENTIFY_CLIENTPID,MSG_IDENTIFY_CWD,MSG_COMMAND = 200,MSG_DETACH,MSG_DETACHKILL,MSG_EXIT,MSG_EXITED,MSG_EXITING,MSG_LOCK,MSG_READY,MSG_RESIZE,MSG_SHELL,MSG_SHUTDOWN,MSG_OLDSTDERR,
+ MSG_VERSION = 12,
+ MSG_IDENTIFY_FLAGS = 100,
+ MSG_IDENTIFY_TERM,
+ MSG_IDENTIFY_TTYNAME,
+ MSG_IDENTIFY_OLDCWD,
+ MSG_IDENTIFY_STDIN,
+ MSG_IDENTIFY_ENVIRON,
+ MSG_IDENTIFY_DONE,
+ MSG_IDENTIFY_CLIENTPID,
+ MSG_IDENTIFY_CWD,
+ MSG_COMMAND = 200,
+ MSG_DETACH,
+ MSG_DETACHKILL,
+ MSG_EXIT,
+ MSG_EXITED,
+ MSG_EXITING,
+ MSG_LOCK,
+ MSG_READY,
+ MSG_RESIZE,
+ MSG_SHELL,
+ MSG_SHUTDOWN,
+ MSG_OLDSTDERR,
@@ -157 +402,11 @@ MSG_OLDSTDOUT,
-MSG_SUSPEND,MSG_UNLOCK,MSG_WAKEUP,MSG_EXEC,MSG_READ_OPEN = 300,MSG_READ,MSG_READ_DONE,MSG_WRITE_OPEN,MSG_WRITE,MSG_WRITE_READY, MSG_WRITE_CLOSE
+ MSG_SUSPEND,
+ MSG_UNLOCK,
+ MSG_WAKEUP,
+ MSG_EXEC,
+ MSG_READ_OPEN = 300,
+ MSG_READ,
+ MSG_READ_DONE,
+ MSG_WRITE_OPEN,
+ MSG_WRITE,
+ MSG_WRITE_READY,
+ MSG_WRITE_CLOSE
@@ -216 +471,3 @@ enum utf8_state {
-UTF8_MORE,UTF8_DONE, UTF8_ERROR
+ UTF8_MORE,
+ UTF8_DONE,
+ UTF8_ERROR
@@ -219,0 +477 @@ UTF8_MORE,UTF8_DONE, UTF8_ERROR
+#define COLOUR_DEFAULT(c) ((c) == 8 || (c) == 9)
@@ -289 +547,4 @@ enum style_align {
-STYLE_ALIGN_DEFAULT,STYLE_ALIGN_LEFT,STYLE_ALIGN_CENTRE, STYLE_ALIGN_RIGHT
+ STYLE_ALIGN_DEFAULT,
+ STYLE_ALIGN_LEFT,
+ STYLE_ALIGN_CENTRE,
+ STYLE_ALIGN_RIGHT
@@ -292 +553,6 @@ enum style_list {
-STYLE_LIST_OFF,STYLE_LIST_ON,STYLE_LIST_FOCUS,STYLE_LIST_LEFT_MARKER,STYLE_LIST_RIGHT_MARKER,};
+ STYLE_LIST_OFF,
+ STYLE_LIST_ON,
+ STYLE_LIST_FOCUS,
+ STYLE_LIST_LEFT_MARKER,
+ STYLE_LIST_RIGHT_MARKER,
+};
@@ -294 +560,4 @@ enum style_range_type {
-STYLE_RANGE_NONE,STYLE_RANGE_LEFT,STYLE_RANGE_RIGHT, STYLE_RANGE_WINDOW
+ STYLE_RANGE_NONE,
+ STYLE_RANGE_LEFT,
+ STYLE_RANGE_RIGHT,
+ STYLE_RANGE_WINDOW
@@ -302,0 +572 @@ u_int end;
+TAILQ_HEAD(style_ranges, style_range);
@@ -304 +574,3 @@ enum style_default_type {
-STYLE_DEFAULT_BASE,STYLE_DEFAULT_PUSH, STYLE_DEFAULT_POP
+ STYLE_DEFAULT_BASE,
+ STYLE_DEFAULT_PUSH,
+ STYLE_DEFAULT_POP
@@ -359,0 +632,4 @@ struct screen_redraw_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -451,5 +727,2 @@ struct window_pane {
-                       RB_ENTRY(window_pane)
-                       tree_entry;
-                          entry;
-                       RB_ENTRY(window_pane)
-                       RB_ENTRY(window_pane)
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -456,0 +730,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -488,0 +764,3 @@ struct window {
+ RB_ENTRY(window) entry;
+};
+RB_HEAD(windows, window);
@@ -498 +776 @@ struct winlink {
- TAILQ_ENTRY(winlink) sentry;
+ RB_ENTRY(winlink) entry;
@@ -501,0 +780,2 @@ struct winlink {
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
@@ -510 +790,3 @@ enum layout_type {
-LAYOUT_LEFTRIGHT,LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE
+ LAYOUT_LEFTRIGHT,
+ LAYOUT_TOPBOTTOM,
+ LAYOUT_WINDOWPANE
@@ -511,0 +794 @@ LAYOUT_LEFTRIGHT,LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -528,3 +811 @@ struct environ_entry {
-                         entry;
-                         entry;
-                         entry;
+ RB_ENTRY(environ_entry) entry;
@@ -535,3 +816 @@ struct session_group {
-                          entry;
-                          entry;
-                          entry;
+ RB_ENTRY(session_group) entry;
@@ -538,0 +818 @@ struct session_group {
+RB_HEAD(session_groups, session_group);
@@ -561,2 +841 @@ struct session {
- RB_ENTRY(session) entry;
- RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -564,0 +844 @@ struct session {
+RB_HEAD(sessions, session);
@@ -572,0 +853,4 @@ struct session {
+#define MOUSE_BUTTONS(b) ((b) & MOUSE_MASK_BUTTONS)
+#define MOUSE_WHEEL(b) ((b) & MOUSE_MASK_WHEEL)
+#define MOUSE_DRAG(b) ((b) & MOUSE_MASK_DRAG)
+#define MOUSE_RELEASE(b) (((b) & MOUSE_MASK_BUTTONS) == 3)
@@ -608 +892 @@ struct tty_term {
- LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -617,0 +902 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -700,0 +986 @@ struct args_entry;
+RB_HEAD(args_tree, args_entry);
@@ -707 +993,4 @@ enum cmd_find_type {
-CMD_FIND_PANE,CMD_FIND_WINDOW,CMD_FIND_SESSION,};
+ CMD_FIND_PANE,
+ CMD_FIND_WINDOW,
+ CMD_FIND_SESSION,
+};
@@ -734,0 +1024 @@ struct cmd {
+TAILQ_HEAD(cmds, cmd);
@@ -741 +1031,4 @@ enum cmd_retval {
-CMD_RETURN_ERROR = -1,CMD_RETURN_NORMAL = 0,CMD_RETURN_WAIT, CMD_RETURN_STOP
+ CMD_RETURN_ERROR = -1,
+ CMD_RETURN_NORMAL = 0,
+ CMD_RETURN_WAIT,
+ CMD_RETURN_STOP
@@ -744 +1037,3 @@ enum cmd_parse_status {
-CMD_PARSE_EMPTY,CMD_PARSE_ERROR, CMD_PARSE_SUCCESS
+ CMD_PARSE_EMPTY,
+ CMD_PARSE_ERROR,
+ CMD_PARSE_SUCCESS
@@ -764 +1059,3 @@ enum cmdq_type {
-CMDQ_COMMAND,CMDQ_CALLBACK,};
+ CMDQ_COMMAND,
+ CMDQ_CALLBACK,
+};
@@ -796,0 +1094 @@ struct cmdq_item {
+TAILQ_HEAD(cmdq_list, cmdq_item);
@@ -847,0 +1146 @@ struct client_file {
+RB_HEAD(client_files, client_file);
@@ -959,0 +1259 @@ TAILQ_HEAD(, message_entry) message_log;
+TAILQ_HEAD(clients, client);
@@ -967,0 +1268 @@ struct key_binding {
+RB_HEAD(key_bindings, key_binding);
@@ -973,0 +1275,2 @@ struct key_table {
+RB_HEAD(key_tables, key_table);
+RB_HEAD(options_array, options_array_item);
@@ -982 +1285,8 @@ enum options_table_type {
-OPTIONS_TABLE_STRING,OPTIONS_TABLE_NUMBER,OPTIONS_TABLE_KEY,OPTIONS_TABLE_COLOUR,OPTIONS_TABLE_FLAG,OPTIONS_TABLE_CHOICE,OPTIONS_TABLE_STYLE, OPTIONS_TABLE_COMMAND
+ OPTIONS_TABLE_STRING,
+ OPTIONS_TABLE_NUMBER,
+ OPTIONS_TABLE_KEY,
+ OPTIONS_TABLE_COLOUR,
+ OPTIONS_TABLE_FLAG,
+ OPTIONS_TABLE_CHOICE,
+ OPTIONS_TABLE_STYLE,
+ OPTIONS_TABLE_COMMAND
@@ -1373,0 +1684 @@ struct cmdq_item *cmdq_get_command(struct cmd_list *, struct cmd_find_state *,
+#define cmdq_get_callback(cb,data) cmdq_get_callback1(#cb, cb, data)
@@ -1409,0 +1721 @@ int file_cmp(struct client_file *, struct client_file *);
+RB_PROTOTYPE(client_files, client_file, entry, file_cmp);
@@ -1655,0 +1968 @@ int window_cmp(struct window *, struct window *);
+RB_PROTOTYPE(windows, window, entry, window_cmp);
@@ -1656,0 +1970 @@ int winlink_cmp(struct winlink *, struct winlink *);
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1657,0 +1972 @@ int window_pane_cmp(struct window_pane *, struct window_pane *);
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1837,0 +2153 @@ int session_cmp(struct session *, struct session *);
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1890 +2206,3 @@ int utf8_cstrhas(const char *, const struct utf8_data *);
-char *get_proc_cwd(int);
+char *osdep_get_name(int, char *);
+char *osdep_get_cwd(int);
+struct event_base *osdep_event_init(void);
