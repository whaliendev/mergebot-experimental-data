--- a/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_mergebot.h
+++ b/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_truth.h
@@ -4,4 +3,0 @@
-#include <sys/queue.h>
-#include <sys/tree.h>
-#include <bitstring.h>
-#include <stdint.h>
@@ -51,0 +48 @@ struct winlink;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -73,0 +71,2 @@ struct winlink;
+#define KEYC_IS_MOUSE(key) (((key) & KEYC_MASK_KEY) >= KEYC_MOUSE && \
+    ((key) & KEYC_MASK_KEY) < KEYC_BSPACE)
@@ -74,0 +74,14 @@ struct winlink;
+#define KEYC_MOUSE_KEY(name) \
+ KEYC_ ## name ## _PANE, \
+ KEYC_ ## name ## _STATUS, \
+ KEYC_ ## name ## _STATUS_LEFT, \
+ KEYC_ ## name ## _STATUS_RIGHT, \
+ KEYC_ ## name ## _STATUS_DEFAULT, \
+ KEYC_ ## name ## _BORDER
+#define KEYC_MOUSE_STRING(name,s) \
+ { #s "Pane", KEYC_ ## name ## _PANE }, \
+ { #s "Status", KEYC_ ## name ## _STATUS }, \
+ { #s "StatusLeft", KEYC_ ## name ## _STATUS_LEFT }, \
+ { #s "StatusRight", KEYC_ ## name ## _STATUS_RIGHT }, \
+ { #s "StatusDefault", KEYC_ ## name ## _STATUS_DEFAULT }, \
+ { #s "Border", KEYC_ ## name ## _BORDER }
@@ -219,0 +477 @@ UTF8_MORE,UTF8_DONE, UTF8_ERROR
+#define COLOUR_DEFAULT(c) ((c) == 8 || (c) == 9)
@@ -302,0 +572 @@ u_int end;
+TAILQ_HEAD(style_ranges, style_range);
@@ -359,0 +632,4 @@ struct screen_redraw_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -451,5 +727,2 @@ struct window_pane {
-                       RB_ENTRY(window_pane)
-                       tree_entry;
-                          entry;
-                       RB_ENTRY(window_pane)
-                       RB_ENTRY(window_pane)
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -456,0 +730,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -488,0 +764,3 @@ struct window {
+ RB_ENTRY(window) entry;
+};
+RB_HEAD(windows, window);
@@ -498 +776 @@ struct winlink {
- TAILQ_ENTRY(winlink) sentry;
+ RB_ENTRY(winlink) entry;
@@ -501,0 +780,2 @@ struct winlink {
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
@@ -511,0 +794 @@ LAYOUT_LEFTRIGHT,LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -528,3 +811 @@ struct environ_entry {
-                         entry;
-                         entry;
-                         entry;
+ RB_ENTRY(environ_entry) entry;
@@ -535,3 +816 @@ struct session_group {
-                          entry;
-                          entry;
-                          entry;
+ RB_ENTRY(session_group) entry;
@@ -538,0 +818 @@ struct session_group {
+RB_HEAD(session_groups, session_group);
@@ -561,2 +841 @@ struct session {
- RB_ENTRY(session) entry;
- RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -564,0 +844 @@ struct session {
+RB_HEAD(sessions, session);
@@ -572,0 +853,4 @@ struct session {
+#define MOUSE_BUTTONS(b) ((b) & MOUSE_MASK_BUTTONS)
+#define MOUSE_WHEEL(b) ((b) & MOUSE_MASK_WHEEL)
+#define MOUSE_DRAG(b) ((b) & MOUSE_MASK_DRAG)
+#define MOUSE_RELEASE(b) (((b) & MOUSE_MASK_BUTTONS) == 3)
@@ -608 +892 @@ struct tty_term {
- LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -617,0 +902 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -700,0 +986 @@ struct args_entry;
+RB_HEAD(args_tree, args_entry);
@@ -734,0 +1024 @@ struct cmd {
+TAILQ_HEAD(cmds, cmd);
@@ -796,0 +1094 @@ struct cmdq_item {
+TAILQ_HEAD(cmdq_list, cmdq_item);
@@ -847,0 +1146 @@ struct client_file {
+RB_HEAD(client_files, client_file);
@@ -959,0 +1259 @@ TAILQ_HEAD(, message_entry) message_log;
+TAILQ_HEAD(clients, client);
@@ -967,0 +1268 @@ struct key_binding {
+RB_HEAD(key_bindings, key_binding);
@@ -973,0 +1275,2 @@ struct key_table {
+RB_HEAD(key_tables, key_table);
+RB_HEAD(options_array, options_array_item);
@@ -1373,0 +1684 @@ struct cmdq_item *cmdq_get_command(struct cmd_list *, struct cmd_find_state *,
+#define cmdq_get_callback(cb,data) cmdq_get_callback1(#cb, cb, data)
@@ -1409,0 +1721 @@ int file_cmp(struct client_file *, struct client_file *);
+RB_PROTOTYPE(client_files, client_file, entry, file_cmp);
@@ -1655,0 +1968 @@ int window_cmp(struct window *, struct window *);
+RB_PROTOTYPE(windows, window, entry, window_cmp);
@@ -1656,0 +1970 @@ int winlink_cmp(struct winlink *, struct winlink *);
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1657,0 +1972 @@ int window_pane_cmp(struct window_pane *, struct window_pane *);
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1837,0 +2153 @@ int session_cmp(struct session *, struct session *);
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1890 +2206,3 @@ int utf8_cstrhas(const char *, const struct utf8_data *);
-char *get_proc_cwd(int);
+char *osdep_get_name(int, char *);
+char *osdep_get_cwd(int);
+struct event_base *osdep_event_init(void);
