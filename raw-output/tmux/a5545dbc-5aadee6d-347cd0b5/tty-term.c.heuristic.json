[
  {
    "desc": "Added code or method extraction, accept our side.",
    "confidence": 0.7,
    "index": 0,
    "label": "",
    "code": [
      "#if defined(HAVE_TIPARM_S)",
      "\ts = tiparm_s(1, 0, x, a);",
      "#elif defined(HAVE_TIPARM)",
      "\ts = tiparm(x, a);",
      "#else",
      "\ts = tparm((char *)x, a, 0, 0, 0, 0, 0, 0, 0, 0);",
      "#endif"
    ]
  },
  {
    "code": [
      "#if defined(HAVE_TIPARM_S)",
      "\ts = tiparm_s(2, 0, x, a, b);",
      "#elif defined(HAVE_TIPARM)",
      "\ts = tiparm(x, a, b);",
      "#else",
      "\ts = tparm((char *)x, a, b, 0, 0, 0, 0, 0, 0, 0);",
      "#endif"
    ],
    "label": "",
    "index": 1,
    "confidence": 0.7,
    "desc": "Added code or method extraction, accept our side."
  },
  {
    "desc": "Added code or method extraction, accept our side.",
    "confidence": 0.7,
    "index": 2,
    "label": "",
    "code": [
      "#if defined(HAVE_TIPARM_S)",
      "\ts = tiparm_s(3, 0, x, a, b, c);",
      "#elif defined(HAVE_TIPARM)",
      "\ts = tiparm(x, a, b, c);",
      "#else",
      "\ts = tparm((char *)x, a, b, c, 0, 0, 0, 0, 0, 0);",
      "#endif"
    ]
  },
  {
    "desc": "Added code or method extraction, accept our side.",
    "confidence": 0.7,
    "index": 3,
    "label": "",
    "code": [
      "#if defined(HAVE_TIPARM_S)",
      "\ts = tiparm_s(1, 1, x, a);",
      "#elif defined(HAVE_TIPARM)",
      "\ts = tiparm(x, a);",
      "#else",
      "\ts = tparm((char *)x, (long)a, 0, 0, 0, 0, 0, 0, 0, 0);",
      "#endif"
    ]
  },
  {
    "code": [
      "#if defined(HAVE_TIPARM_S)",
      "\ts = tiparm_s(2, 3, x, a, b);",
      "#elif defined(HAVE_TIPARM)",
      "\ts = tiparm(x, a, b);",
      "#else",
      "\ts = tparm((char *)x, (long)a, (long)b, 0, 0, 0, 0, 0, 0, 0);",
      "#endif"
    ],
    "label": "",
    "index": 4,
    "confidence": 0.7,
    "desc": "Added code or method extraction, accept our side."
  }
]