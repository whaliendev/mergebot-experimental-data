--- a/output/tmux/d682ef88-9456258c-71d453f1/tmux.no_comments_mergebot.h
+++ b/output/tmux/d682ef88-9456258c-71d453f1/tmux.no_comments_truth.h
@@ -4,5 +3,0 @@
-#include <sys/queue.h>
-#include <sys/tree.h>
-#include <bitstring.h>
-#include <stdint.h>
-#include <event.h>
@@ -74,0 +70 @@ struct winlink;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -103,0 +100,9 @@ struct winlink;
+#define KEYC_IS_MOUSE(key) \
+ (((key) & KEYC_MASK_KEY) >= KEYC_MOUSE && \
+  ((key) & KEYC_MASK_KEY) < KEYC_BSPACE)
+#define KEYC_IS_UNICODE(key) \
+ (((key) & KEYC_MASK_KEY) > 0x7f && \
+  (((key) & KEYC_MASK_KEY) < KEYC_BASE || \
+   ((key) & KEYC_MASK_KEY) >= KEYC_BASE_END) && \
+  (((key) & KEYC_MASK_KEY) < KEYC_USER || \
+   ((key) & KEYC_MASK_KEY) >= KEYC_USER + KEYC_NUSER))
@@ -104,0 +110,14 @@ struct winlink;
+#define KEYC_MOUSE_KEY(name) \
+ KEYC_ ## name ## _PANE, \
+ KEYC_ ## name ## _STATUS, \
+ KEYC_ ## name ## _STATUS_LEFT, \
+ KEYC_ ## name ## _STATUS_RIGHT, \
+ KEYC_ ## name ## _STATUS_DEFAULT, \
+ KEYC_ ## name ## _BORDER
+#define KEYC_MOUSE_STRING(name,s) \
+ { #s "Pane", KEYC_ ## name ## _PANE }, \
+ { #s "Status", KEYC_ ## name ## _STATUS }, \
+ { #s "StatusLeft", KEYC_ ## name ## _STATUS_LEFT }, \
+ { #s "StatusRight", KEYC_ ## name ## _STATUS_RIGHT }, \
+ { #s "StatusDefault", KEYC_ ## name ## _STATUS_DEFAULT }, \
+ { #s "Border", KEYC_ ## name ## _BORDER }
@@ -274,0 +526 @@ UTF8_DISCARD_MAYBE_COMBINE
+#define COLOUR_DEFAULT(c) ((c) == 8 || (c) == 9)
@@ -343,22 +595,3 @@ struct grid_cell {
-struct grid_cell_entry {
- union {
-  u_int offset;
-  struct {
-   u_char attr;
-   u_char fg;
-   u_char bg;
-   u_char data;
-  } data;
- };
- u_char flags;
-} __packed;
-struct grid_cell_entry {
- union {
-  u_int offset;
-  struct {
-   u_char attr;
-   u_char fg;
-   u_char bg;
-   u_char data;
-  } data;
- };
+struct grid_extd_entry {
+ utf8_char data;
+ u_short attr;
@@ -365,0 +599,4 @@ struct grid_cell_entry {
+ int fg;
+ int bg;
+ int us;
+ u_int link;
@@ -418,0 +671 @@ u_int end;
+TAILQ_HEAD(style_ranges, style_range);
@@ -517,0 +787,4 @@ struct screen_redraw_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -567,0 +841 @@ TAILQ_ENTRY(window_pane_resize) entry;
+TAILQ_HEAD(window_pane_resizes, window_pane_resize);
@@ -622,6 +896,3 @@ struct window_pane {
-                       tree_entry;
-                       tree_entry;
-                    entry;
-                       tree_entry;
-                       tree_entry;
-                       tree_entry;
+ TAILQ_ENTRY(window_pane) entry;
+ TAILQ_ENTRY(window_pane) sentry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -628,0 +900,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -668,0 +942,3 @@ struct window {
+ RB_ENTRY(window) entry;
+};
+RB_HEAD(windows, window);
@@ -679 +955 @@ struct winlink {
- TAILQ_ENTRY(winlink) sentry;
+ RB_ENTRY(winlink) entry;
@@ -682,0 +959,2 @@ struct winlink {
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
@@ -692,0 +973 @@ LAYOUT_LEFTRIGHT,LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -709,3 +990 @@ struct environ_entry {
-                         entry;
-                         entry;
-                         entry;
+ RB_ENTRY(environ_entry) entry;
@@ -716,3 +995 @@ struct session_group {
-                          entry;
-                          entry;
-                          entry;
+ RB_ENTRY(session_group) entry;
@@ -719,0 +997 @@ struct session_group {
+RB_HEAD(session_groups, session_group);
@@ -742,2 +1020 @@ struct session {
- RB_ENTRY(session) entry;
- RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -745,0 +1023 @@ struct session {
+RB_HEAD(sessions, session);
@@ -762,0 +1041,6 @@ struct session {
+#define MOUSE_BUTTONS(b) ((b) & MOUSE_MASK_BUTTONS)
+#define MOUSE_WHEEL(b) \
+ (((b) & MOUSE_MASK_BUTTONS) == MOUSE_WHEEL_UP || \
+  ((b) & MOUSE_MASK_BUTTONS) == MOUSE_WHEEL_DOWN)
+#define MOUSE_DRAG(b) ((b) & MOUSE_MASK_DRAG)
+#define MOUSE_RELEASE(b) (((b) & MOUSE_MASK_BUTTONS) == 3)
@@ -791 +1075 @@ struct tty_term {
- LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -802,0 +1087 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -902,0 +1188 @@ struct message_entry {
+TAILQ_HEAD(message_list, message_entry);
@@ -915,0 +1204 @@ struct args_entry;
+RB_HEAD(args_tree, args_entry);
@@ -1032,0 +1336 @@ struct client_file {
+RB_HEAD(client_files, client_file);
@@ -1039,0 +1344 @@ struct client_window {
+RB_HEAD(client_windows, client_window);
@@ -1199,0 +1505 @@ struct client {
+TAILQ_HEAD(clients, client);
@@ -1210,0 +1521 @@ struct key_binding {
+RB_HEAD(key_bindings, key_binding);
@@ -1217,0 +1529,2 @@ struct key_table {
+RB_HEAD(key_tables, key_table);
+RB_HEAD(options_array, options_array_item);
@@ -1763,0 +2083 @@ struct cmdq_item *cmdq_get_command(struct cmd_list *, struct cmdq_state *);
+#define cmdq_get_callback(cb,data) cmdq_get_callback1(#cb, cb, data)
@@ -1802,0 +2123 @@ int file_cmp(struct client_file *, struct client_file *);
+RB_PROTOTYPE(client_files, client_file, entry, file_cmp);
@@ -1847,0 +2169 @@ int server_create_socket(int, char **);
+RB_PROTOTYPE(client_windows, client_window, entry, server_client_window_cmp);
@@ -2142,0 +2465 @@ int window_cmp(struct window *, struct window *);
+RB_PROTOTYPE(windows, window, entry, window_cmp);
@@ -2143,0 +2467 @@ int winlink_cmp(struct winlink *, struct winlink *);
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -2144,0 +2469 @@ int window_pane_cmp(struct window_pane *, struct window_pane *);
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -2359,0 +2685 @@ int session_cmp(struct session *, struct session *);
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -2420,0 +2747,2 @@ int utf8_try_combined(const struct utf8_data *,
+char *get_proc_name(int, char *);
+char *get_proc_cwd(int);
