--- a/output/tmux/d785c37e-84612a81-b2a9f411/tmux.no_comments_mergebot.h
+++ b/output/tmux/d785c37e-84612a81-b2a9f411/tmux.no_comments_truth.h
@@ -6,6 +5,0 @@
-#include <sys/queue.h>
-#include <bitstring.h>
-#include <getopt.h>
-#include <imsg.h>
-#include <sys/tree.h>
-#include <stdint.h>
@@ -31,0 +26,2 @@ extern char **environ;
+#define fatal(msg) log_fatal("%s: %s", __func__, msg);
+#define fatalx(msg) log_fatalx("%s: %s", __func__, msg);
@@ -282,0 +489 @@ struct mode_key_binding {
+RB_HEAD(mode_key_tree, mode_key_binding);
@@ -309,0 +517,8 @@ struct utf8_data {
+#if defined(DEBUG) && \
+    ((defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
+     (defined(__GNUC__) && __GNUC__ >= 3))
+#define GRID_DEBUG(gd,fmt,...) log_debug2("%s: (sx=%u, sy=%u, hsize=%u) " \
+    fmt, __func__, (gd)->sx, (gd)->sy, (gd)->hsize, ## __VA_ARGS__)
+#else
+#define GRID_DEBUG(...) 
+#endif
@@ -330,6 +545,3 @@ struct grid_cell {
-struct grid_cell {
- u_char attr;
- u_char flags;
- u_char fg;
- u_char bg;
- u_char data;
+struct grid_utf8 {
+ u_char width;
+ u_char data[UTF8_SIZE];
@@ -337,6 +549,6 @@ struct grid_cell {
-struct grid_cell {
- u_char attr;
- u_char flags;
- u_char fg;
- u_char bg;
- u_char data;
+struct grid_line {
+ u_int cellsize;
+ struct grid_cell *celldata;
+ u_int utf8size;
+ struct grid_utf8 *utf8data;
+ int flags;
@@ -378,0 +591 @@ struct job {
+LIST_HEAD(joblist, job);
@@ -404,0 +618,4 @@ struct screen_write_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -487,4 +704,2 @@ struct window_pane {
-                       RB_ENTRY(window_pane)
-                       tree_entry;
-                       RB_ENTRY(window_pane)
-                       RB_ENTRY(window_pane)
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -491,0 +707,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -518,0 +736 @@ TAILQ_HEAD(last_layouts, last_layout) layout_list;
+ARRAY_DECL(windows, struct window *);
@@ -534,0 +753,2 @@ struct winlink {
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
@@ -537,0 +760 @@ LAYOUT_LEFTRIGHT,LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -552,0 +776 @@ struct paste_buffer {
+ARRAY_DECL(paste_stack, struct paste_buffer *);
@@ -557,0 +782 @@ struct environ_entry {
+RB_HEAD(environ, environ_entry);
@@ -561,0 +787 @@ TAILQ_ENTRY(session_group) entry;
+TAILQ_HEAD(session_groups, session_group);
@@ -579,2 +805 @@ struct session {
- RB_ENTRY(session) entry;
- RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -582,0 +808,2 @@ struct session {
+RB_HEAD(sessions, session);
+ARRAY_DECL(sessionslist, struct session *);
@@ -609 +836 @@ struct tty_term {
- LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -616,0 +844 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -673,0 +902 @@ struct status_out {
+RB_HEAD(status_out_tree, status_out);
@@ -729,0 +959 @@ ARRAY_DECL(, struct message_entry) message_log;
+ARRAY_DECL(clients, struct client *);
@@ -739,0 +970,9 @@ struct cmd_ctx {
+#if defined(__GNUC__) && __GNUC__ >= 3
+ void printflike2 (*print)(struct cmd_ctx *, const char *, ...);
+ void printflike2 (*info)(struct cmd_ctx *, const char *, ...);
+ void printflike2 (*error)(struct cmd_ctx *, const char *, ...);
+#else
+ void (*print)(struct cmd_ctx *, const char *, ...);
+ void (*info)(struct cmd_ctx *, const char *, ...);
+ void (*error)(struct cmd_ctx *, const char *, ...);
+#endif
@@ -748,0 +988 @@ struct cmd_list {
+};
@@ -773,0 +1017 @@ struct key_binding {
+RB_HEAD(key_bindings, key_binding);
@@ -790,0 +1041,2 @@ struct format_entry {
+RB_HEAD(format_tree, format_entry);
+ARRAY_DECL(causelist, char *);
@@ -825,0 +1078 @@ int format_cmp(struct format_entry *, struct format_entry *);
+RB_PROTOTYPE(format_tree, format_entry, entry, format_cmp);
@@ -845,0 +1099 @@ int mode_key_cmp(struct mode_key_binding *, struct mode_key_binding *);
+RB_PROTOTYPE(mode_key_tree, mode_key_binding, entry, mode_key_cmp);
@@ -864,0 +1119 @@ int options_cmp(struct options_entry *, struct options_entry *);
+RB_PROTOTYPE(options_tree, options_entry, entry, options_cmp);
@@ -891,0 +1147 @@ int environ_cmp(struct environ_entry *, struct environ_entry *);
+RB_PROTOTYPE(environ, environ_entry, entry, environ_cmp);
@@ -1009,87 +1265 @@ const char *cmd_get_default_path(struct cmd_ctx *, const char *);
-const struct cmd_entry *cmd_table[] = {
- &cmd_attach_session_entry,
- &cmd_bind_key_entry,
- &cmd_break_pane_entry,
- &cmd_capture_pane_entry,
- &cmd_choose_buffer_entry,
- &cmd_choose_client_entry,
- &cmd_choose_list_entry,
- &cmd_choose_session_entry,
- &cmd_choose_tree_entry,
- &cmd_choose_window_entry,
- &cmd_clear_history_entry,
- &cmd_clock_mode_entry,
- &cmd_command_prompt_entry,
- &cmd_confirm_before_entry,
- &cmd_copy_mode_entry,
- &cmd_delete_buffer_entry,
- &cmd_detach_client_entry,
- &cmd_display_message_entry,
- &cmd_display_panes_entry,
- &cmd_find_window_entry,
- &cmd_has_session_entry,
- &cmd_if_shell_entry,
- &cmd_join_pane_entry,
- &cmd_kill_pane_entry,
- &cmd_kill_server_entry,
- &cmd_kill_session_entry,
- &cmd_kill_window_entry,
- &cmd_last_pane_entry,
- &cmd_last_window_entry,
- &cmd_link_window_entry,
- &cmd_list_buffers_entry,
- &cmd_list_clients_entry,
- &cmd_list_commands_entry,
- &cmd_list_keys_entry,
- &cmd_list_panes_entry,
- &cmd_list_sessions_entry,
- &cmd_list_windows_entry,
- &cmd_load_buffer_entry,
- &cmd_lock_client_entry,
- &cmd_lock_server_entry,
- &cmd_lock_session_entry,
- &cmd_move_pane_entry,
- &cmd_move_window_entry,
- &cmd_new_session_entry,
- &cmd_new_window_entry,
- &cmd_next_layout_entry,
- &cmd_next_window_entry,
- &cmd_paste_buffer_entry,
- &cmd_pipe_pane_entry,
- &cmd_previous_layout_entry,
- &cmd_previous_window_entry,
- &cmd_refresh_client_entry,
- &cmd_rename_session_entry,
- &cmd_rename_window_entry,
- &cmd_resize_pane_entry,
- &cmd_respawn_pane_entry,
- &cmd_respawn_window_entry,
- &cmd_rotate_window_entry,
- &cmd_run_shell_entry,
- &cmd_save_buffer_entry,
- &cmd_select_layout_entry,
- &cmd_select_pane_entry,
- &cmd_select_window_entry,
- &cmd_send_keys_entry,
- &cmd_send_prefix_entry,
- &cmd_server_info_entry,
- &cmd_set_buffer_entry,
- &cmd_set_environment_entry,
- &cmd_set_option_entry,
- &cmd_set_window_option_entry,
- &cmd_show_buffer_entry,
- &cmd_show_environment_entry,
- &cmd_show_messages_entry,
- &cmd_show_options_entry,
- &cmd_show_window_options_entry,
- &cmd_source_file_entry,
- &cmd_split_window_entry,
- &cmd_start_server_entry,
- &cmd_suspend_client_entry,
- &cmd_swap_pane_entry,
- &cmd_swap_window_entry,
- &cmd_switch_client_entry,
- &cmd_unbind_key_entry,
- &cmd_unlink_window_entry,
- NULL
-};
+extern const struct cmd_entry *cmd_table[];
@@ -1189,0 +1360 @@ int key_bindings_cmp(struct key_binding *, struct key_binding *);
+RB_PROTOTYPE(key_bindings, key_binding, entry, key_bindings_cmp);
@@ -1249,0 +1421 @@ int status_out_cmp(struct status_out *, struct status_out *);
+RB_PROTOTYPE(status_out_tree, status_out, entry, status_out_cmp);
@@ -1400,0 +1573 @@ int winlink_cmp(struct winlink *, struct winlink *);
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1401,0 +1575 @@ int window_pane_cmp(struct window_pane *, struct window_pane *);
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1550,0 +1725 @@ int session_cmp(struct session *, struct session *);
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1584,0 +1760,3 @@ u_int utf8_split2(u_int, u_char *);
+char *osdep_get_name(int, char *);
+char *osdep_get_cwd(pid_t);
+struct event_base *osdep_event_init(void);
@@ -1602,11 +1779,0 @@ int xvsnprintf(char *, size_t, const char *, va_list);
-struct grid_utf8 {
- u_char width;
- u_char data[UTF8_SIZE];
-} __packed;
-struct grid_line {
- u_int cellsize;
- struct grid_cell *celldata;
- u_int utf8size;
- struct grid_utf8 *utf8data;
- int flags;
-} __packed;
