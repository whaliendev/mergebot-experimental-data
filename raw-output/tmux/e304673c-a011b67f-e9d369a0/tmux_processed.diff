--- a/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_mergebot.h
+++ b/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_truth.h
@@ -32,0 +33 @@ struct tmuxproc;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -47,0 +49,10 @@ struct tmuxproc;
+#define KEYC_IS_MOUSE(key) (((key) & KEYC_MASK_KEY) >= KEYC_MOUSE && \
+    ((key) & KEYC_MASK_KEY) < KEYC_BSPACE)
+#define KEYC_MOUSE_KEY(name) \
+ KEYC_ ## name ## _PANE, \
+ KEYC_ ## name ## _STATUS, \
+ KEYC_ ## name ## _BORDER
+#define KEYC_MOUSE_STRING(name,s) \
+ { #s "Pane", KEYC_ ## name ## _PANE }, \
+ { #s "Status", KEYC_ ## name ## _STATUS }, \
+ { #s "Border", KEYC_ ## name ## _BORDER }
@@ -219,0 +477 @@ struct mode_key_binding {
+RB_HEAD(mode_key_tree, mode_key_binding);
@@ -278,2 +538,2 @@ struct grid_cell {
-  u_char bg;
-  struct grid_cell_rgb bg_rgb;
+  u_char fg;
+  struct grid_cell_rgb fg_rgb;
@@ -348,0 +609 @@ struct job {
+LIST_HEAD(joblist, job);
@@ -380,0 +642,4 @@ struct screen_write_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -444 +709,2 @@ struct window_pane {
-RB_ENTRY(window_pane)RB_ENTRY(window_pane) tree_entry;
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -445,0 +712,2 @@ RB_ENTRY(window_pane)RB_ENTRY(window_pane) tree_entry;
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -474,0 +743 @@ struct window {
+RB_HEAD(windows, window);
@@ -488,0 +758,2 @@ struct winlink {
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
@@ -491,0 +765 @@ LAYOUT_LEFTRIGHT,LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -511,0 +786 @@ TAILQ_ENTRY(session_group) entry;
+TAILQ_HEAD(session_groups, session_group);
@@ -537,0 +813 @@ struct session {
+RB_HEAD(sessions, session);
@@ -545,0 +822,4 @@ struct session {
+#define MOUSE_BUTTONS(b) ((b) & MOUSE_MASK_BUTTONS)
+#define MOUSE_WHEEL(b) ((b) & MOUSE_MASK_WHEEL)
+#define MOUSE_DRAG(b) ((b) & MOUSE_MASK_DRAG)
+#define MOUSE_RELEASE(b) (((b) & MOUSE_MASK_BUTTONS) == 3)
@@ -573 +853 @@ struct tty_term {
- LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -579,0 +860 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -701,0 +983 @@ TAILQ_HEAD(, message_entry) message_log;
+TAILQ_HEAD(clients, client);
@@ -702,0 +985 @@ struct args_entry;
+RB_HEAD(args_tree, args_entry);
@@ -742,0 +1029 @@ struct cmd_list {
+};
@@ -750,0 +1041 @@ struct cmd_q_item {
+TAILQ_HEAD(cmd_q_items, cmd_q_item);
@@ -795,0 +1102 @@ RB_ENTRY(key_binding) entry;
+RB_HEAD(key_bindings, key_binding);
@@ -801,0 +1109 @@ struct key_table {
+RB_HEAD(key_tables, key_table);
@@ -907,0 +1227 @@ int mode_key_cmp(struct mode_key_binding *, struct mode_key_binding *);
+RB_PROTOTYPE(mode_key_tree, mode_key_binding, entry, mode_key_cmp);
@@ -1043,0 +1364 @@ int args_cmp(struct args_entry *, struct args_entry *);
+RB_PROTOTYPE(args_tree, args_entry, entry, args_cmp);
@@ -1107,0 +1429,2 @@ int client_main(struct event_base *, int, char **, int, const char *);
+RB_PROTOTYPE(key_bindings, key_binding, entry, key_bindings_cmp);
+RB_PROTOTYPE(key_tables, key_table, entry, key_table_cmp);
@@ -1305,0 +1629 @@ int window_cmp(struct window *, struct window *);
+RB_PROTOTYPE(windows, window, entry, window_cmp);
@@ -1306,0 +1631 @@ int winlink_cmp(struct winlink *, struct winlink *);
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1307,0 +1633 @@ int window_pane_cmp(struct window_pane *, struct window_pane *);
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1462,0 +1789 @@ int session_cmp(struct session *, struct session *);
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1501 +1827,0 @@ enum utf8_state utf8_append(struct utf8_data *, u_char);
-<<<<<<< HEAD
@@ -1503,5 +1828,0 @@ enum utf8_state utf8_combine(const struct utf8_data *, wchar_t *);
-||||||| e9d369a0
-u_int utf8_combine(const struct utf8_data *);
-=======
-wchar_t utf8_combine(const struct utf8_data *);
->>>>>>> a011b67f
