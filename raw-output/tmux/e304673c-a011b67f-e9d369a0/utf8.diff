diff --git a/output/tmux/e304673c-a011b67f-e9d369a0/utf8.no_comments_mergebot.c b/output/tmux/e304673c-a011b67f-e9d369a0/utf8.no_comments_truth.c
index 1f583e2..cfebdb1 100644
--- a/output/tmux/e304673c-a011b67f-e9d369a0/utf8.no_comments_mergebot.c
+++ b/output/tmux/e304673c-a011b67f-e9d369a0/utf8.no_comments_truth.c
@@ -4 +3,0 @@
-#include <wchar.h>
@@ -64 +63,2 @@ utf8_append(struct utf8_data *ud, u_char ch)
-static intutf8_width(wchar_t wc)
+static int
+utf8_width(wchar_t wc)
@@ -72 +71,0 @@ static intutf8_width(wchar_t wc)
-<<<<<<< HEAD
@@ -74,5 +72,0 @@ enum utf8_state
-||||||| e9d369a0
-u_int
-=======
-wchar_t
->>>>>>> a011b67f
@@ -81 +74,0 @@ utf8_combine(const struct utf8_data *ud, wchar_t *wc)
-<<<<<<< HEAD
@@ -91,22 +83,0 @@ utf8_combine(const struct utf8_data *ud, wchar_t *wc)
-||||||| e9d369a0
- u_int uc;
- uc = 0xfffd;
- switch (ud->size) {
- case 1:
-  uc = ud->data[0];
-  break;
- case 2:
-  uc = ud->data[1] & 0x3f;
-  uc |= (ud->data[0] & 0x1f) << 6;
-  break;
- case 3:
-  uc = ud->data[2] & 0x3f;
-  uc |= (ud->data[1] & 0x3f) << 6;
-  uc |= (ud->data[0] & 0xf) << 12;
-  break;
- case 4:
-  uc = ud->data[3] & 0x3f;
-  uc |= (ud->data[2] & 0x3f) << 6;
-  uc |= (ud->data[1] & 0x3f) << 12;
-  uc |= (ud->data[0] & 0x7) << 18;
-  break;
@@ -114,9 +85,2 @@ utf8_combine(const struct utf8_data *ud, wchar_t *wc)
- return (uc);
-=======
- wchar_t wc;
- if (mbtowc(&wc, ud->data, ud->size) <= 0)
-  return (0xfffd);
- return (wc);
->>>>>>> a011b67f
-}
-enum utf8_stateutf8_split(u_int uc, wchar_t wc, struct utf8_data *ud)
+enum utf8_state
+utf8_split(wchar_t wc, struct utf8_data *ud)
@@ -124 +87,0 @@ enum utf8_stateutf8_split(u_int uc, wchar_t wc, struct utf8_data *ud)
-<<<<<<< HEAD
@@ -129,26 +91,0 @@ enum utf8_stateutf8_split(u_int uc, wchar_t wc, struct utf8_data *ud)
-||||||| e9d369a0
- if (uc < 0x7f) {
-  ud->size = 1;
-  ud->data[0] = uc;
- } else if (uc < 0x7ff) {
-  ud->size = 2;
-  ud->data[0] = 0xc0 | ((uc >> 6) & 0x1f);
-  ud->data[1] = 0x80 | (uc & 0x3f);
- } else if (uc < 0xffff) {
-  ud->size = 3;
-  ud->data[0] = 0xe0 | ((uc >> 12) & 0xf);
-  ud->data[1] = 0x80 | ((uc >> 6) & 0x3f);
-  ud->data[2] = 0x80 | (uc & 0x3f);
- } else if (uc < 0x1fffff) {
-  ud->size = 4;
-  ud->data[0] = 0xf0 | ((uc >> 18) & 0x7);
-  ud->data[1] = 0x80 | ((uc >> 12) & 0x3f);
-  ud->data[2] = 0x80 | ((uc >> 6) & 0x3f);
-  ud->data[3] = 0x80 | (uc & 0x3f);
- } else
-=======
- char s[MB_CUR_MAX];
- int slen;
- slen = wctomb(s, wc);
- if (slen <= 0 || slen > (int)sizeof ud->data)
->>>>>>> a011b67f
