diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/redis/04233097-f1f259de-fdaea2a7/src@redismodule.no_comments_mergebot.h b/home/whalien/codebase/cpp/mergebot/eva/output/redis/04233097-f1f259de-fdaea2a7/src@redismodule.no_comments_merged.h
index 00fae29..f4699ed 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/redis/04233097-f1f259de-fdaea2a7/src@redismodule.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/redis/04233097-f1f259de-fdaea2a7/src@redismodule.no_comments_merged.h
@@ -19 +18,0 @@
-#define REDISMODULE_KEYTYPE_STREAM 7
@@ -21,0 +21 @@
+#define REDISMODULE_KEYTYPE_STREAM 7
@@ -71,6 +71 @@
-#define REDISMODULE_NOTIFY_ALL \
-  (REDISMODULE_NOTIFY_GENERIC | REDISMODULE_NOTIFY_STRING | \
-   REDISMODULE_NOTIFY_LIST | REDISMODULE_NOTIFY_SET | \
-   REDISMODULE_NOTIFY_HASH | REDISMODULE_NOTIFY_ZSET | \
-   REDISMODULE_NOTIFY_EXPIRED | REDISMODULE_NOTIFY_EVICTED | \
-   REDISMODULE_NOTIFY_STREAM | REDISMODULE_NOTIFY_KEY_MISS)
+#define REDISMODULE_NOTIFY_ALL (REDISMODULE_NOTIFY_GENERIC | REDISMODULE_NOTIFY_STRING | REDISMODULE_NOTIFY_LIST | REDISMODULE_NOTIFY_SET | REDISMODULE_NOTIFY_HASH | REDISMODULE_NOTIFY_ZSET | REDISMODULE_NOTIFY_EXPIRED | REDISMODULE_NOTIFY_EVICTED | REDISMODULE_NOTIFY_STREAM | REDISMODULE_NOTIFY_KEY_MISS)
@@ -78,2 +73 @@
-#define REDISMODULE_ERRORMSG_WRONGTYPE \
-  "WRONGTYPE Operation against a key holding the wrong kind of value"
+#define REDISMODULE_ERRORMSG_WRONGTYPE "WRONGTYPE Operation against a key holding the wrong kind of value"
@@ -105,2 +98,0 @@ typedef uint64_t RedisModuleTimerID;
-#define REDISMODULE_EVENT_MODULE_CHANGE 9
-#define REDISMODULE_EVENT_LOADING_PROGRESS 10
@@ -109,0 +102,2 @@ typedef uint64_t RedisModuleTimerID;
+#define REDISMODULE_EVENT_MODULE_CHANGE 9
+#define REDISMODULE_EVENT_LOADING_PROGRESS 10
@@ -114,4 +108,2 @@ typedef struct RedisModuleEvent {
-struct RedisModuleCtx
-    typedef void (*RedisModuleEventCallback)(struct RedisModuleCtx *ctx,
-                                             RedisModuleEvent eid,
-                                             uint64_t subevent, void *data);
+struct RedisModuleCtx;
+typedef void (*RedisModuleEventCallback)(struct RedisModuleCtx *ctx, RedisModuleEvent eid, uint64_t subevent, void *data);
@@ -119,13 +111,44 @@ static const RedisModuleEvent
-    RedisModuleEvent_ReplicationRoleChanged =
-        {REDISMODULE_EVENT_REPLICATION_ROLE_CHANGED, 1},
-    RedisModuleEvent_Persistence = {REDISMODULE_EVENT_PERSISTENCE, 1},
-    RedisModuleEvent_FlushDB = {REDISMODULE_EVENT_FLUSHDB, 1},
-    RedisModuleEvent_Loading = {REDISMODULE_EVENT_LOADING, 1},
-    RedisModuleEvent_ClientChange = {REDISMODULE_EVENT_CLIENT_CHANGE, 1},
-    RedisModuleEvent_Shutdown = {REDISMODULE_EVENT_SHUTDOWN, 1},
-    RedisModuleEvent_ReplicaChange = {REDISMODULE_EVENT_REPLICA_CHANGE, 1},
-    RedisModuleEvent_CronLoop = {REDISMODULE_EVENT_CRON_LOOP, 1},
-    RedisModuleEvent_MasterLinkChange = {REDISMODULE_EVENT_MASTER_LINK_CHANGE,
-                                         1},
-    RedisModuleEvent_ModuleChange = {REDISMODULE_EVENT_MODULE_CHANGE, 1},
-    RedisModuleEvent_LoadingProgress = {REDISMODULE_EVENT_LOADING_PROGRESS, 1};
+    RedisModuleEvent_ReplicationRoleChanged = {
+        REDISMODULE_EVENT_REPLICATION_ROLE_CHANGED,
+        1
+    },
+    RedisModuleEvent_Persistence = {
+        REDISMODULE_EVENT_PERSISTENCE,
+        1
+    },
+    RedisModuleEvent_FlushDB = {
+        REDISMODULE_EVENT_FLUSHDB,
+        1
+    },
+    RedisModuleEvent_Loading = {
+        REDISMODULE_EVENT_LOADING,
+        1
+    },
+    RedisModuleEvent_ClientChange = {
+        REDISMODULE_EVENT_CLIENT_CHANGE,
+        1
+    },
+    RedisModuleEvent_Shutdown = {
+        REDISMODULE_EVENT_SHUTDOWN,
+        1
+    },
+    RedisModuleEvent_ReplicaChange = {
+        REDISMODULE_EVENT_REPLICA_CHANGE,
+        1
+    },
+    RedisModuleEvent_CronLoop = {
+        REDISMODULE_EVENT_CRON_LOOP,
+        1
+    },
+    RedisModuleEvent_MasterLinkChange = {
+        REDISMODULE_EVENT_MASTER_LINK_CHANGE,
+        1
+    },
+    RedisModuleEvent_ModuleChange = {
+        REDISMODULE_EVENT_MODULE_CHANGE,
+        1
+    },
+    RedisModuleEvent_LoadingProgress = {
+        REDISMODULE_EVENT_LOADING_PROGRESS,
+        1
+    };
@@ -191,680 +214 @@ typedef struct RedisModuleFlushInfo {
-#ifndef REDISMODULE_CORE
-typedef long long mstime_t;
-typedef struct RedisModuleCtx RedisModuleCtx;
-typedef struct RedisModuleKey RedisModuleKey;
-typedef struct RedisModuleString RedisModuleString;
-typedef struct RedisModuleCallReply RedisModuleCallReply;
-typedef struct RedisModuleIO RedisModuleIO;
-typedef struct RedisModuleType RedisModuleType;
-typedef struct RedisModuleDigest RedisModuleDigest;
-typedef struct RedisModuleBlockedClient RedisModuleBlockedClient;
-typedef struct RedisModuleClusterInfo RedisModuleClusterInfo;
-typedef struct RedisModuleDict RedisModuleDict;
-typedef struct RedisModuleDictIter RedisModuleDictIter;
-typedef struct RedisModuleCommandFilterCtx RedisModuleCommandFilterCtx;
-typedef struct RedisModuleCommandFilter RedisModuleCommandFilter;
-typedef struct RedisModuleInfoCtx RedisModuleInfoCtx;
-typedef struct RedisModuleServerInfoData RedisModuleServerInfoData;
-typedef int (*RedisModuleCmdFunc)(RedisModuleCtx *ctx, RedisModuleString **argv,
-                                  int argc);
-typedef void (*RedisModuleDisconnectFunc)(RedisModuleCtx *ctx,
-                                          RedisModuleBlockedClient *bc);
-typedef int (*RedisModuleNotificationFunc)(RedisModuleCtx *ctx, int type,
-                                           const char *event,
-                                           RedisModuleString *key);
-typedef void *(*RedisModuleTypeLoadFunc)(RedisModuleIO *rdb, int encver);
-typedef void (*RedisModuleTypeSaveFunc)(RedisModuleIO *rdb, void *value);
-typedef int (*RedisModuleTypeAuxLoadFunc)(RedisModuleIO *rdb, int encver,
-                                          int when);
-typedef void (*RedisModuleTypeAuxSaveFunc)(RedisModuleIO *rdb, int when);
-typedef void (*RedisModuleTypeRewriteFunc)(RedisModuleIO *aof,
-                                           RedisModuleString *key, void *value);
-typedef size_t (*RedisModuleTypeMemUsageFunc)(const void *value);
-typedef void (*RedisModuleTypeDigestFunc)(RedisModuleDigest *digest,
-                                          void *value);
-typedef void (*RedisModuleTypeFreeFunc)(void *value);
-typedef void (*RedisModuleClusterMessageReceiver)(RedisModuleCtx *ctx,
-                                                  const char *sender_id,
-                                                  uint8_t type,
-                                                  const unsigned char *payload,
-                                                  uint32_t len);
-typedef void (*RedisModuleTimerProc)(RedisModuleCtx *ctx, void *data);
-typedef void (*RedisModuleCommandFilterFunc)(
-    RedisModuleCommandFilterCtx *filter);
-typedef void (*RedisModuleForkDoneHandler)(int exitcode, int bysignal,
-                                           void *user_data);
-typedef void (*RedisModuleInfoFunc)(RedisModuleInfoCtx *ctx,
-                                    int for_crash_report);
-#define REDISMODULE_TYPE_METHOD_VERSION 2
-typedef struct RedisModuleTypeMethods {
-  uint64_t version;
-  RedisModuleTypeLoadFunc rdb_load;
-  RedisModuleTypeSaveFunc rdb_save;
-  RedisModuleTypeRewriteFunc aof_rewrite;
-  RedisModuleTypeMemUsageFunc mem_usage;
-  RedisModuleTypeDigestFunc digest;
-  RedisModuleTypeFreeFunc free;
-  RedisModuleTypeAuxLoadFunc aux_load;
-  RedisModuleTypeAuxSaveFunc aux_save;
-  int aux_save_triggers;
-} RedisModuleTypeMethods;
-#define REDISMODULE_GET_API(name) \
-  RedisModule_GetApi("RedisModule_" #name, ((void **)&RedisModule_##name))
-#define REDISMODULE_API_FUNC(x) (*x)
-void *REDISMODULE_API_FUNC(RedisModule_Alloc)(size_t bytes);
-void *REDISMODULE_API_FUNC(RedisModule_Realloc)(void *ptr, size_t bytes);
-void REDISMODULE_API_FUNC(RedisModule_Free)(void *ptr);
-void *REDISMODULE_API_FUNC(RedisModule_Calloc)(size_t nmemb, size_t size);
-char *REDISMODULE_API_FUNC(RedisModule_Strdup)(const char *str);
-int REDISMODULE_API_FUNC(RedisModule_GetApi)(const char *, void *);
-int REDISMODULE_API_FUNC(RedisModule_CreateCommand)(
-    RedisModuleCtx *ctx, const char *name, RedisModuleCmdFunc cmdfunc,
-    const char *strflags, int firstkey, int lastkey, int keystep);
-void REDISMODULE_API_FUNC(RedisModule_SetModuleAttribs)(RedisModuleCtx *ctx,
-                                                        const char *name,
-                                                        int ver, int apiver);
-int REDISMODULE_API_FUNC(RedisModule_IsModuleNameBusy)(const char *name);
-int REDISMODULE_API_FUNC(RedisModule_WrongArity)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithLongLong)(RedisModuleCtx *ctx,
-                                                        long long ll);
-int REDISMODULE_API_FUNC(RedisModule_GetSelectedDb)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_SelectDb)(RedisModuleCtx *ctx, int newid);
-void *REDISMODULE_API_FUNC(RedisModule_OpenKey)(RedisModuleCtx *ctx,
-                                                RedisModuleString *keyname,
-                                                int mode);
-void REDISMODULE_API_FUNC(RedisModule_CloseKey)(RedisModuleKey *kp);
-int REDISMODULE_API_FUNC(RedisModule_KeyType)(RedisModuleKey *kp);
-size_t REDISMODULE_API_FUNC(RedisModule_ValueLength)(RedisModuleKey *kp);
-int REDISMODULE_API_FUNC(RedisModule_ListPush)(RedisModuleKey *kp, int where,
-                                               RedisModuleString *ele);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ListPop)(
-    RedisModuleKey *key, int where);
-RedisModuleCallReply *REDISMODULE_API_FUNC(RedisModule_Call)(
-    RedisModuleCtx *ctx, const char *cmdname, const char *fmt, ...);
-const char *REDISMODULE_API_FUNC(RedisModule_CallReplyProto)(
-    RedisModuleCallReply *reply, size_t *len);
-void REDISMODULE_API_FUNC(RedisModule_FreeCallReply)(
-    RedisModuleCallReply *reply);
-int REDISMODULE_API_FUNC(RedisModule_CallReplyType)(
-    RedisModuleCallReply *reply);
-long long REDISMODULE_API_FUNC(RedisModule_CallReplyInteger)(
-    RedisModuleCallReply *reply);
-size_t REDISMODULE_API_FUNC(RedisModule_CallReplyLength)(
-    RedisModuleCallReply *reply);
-RedisModuleCallReply *REDISMODULE_API_FUNC(RedisModule_CallReplyArrayElement)(
-    RedisModuleCallReply *reply, size_t idx);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateString)(
-    RedisModuleCtx *ctx, const char *ptr, size_t len);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromLongLong)(
-    RedisModuleCtx *ctx, long long ll);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromString)(
-    RedisModuleCtx *ctx, const RedisModuleString *str);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringPrintf)(
-    RedisModuleCtx *ctx, const char *fmt, ...);
-void REDISMODULE_API_FUNC(RedisModule_FreeString)(RedisModuleCtx *ctx,
-                                                  RedisModuleString *str);
-const char *REDISMODULE_API_FUNC(RedisModule_StringPtrLen)(
-    const RedisModuleString *str, size_t *len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithError)(RedisModuleCtx *ctx,
-                                                     const char *err);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithSimpleString)(RedisModuleCtx *ctx,
-                                                            const char *msg);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithArray)(RedisModuleCtx *ctx,
-                                                     long len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithNullArray)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithEmptyArray)(RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_ReplySetArrayLength)(RedisModuleCtx *ctx,
-                                                           long len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithStringBuffer)(RedisModuleCtx *ctx,
-                                                            const char *buf,
-                                                            size_t len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithCString)(RedisModuleCtx *ctx,
-                                                       const char *buf);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithString)(RedisModuleCtx *ctx,
-                                                      RedisModuleString *str);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithEmptyString)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithVerbatimString)(
-    RedisModuleCtx *ctx, const char *buf, size_t len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithNull)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithDouble)(RedisModuleCtx *ctx,
-                                                      double d);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithCallReply)(
-    RedisModuleCtx *ctx, RedisModuleCallReply *reply);
-int REDISMODULE_API_FUNC(RedisModule_StringToLongLong)(
-    const RedisModuleString *str, long long *ll);
-int REDISMODULE_API_FUNC(RedisModule_StringToDouble)(
-    const RedisModuleString *str, double *d);
-void REDISMODULE_API_FUNC(RedisModule_AutoMemory)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_Replicate)(RedisModuleCtx *ctx,
-                                                const char *cmdname,
-                                                const char *fmt, ...);
-int REDISMODULE_API_FUNC(RedisModule_ReplicateVerbatim)(RedisModuleCtx *ctx);
-const char *REDISMODULE_API_FUNC(RedisModule_CallReplyStringPtr)(
-    RedisModuleCallReply *reply, size_t *len);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromCallReply)(
-    RedisModuleCallReply *reply);
-int REDISMODULE_API_FUNC(RedisModule_DeleteKey)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_UnlinkKey)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_StringSet)(RedisModuleKey *key,
-                                                RedisModuleString *str);
-char *REDISMODULE_API_FUNC(RedisModule_StringDMA)(RedisModuleKey *key,
-                                                  size_t *len, int mode);
-int REDISMODULE_API_FUNC(RedisModule_StringTruncate)(RedisModuleKey *key,
-                                                     size_t newlen);
-mstime_t REDISMODULE_API_FUNC(RedisModule_GetExpire)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_SetExpire)(RedisModuleKey *key,
-                                                mstime_t expire);
-int REDISMODULE_API_FUNC(RedisModule_ZsetAdd)(RedisModuleKey *key, double score,
-                                              RedisModuleString *ele,
-                                              int *flagsptr);
-int REDISMODULE_API_FUNC(RedisModule_ZsetIncrby)(RedisModuleKey *key,
-                                                 double score,
-                                                 RedisModuleString *ele,
-                                                 int *flagsptr,
-                                                 double *newscore);
-int REDISMODULE_API_FUNC(RedisModule_ZsetScore)(RedisModuleKey *key,
-                                                RedisModuleString *ele,
-                                                double *score);
-int REDISMODULE_API_FUNC(RedisModule_ZsetRem)(RedisModuleKey *key,
-                                              RedisModuleString *ele,
-                                              int *deleted);
-void REDISMODULE_API_FUNC(RedisModule_ZsetRangeStop)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_ZsetFirstInScoreRange)(
-    RedisModuleKey *key, double min, double max, int minex, int maxex);
-int REDISMODULE_API_FUNC(RedisModule_ZsetLastInScoreRange)(
-    RedisModuleKey *key, double min, double max, int minex, int maxex);
-int REDISMODULE_API_FUNC(RedisModule_ZsetFirstInLexRange)(
-    RedisModuleKey *key, RedisModuleString *min, RedisModuleString *max);
-int REDISMODULE_API_FUNC(RedisModule_ZsetLastInLexRange)(
-    RedisModuleKey *key, RedisModuleString *min, RedisModuleString *max);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ZsetRangeCurrentElement)(
-    RedisModuleKey *key, double *score);
-int REDISMODULE_API_FUNC(RedisModule_ZsetRangeNext)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_ZsetRangePrev)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_ZsetRangeEndReached)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_HashSet)(RedisModuleKey *key, int flags,
-                                              ...);
-int REDISMODULE_API_FUNC(RedisModule_HashGet)(RedisModuleKey *key, int flags,
-                                              ...);
-int REDISMODULE_API_FUNC(RedisModule_IsKeysPositionRequest)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_KeyAtPos)(RedisModuleCtx *ctx, int pos);
-unsigned long long REDISMODULE_API_FUNC(RedisModule_GetClientId)(
-    RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_GetClientInfoById)(void *ci, uint64_t id);
-int REDISMODULE_API_FUNC(RedisModule_GetContextFlags)(RedisModuleCtx *ctx);
-void *REDISMODULE_API_FUNC(RedisModule_PoolAlloc)(RedisModuleCtx *ctx,
-                                                  size_t bytes);
-RedisModuleType *REDISMODULE_API_FUNC(RedisModule_CreateDataType)(
-    RedisModuleCtx *ctx, const char *name, int encver,
-    RedisModuleTypeMethods *typemethods);
-int REDISMODULE_API_FUNC(RedisModule_ModuleTypeSetValue)(RedisModuleKey *key,
-                                                         RedisModuleType *mt,
-                                                         void *value);
-RedisModuleType *REDISMODULE_API_FUNC(RedisModule_ModuleTypeGetType)(
-    RedisModuleKey *key);
-void *REDISMODULE_API_FUNC(RedisModule_ModuleTypeGetValue)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_IsIOError)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_SetModuleOptions)(RedisModuleCtx *ctx,
-                                                        int options);
-int REDISMODULE_API_FUNC(RedisModule_SignalModifiedKey)(
-    RedisModuleCtx *ctx, RedisModuleString *keyname);
-void REDISMODULE_API_FUNC(RedisModule_SaveUnsigned)(RedisModuleIO *io,
-                                                    uint64_t value);
-uint64_t REDISMODULE_API_FUNC(RedisModule_LoadUnsigned)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_SaveSigned)(RedisModuleIO *io,
-                                                  int64_t value);
-int64_t REDISMODULE_API_FUNC(RedisModule_LoadSigned)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_EmitAOF)(RedisModuleIO *io,
-                                               const char *cmdname,
-                                               const char *fmt, ...);
-void REDISMODULE_API_FUNC(RedisModule_SaveString)(RedisModuleIO *io,
-                                                  RedisModuleString *s);
-void REDISMODULE_API_FUNC(RedisModule_SaveStringBuffer)(RedisModuleIO *io,
-                                                        const char *str,
-                                                        size_t len);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_LoadString)(
-    RedisModuleIO *io);
-char *REDISMODULE_API_FUNC(RedisModule_LoadStringBuffer)(RedisModuleIO *io,
-                                                         size_t *lenptr);
-void REDISMODULE_API_FUNC(RedisModule_SaveDouble)(RedisModuleIO *io,
-                                                  double value);
-double REDISMODULE_API_FUNC(RedisModule_LoadDouble)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_SaveFloat)(RedisModuleIO *io,
-                                                 float value);
-float REDISMODULE_API_FUNC(RedisModule_LoadFloat)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_Log)(RedisModuleCtx *ctx,
-                                           const char *level, const char *fmt,
-                                           ...);
-void REDISMODULE_API_FUNC(RedisModule_LogIOError)(RedisModuleIO *io,
-                                                  const char *levelstr,
-                                                  const char *fmt, ...);
-void REDISMODULE_API_FUNC(RedisModule__Assert)(const char *estr,
-                                               const char *file, int line);
-void REDISMODULE_API_FUNC(RedisModule_LatencyAddSample)(const char *event,
-                                                        mstime_t latency);
-int REDISMODULE_API_FUNC(RedisModule_StringAppendBuffer)(RedisModuleCtx *ctx,
-                                                         RedisModuleString *str,
-                                                         const char *buf,
-                                                         size_t len);
-void REDISMODULE_API_FUNC(RedisModule_RetainString)(RedisModuleCtx *ctx,
-                                                    RedisModuleString *str);
-int REDISMODULE_API_FUNC(RedisModule_StringCompare)(RedisModuleString *a,
-                                                    RedisModuleString *b);
-RedisModuleCtx *REDISMODULE_API_FUNC(RedisModule_GetContextFromIO)(
-    RedisModuleIO *io);
-const RedisModuleString *REDISMODULE_API_FUNC(RedisModule_GetKeyNameFromIO)(
-    RedisModuleIO *io);
-const RedisModuleString *REDISMODULE_API_FUNC(
-    RedisModule_GetKeyNameFromModuleKey)(RedisModuleKey *key);
-long long REDISMODULE_API_FUNC(RedisModule_Milliseconds)(void);
-void REDISMODULE_API_FUNC(RedisModule_DigestAddStringBuffer)(
-    RedisModuleDigest *md, unsigned char *ele, size_t len);
-void REDISMODULE_API_FUNC(RedisModule_DigestAddLongLong)(RedisModuleDigest *md,
-                                                         long long ele);
-void REDISMODULE_API_FUNC(RedisModule_DigestEndSequence)(RedisModuleDigest *md);
-RedisModuleDict *REDISMODULE_API_FUNC(RedisModule_CreateDict)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_FreeDict)(RedisModuleCtx *ctx,
-                                                RedisModuleDict *d);
-uint64_t REDISMODULE_API_FUNC(RedisModule_DictSize)(RedisModuleDict *d);
-int REDISMODULE_API_FUNC(RedisModule_DictSetC)(RedisModuleDict *d, void *key,
-                                               size_t keylen, void *ptr);
-int REDISMODULE_API_FUNC(RedisModule_DictReplaceC)(RedisModuleDict *d,
-                                                   void *key, size_t keylen,
-                                                   void *ptr);
-int REDISMODULE_API_FUNC(RedisModule_DictSet)(RedisModuleDict *d,
-                                              RedisModuleString *key,
-                                              void *ptr);
-int REDISMODULE_API_FUNC(RedisModule_DictReplace)(RedisModuleDict *d,
-                                                  RedisModuleString *key,
-                                                  void *ptr);
-void *REDISMODULE_API_FUNC(RedisModule_DictGetC)(RedisModuleDict *d, void *key,
-                                                 size_t keylen, int *nokey);
-void *REDISMODULE_API_FUNC(RedisModule_DictGet)(RedisModuleDict *d,
-                                                RedisModuleString *key,
-                                                int *nokey);
-int REDISMODULE_API_FUNC(RedisModule_DictDelC)(RedisModuleDict *d, void *key,
-                                               size_t keylen, void *oldval);
-int REDISMODULE_API_FUNC(RedisModule_DictDel)(RedisModuleDict *d,
-                                              RedisModuleString *key,
-                                              void *oldval);
-RedisModuleDictIter *REDISMODULE_API_FUNC(RedisModule_DictIteratorStartC)(
-    RedisModuleDict *d, const char *op, void *key, size_t keylen);
-RedisModuleDictIter *REDISMODULE_API_FUNC(RedisModule_DictIteratorStart)(
-    RedisModuleDict *d, const char *op, RedisModuleString *key);
-void REDISMODULE_API_FUNC(RedisModule_DictIteratorStop)(
-    RedisModuleDictIter *di);
-int REDISMODULE_API_FUNC(RedisModule_DictIteratorReseekC)(
-    RedisModuleDictIter *di, const char *op, void *key, size_t keylen);
-int REDISMODULE_API_FUNC(RedisModule_DictIteratorReseek)(
-    RedisModuleDictIter *di, const char *op, RedisModuleString *key);
-void *REDISMODULE_API_FUNC(RedisModule_DictNextC)(RedisModuleDictIter *di,
-                                                  size_t *keylen,
-                                                  void **dataptr);
-void *REDISMODULE_API_FUNC(RedisModule_DictPrevC)(RedisModuleDictIter *di,
-                                                  size_t *keylen,
-                                                  void **dataptr);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_DictNext)(
-    RedisModuleCtx *ctx, RedisModuleDictIter *di, void **dataptr);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_DictPrev)(
-    RedisModuleCtx *ctx, RedisModuleDictIter *di, void **dataptr);
-int REDISMODULE_API_FUNC(RedisModule_DictCompareC)(RedisModuleDictIter *di,
-                                                   const char *op, void *key,
-                                                   size_t keylen);
-int REDISMODULE_API_FUNC(RedisModule_DictCompare)(RedisModuleDictIter *di,
-                                                  const char *op,
-                                                  RedisModuleString *key);
-int REDISMODULE_API_FUNC(RedisModule_RegisterInfoFunc)(RedisModuleCtx *ctx,
-                                                       RedisModuleInfoFunc cb);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddSection)(RedisModuleInfoCtx *ctx,
-                                                     char *name);
-int REDISMODULE_API_FUNC(RedisModule_InfoBeginDictField)(
-    RedisModuleInfoCtx *ctx, char *name);
-int REDISMODULE_API_FUNC(RedisModule_InfoEndDictField)(RedisModuleInfoCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldString)(
-    RedisModuleInfoCtx *ctx, char *field, RedisModuleString *value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldCString)(
-    RedisModuleInfoCtx *ctx, char *field, char *value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldDouble)(
-    RedisModuleInfoCtx *ctx, char *field, double value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldLongLong)(
-    RedisModuleInfoCtx *ctx, char *field, long long value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldULongLong)(
-    RedisModuleInfoCtx *ctx, char *field, unsigned long long value);
-RedisModuleServerInfoData *REDISMODULE_API_FUNC(RedisModule_GetServerInfo)(
-    RedisModuleCtx *ctx, const char *section);
-void REDISMODULE_API_FUNC(RedisModule_FreeServerInfo)(
-    RedisModuleCtx *ctx, RedisModuleServerInfoData *data);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ServerInfoGetField)(
-    RedisModuleCtx *ctx, RedisModuleServerInfoData *data, const char *field);
-const char *REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldC)(
-    RedisModuleServerInfoData *data, const char *field);
-long long REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldSigned)(
-    RedisModuleServerInfoData *data, const char *field, int *out_err);
-unsigned long long REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldUnsigned)(
-    RedisModuleServerInfoData *data, const char *field, int *out_err);
-double REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldDouble)(
-    RedisModuleServerInfoData *data, const char *field, int *out_err);
-int REDISMODULE_API_FUNC(RedisModule_SubscribeToServerEvent)(
-    RedisModuleCtx *ctx, RedisModuleEvent event,
-    RedisModuleEventCallback callback);
-RedisModuleBlockedClient *REDISMODULE_API_FUNC(RedisModule_BlockClientOnKeys)(
-    RedisModuleCtx *ctx, RedisModuleCmdFunc reply_callback,
-    RedisModuleCmdFunc timeout_callback,
-    void (*free_privdata)(RedisModuleCtx *, void *), long long timeout_ms,
-    RedisModuleString **keys, int numkeys, void *privdata);
-void REDISMODULE_API_FUNC(RedisModule_SignalKeyAsReady)(RedisModuleCtx *ctx,
-                                                        RedisModuleString *key);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_GetBlockedClientReadyKey)(
-    RedisModuleCtx *ctx);
-#ifdef REDISMODULE_EXPERIMENTAL_API
-#define REDISMODULE_EXPERIMENTAL_API_VERSION 3
-RedisModuleBlockedClient *REDISMODULE_API_FUNC(RedisModule_BlockClient)(
-    RedisModuleCtx *ctx, RedisModuleCmdFunc reply_callback,
-    RedisModuleCmdFunc timeout_callback,
-    void (*free_privdata)(RedisModuleCtx *, void *), long long timeout_ms);
-int REDISMODULE_API_FUNC(RedisModule_UnblockClient)(
-    RedisModuleBlockedClient *bc, void *privdata);
-int REDISMODULE_API_FUNC(RedisModule_IsBlockedReplyRequest)(
-    RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_IsBlockedTimeoutRequest)(
-    RedisModuleCtx *ctx);
-void *REDISMODULE_API_FUNC(RedisModule_GetBlockedClientPrivateData)(
-    RedisModuleCtx *ctx);
-RedisModuleBlockedClient *REDISMODULE_API_FUNC(
-    RedisModule_GetBlockedClientHandle)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_AbortBlock)(RedisModuleBlockedClient *bc);
-RedisModuleCtx *REDISMODULE_API_FUNC(RedisModule_GetThreadSafeContext)(
-    RedisModuleBlockedClient *bc);
-void REDISMODULE_API_FUNC(RedisModule_FreeThreadSafeContext)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_ThreadSafeContextLock)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_ThreadSafeContextUnlock)(
-    RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_SubscribeToKeyspaceEvents)(
-    RedisModuleCtx *ctx, int types, RedisModuleNotificationFunc cb);
-int REDISMODULE_API_FUNC(RedisModule_NotifyKeyspaceEvent)(
-    RedisModuleCtx *ctx, int type, const char *event, RedisModuleString *key);
-int REDISMODULE_API_FUNC(RedisModule_GetNotifyKeyspaceEvents)();
-int REDISMODULE_API_FUNC(RedisModule_BlockedClientDisconnected)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_RegisterClusterMessageReceiver)(
-    RedisModuleCtx *ctx, uint8_t type,
-    RedisModuleClusterMessageReceiver callback);
-int REDISMODULE_API_FUNC(RedisModule_SendClusterMessage)(RedisModuleCtx *ctx,
-                                                         char *target_id,
-                                                         uint8_t type,
-                                                         unsigned char *msg,
-                                                         uint32_t len);
-int REDISMODULE_API_FUNC(RedisModule_GetClusterNodeInfo)(RedisModuleCtx *ctx,
-                                                         const char *id,
-                                                         char *ip,
-                                                         char *master_id,
-                                                         int *port, int *flags);
-char **REDISMODULE_API_FUNC(RedisModule_GetClusterNodesList)(
-    RedisModuleCtx *ctx, size_t *numnodes);
-void REDISMODULE_API_FUNC(RedisModule_FreeClusterNodesList)(char **ids);
-RedisModuleTimerID REDISMODULE_API_FUNC(RedisModule_CreateTimer)(
-    RedisModuleCtx *ctx, mstime_t period, RedisModuleTimerProc callback,
-    void *data);
-int REDISMODULE_API_FUNC(RedisModule_StopTimer)(RedisModuleCtx *ctx,
-                                                RedisModuleTimerID id,
-                                                void **data);
-int REDISMODULE_API_FUNC(RedisModule_GetTimerInfo)(RedisModuleCtx *ctx,
-                                                   RedisModuleTimerID id,
-                                                   uint64_t *remaining,
-                                                   void **data);
-const char *REDISMODULE_API_FUNC(RedisModule_GetMyClusterID)(void);
-size_t REDISMODULE_API_FUNC(RedisModule_GetClusterSize)(void);
-void REDISMODULE_API_FUNC(RedisModule_GetRandomBytes)(unsigned char *dst,
-                                                      size_t len);
-void REDISMODULE_API_FUNC(RedisModule_GetRandomHexChars)(char *dst, size_t len);
-void REDISMODULE_API_FUNC(RedisModule_SetDisconnectCallback)(
-    RedisModuleBlockedClient *bc, RedisModuleDisconnectFunc callback);
-void REDISMODULE_API_FUNC(RedisModule_SetClusterFlags)(RedisModuleCtx *ctx,
-                                                       uint64_t flags);
-int REDISMODULE_API_FUNC(RedisModule_ExportSharedAPI)(RedisModuleCtx *ctx,
-                                                      const char *apiname,
-                                                      void *func);
-void *REDISMODULE_API_FUNC(RedisModule_GetSharedAPI)(RedisModuleCtx *ctx,
-                                                     const char *apiname);
-RedisModuleCommandFilter *REDISMODULE_API_FUNC(
-    RedisModule_RegisterCommandFilter)(RedisModuleCtx *ctx,
-                                       RedisModuleCommandFilterFunc cb,
-                                       int flags);
-int REDISMODULE_API_FUNC(RedisModule_UnregisterCommandFilter)(
-    RedisModuleCtx *ctx, RedisModuleCommandFilter *filter);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgsCount)(
-    RedisModuleCommandFilterCtx *fctx);
-const RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CommandFilterArgGet)(
-    RedisModuleCommandFilterCtx *fctx, int pos);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgInsert)(
-    RedisModuleCommandFilterCtx *fctx, int pos, RedisModuleString *arg);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgReplace)(
-    RedisModuleCommandFilterCtx *fctx, int pos, RedisModuleString *arg);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgDelete)(
-    RedisModuleCommandFilterCtx *fctx, int pos);
-int REDISMODULE_API_FUNC(RedisModule_Fork)(RedisModuleForkDoneHandler cb,
-                                           void *user_data);
-int REDISMODULE_API_FUNC(RedisModule_ExitFromChild)(int retcode);
-int REDISMODULE_API_FUNC(RedisModule_KillForkChild)(int child_pid);
-#endif
-#define RedisModule_IsAOFClient(id) ((id) == UINT64_MAX)
-static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
-                            int apiver) __attribute__((unused));
-static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
-                            int apiver) {
-  void *getapifuncptr = ((void **)ctx)[0];
-  RedisModule_GetApi =
-      (int (*)(const char *, void *))(unsigned long)getapifuncptr;
-  REDISMODULE_GET_API(Alloc);
-  REDISMODULE_GET_API(Calloc);
-  REDISMODULE_GET_API(Free);
-  REDISMODULE_GET_API(Realloc);
-  REDISMODULE_GET_API(Strdup);
-  REDISMODULE_GET_API(CreateCommand);
-  REDISMODULE_GET_API(SetModuleAttribs);
-  REDISMODULE_GET_API(IsModuleNameBusy);
-  REDISMODULE_GET_API(WrongArity);
-  REDISMODULE_GET_API(ReplyWithLongLong);
-  REDISMODULE_GET_API(ReplyWithError);
-  REDISMODULE_GET_API(ReplyWithSimpleString);
-  REDISMODULE_GET_API(ReplyWithArray);
-  REDISMODULE_GET_API(ReplyWithNullArray);
-  REDISMODULE_GET_API(ReplyWithEmptyArray);
-  REDISMODULE_GET_API(ReplySetArrayLength);
-  REDISMODULE_GET_API(ReplyWithStringBuffer);
-  REDISMODULE_GET_API(ReplyWithCString);
-  REDISMODULE_GET_API(ReplyWithString);
-  REDISMODULE_GET_API(ReplyWithEmptyString);
-  REDISMODULE_GET_API(ReplyWithVerbatimString);
-  REDISMODULE_GET_API(ReplyWithNull);
-  REDISMODULE_GET_API(ReplyWithCallReply);
-  REDISMODULE_GET_API(ReplyWithDouble);
-  REDISMODULE_GET_API(GetSelectedDb);
-  REDISMODULE_GET_API(SelectDb);
-  REDISMODULE_GET_API(OpenKey);
-  REDISMODULE_GET_API(CloseKey);
-  REDISMODULE_GET_API(KeyType);
-  REDISMODULE_GET_API(ValueLength);
-  REDISMODULE_GET_API(ListPush);
-  REDISMODULE_GET_API(ListPop);
-  REDISMODULE_GET_API(StringToLongLong);
-  REDISMODULE_GET_API(StringToDouble);
-  REDISMODULE_GET_API(Call);
-  REDISMODULE_GET_API(CallReplyProto);
-  REDISMODULE_GET_API(FreeCallReply);
-  REDISMODULE_GET_API(CallReplyInteger);
-  REDISMODULE_GET_API(CallReplyType);
-  REDISMODULE_GET_API(CallReplyLength);
-  REDISMODULE_GET_API(CallReplyArrayElement);
-  REDISMODULE_GET_API(CallReplyStringPtr);
-  REDISMODULE_GET_API(CreateStringFromCallReply);
-  REDISMODULE_GET_API(CreateString);
-  REDISMODULE_GET_API(CreateStringFromLongLong);
-  REDISMODULE_GET_API(CreateStringFromString);
-  REDISMODULE_GET_API(CreateStringPrintf);
-  REDISMODULE_GET_API(FreeString);
-  REDISMODULE_GET_API(StringPtrLen);
-  REDISMODULE_GET_API(AutoMemory);
-  REDISMODULE_GET_API(Replicate);
-  REDISMODULE_GET_API(ReplicateVerbatim);
-  REDISMODULE_GET_API(DeleteKey);
-  REDISMODULE_GET_API(UnlinkKey);
-  REDISMODULE_GET_API(StringSet);
-  REDISMODULE_GET_API(StringDMA);
-  REDISMODULE_GET_API(StringTruncate);
-  REDISMODULE_GET_API(GetExpire);
-  REDISMODULE_GET_API(SetExpire);
-  REDISMODULE_GET_API(ZsetAdd);
-  REDISMODULE_GET_API(ZsetIncrby);
-  REDISMODULE_GET_API(ZsetScore);
-  REDISMODULE_GET_API(ZsetRem);
-  REDISMODULE_GET_API(ZsetRangeStop);
-  REDISMODULE_GET_API(ZsetFirstInScoreRange);
-  REDISMODULE_GET_API(ZsetLastInScoreRange);
-  REDISMODULE_GET_API(ZsetFirstInLexRange);
-  REDISMODULE_GET_API(ZsetLastInLexRange);
-  REDISMODULE_GET_API(ZsetRangeCurrentElement);
-  REDISMODULE_GET_API(ZsetRangeNext);
-  REDISMODULE_GET_API(ZsetRangePrev);
-  REDISMODULE_GET_API(ZsetRangeEndReached);
-  REDISMODULE_GET_API(HashSet);
-  REDISMODULE_GET_API(HashGet);
-  REDISMODULE_GET_API(IsKeysPositionRequest);
-  REDISMODULE_GET_API(KeyAtPos);
-  REDISMODULE_GET_API(GetClientId);
-  REDISMODULE_GET_API(GetContextFlags);
-  REDISMODULE_GET_API(PoolAlloc);
-  REDISMODULE_GET_API(CreateDataType);
-  REDISMODULE_GET_API(ModuleTypeSetValue);
-  REDISMODULE_GET_API(ModuleTypeGetType);
-  REDISMODULE_GET_API(ModuleTypeGetValue);
-  REDISMODULE_GET_API(IsIOError);
-  REDISMODULE_GET_API(SetModuleOptions);
-  REDISMODULE_GET_API(SignalModifiedKey);
-  REDISMODULE_GET_API(SaveUnsigned);
-  REDISMODULE_GET_API(LoadUnsigned);
-  REDISMODULE_GET_API(SaveSigned);
-  REDISMODULE_GET_API(LoadSigned);
-  REDISMODULE_GET_API(SaveString);
-  REDISMODULE_GET_API(SaveStringBuffer);
-  REDISMODULE_GET_API(LoadString);
-  REDISMODULE_GET_API(LoadStringBuffer);
-  REDISMODULE_GET_API(SaveDouble);
-  REDISMODULE_GET_API(LoadDouble);
-  REDISMODULE_GET_API(SaveFloat);
-  REDISMODULE_GET_API(LoadFloat);
-  REDISMODULE_GET_API(EmitAOF);
-  REDISMODULE_GET_API(Log);
-  REDISMODULE_GET_API(LogIOError);
-  REDISMODULE_GET_API(_Assert);
-  REDISMODULE_GET_API(LatencyAddSample);
-  REDISMODULE_GET_API(StringAppendBuffer);
-  REDISMODULE_GET_API(RetainString);
-  REDISMODULE_GET_API(StringCompare);
-  REDISMODULE_GET_API(GetContextFromIO);
-  REDISMODULE_GET_API(GetKeyNameFromIO);
-  REDISMODULE_GET_API(GetKeyNameFromModuleKey);
-  REDISMODULE_GET_API(Milliseconds);
-  REDISMODULE_GET_API(DigestAddStringBuffer);
-  REDISMODULE_GET_API(DigestAddLongLong);
-  REDISMODULE_GET_API(DigestEndSequence);
-  REDISMODULE_GET_API(CreateDict);
-  REDISMODULE_GET_API(FreeDict);
-  REDISMODULE_GET_API(DictSize);
-  REDISMODULE_GET_API(DictSetC);
-  REDISMODULE_GET_API(DictReplaceC);
-  REDISMODULE_GET_API(DictSet);
-  REDISMODULE_GET_API(DictReplace);
-  REDISMODULE_GET_API(DictGetC);
-  REDISMODULE_GET_API(DictGet);
-  REDISMODULE_GET_API(DictDelC);
-  REDISMODULE_GET_API(DictDel);
-  REDISMODULE_GET_API(DictIteratorStartC);
-  REDISMODULE_GET_API(DictIteratorStart);
-  REDISMODULE_GET_API(DictIteratorStop);
-  REDISMODULE_GET_API(DictIteratorReseekC);
-  REDISMODULE_GET_API(DictIteratorReseek);
-  REDISMODULE_GET_API(DictNextC);
-  REDISMODULE_GET_API(DictPrevC);
-  REDISMODULE_GET_API(DictNext);
-  REDISMODULE_GET_API(DictPrev);
-  REDISMODULE_GET_API(DictCompare);
-  REDISMODULE_GET_API(DictCompareC);
-  REDISMODULE_GET_API(RegisterInfoFunc);
-  REDISMODULE_GET_API(InfoAddSection);
-  REDISMODULE_GET_API(InfoBeginDictField);
-  REDISMODULE_GET_API(InfoEndDictField);
-  REDISMODULE_GET_API(InfoAddFieldString);
-  REDISMODULE_GET_API(InfoAddFieldCString);
-  REDISMODULE_GET_API(InfoAddFieldDouble);
-  REDISMODULE_GET_API(InfoAddFieldLongLong);
-  REDISMODULE_GET_API(InfoAddFieldULongLong);
-  REDISMODULE_GET_API(GetServerInfo);
-  REDISMODULE_GET_API(FreeServerInfo);
-  REDISMODULE_GET_API(ServerInfoGetField);
-  REDISMODULE_GET_API(ServerInfoGetFieldC);
-  REDISMODULE_GET_API(ServerInfoGetFieldSigned);
-  REDISMODULE_GET_API(ServerInfoGetFieldUnsigned);
-  REDISMODULE_GET_API(ServerInfoGetFieldDouble);
-  REDISMODULE_GET_API(GetClientInfoById);
-  REDISMODULE_GET_API(SubscribeToServerEvent);
-  REDISMODULE_GET_API(BlockClientOnKeys);
-  REDISMODULE_GET_API(SignalKeyAsReady);
-  REDISMODULE_GET_API(GetBlockedClientReadyKey);
-#ifdef REDISMODULE_EXPERIMENTAL_API
-  REDISMODULE_GET_API(GetThreadSafeContext);
-  REDISMODULE_GET_API(FreeThreadSafeContext);
-  REDISMODULE_GET_API(ThreadSafeContextLock);
-  REDISMODULE_GET_API(ThreadSafeContextUnlock);
-  REDISMODULE_GET_API(BlockClient);
-  REDISMODULE_GET_API(UnblockClient);
-  REDISMODULE_GET_API(IsBlockedReplyRequest);
-  REDISMODULE_GET_API(IsBlockedTimeoutRequest);
-  REDISMODULE_GET_API(GetBlockedClientPrivateData);
-  REDISMODULE_GET_API(GetBlockedClientHandle);
-  REDISMODULE_GET_API(AbortBlock);
-  REDISMODULE_GET_API(SetDisconnectCallback);
-  REDISMODULE_GET_API(SubscribeToKeyspaceEvents);
-  REDISMODULE_GET_API(NotifyKeyspaceEvent);
-  REDISMODULE_GET_API(GetNotifyKeyspaceEvents);
-  REDISMODULE_GET_API(BlockedClientDisconnected);
-  REDISMODULE_GET_API(RegisterClusterMessageReceiver);
-  REDISMODULE_GET_API(SendClusterMessage);
-  REDISMODULE_GET_API(GetClusterNodeInfo);
-  REDISMODULE_GET_API(GetClusterNodesList);
-  REDISMODULE_GET_API(FreeClusterNodesList);
-  REDISMODULE_GET_API(CreateTimer);
-  REDISMODULE_GET_API(StopTimer);
-  REDISMODULE_GET_API(GetTimerInfo);
-  REDISMODULE_GET_API(GetMyClusterID);
-  REDISMODULE_GET_API(GetClusterSize);
-  REDISMODULE_GET_API(GetRandomBytes);
-  REDISMODULE_GET_API(GetRandomHexChars);
-  REDISMODULE_GET_API(SetClusterFlags);
-  REDISMODULE_GET_API(ExportSharedAPI);
-  REDISMODULE_GET_API(GetSharedAPI);
-  REDISMODULE_GET_API(RegisterCommandFilter);
-  REDISMODULE_GET_API(UnregisterCommandFilter);
-  REDISMODULE_GET_API(CommandFilterArgsCount);
-  REDISMODULE_GET_API(CommandFilterArgGet);
-  REDISMODULE_GET_API(CommandFilterArgInsert);
-  REDISMODULE_GET_API(CommandFilterArgReplace);
-  REDISMODULE_GET_API(CommandFilterArgDelete);
-  REDISMODULE_GET_API(Fork);
-  REDISMODULE_GET_API(ExitFromChild);
-  REDISMODULE_GET_API(KillForkChild);
-#endif
-  if (RedisModule_IsModuleNameBusy && RedisModule_IsModuleNameBusy(name))
-    return REDISMODULE_ERR;
-  RedisModule_SetModuleAttribs(ctx, name, ver, apiver);
-  return REDISMODULE_OK;
-}
-#define RedisModule_Assert(_e) \
-  ((_e) ? (void)0 : (RedisModule__Assert(#_e, __FILE__, __LINE__), exit(1)))
-#else
-#define RedisModuleString robj
-#endif #define REDISMODULE_MODULE_CHANGE_VERSION 1
+#define REDISMODULE_MODULE_CHANGE_VERSION 1
@@ -905,0 +250 @@ typedef struct RedisModuleInfoCtx RedisModuleInfoCtx;
+typedef struct RedisModuleServerInfoData RedisModuleServerInfoData;
@@ -907,7 +252,3 @@ typedef struct RedisModuleScanCursor RedisModuleScanCursor;
-typedef int (*RedisModuleCmdFunc)(RedisModuleCtx *ctx, RedisModuleString **argv,
-                                  int argc);
-typedef void (*RedisModuleDisconnectFunc)(RedisModuleCtx *ctx,
-                                          RedisModuleBlockedClient *bc);
-typedef int (*RedisModuleNotificationFunc)(RedisModuleCtx *ctx, int type,
-                                           const char *event,
-                                           RedisModuleString *key);
+typedef int (*RedisModuleCmdFunc)(RedisModuleCtx *ctx, RedisModuleString **argv, int argc);
+typedef void (*RedisModuleDisconnectFunc)(RedisModuleCtx *ctx, RedisModuleBlockedClient *bc);
+typedef int (*RedisModuleNotificationFunc)(RedisModuleCtx *ctx, int type, const char *event, RedisModuleString *key);
@@ -916,2 +257 @@ typedef void (*RedisModuleTypeSaveFunc)(RedisModuleIO *rdb, void *value);
-typedef int (*RedisModuleTypeAuxLoadFunc)(RedisModuleIO *rdb, int encver,
-                                          int when);
+typedef int (*RedisModuleTypeAuxLoadFunc)(RedisModuleIO *rdb, int encver, int when);
@@ -919,2 +259 @@ typedef void (*RedisModuleTypeAuxSaveFunc)(RedisModuleIO *rdb, int when);
-typedef void (*RedisModuleTypeRewriteFunc)(RedisModuleIO *aof,
-                                           RedisModuleString *key, void *value);
+typedef void (*RedisModuleTypeRewriteFunc)(RedisModuleIO *aof, RedisModuleString *key, void *value);
@@ -922,2 +261 @@ typedef size_t (*RedisModuleTypeMemUsageFunc)(const void *value);
-typedef void (*RedisModuleTypeDigestFunc)(RedisModuleDigest *digest,
-                                          void *value);
+typedef void (*RedisModuleTypeDigestFunc)(RedisModuleDigest *digest, void *value);
@@ -925,5 +263 @@ typedef void (*RedisModuleTypeFreeFunc)(void *value);
-typedef void (*RedisModuleClusterMessageReceiver)(RedisModuleCtx *ctx,
-                                                  const char *sender_id,
-                                                  uint8_t type,
-                                                  const unsigned char *payload,
-                                                  uint32_t len);
+typedef void (*RedisModuleClusterMessageReceiver)(RedisModuleCtx *ctx, const char *sender_id, uint8_t type, const unsigned char *payload, uint32_t len);
@@ -931,12 +265,5 @@ typedef void (*RedisModuleTimerProc)(RedisModuleCtx *ctx, void *data);
-typedef void (*RedisModuleCommandFilterFunc)(
-    RedisModuleCommandFilterCtx *filter);
-typedef void (*RedisModuleForkDoneHandler)(int exitcode, int bysignal,
-                                           void *user_data);
-typedef void (*RedisModuleInfoFunc)(RedisModuleInfoCtx *ctx,
-                                    int for_crash_report);
-typedef void (*RedisModuleScanCB)(RedisModuleCtx *ctx,
-                                  RedisModuleString *keyname,
-                                  RedisModuleKey *key, void *privdata);
-typedef void (*RedisModuleScanKeyCB)(RedisModuleKey *key,
-                                     RedisModuleString *field,
-                                     RedisModuleString *value, void *privdata);
+typedef void (*RedisModuleCommandFilterFunc) (RedisModuleCommandFilterCtx *filter);
+typedef void (*RedisModuleForkDoneHandler) (int exitcode, int bysignal, void *user_data);
+typedef void (*RedisModuleInfoFunc)(RedisModuleInfoCtx *ctx, int for_crash_report);
+typedef void (*RedisModuleScanCB)(RedisModuleCtx *ctx, RedisModuleString *keyname, RedisModuleKey *key, void *privdata);
+typedef void (*RedisModuleScanKeyCB)(RedisModuleKey *key, RedisModuleString *field, RedisModuleString *value, void *privdata);
@@ -965,6 +292,2 @@ int REDISMODULE_API_FUNC(RedisModule_GetApi)(const char *, void *);
-int REDISMODULE_API_FUNC(RedisModule_CreateCommand)(
-    RedisModuleCtx *ctx, const char *name, RedisModuleCmdFunc cmdfunc,
-    const char *strflags, int firstkey, int lastkey, int keystep);
-void REDISMODULE_API_FUNC(RedisModule_SetModuleAttribs)(RedisModuleCtx *ctx,
-                                                        const char *name,
-                                                        int ver, int apiver);
+int REDISMODULE_API_FUNC(RedisModule_CreateCommand)(RedisModuleCtx *ctx, const char *name, RedisModuleCmdFunc cmdfunc, const char *strflags, int firstkey, int lastkey, int keystep);
+void REDISMODULE_API_FUNC(RedisModule_SetModuleAttribs)(RedisModuleCtx *ctx, const char *name, int ver, int apiver);
@@ -973,2 +296 @@ int REDISMODULE_API_FUNC(RedisModule_WrongArity)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithLongLong)(RedisModuleCtx *ctx,
-                                                        long long ll);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithLongLong)(RedisModuleCtx *ctx, long long ll);
@@ -977,3 +299 @@ int REDISMODULE_API_FUNC(RedisModule_SelectDb)(RedisModuleCtx *ctx, int newid);
-void *REDISMODULE_API_FUNC(RedisModule_OpenKey)(RedisModuleCtx *ctx,
-                                                RedisModuleString *keyname,
-                                                int mode);
+void *REDISMODULE_API_FUNC(RedisModule_OpenKey)(RedisModuleCtx *ctx, RedisModuleString *keyname, int mode);
@@ -983,38 +303,19 @@ size_t REDISMODULE_API_FUNC(RedisModule_ValueLength)(RedisModuleKey *kp);
-int REDISMODULE_API_FUNC(RedisModule_ListPush)(RedisModuleKey *kp, int where,
-                                               RedisModuleString *ele);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ListPop)(
-    RedisModuleKey *key, int where);
-RedisModuleCallReply *REDISMODULE_API_FUNC(RedisModule_Call)(
-    RedisModuleCtx *ctx, const char *cmdname, const char *fmt, ...);
-const char *REDISMODULE_API_FUNC(RedisModule_CallReplyProto)(
-    RedisModuleCallReply *reply, size_t *len);
-void REDISMODULE_API_FUNC(RedisModule_FreeCallReply)(
-    RedisModuleCallReply *reply);
-int REDISMODULE_API_FUNC(RedisModule_CallReplyType)(
-    RedisModuleCallReply *reply);
-long long REDISMODULE_API_FUNC(RedisModule_CallReplyInteger)(
-    RedisModuleCallReply *reply);
-size_t REDISMODULE_API_FUNC(RedisModule_CallReplyLength)(
-    RedisModuleCallReply *reply);
-RedisModuleCallReply *REDISMODULE_API_FUNC(RedisModule_CallReplyArrayElement)(
-    RedisModuleCallReply *reply, size_t idx);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateString)(
-    RedisModuleCtx *ctx, const char *ptr, size_t len);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromLongLong)(
-    RedisModuleCtx *ctx, long long ll);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromLongDouble)(
-    RedisModuleCtx *ctx, long double ld, int humanfriendly);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromString)(
-    RedisModuleCtx *ctx, const RedisModuleString *str);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringPrintf)(
-    RedisModuleCtx *ctx, const char *fmt, ...);
-void REDISMODULE_API_FUNC(RedisModule_FreeString)(RedisModuleCtx *ctx,
-                                                  RedisModuleString *str);
-const char *REDISMODULE_API_FUNC(RedisModule_StringPtrLen)(
-    const RedisModuleString *str, size_t *len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithError)(RedisModuleCtx *ctx,
-                                                     const char *err);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithSimpleString)(RedisModuleCtx *ctx,
-                                                            const char *msg);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithArray)(RedisModuleCtx *ctx,
-                                                     long len);
+int REDISMODULE_API_FUNC(RedisModule_ListPush)(RedisModuleKey *kp, int where, RedisModuleString *ele);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ListPop)(RedisModuleKey *key, int where);
+RedisModuleCallReply *REDISMODULE_API_FUNC(RedisModule_Call)(RedisModuleCtx *ctx, const char *cmdname, const char *fmt, ...);
+const char *REDISMODULE_API_FUNC(RedisModule_CallReplyProto)(RedisModuleCallReply *reply, size_t *len);
+void REDISMODULE_API_FUNC(RedisModule_FreeCallReply)(RedisModuleCallReply *reply);
+int REDISMODULE_API_FUNC(RedisModule_CallReplyType)(RedisModuleCallReply *reply);
+long long REDISMODULE_API_FUNC(RedisModule_CallReplyInteger)(RedisModuleCallReply *reply);
+size_t REDISMODULE_API_FUNC(RedisModule_CallReplyLength)(RedisModuleCallReply *reply);
+RedisModuleCallReply *REDISMODULE_API_FUNC(RedisModule_CallReplyArrayElement)(RedisModuleCallReply *reply, size_t idx);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateString)(RedisModuleCtx *ctx, const char *ptr, size_t len);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromLongLong)(RedisModuleCtx *ctx, long long ll);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromLongDouble)(RedisModuleCtx *ctx, long double ld, int humanfriendly);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromString)(RedisModuleCtx *ctx, const RedisModuleString *str);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringPrintf)(RedisModuleCtx *ctx, const char *fmt, ...);
+void REDISMODULE_API_FUNC(RedisModule_FreeString)(RedisModuleCtx *ctx, RedisModuleString *str);
+const char *REDISMODULE_API_FUNC(RedisModule_StringPtrLen)(const RedisModuleString *str, size_t *len);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithError)(RedisModuleCtx *ctx, const char *err);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithSimpleString)(RedisModuleCtx *ctx, const char *msg);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithArray)(RedisModuleCtx *ctx, long len);
@@ -1023,9 +324,4 @@ int REDISMODULE_API_FUNC(RedisModule_ReplyWithEmptyArray)(RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_ReplySetArrayLength)(RedisModuleCtx *ctx,
-                                                           long len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithStringBuffer)(RedisModuleCtx *ctx,
-                                                            const char *buf,
-                                                            size_t len);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithCString)(RedisModuleCtx *ctx,
-                                                       const char *buf);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithString)(RedisModuleCtx *ctx,
-                                                      RedisModuleString *str);
+void REDISMODULE_API_FUNC(RedisModule_ReplySetArrayLength)(RedisModuleCtx *ctx, long len);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithStringBuffer)(RedisModuleCtx *ctx, const char *buf, size_t len);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithCString)(RedisModuleCtx *ctx, const char *buf);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithString)(RedisModuleCtx *ctx, RedisModuleString *str);
@@ -1033,2 +329 @@ int REDISMODULE_API_FUNC(RedisModule_ReplyWithEmptyString)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithVerbatimString)(
-    RedisModuleCtx *ctx, const char *buf, size_t len);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithVerbatimString)(RedisModuleCtx *ctx, const char *buf, size_t len);
@@ -1036,12 +331,6 @@ int REDISMODULE_API_FUNC(RedisModule_ReplyWithNull)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithDouble)(RedisModuleCtx *ctx,
-                                                      double d);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithLongDouble)(RedisModuleCtx *ctx,
-                                                          long double d);
-int REDISMODULE_API_FUNC(RedisModule_ReplyWithCallReply)(
-    RedisModuleCtx *ctx, RedisModuleCallReply *reply);
-int REDISMODULE_API_FUNC(RedisModule_StringToLongLong)(
-    const RedisModuleString *str, long long *ll);
-int REDISMODULE_API_FUNC(RedisModule_StringToDouble)(
-    const RedisModuleString *str, double *d);
-int REDISMODULE_API_FUNC(RedisModule_StringToLongDouble)(
-    const RedisModuleString *str, long double *d);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithDouble)(RedisModuleCtx *ctx, double d);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithLongDouble)(RedisModuleCtx *ctx, long double d);
+int REDISMODULE_API_FUNC(RedisModule_ReplyWithCallReply)(RedisModuleCtx *ctx, RedisModuleCallReply *reply);
+int REDISMODULE_API_FUNC(RedisModule_StringToLongLong)(const RedisModuleString *str, long long *ll);
+int REDISMODULE_API_FUNC(RedisModule_StringToDouble)(const RedisModuleString *str, double *d);
+int REDISMODULE_API_FUNC(RedisModule_StringToLongDouble)(const RedisModuleString *str, long double *d);
@@ -1049,3 +338 @@ void REDISMODULE_API_FUNC(RedisModule_AutoMemory)(RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_Replicate)(RedisModuleCtx *ctx,
-                                                const char *cmdname,
-                                                const char *fmt, ...);
+int REDISMODULE_API_FUNC(RedisModule_Replicate)(RedisModuleCtx *ctx, const char *cmdname, const char *fmt, ...);
@@ -1053,4 +340,2 @@ int REDISMODULE_API_FUNC(RedisModule_ReplicateVerbatim)(RedisModuleCtx *ctx);
-const char *REDISMODULE_API_FUNC(RedisModule_CallReplyStringPtr)(
-    RedisModuleCallReply *reply, size_t *len);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromCallReply)(
-    RedisModuleCallReply *reply);
+const char *REDISMODULE_API_FUNC(RedisModule_CallReplyStringPtr)(RedisModuleCallReply *reply, size_t *len);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CreateStringFromCallReply)(RedisModuleCallReply *reply);
@@ -1059,6 +344,3 @@ int REDISMODULE_API_FUNC(RedisModule_UnlinkKey)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_StringSet)(RedisModuleKey *key,
-                                                RedisModuleString *str);
-char *REDISMODULE_API_FUNC(RedisModule_StringDMA)(RedisModuleKey *key,
-                                                  size_t *len, int mode);
-int REDISMODULE_API_FUNC(RedisModule_StringTruncate)(RedisModuleKey *key,
-                                                     size_t newlen);
+int REDISMODULE_API_FUNC(RedisModule_StringSet)(RedisModuleKey *key, RedisModuleString *str);
+char *REDISMODULE_API_FUNC(RedisModule_StringDMA)(RedisModuleKey *key, size_t *len, int mode);
+int REDISMODULE_API_FUNC(RedisModule_StringTruncate)(RedisModuleKey *key, size_t newlen);
@@ -1066,2 +348 @@ mstime_t REDISMODULE_API_FUNC(RedisModule_GetExpire)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_SetExpire)(RedisModuleKey *key,
-                                                mstime_t expire);
+int REDISMODULE_API_FUNC(RedisModule_SetExpire)(RedisModuleKey *key, mstime_t expire);
@@ -1069,18 +350,6 @@ void REDISMODULE_API_FUNC(RedisModule_ResetDataset)(int restart_aof, int async);
-unsigned long long REDISMODULE_API_FUNC(RedisModule_DbSize)(
-    RedisModuleCtx *ctx);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_RandomKey)(
-    RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_ZsetAdd)(RedisModuleKey *key, double score,
-                                              RedisModuleString *ele,
-                                              int *flagsptr);
-int REDISMODULE_API_FUNC(RedisModule_ZsetIncrby)(RedisModuleKey *key,
-                                                 double score,
-                                                 RedisModuleString *ele,
-                                                 int *flagsptr,
-                                                 double *newscore);
-int REDISMODULE_API_FUNC(RedisModule_ZsetScore)(RedisModuleKey *key,
-                                                RedisModuleString *ele,
-                                                double *score);
-int REDISMODULE_API_FUNC(RedisModule_ZsetRem)(RedisModuleKey *key,
-                                              RedisModuleString *ele,
-                                              int *deleted);
+unsigned long long REDISMODULE_API_FUNC(RedisModule_DbSize)(RedisModuleCtx *ctx);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_RandomKey)(RedisModuleCtx *ctx);
+int REDISMODULE_API_FUNC(RedisModule_ZsetAdd)(RedisModuleKey *key, double score, RedisModuleString *ele, int *flagsptr);
+int REDISMODULE_API_FUNC(RedisModule_ZsetIncrby)(RedisModuleKey *key, double score, RedisModuleString *ele, int *flagsptr, double *newscore);
+int REDISMODULE_API_FUNC(RedisModule_ZsetScore)(RedisModuleKey *key, RedisModuleString *ele, double *score);
+int REDISMODULE_API_FUNC(RedisModule_ZsetRem)(RedisModuleKey *key, RedisModuleString *ele, int *deleted);
@@ -1088,10 +357,5 @@ void REDISMODULE_API_FUNC(RedisModule_ZsetRangeStop)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_ZsetFirstInScoreRange)(
-    RedisModuleKey *key, double min, double max, int minex, int maxex);
-int REDISMODULE_API_FUNC(RedisModule_ZsetLastInScoreRange)(
-    RedisModuleKey *key, double min, double max, int minex, int maxex);
-int REDISMODULE_API_FUNC(RedisModule_ZsetFirstInLexRange)(
-    RedisModuleKey *key, RedisModuleString *min, RedisModuleString *max);
-int REDISMODULE_API_FUNC(RedisModule_ZsetLastInLexRange)(
-    RedisModuleKey *key, RedisModuleString *min, RedisModuleString *max);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ZsetRangeCurrentElement)(
-    RedisModuleKey *key, double *score);
+int REDISMODULE_API_FUNC(RedisModule_ZsetFirstInScoreRange)(RedisModuleKey *key, double min, double max, int minex, int maxex);
+int REDISMODULE_API_FUNC(RedisModule_ZsetLastInScoreRange)(RedisModuleKey *key, double min, double max, int minex, int maxex);
+int REDISMODULE_API_FUNC(RedisModule_ZsetFirstInLexRange)(RedisModuleKey *key, RedisModuleString *min, RedisModuleString *max);
+int REDISMODULE_API_FUNC(RedisModule_ZsetLastInLexRange)(RedisModuleKey *key, RedisModuleString *min, RedisModuleString *max);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ZsetRangeCurrentElement)(RedisModuleKey *key, double *score);
@@ -1101,6 +365,3 @@ int REDISMODULE_API_FUNC(RedisModule_ZsetRangeEndReached)(RedisModuleKey *key);
-int REDISMODULE_API_FUNC(RedisModule_HashSet)(RedisModuleKey *key, int flags,
-                                              ...);
-int REDISMODULE_API_FUNC(RedisModule_HashGet)(RedisModuleKey *key, int flags,
-                                              ...);
-int REDISMODULE_API_FUNC(RedisModule_IsKeysPositionRequest)(
-    RedisModuleCtx *ctx);
+int REDISMODULE_API_FUNC(RedisModule_HashSet)(RedisModuleKey *key, int flags, ...);
+int REDISMODULE_API_FUNC(RedisModule_HashGet)(RedisModuleKey *key, int flags, ...);
+int REDISMODULE_API_FUNC(RedisModule_IsKeysPositionRequest)(RedisModuleCtx *ctx);
@@ -1108,2 +369 @@ void REDISMODULE_API_FUNC(RedisModule_KeyAtPos)(RedisModuleCtx *ctx, int pos);
-unsigned long long REDISMODULE_API_FUNC(RedisModule_GetClientId)(
-    RedisModuleCtx *ctx);
+unsigned long long REDISMODULE_API_FUNC(RedisModule_GetClientId)(RedisModuleCtx *ctx);
@@ -1111,3 +371 @@ int REDISMODULE_API_FUNC(RedisModule_GetClientInfoById)(void *ci, uint64_t id);
-int REDISMODULE_API_FUNC(RedisModule_PublishMessage)(
-    RedisModuleCtx *ctx, RedisModuleString *channel,
-    RedisModuleString *message);
+int REDISMODULE_API_FUNC(RedisModule_PublishMessage)(RedisModuleCtx *ctx, RedisModuleString *channel, RedisModuleString *message);
@@ -1115,12 +373,5 @@ int REDISMODULE_API_FUNC(RedisModule_GetContextFlags)(RedisModuleCtx *ctx);
-void *REDISMODULE_API_FUNC(RedisModule_PoolAlloc)(RedisModuleCtx *ctx,
-                                                  size_t bytes);
-RedisModuleType *REDISMODULE_API_FUNC(RedisModule_CreateDataType)(
-    RedisModuleCtx *ctx, const char *name, int encver,
-    RedisModuleTypeMethods *typemethods);
-int REDISMODULE_API_FUNC(RedisModule_ModuleTypeSetValue)(RedisModuleKey *key,
-                                                         RedisModuleType *mt,
-                                                         void *value);
-void *REDISMODULE_API_FUNC(RedisModule_ModuleTypeReplaceValue)(
-    RedisModuleKey *key, RedisModuleType *mt, void *new_value);
-RedisModuleType *REDISMODULE_API_FUNC(RedisModule_ModuleTypeGetType)(
-    RedisModuleKey *key);
+void *REDISMODULE_API_FUNC(RedisModule_PoolAlloc)(RedisModuleCtx *ctx, size_t bytes);
+RedisModuleType *REDISMODULE_API_FUNC(RedisModule_CreateDataType)(RedisModuleCtx *ctx, const char *name, int encver, RedisModuleTypeMethods *typemethods);
+int REDISMODULE_API_FUNC(RedisModule_ModuleTypeSetValue)(RedisModuleKey *key, RedisModuleType *mt, void *value);
+void *REDISMODULE_API_FUNC(RedisModule_ModuleTypeReplaceValue)(RedisModuleKey *key, RedisModuleType *mt, void *new_value);
+RedisModuleType *REDISMODULE_API_FUNC(RedisModule_ModuleTypeGetType)(RedisModuleKey *key);
@@ -1129,6 +380,3 @@ int REDISMODULE_API_FUNC(RedisModule_IsIOError)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_SetModuleOptions)(RedisModuleCtx *ctx,
-                                                        int options);
-int REDISMODULE_API_FUNC(RedisModule_SignalModifiedKey)(
-    RedisModuleCtx *ctx, RedisModuleString *keyname);
-void REDISMODULE_API_FUNC(RedisModule_SaveUnsigned)(RedisModuleIO *io,
-                                                    uint64_t value);
+void REDISMODULE_API_FUNC(RedisModule_SetModuleOptions)(RedisModuleCtx *ctx, int options);
+int REDISMODULE_API_FUNC(RedisModule_SignalModifiedKey)(RedisModuleCtx *ctx, RedisModuleString *keyname);
+void REDISMODULE_API_FUNC(RedisModule_SaveUnsigned)(RedisModuleIO *io, uint64_t value);
@@ -1136,2 +384 @@ uint64_t REDISMODULE_API_FUNC(RedisModule_LoadUnsigned)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_SaveSigned)(RedisModuleIO *io,
-                                                  int64_t value);
+void REDISMODULE_API_FUNC(RedisModule_SaveSigned)(RedisModuleIO *io, int64_t value);
@@ -1139,14 +386,6 @@ int64_t REDISMODULE_API_FUNC(RedisModule_LoadSigned)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_EmitAOF)(RedisModuleIO *io,
-                                               const char *cmdname,
-                                               const char *fmt, ...);
-void REDISMODULE_API_FUNC(RedisModule_SaveString)(RedisModuleIO *io,
-                                                  RedisModuleString *s);
-void REDISMODULE_API_FUNC(RedisModule_SaveStringBuffer)(RedisModuleIO *io,
-                                                        const char *str,
-                                                        size_t len);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_LoadString)(
-    RedisModuleIO *io);
-char *REDISMODULE_API_FUNC(RedisModule_LoadStringBuffer)(RedisModuleIO *io,
-                                                         size_t *lenptr);
-void REDISMODULE_API_FUNC(RedisModule_SaveDouble)(RedisModuleIO *io,
-                                                  double value);
+void REDISMODULE_API_FUNC(RedisModule_EmitAOF)(RedisModuleIO *io, const char *cmdname, const char *fmt, ...);
+void REDISMODULE_API_FUNC(RedisModule_SaveString)(RedisModuleIO *io, RedisModuleString *s);
+void REDISMODULE_API_FUNC(RedisModule_SaveStringBuffer)(RedisModuleIO *io, const char *str, size_t len);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_LoadString)(RedisModuleIO *io);
+char *REDISMODULE_API_FUNC(RedisModule_LoadStringBuffer)(RedisModuleIO *io, size_t *lenptr);
+void REDISMODULE_API_FUNC(RedisModule_SaveDouble)(RedisModuleIO *io, double value);
@@ -1154,2 +393 @@ double REDISMODULE_API_FUNC(RedisModule_LoadDouble)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_SaveFloat)(RedisModuleIO *io,
-                                                 float value);
+void REDISMODULE_API_FUNC(RedisModule_SaveFloat)(RedisModuleIO *io, float value);
@@ -1157,2 +395 @@ float REDISMODULE_API_FUNC(RedisModule_LoadFloat)(RedisModuleIO *io);
-void REDISMODULE_API_FUNC(RedisModule_SaveLongDouble)(RedisModuleIO *io,
-                                                      long double value);
+void REDISMODULE_API_FUNC(RedisModule_SaveLongDouble)(RedisModuleIO *io, long double value);
@@ -1160,28 +397,12 @@ long double REDISMODULE_API_FUNC(RedisModule_LoadLongDouble)(RedisModuleIO *io);
-void *REDISMODULE_API_FUNC(RedisModule_LoadDataTypeFromString)(
-    const RedisModuleString *str, const RedisModuleType *mt);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_SaveDataTypeToString)(
-    RedisModuleCtx *ctx, void *data, const RedisModuleType *mt);
-void REDISMODULE_API_FUNC(RedisModule_Log)(RedisModuleCtx *ctx,
-                                           const char *level, const char *fmt,
-                                           ...);
-void REDISMODULE_API_FUNC(RedisModule_LogIOError)(RedisModuleIO *io,
-                                                  const char *levelstr,
-                                                  const char *fmt, ...);
-void REDISMODULE_API_FUNC(RedisModule__Assert)(const char *estr,
-                                               const char *file, int line);
-void REDISMODULE_API_FUNC(RedisModule_LatencyAddSample)(const char *event,
-                                                        mstime_t latency);
-int REDISMODULE_API_FUNC(RedisModule_StringAppendBuffer)(RedisModuleCtx *ctx,
-                                                         RedisModuleString *str,
-                                                         const char *buf,
-                                                         size_t len);
-void REDISMODULE_API_FUNC(RedisModule_RetainString)(RedisModuleCtx *ctx,
-                                                    RedisModuleString *str);
-int REDISMODULE_API_FUNC(RedisModule_StringCompare)(RedisModuleString *a,
-                                                    RedisModuleString *b);
-RedisModuleCtx *REDISMODULE_API_FUNC(RedisModule_GetContextFromIO)(
-    RedisModuleIO *io);
-const RedisModuleString *REDISMODULE_API_FUNC(RedisModule_GetKeyNameFromIO)(
-    RedisModuleIO *io);
-const RedisModuleString *REDISMODULE_API_FUNC(
-    RedisModule_GetKeyNameFromModuleKey)(RedisModuleKey *key);
+void *REDISMODULE_API_FUNC(RedisModule_LoadDataTypeFromString)(const RedisModuleString *str, const RedisModuleType *mt);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_SaveDataTypeToString)(RedisModuleCtx *ctx, void *data, const RedisModuleType *mt);
+void REDISMODULE_API_FUNC(RedisModule_Log)(RedisModuleCtx *ctx, const char *level, const char *fmt, ...);
+void REDISMODULE_API_FUNC(RedisModule_LogIOError)(RedisModuleIO *io, const char *levelstr, const char *fmt, ...);
+void REDISMODULE_API_FUNC(RedisModule__Assert)(const char *estr, const char *file, int line);
+void REDISMODULE_API_FUNC(RedisModule_LatencyAddSample)(const char *event, mstime_t latency);
+int REDISMODULE_API_FUNC(RedisModule_StringAppendBuffer)(RedisModuleCtx *ctx, RedisModuleString *str, const char *buf, size_t len);
+void REDISMODULE_API_FUNC(RedisModule_RetainString)(RedisModuleCtx *ctx, RedisModuleString *str);
+int REDISMODULE_API_FUNC(RedisModule_StringCompare)(RedisModuleString *a, RedisModuleString *b);
+RedisModuleCtx *REDISMODULE_API_FUNC(RedisModule_GetContextFromIO)(RedisModuleIO *io);
+const RedisModuleString *REDISMODULE_API_FUNC(RedisModule_GetKeyNameFromIO)(RedisModuleIO *io);
+const RedisModuleString *REDISMODULE_API_FUNC(RedisModule_GetKeyNameFromModuleKey)(RedisModuleKey *key);
@@ -1189,4 +410,2 @@ long long REDISMODULE_API_FUNC(RedisModule_Milliseconds)(void);
-void REDISMODULE_API_FUNC(RedisModule_DigestAddStringBuffer)(
-    RedisModuleDigest *md, unsigned char *ele, size_t len);
-void REDISMODULE_API_FUNC(RedisModule_DigestAddLongLong)(RedisModuleDigest *md,
-                                                         long long ele);
+void REDISMODULE_API_FUNC(RedisModule_DigestAddStringBuffer)(RedisModuleDigest *md, unsigned char *ele, size_t len);
+void REDISMODULE_API_FUNC(RedisModule_DigestAddLongLong)(RedisModuleDigest *md, long long ele);
@@ -1194,4 +413,2 @@ void REDISMODULE_API_FUNC(RedisModule_DigestEndSequence)(RedisModuleDigest *md);
-RedisModuleDict *REDISMODULE_API_FUNC(RedisModule_CreateDict)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_FreeDict)(RedisModuleCtx *ctx,
-                                                RedisModuleDict *d);
+RedisModuleDict *REDISMODULE_API_FUNC(RedisModule_CreateDict)(RedisModuleCtx *ctx);
+void REDISMODULE_API_FUNC(RedisModule_FreeDict)(RedisModuleCtx *ctx, RedisModuleDict *d);
@@ -1199,53 +416,22 @@ uint64_t REDISMODULE_API_FUNC(RedisModule_DictSize)(RedisModuleDict *d);
-int REDISMODULE_API_FUNC(RedisModule_DictSetC)(RedisModuleDict *d, void *key,
-                                               size_t keylen, void *ptr);
-int REDISMODULE_API_FUNC(RedisModule_DictReplaceC)(RedisModuleDict *d,
-                                                   void *key, size_t keylen,
-                                                   void *ptr);
-int REDISMODULE_API_FUNC(RedisModule_DictSet)(RedisModuleDict *d,
-                                              RedisModuleString *key,
-                                              void *ptr);
-int REDISMODULE_API_FUNC(RedisModule_DictReplace)(RedisModuleDict *d,
-                                                  RedisModuleString *key,
-                                                  void *ptr);
-void *REDISMODULE_API_FUNC(RedisModule_DictGetC)(RedisModuleDict *d, void *key,
-                                                 size_t keylen, int *nokey);
-void *REDISMODULE_API_FUNC(RedisModule_DictGet)(RedisModuleDict *d,
-                                                RedisModuleString *key,
-                                                int *nokey);
-int REDISMODULE_API_FUNC(RedisModule_DictDelC)(RedisModuleDict *d, void *key,
-                                               size_t keylen, void *oldval);
-int REDISMODULE_API_FUNC(RedisModule_DictDel)(RedisModuleDict *d,
-                                              RedisModuleString *key,
-                                              void *oldval);
-RedisModuleDictIter *REDISMODULE_API_FUNC(RedisModule_DictIteratorStartC)(
-    RedisModuleDict *d, const char *op, void *key, size_t keylen);
-RedisModuleDictIter *REDISMODULE_API_FUNC(RedisModule_DictIteratorStart)(
-    RedisModuleDict *d, const char *op, RedisModuleString *key);
-void REDISMODULE_API_FUNC(RedisModule_DictIteratorStop)(
-    RedisModuleDictIter *di);
-int REDISMODULE_API_FUNC(RedisModule_DictIteratorReseekC)(
-    RedisModuleDictIter *di, const char *op, void *key, size_t keylen);
-int REDISMODULE_API_FUNC(RedisModule_DictIteratorReseek)(
-    RedisModuleDictIter *di, const char *op, RedisModuleString *key);
-void *REDISMODULE_API_FUNC(RedisModule_DictNextC)(RedisModuleDictIter *di,
-                                                  size_t *keylen,
-                                                  void **dataptr);
-void *REDISMODULE_API_FUNC(RedisModule_DictPrevC)(RedisModuleDictIter *di,
-                                                  size_t *keylen,
-                                                  void **dataptr);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_DictNext)(
-    RedisModuleCtx *ctx, RedisModuleDictIter *di, void **dataptr);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_DictPrev)(
-    RedisModuleCtx *ctx, RedisModuleDictIter *di, void **dataptr);
-int REDISMODULE_API_FUNC(RedisModule_DictCompareC)(RedisModuleDictIter *di,
-                                                   const char *op, void *key,
-                                                   size_t keylen);
-int REDISMODULE_API_FUNC(RedisModule_DictCompare)(RedisModuleDictIter *di,
-                                                  const char *op,
-                                                  RedisModuleString *key);
-int REDISMODULE_API_FUNC(RedisModule_RegisterInfoFunc)(RedisModuleCtx *ctx,
-                                                       RedisModuleInfoFunc cb);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddSection)(RedisModuleInfoCtx *ctx,
-                                                     char *name);
-int REDISMODULE_API_FUNC(RedisModule_InfoBeginDictField)(
-    RedisModuleInfoCtx *ctx, char *name);
+int REDISMODULE_API_FUNC(RedisModule_DictSetC)(RedisModuleDict *d, void *key, size_t keylen, void *ptr);
+int REDISMODULE_API_FUNC(RedisModule_DictReplaceC)(RedisModuleDict *d, void *key, size_t keylen, void *ptr);
+int REDISMODULE_API_FUNC(RedisModule_DictSet)(RedisModuleDict *d, RedisModuleString *key, void *ptr);
+int REDISMODULE_API_FUNC(RedisModule_DictReplace)(RedisModuleDict *d, RedisModuleString *key, void *ptr);
+void *REDISMODULE_API_FUNC(RedisModule_DictGetC)(RedisModuleDict *d, void *key, size_t keylen, int *nokey);
+void *REDISMODULE_API_FUNC(RedisModule_DictGet)(RedisModuleDict *d, RedisModuleString *key, int *nokey);
+int REDISMODULE_API_FUNC(RedisModule_DictDelC)(RedisModuleDict *d, void *key, size_t keylen, void *oldval);
+int REDISMODULE_API_FUNC(RedisModule_DictDel)(RedisModuleDict *d, RedisModuleString *key, void *oldval);
+RedisModuleDictIter *REDISMODULE_API_FUNC(RedisModule_DictIteratorStartC)(RedisModuleDict *d, const char *op, void *key, size_t keylen);
+RedisModuleDictIter *REDISMODULE_API_FUNC(RedisModule_DictIteratorStart)(RedisModuleDict *d, const char *op, RedisModuleString *key);
+void REDISMODULE_API_FUNC(RedisModule_DictIteratorStop)(RedisModuleDictIter *di);
+int REDISMODULE_API_FUNC(RedisModule_DictIteratorReseekC)(RedisModuleDictIter *di, const char *op, void *key, size_t keylen);
+int REDISMODULE_API_FUNC(RedisModule_DictIteratorReseek)(RedisModuleDictIter *di, const char *op, RedisModuleString *key);
+void *REDISMODULE_API_FUNC(RedisModule_DictNextC)(RedisModuleDictIter *di, size_t *keylen, void **dataptr);
+void *REDISMODULE_API_FUNC(RedisModule_DictPrevC)(RedisModuleDictIter *di, size_t *keylen, void **dataptr);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_DictNext)(RedisModuleCtx *ctx, RedisModuleDictIter *di, void **dataptr);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_DictPrev)(RedisModuleCtx *ctx, RedisModuleDictIter *di, void **dataptr);
+int REDISMODULE_API_FUNC(RedisModule_DictCompareC)(RedisModuleDictIter *di, const char *op, void *key, size_t keylen);
+int REDISMODULE_API_FUNC(RedisModule_DictCompare)(RedisModuleDictIter *di, const char *op, RedisModuleString *key);
+int REDISMODULE_API_FUNC(RedisModule_RegisterInfoFunc)(RedisModuleCtx *ctx, RedisModuleInfoFunc cb);
+int REDISMODULE_API_FUNC(RedisModule_InfoAddSection)(RedisModuleInfoCtx *ctx, char *name);
+int REDISMODULE_API_FUNC(RedisModule_InfoBeginDictField)(RedisModuleInfoCtx *ctx, char *name);
@@ -1253,30 +439,20 @@ int REDISMODULE_API_FUNC(RedisModule_InfoEndDictField)(RedisModuleInfoCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldString)(
-    RedisModuleInfoCtx *ctx, char *field, RedisModuleString *value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldCString)(
-    RedisModuleInfoCtx *ctx, char *field, char *value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldDouble)(
-    RedisModuleInfoCtx *ctx, char *field, double value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldLongLong)(
-    RedisModuleInfoCtx *ctx, char *field, long long value);
-int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldULongLong)(
-    RedisModuleInfoCtx *ctx, char *field, unsigned long long value);
-int REDISMODULE_API_FUNC(RedisModule_SubscribeToServerEvent)(
-    RedisModuleCtx *ctx, RedisModuleEvent event,
-    RedisModuleEventCallback callback);
-int REDISMODULE_API_FUNC(RedisModule_SetLRU)(RedisModuleKey *key,
-                                             mstime_t lru_idle);
-int REDISMODULE_API_FUNC(RedisModule_GetLRU)(RedisModuleKey *key,
-                                             mstime_t *lru_idle);
-int REDISMODULE_API_FUNC(RedisModule_SetLFU)(RedisModuleKey *key,
-                                             long long lfu_freq);
-int REDISMODULE_API_FUNC(RedisModule_GetLFU)(RedisModuleKey *key,
-                                             long long *lfu_freq);
-RedisModuleBlockedClient *REDISMODULE_API_FUNC(RedisModule_BlockClientOnKeys)(
-    RedisModuleCtx *ctx, RedisModuleCmdFunc reply_callback,
-    RedisModuleCmdFunc timeout_callback,
-    void (*free_privdata)(RedisModuleCtx *, void *), long long timeout_ms,
-    RedisModuleString **keys, int numkeys, void *privdata);
-void REDISMODULE_API_FUNC(RedisModule_SignalKeyAsReady)(RedisModuleCtx *ctx,
-                                                        RedisModuleString *key);
-RedisModuleString *REDISMODULE_API_FUNC(RedisModule_GetBlockedClientReadyKey)(
-    RedisModuleCtx *ctx);
+int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldString)(RedisModuleInfoCtx *ctx, char *field, RedisModuleString *value);
+int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldCString)(RedisModuleInfoCtx *ctx, char *field, char *value);
+int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldDouble)(RedisModuleInfoCtx *ctx, char *field, double value);
+int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldLongLong)(RedisModuleInfoCtx *ctx, char *field, long long value);
+int REDISMODULE_API_FUNC(RedisModule_InfoAddFieldULongLong)(RedisModuleInfoCtx *ctx, char *field, unsigned long long value);
+RedisModuleServerInfoData *REDISMODULE_API_FUNC(RedisModule_GetServerInfo)(RedisModuleCtx *ctx, const char *section);
+void REDISMODULE_API_FUNC(RedisModule_FreeServerInfo)(RedisModuleCtx *ctx, RedisModuleServerInfoData *data);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_ServerInfoGetField)(RedisModuleCtx *ctx, RedisModuleServerInfoData *data, const char* field);
+const char *REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldC)(RedisModuleServerInfoData *data, const char* field);
+long long REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldSigned)(RedisModuleServerInfoData *data, const char* field, int *out_err);
+unsigned long long REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldUnsigned)(RedisModuleServerInfoData *data, const char* field, int *out_err);
+double REDISMODULE_API_FUNC(RedisModule_ServerInfoGetFieldDouble)(RedisModuleServerInfoData *data, const char* field, int *out_err);
+int REDISMODULE_API_FUNC(RedisModule_SubscribeToServerEvent)(RedisModuleCtx *ctx, RedisModuleEvent event, RedisModuleEventCallback callback);
+int REDISMODULE_API_FUNC(RedisModule_SetLRU)(RedisModuleKey *key, mstime_t lru_idle);
+int REDISMODULE_API_FUNC(RedisModule_GetLRU)(RedisModuleKey *key, mstime_t *lru_idle);
+int REDISMODULE_API_FUNC(RedisModule_SetLFU)(RedisModuleKey *key, long long lfu_freq);
+int REDISMODULE_API_FUNC(RedisModule_GetLFU)(RedisModuleKey *key, long long *lfu_freq);
+RedisModuleBlockedClient *REDISMODULE_API_FUNC(RedisModule_BlockClientOnKeys)(RedisModuleCtx *ctx, RedisModuleCmdFunc reply_callback, RedisModuleCmdFunc timeout_callback, void (*free_privdata)(RedisModuleCtx*,void*), long long timeout_ms, RedisModuleString **keys, int numkeys, void *privdata);
+void REDISMODULE_API_FUNC(RedisModule_SignalKeyAsReady)(RedisModuleCtx *ctx, RedisModuleString *key);
+RedisModuleString *REDISMODULE_API_FUNC(RedisModule_GetBlockedClientReadyKey)(RedisModuleCtx *ctx);
@@ -1284,12 +460,4 @@ RedisModuleScanCursor *REDISMODULE_API_FUNC(RedisModule_ScanCursorCreate)();
-void REDISMODULE_API_FUNC(RedisModule_ScanCursorRestart)(
-    RedisModuleScanCursor *cursor);
-void REDISMODULE_API_FUNC(RedisModule_ScanCursorDestroy)(
-    RedisModuleScanCursor *cursor);
-int REDISMODULE_API_FUNC(RedisModule_Scan)(RedisModuleCtx *ctx,
-                                           RedisModuleScanCursor *cursor,
-                                           RedisModuleScanCB fn,
-                                           void *privdata);
-int REDISMODULE_API_FUNC(RedisModule_ScanKey)(RedisModuleKey *key,
-                                              RedisModuleScanCursor *cursor,
-                                              RedisModuleScanKeyCB fn,
-                                              void *privdata);
+void REDISMODULE_API_FUNC(RedisModule_ScanCursorRestart)(RedisModuleScanCursor *cursor);
+void REDISMODULE_API_FUNC(RedisModule_ScanCursorDestroy)(RedisModuleScanCursor *cursor);
+int REDISMODULE_API_FUNC(RedisModule_Scan)(RedisModuleCtx *ctx, RedisModuleScanCursor *cursor, RedisModuleScanCB fn, void *privdata);
+int REDISMODULE_API_FUNC(RedisModule_ScanKey)(RedisModuleKey *key, RedisModuleScanCursor *cursor, RedisModuleScanKeyCB fn, void *privdata);
@@ -1298,14 +466,6 @@ int REDISMODULE_API_FUNC(RedisModule_ScanKey)(RedisModuleKey *key,
-RedisModuleBlockedClient *REDISMODULE_API_FUNC(RedisModule_BlockClient)(
-    RedisModuleCtx *ctx, RedisModuleCmdFunc reply_callback,
-    RedisModuleCmdFunc timeout_callback,
-    void (*free_privdata)(RedisModuleCtx *, void *), long long timeout_ms);
-int REDISMODULE_API_FUNC(RedisModule_UnblockClient)(
-    RedisModuleBlockedClient *bc, void *privdata);
-int REDISMODULE_API_FUNC(RedisModule_IsBlockedReplyRequest)(
-    RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_IsBlockedTimeoutRequest)(
-    RedisModuleCtx *ctx);
-void *REDISMODULE_API_FUNC(RedisModule_GetBlockedClientPrivateData)(
-    RedisModuleCtx *ctx);
-RedisModuleBlockedClient *REDISMODULE_API_FUNC(
-    RedisModule_GetBlockedClientHandle)(RedisModuleCtx *ctx);
+RedisModuleBlockedClient *REDISMODULE_API_FUNC(RedisModule_BlockClient)(RedisModuleCtx *ctx, RedisModuleCmdFunc reply_callback, RedisModuleCmdFunc timeout_callback, void (*free_privdata)(RedisModuleCtx*,void*), long long timeout_ms);
+int REDISMODULE_API_FUNC(RedisModule_UnblockClient)(RedisModuleBlockedClient *bc, void *privdata);
+int REDISMODULE_API_FUNC(RedisModule_IsBlockedReplyRequest)(RedisModuleCtx *ctx);
+int REDISMODULE_API_FUNC(RedisModule_IsBlockedTimeoutRequest)(RedisModuleCtx *ctx);
+void *REDISMODULE_API_FUNC(RedisModule_GetBlockedClientPrivateData)(RedisModuleCtx *ctx);
+RedisModuleBlockedClient *REDISMODULE_API_FUNC(RedisModule_GetBlockedClientHandle)(RedisModuleCtx *ctx);
@@ -1313,12 +473,6 @@ int REDISMODULE_API_FUNC(RedisModule_AbortBlock)(RedisModuleBlockedClient *bc);
-RedisModuleCtx *REDISMODULE_API_FUNC(RedisModule_GetThreadSafeContext)(
-    RedisModuleBlockedClient *bc);
-void REDISMODULE_API_FUNC(RedisModule_FreeThreadSafeContext)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_ThreadSafeContextLock)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_ThreadSafeContextUnlock)(
-    RedisModuleCtx *ctx);
-int REDISMODULE_API_FUNC(RedisModule_SubscribeToKeyspaceEvents)(
-    RedisModuleCtx *ctx, int types, RedisModuleNotificationFunc cb);
-int REDISMODULE_API_FUNC(RedisModule_NotifyKeyspaceEvent)(
-    RedisModuleCtx *ctx, int type, const char *event, RedisModuleString *key);
+RedisModuleCtx *REDISMODULE_API_FUNC(RedisModule_GetThreadSafeContext)(RedisModuleBlockedClient *bc);
+void REDISMODULE_API_FUNC(RedisModule_FreeThreadSafeContext)(RedisModuleCtx *ctx);
+void REDISMODULE_API_FUNC(RedisModule_ThreadSafeContextLock)(RedisModuleCtx *ctx);
+void REDISMODULE_API_FUNC(RedisModule_ThreadSafeContextUnlock)(RedisModuleCtx *ctx);
+int REDISMODULE_API_FUNC(RedisModule_SubscribeToKeyspaceEvents)(RedisModuleCtx *ctx, int types, RedisModuleNotificationFunc cb);
+int REDISMODULE_API_FUNC(RedisModule_NotifyKeyspaceEvent)(RedisModuleCtx *ctx, int type, const char *event, RedisModuleString *key);
@@ -1326,17 +480,5 @@ int REDISMODULE_API_FUNC(RedisModule_GetNotifyKeyspaceEvents)();
-int REDISMODULE_API_FUNC(RedisModule_BlockedClientDisconnected)(
-    RedisModuleCtx *ctx);
-void REDISMODULE_API_FUNC(RedisModule_RegisterClusterMessageReceiver)(
-    RedisModuleCtx *ctx, uint8_t type,
-    RedisModuleClusterMessageReceiver callback);
-int REDISMODULE_API_FUNC(RedisModule_SendClusterMessage)(RedisModuleCtx *ctx,
-                                                         char *target_id,
-                                                         uint8_t type,
-                                                         unsigned char *msg,
-                                                         uint32_t len);
-int REDISMODULE_API_FUNC(RedisModule_GetClusterNodeInfo)(RedisModuleCtx *ctx,
-                                                         const char *id,
-                                                         char *ip,
-                                                         char *master_id,
-                                                         int *port, int *flags);
-char **REDISMODULE_API_FUNC(RedisModule_GetClusterNodesList)(
-    RedisModuleCtx *ctx, size_t *numnodes);
+int REDISMODULE_API_FUNC(RedisModule_BlockedClientDisconnected)(RedisModuleCtx *ctx);
+void REDISMODULE_API_FUNC(RedisModule_RegisterClusterMessageReceiver)(RedisModuleCtx *ctx, uint8_t type, RedisModuleClusterMessageReceiver callback);
+int REDISMODULE_API_FUNC(RedisModule_SendClusterMessage)(RedisModuleCtx *ctx, char *target_id, uint8_t type, unsigned char *msg, uint32_t len);
+int REDISMODULE_API_FUNC(RedisModule_GetClusterNodeInfo)(RedisModuleCtx *ctx, const char *id, char *ip, char *master_id, int *port, int *flags);
+char **REDISMODULE_API_FUNC(RedisModule_GetClusterNodesList)(RedisModuleCtx *ctx, size_t *numnodes);
@@ -1344,10 +486,3 @@ void REDISMODULE_API_FUNC(RedisModule_FreeClusterNodesList)(char **ids);
-RedisModuleTimerID REDISMODULE_API_FUNC(RedisModule_CreateTimer)(
-    RedisModuleCtx *ctx, mstime_t period, RedisModuleTimerProc callback,
-    void *data);
-int REDISMODULE_API_FUNC(RedisModule_StopTimer)(RedisModuleCtx *ctx,
-                                                RedisModuleTimerID id,
-                                                void **data);
-int REDISMODULE_API_FUNC(RedisModule_GetTimerInfo)(RedisModuleCtx *ctx,
-                                                   RedisModuleTimerID id,
-                                                   uint64_t *remaining,
-                                                   void **data);
+RedisModuleTimerID REDISMODULE_API_FUNC(RedisModule_CreateTimer)(RedisModuleCtx *ctx, mstime_t period, RedisModuleTimerProc callback, void *data);
+int REDISMODULE_API_FUNC(RedisModule_StopTimer)(RedisModuleCtx *ctx, RedisModuleTimerID id, void **data);
+int REDISMODULE_API_FUNC(RedisModule_GetTimerInfo)(RedisModuleCtx *ctx, RedisModuleTimerID id, uint64_t *remaining, void **data);
@@ -1356,2 +491 @@ size_t REDISMODULE_API_FUNC(RedisModule_GetClusterSize)(void);
-void REDISMODULE_API_FUNC(RedisModule_GetRandomBytes)(unsigned char *dst,
-                                                      size_t len);
+void REDISMODULE_API_FUNC(RedisModule_GetRandomBytes)(unsigned char *dst, size_t len);
@@ -1359,27 +493,12 @@ void REDISMODULE_API_FUNC(RedisModule_GetRandomHexChars)(char *dst, size_t len);
-void REDISMODULE_API_FUNC(RedisModule_SetDisconnectCallback)(
-    RedisModuleBlockedClient *bc, RedisModuleDisconnectFunc callback);
-void REDISMODULE_API_FUNC(RedisModule_SetClusterFlags)(RedisModuleCtx *ctx,
-                                                       uint64_t flags);
-int REDISMODULE_API_FUNC(RedisModule_ExportSharedAPI)(RedisModuleCtx *ctx,
-                                                      const char *apiname,
-                                                      void *func);
-void *REDISMODULE_API_FUNC(RedisModule_GetSharedAPI)(RedisModuleCtx *ctx,
-                                                     const char *apiname);
-RedisModuleCommandFilter *REDISMODULE_API_FUNC(
-    RedisModule_RegisterCommandFilter)(RedisModuleCtx *ctx,
-                                       RedisModuleCommandFilterFunc cb,
-                                       int flags);
-int REDISMODULE_API_FUNC(RedisModule_UnregisterCommandFilter)(
-    RedisModuleCtx *ctx, RedisModuleCommandFilter *filter);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgsCount)(
-    RedisModuleCommandFilterCtx *fctx);
-const RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CommandFilterArgGet)(
-    RedisModuleCommandFilterCtx *fctx, int pos);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgInsert)(
-    RedisModuleCommandFilterCtx *fctx, int pos, RedisModuleString *arg);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgReplace)(
-    RedisModuleCommandFilterCtx *fctx, int pos, RedisModuleString *arg);
-int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgDelete)(
-    RedisModuleCommandFilterCtx *fctx, int pos);
-int REDISMODULE_API_FUNC(RedisModule_Fork)(RedisModuleForkDoneHandler cb,
-                                           void *user_data);
+void REDISMODULE_API_FUNC(RedisModule_SetDisconnectCallback)(RedisModuleBlockedClient *bc, RedisModuleDisconnectFunc callback);
+void REDISMODULE_API_FUNC(RedisModule_SetClusterFlags)(RedisModuleCtx *ctx, uint64_t flags);
+int REDISMODULE_API_FUNC(RedisModule_ExportSharedAPI)(RedisModuleCtx *ctx, const char *apiname, void *func);
+void *REDISMODULE_API_FUNC(RedisModule_GetSharedAPI)(RedisModuleCtx *ctx, const char *apiname);
+RedisModuleCommandFilter *REDISMODULE_API_FUNC(RedisModule_RegisterCommandFilter)(RedisModuleCtx *ctx, RedisModuleCommandFilterFunc cb, int flags);
+int REDISMODULE_API_FUNC(RedisModule_UnregisterCommandFilter)(RedisModuleCtx *ctx, RedisModuleCommandFilter *filter);
+int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgsCount)(RedisModuleCommandFilterCtx *fctx);
+const RedisModuleString *REDISMODULE_API_FUNC(RedisModule_CommandFilterArgGet)(RedisModuleCommandFilterCtx *fctx, int pos);
+int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgInsert)(RedisModuleCommandFilterCtx *fctx, int pos, RedisModuleString *arg);
+int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgReplace)(RedisModuleCommandFilterCtx *fctx, int pos, RedisModuleString *arg);
+int REDISMODULE_API_FUNC(RedisModule_CommandFilterArgDelete)(RedisModuleCommandFilterCtx *fctx, int pos);
+int REDISMODULE_API_FUNC(RedisModule_Fork)(RedisModuleForkDoneHandler cb, void *user_data);
@@ -1392,4 +511,2 @@ size_t REDISMODULE_API_FUNC(RedisModule_MallocSize)(void *ptr);
-static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
-                            int apiver) __attribute__((unused));
-static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
-                            int apiver) {
+static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver, int apiver) __attribute__((unused));
+static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver, int apiver) {
@@ -1397,2 +514 @@ static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
-  RedisModule_GetApi =
-      (int (*)(const char *, void *))(unsigned long)getapifuncptr;
+    RedisModule_GetApi = (int (*)(const char *, void *)) (unsigned long)getapifuncptr;
@@ -1553,0 +670,7 @@ static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
+    REDISMODULE_GET_API(GetServerInfo);
+    REDISMODULE_GET_API(FreeServerInfo);
+    REDISMODULE_GET_API(ServerInfoGetField);
+    REDISMODULE_GET_API(ServerInfoGetFieldC);
+    REDISMODULE_GET_API(ServerInfoGetFieldSigned);
+    REDISMODULE_GET_API(ServerInfoGetFieldUnsigned);
+    REDISMODULE_GET_API(ServerInfoGetFieldDouble);
@@ -1614,2 +737 @@ static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
-  if (RedisModule_IsModuleNameBusy && RedisModule_IsModuleNameBusy(name))
-    return REDISMODULE_ERR;
+    if (RedisModule_IsModuleNameBusy && RedisModule_IsModuleNameBusy(name)) return REDISMODULE_ERR;
@@ -1619,2 +741 @@ static int RedisModule_Init(RedisModuleCtx *ctx, const char *name, int ver,
-#define RedisModule_Assert(_e) \
-  ((_e) ? (void)0 : (RedisModule__Assert(#_e, __FILE__, __LINE__), exit(1)))
+#define RedisModule_Assert(_e) ((_e)?(void)0 : (RedisModule__Assert(#_e,__FILE__,__LINE__),exit(1)))
