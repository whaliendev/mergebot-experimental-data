diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/redis/440385de-cfdc800a-81008bf9/src@aof.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/redis/440385de-cfdc800a-81008bf9/src@aof.no_comments_merged.c
index 31c4b32..0f12e9f 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/redis/440385de-cfdc800a-81008bf9/src@aof.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/redis/440385de-cfdc800a-81008bf9/src@aof.no_comments_merged.c
@@ -20 +20,2 @@ void aofRewriteBufferReset(void) {
-  if (server.aof_rewrite_buf_blocks) listRelease(server.aof_rewrite_buf_blocks);
+    if (server.aof_rewrite_buf_blocks)
+        listRelease(server.aof_rewrite_buf_blocks);
@@ -52,2 +53,2 @@ void aofChildWriteDiffData(aeEventLoop *el, int fd, void *privdata, int mask) {
-      nwritten =
-          write(server.aof_pipe_write_data_to_child, block->buf, block->used);
+            nwritten = write(server.aof_pipe_write_data_to_child,
+                             block->buf,block->used);
@@ -84 +85,2 @@ void aofRewriteBufferAppend(unsigned char *s, unsigned long len) {
-        int level = ((numblocks + 1) % 100) == 0 ? LL_WARNING : LL_NOTICE;
+                int level = ((numblocks+1) % 100) == 0 ? LL_WARNING :
+                                                         LL_NOTICE;
@@ -123,2 +125 @@ static void killAppendOnlyChild(void) {
-    while (wait3(&statloc, 0, NULL) != server.aof_child_pid)
-      ;
+        while(wait3(&statloc,0,NULL) != server.aof_child_pid);
@@ -131 +131,0 @@ static void killAppendOnlyChild(void) {
-<<<<<<< HEAD
@@ -133,2 +132,0 @@ static void killAppendOnlyChild(void) {
-|||||||
-=======
@@ -136 +133,0 @@ static void killAppendOnlyChild(void) {
->>>>>>> cfdc800a5ff5a2bb02ccd1e21c1c36e6cb5a474d
@@ -158 +155,3 @@ int startAppendOnly(void) {
-              server.aof_filename, cwdp ? cwdp : "unknown", strerror(errno));
+            server.aof_filename,
+            cwdp ? cwdp : "unknown",
+            strerror(errno));
@@ -163,4 +162 @@ int startAppendOnly(void) {
-    serverLog(LL_WARNING,
-              "AOF was enabled but there is already a child process saving an "
-              "RDB file on disk. An AOF background was scheduled to start when "
-              "possible.");
+        serverLog(LL_WARNING,"AOF was enabled but there is already a child process saving an RDB file on disk. An AOF background was scheduled to start when possible.");
@@ -169,4 +165 @@ int startAppendOnly(void) {
-      serverLog(
-          LL_WARNING,
-          "AOF was enabled but there is already an AOF rewriting in "
-          "background. Stopping background AOF and starting a rewrite now.");
+            serverLog(LL_WARNING,"AOF was enabled but there is already an AOF rewriting in background. Stopping background AOF and starting a rewrite now.");
@@ -177,4 +170 @@ int startAppendOnly(void) {
-      serverLog(LL_WARNING,
-                "Redis needs to enable the AOF but can't trigger a background "
-                "AOF rewrite operation. Check the above logs for more info "
-                "about the error.");
+            serverLog(LL_WARNING,"Redis needs to enable the AOF but can't trigger a background AOF rewrite operation. Check the above logs for more info about the error.");
@@ -222,4 +212 @@ void flushAppendOnlyFile(int force) {
-      serverLog(LL_NOTICE,
-                "Asynchronous AOF fsync is taking too long (disk is busy?). "
-                "Writing the AOF buffer without waiting for fsync to complete, "
-                "this may slow down Redis.");
+            serverLog(LL_NOTICE,"Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.");
@@ -255,2 +242 @@ void flushAppendOnlyFile(int force) {
-        serverLog(LL_WARNING,
-                  "Short write while writing to "
+                serverLog(LL_WARNING,"Short write while writing to "
@@ -259 +245,2 @@ void flushAppendOnlyFile(int force) {
-                  (long long)nwritten, (long long)sdslen(server.aof_buf));
+                                       (long long)nwritten,
+                                       (long long)sdslen(server.aof_buf));
@@ -263,2 +250 @@ void flushAppendOnlyFile(int force) {
-          serverLog(LL_WARNING,
-                    "Could not remove short write "
+                    serverLog(LL_WARNING, "Could not remove short write "
@@ -267,2 +253 @@ void flushAppendOnlyFile(int force) {
-                    "ftruncate: %s",
-                    strerror(errno));
+                             "ftruncate: %s", strerror(errno));
@@ -276,3 +261 @@ void flushAppendOnlyFile(int force) {
-      serverLog(LL_WARNING,
-                "Can't recover from AOF write error when the AOF fsync policy "
-                "is 'always'. Exiting...");
+            serverLog(LL_WARNING,"Can't recover from AOF write error when the AOF fsync policy is 'always'. Exiting...");
@@ -339,2 +322 @@ sds catAppendOnlyGenericCommand(sds dst, int argc, robj **argv) {
-sds catAppendOnlyExpireAtCommand(sds buf, struct redisCommand *cmd, robj *key,
-                                 robj *seconds) {
+sds catAppendOnlyExpireAtCommand(sds buf, struct redisCommand *cmd, robj *key, robj *seconds) {
@@ -346 +328,2 @@ sds catAppendOnlyExpireAtCommand(sds buf, struct redisCommand *cmd, robj *key,
-      cmd->proc == expireatCommand) {
+        cmd->proc == expireatCommand)
+    {
@@ -350 +333,2 @@ sds catAppendOnlyExpireAtCommand(sds buf, struct redisCommand *cmd, robj *key,
-      cmd->proc == setexCommand || cmd->proc == psetexCommand) {
+        cmd->proc == setexCommand || cmd->proc == psetexCommand)
+    {
@@ -362,2 +346 @@ sds catAppendOnlyExpireAtCommand(sds buf, struct redisCommand *cmd, robj *key,
-void feedAppendOnlyFile(struct redisCommand *cmd, int dictid, robj **argv,
-                        int argc) {
+void feedAppendOnlyFile(struct redisCommand *cmd, int dictid, robj **argv, int argc) {
@@ -434 +417,2 @@ void freeFakeClientArgv(struct client *c) {
-  for (j = 0; j < c->argc; j++) decrRefCount(c->argv[j]);
+    for (j = 0; j < c->argc; j++)
+        decrRefCount(c->argv[j]);
@@ -453,3 +437 @@ int loadAppendOnlyFile(char *filename) {
-    serverLog(LL_WARNING,
-              "Fatal error: can't open the append log file for reading: %s",
-              strerror(errno));
+        serverLog(LL_WARNING,"Fatal error: can't open the append log file for reading: %s",strerror(errno));
@@ -475,3 +457 @@ int loadAppendOnlyFile(char *filename) {
-      serverLog(LL_WARNING,
-                "Error reading the RDB preamble of the AOF file, AOF loading "
-                "aborted");
+            serverLog(LL_WARNING,"Error reading the RDB preamble of the AOF file, AOF loading aborted");
@@ -531 +511,2 @@ int loadAppendOnlyFile(char *filename) {
-      serverLog(LL_WARNING, "Unknown command '%s' reading the append only file",
+            serverLog(LL_WARNING,
+                "Unknown command '%s' reading the append only file",
@@ -538 +519,2 @@ int loadAppendOnlyFile(char *filename) {
-        fakeClient->cmd->proc != execCommand) {
+            fakeClient->cmd->proc != execCommand)
+        {
@@ -543 +525,2 @@ int loadAppendOnlyFile(char *filename) {
-    serverAssert(fakeClient->bufpos == 0 && listLength(fakeClient->reply) == 0);
+        serverAssert(fakeClient->bufpos == 0 &&
+                     listLength(fakeClient->reply) == 0);
@@ -566,3 +549 @@ readerr:
-    serverLog(LL_WARNING,
-              "Unrecoverable error reading the append only file: %s",
-              strerror(errno));
+        serverLog(LL_WARNING,"Unrecoverable error reading the append only file: %s", strerror(errno));
@@ -573,2 +554 @@ uxeof:
-    serverLog(LL_WARNING,
-              "!!! Warning: short read while loading the AOF file !!!");
+        serverLog(LL_WARNING,"!!! Warning: short read while loading the AOF file !!!");
@@ -596,5 +576 @@ uxeof:
-  serverLog(LL_WARNING,
-            "Unexpected end of file reading the append only file. You can: 1) "
-            "Make a backup of your AOF file, then use ./redis-check-aof --fix "
-            "<filename>. 2) Alternatively you can set the 'aof-load-truncated' "
-            "configuration option to yes and restart the server.");
+    serverLog(LL_WARNING,"Unexpected end of file reading the append only file. You can: 1) Make a backup of your AOF file, then use ./redis-check-aof --fix <filename>. 2) Alternatively you can set the 'aof-load-truncated' configuration option to yes and restart the server.");
@@ -604,3 +580 @@ fmterr:
-  serverLog(LL_WARNING,
-            "Bad file format reading the append only file: make a backup of "
-            "your AOF file, then use ./redis-check-aof --fix <filename>");
+    serverLog(LL_WARNING,"Bad file format reading the append only file: make a backup of your AOF file, then use ./redis-check-aof --fix <filename>");
@@ -626,3 +600,2 @@ int rewriteListObject(rio *r, robj *key, robj *o) {
-        int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD)
-                            ? AOF_REWRITE_ITEMS_PER_CMD
-                            : items;
+                int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD) ?
+                    AOF_REWRITE_ITEMS_PER_CMD : items;
@@ -654,3 +627,2 @@ int rewriteSetObject(rio *r, robj *key, robj *o) {
-        int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD)
-                            ? AOF_REWRITE_ITEMS_PER_CMD
-                            : items;
+                int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD) ?
+                    AOF_REWRITE_ITEMS_PER_CMD : items;
@@ -671,3 +643,2 @@ int rewriteSetObject(rio *r, robj *key, robj *o) {
-        int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD)
-                            ? AOF_REWRITE_ITEMS_PER_CMD
-                            : items;
+                int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD) ?
+                    AOF_REWRITE_ITEMS_PER_CMD : items;
@@ -705,3 +676,2 @@ int rewriteSortedSetObject(rio *r, robj *key, robj *o) {
-        int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD)
-                            ? AOF_REWRITE_ITEMS_PER_CMD
-                            : items;
+                int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD) ?
+                    AOF_REWRITE_ITEMS_PER_CMD : items;
@@ -730,3 +700,2 @@ int rewriteSortedSetObject(rio *r, robj *key, robj *o) {
-        int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD)
-                            ? AOF_REWRITE_ITEMS_PER_CMD
-                            : items;
+                int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD) ?
+                    AOF_REWRITE_ITEMS_PER_CMD : items;
@@ -771,3 +740,2 @@ int rewriteHashObject(rio *r, robj *key, robj *o) {
-      int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD)
-                          ? AOF_REWRITE_ITEMS_PER_CMD
-                          : items;
+            int cmd_items = (items > AOF_REWRITE_ITEMS_PER_CMD) ?
+                AOF_REWRITE_ITEMS_PER_CMD : items;
@@ -793,3 +761 @@ int rioWriteBulkStreamID(rio *r, streamID *id) {
-int rioWriteStreamPendingEntry(rio *r, robj *key, const char *groupname,
-                               size_t groupname_len, streamConsumer *consumer,
-                               unsigned char *rawid, streamNACK *nack) {
+int rioWriteStreamPendingEntry(rio *r, robj *key, const char *groupname, size_t groupname_len, streamConsumer *consumer, unsigned char *rawid, streamNACK *nack) {
@@ -802,2 +768 @@ int rioWriteStreamPendingEntry(rio *r, robj *key, const char *groupname,
-  if (rioWriteBulkString(r, consumer->name, sdslen(consumer->name)) == 0)
-    return 0;
+    if (rioWriteBulkString(r,consumer->name,sdslen(consumer->name)) == 0) return 0;
@@ -870,2 +835,4 @@ int rewriteStreamObject(rio *r, robj *key, robj *o) {
-          if (rioWriteStreamPendingEntry(r, key, (char *)ri.key, ri.key_len,
-                                         consumer, ri_pel.key, nack) == 0) {
+                    if (rioWriteStreamPendingEntry(r,key,(char*)ri.key,
+                                                   ri.key_len,consumer,
+                                                   ri_pel.key,nack) == 0)
+                    {
@@ -899,2 +866,2 @@ ssize_t aofReadDiffFromParent(void) {
-  while ((nread = read(server.aof_pipe_read_data_from_parent, buf,
-                       sizeof(buf))) > 0) {
+    while ((nread =
+            read(server.aof_pipe_read_data_from_parent,buf,sizeof(buf))) > 0) {
@@ -974,4 +941 @@ int rewriteAppendOnlyFile(char *filename) {
-    serverLog(
-        LL_WARNING,
-        "Opening the temp file for AOF rewrite in rewriteAppendOnlyFile(): %s",
-        strerror(errno));
+        serverLog(LL_WARNING, "Opening the temp file for AOF rewrite in rewriteAppendOnlyFile(): %s", strerror(errno));
@@ -998 +962,2 @@ int rewriteAppendOnlyFile(char *filename) {
-    if (aeWait(server.aof_pipe_read_data_from_parent, AE_READABLE, 1) <= 0) {
+        if (aeWait(server.aof_pipe_read_data_from_parent, AE_READABLE, 1) <= 0)
+        {
@@ -1009,4 +974,2 @@ int rewriteAppendOnlyFile(char *filename) {
-      byte != '!')
-    goto werr;
-  serverLog(LL_NOTICE,
-            "Parent agreed to stop sending diffs. Finalizing AOF...");
+        byte != '!') goto werr;
+    serverLog(LL_NOTICE,"Parent agreed to stop sending diffs. Finalizing AOF...");
@@ -1023,3 +986 @@ int rewriteAppendOnlyFile(char *filename) {
-    serverLog(LL_WARNING,
-              "Error moving temp append only file on the final destination: %s",
-              strerror(errno));
+        serverLog(LL_WARNING,"Error moving temp append only file on the final destination: %s", strerror(errno));
@@ -1032,2 +993 @@ werr:
-  serverLog(LL_WARNING, "Write error writing append only file on disk: %s",
-            strerror(errno));
+    serverLog(LL_WARNING,"Write error writing append only file on disk: %s", strerror(errno));
@@ -1047 +1007,2 @@ void aofChildPipeReadable(aeEventLoop *el, int fd, void *privdata, int mask) {
-      serverLog(LL_WARNING, "Can't send ACK to AOF child: %s", strerror(errno));
+            serverLog(LL_WARNING,"Can't send ACK to AOF child: %s",
+                strerror(errno));
@@ -1050,2 +1011 @@ void aofChildPipeReadable(aeEventLoop *el, int fd, void *privdata, int mask) {
-  aeDeleteFileEvent(server.el, server.aof_pipe_read_ack_from_child,
-                    AE_READABLE);
+    aeDeleteFileEvent(server.el,server.aof_pipe_read_ack_from_child,AE_READABLE);
@@ -1061,3 +1021 @@ int aofCreatePipes(void) {
-  if (aeCreateFileEvent(server.el, fds[2], AE_READABLE, aofChildPipeReadable,
-                        NULL) == AE_ERR)
-    goto error;
+    if (aeCreateFileEvent(server.el, fds[2], AE_READABLE, aofChildPipeReadable, NULL) == AE_ERR) goto error;
@@ -1075,2 +1033 @@ error:
-  for (j = 0; j < 6; j++)
-    if (fds[j] != -1) close(fds[j]);
+    for (j = 0; j < 6; j++) if(fds[j] != -1) close(fds[j]);
@@ -1080,4 +1037,2 @@ void aofClosePipes(void) {
-  aeDeleteFileEvent(server.el, server.aof_pipe_read_ack_from_child,
-                    AE_READABLE);
-  aeDeleteFileEvent(server.el, server.aof_pipe_write_data_to_child,
-                    AE_WRITABLE);
+    aeDeleteFileEvent(server.el,server.aof_pipe_read_ack_from_child,AE_READABLE);
+    aeDeleteFileEvent(server.el,server.aof_pipe_write_data_to_child,AE_WRITABLE);
@@ -1118,3 +1073 @@ int rewriteAppendOnlyFileBackground(void) {
-    server.stat_fork_rate = (double)zmalloc_used_memory() * 1000000 /
-                            server.stat_fork_time /
-                            (1024 * 1024 * 1024);
+        server.stat_fork_rate = (double) zmalloc_used_memory() * 1000000 / server.stat_fork_time / (1024*1024*1024);
@@ -1131,2 +1084 @@ int rewriteAppendOnlyFileBackground(void) {
-              "Background append only file rewriting started by pid %d",
-              childpid);
+            "Background append only file rewriting started by pid %d",childpid);
@@ -1145,2 +1097 @@ void bgrewriteaofCommand(client *c) {
-    addReplyError(c,
-                  "Background append only file rewriting already in progress");
+        addReplyError(c,"Background append only file rewriting already in progress");
@@ -1180 +1131,2 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-    serverLog(LL_NOTICE, "Background AOF rewrite terminated with success");
+        serverLog(LL_NOTICE,
+            "Background AOF rewrite terminated with success");
@@ -1187,2 +1139 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-                "Unable to open the temporary AOF produced by the child: %s",
-                strerror(errno));
+                "Unable to open the temporary AOF produced by the child: %s", strerror(errno));
@@ -1192,4 +1143,2 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-      serverLog(
-          LL_WARNING,
-          "Error trying to flush the parent diff to the rewritten AOF: %s",
-          strerror(errno));
+            serverLog(LL_WARNING,
+                "Error trying to flush the parent diff to the rewritten AOF: %s", strerror(errno));
@@ -1202,3 +1151 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-              "Residual parent diff successfully flushed to the rewritten AOF "
-              "(%.2f MB)",
-              (double)aofRewriteBufferSize() / (1024 * 1024));
+            "Residual parent diff successfully flushed to the rewritten AOF (%.2f MB)", (double) aofRewriteBufferSize() / (1024*1024));
@@ -1214 +1161,3 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-                tmpfile, server.aof_filename, strerror(errno));
+                tmpfile,
+                server.aof_filename,
+                strerror(errno));
@@ -1238,5 +1187,5 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-    if (server.aof_state == AOF_WAIT_REWRITE) server.aof_state = AOF_ON;
-    if (oldfd != -1)
-      bioCreateBackgroundJob(BIO_CLOSE_FILE, (void *)(long)oldfd, NULL, NULL);
-    serverLog(LL_VERBOSE, "Background AOF rewrite signal handler took %lldus",
-              ustime() - now);
+        if (server.aof_state == AOF_WAIT_REWRITE)
+            server.aof_state = AOF_ON;
+        if (oldfd != -1) bioCreateBackgroundJob(BIO_CLOSE_FILE,(void*)(long)oldfd,NULL,NULL);
+        serverLog(LL_VERBOSE,
+            "Background AOF rewrite signal handler took %lldus", ustime()-now);
@@ -1244,2 +1193,4 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-    if (bysignal != SIGUSR1) server.aof_lastbgrewrite_status = C_ERR;
-    serverLog(LL_WARNING, "Background AOF rewrite terminated with error");
+        if (bysignal != SIGUSR1)
+            server.aof_lastbgrewrite_status = C_ERR;
+        serverLog(LL_WARNING,
+            "Background AOF rewrite terminated with error");
@@ -1248,2 +1199,2 @@ void backgroundRewriteDoneHandler(int exitcode, int bysignal) {
-    serverLog(LL_WARNING, "Background AOF rewrite terminated by signal %d",
-              bysignal);
+        serverLog(LL_WARNING,
+            "Background AOF rewrite terminated by signal %d", bysignal);
@@ -1258 +1209,2 @@ cleanup:
-  if (server.aof_state == AOF_WAIT_REWRITE) server.aof_rewrite_scheduled = 1;
+    if (server.aof_state == AOF_WAIT_REWRITE)
+        server.aof_rewrite_scheduled = 1;
