diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/redis/7c748c06-041d8e2a-70bc5f77/src@redis.no_comments_mergebot.h b/home/whalien/codebase/cpp/mergebot/eva/output/redis/7c748c06-041d8e2a-70bc5f77/src@redis.no_comments_merged.h
index 927881a..01cff31 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/redis/7c748c06-041d8e2a-70bc5f77/src@redis.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/redis/7c748c06-041d8e2a-70bc5f77/src@redis.no_comments_merged.h
@@ -19,9 +18,0 @@
-#include "ae.h"
-#include "sds.h"
-#include "dict.h"
-#include "adlist.h"
-#include "anet.h"
-#include "zipmap.h"
-#include "intset.h"
-#include "version.h"
-#include "util.h"
@@ -31 +21,0 @@
-#define REDIS_STATIC_ARGS 8
@@ -52,2 +42 @@
-#define REDIS_REQUEST_MAX_SIZE \
-  (1024 * 1024 * 256)
+#define REDIS_REQUEST_MAX_SIZE (1024*1024*256)
@@ -56,2 +45 @@
-#define REDIS_MAX_LOGMSG_LEN \
-  1024
+#define REDIS_MAX_LOGMSG_LEN 1024
@@ -65,8 +52,0 @@
-#define REDIS_IO_LOAD 1
-#define REDIS_IO_SAVE 2
-#define REDIS_IO_LOADINPROG 4
-#define REDIS_IO_SAVEINPROG 8
-#define REDIS_IO_ONLYLOADS 1
-#define REDIS_IO_ASAP 2
-#define REDIS_MAX_COMPLETED_JOBS_PROCESSED 1
-#define REDIS_THREAD_STACK_SIZE (1024 * 1024 * 4)
@@ -79,5 +58,0 @@
-#define REDIS_HASH_ZIPMAP 9
-#define REDIS_LIST_ZIPLIST 10
-#define REDIS_SET_INTSET 11
-#define REDIS_ZSET_ZIPLIST 12
-#define REDIS_IO_WAIT 32
@@ -111,2 +86,2 @@
-#define REDIS_UNBLOCKED \
-  256
+#define REDIS_UNBLOCKED 256
+#define REDIS_LUA_CLIENT 512
@@ -121,4 +96,2 @@
-#define REDIS_REPL_WAIT_BGSAVE_START \
-  3
-#define REDIS_REPL_WAIT_BGSAVE_END \
-  4
+#define REDIS_REPL_WAIT_BGSAVE_START 3
+#define REDIS_REPL_WAIT_BGSAVE_END 4
@@ -137,0 +111 @@
+#define REDIS_NOTUSED(V) ((void) V)
@@ -159,0 +134,2 @@
+#define redisAssert(_e) ((_e)?(void)0 : (_redisAssert(#_e,__FILE__,__LINE__),_exit(1)))
+#define redisPanic(_e) _redisPanic(#_e,__FILE__,__LINE__),_exit(1)
@@ -179,0 +156,6 @@ typedef struct vmPointer {
+#define initStaticStringObject(_var,_ptr) do { \
+    _var.refcount = 1; \
+    _var.type = REDIS_STRING; \
+    _var.encoding = REDIS_ENCODING_RAW; \
+    _var.ptr = _ptr; \
+} while(0);
@@ -238,6 +220,8 @@ struct sharedObjectsStruct {
-      *colon, *nullbulk, *nullmultibulk, *queued, *emptymultibulk,
-      *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr, *outofrangeerr,
-      *noscripterr, *loadingerr, *plus, *select0, *select1, *select2, *select3,
-      *select4, *select5, *select6, *select7, *select8, *select9, *messagebulk,
-      *pmessagebulk, *subscribebulk, *unsubscribebulk, *mbulk3, *mbulk4,
-      *psubscribebulk, *punsubscribebulk, *integers[REDIS_SHARED_INTEGERS];
+    *colon, *nullbulk, *nullmultibulk, *queued,
+    *emptymultibulk, *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr,
+    *outofrangeerr, *noscripterr, *loadingerr, *plus,
+    *select0, *select1, *select2, *select3, *select4,
+    *select5, *select6, *select7, *select8, *select9,
+    *messagebulk, *pmessagebulk, *subscribebulk, *unsubscribebulk, *mbulk3,
+    *mbulk4, *psubscribebulk, *punsubscribebulk,
+    *integers[REDIS_SHARED_INTEGERS];
@@ -284,4 +268 @@ typedef struct clusterLink {
-#define REDIS_NODE_NULL_NAME \
-  "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" \
-  "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000" \
-  "\000\000\000\000"
+#define REDIS_NODE_NULL_NAME "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
@@ -468,2 +449 @@ typedef void redisCommandProc(redisClient *c);
-typedef int *redisGetKeysProc(struct redisCommand *cmd, robj **argv, int argc,
-                              int *numkeys, int flags);
+typedef int *redisGetKeysProc(struct redisCommand *cmd, robj **argv, int argc, int *numkeys, int flags);
@@ -576,2 +556 @@ unsigned long listTypeLength(robj *subject);
-listTypeIterator *listTypeInitIterator(robj *subject, int index,
-                                       unsigned char direction);
+listTypeIterator *listTypeInitIterator(robj *subject, int index, unsigned char direction);
@@ -617,2 +596 @@ robj *createZsetZiplistObject(void);
-int getLongFromObjectOrReply(redisClient *c, robj *o, long *target,
-                             const char *msg);
+int getLongFromObjectOrReply(redisClient *c, robj *o, long *target, const char *msg);
@@ -620,4 +598,2 @@ int checkType(redisClient *c, robj *o, int type);
-int getLongLongFromObjectOrReply(redisClient *c, robj *o, long long *target,
-                                 const char *msg);
-int getDoubleFromObjectOrReply(redisClient *c, robj *o, double *target,
-                               const char *msg);
+int getLongLongFromObjectOrReply(redisClient *c, robj *o, long long *target, const char *msg);
+int getDoubleFromObjectOrReply(redisClient *c, robj *o, double *target, const char *msg);
@@ -638,0 +615 @@ void stopLoading(void);
+#include "rdb.h"
@@ -640,2 +617 @@ void flushAppendOnlyFile(int force);
-void feedAppendOnlyFile(struct redisCommand *cmd, int dictid, robj **argv,
-                        int argc);
+void feedAppendOnlyFile(struct redisCommand *cmd, int dictid, robj **argv, int argc);
@@ -692,2 +668 @@ void hashTypeTryObjectEncoding(robj *subject, robj **o1, robj **o2);
-int hashTypeGet(robj *o, robj *key, robj **objval, unsigned char **v,
-                unsigned int *vlen);
+int hashTypeGet(robj *o, robj *key, robj **objval, unsigned char **v, unsigned int *vlen);
@@ -702,2 +677 @@ int hashTypeNext(hashTypeIterator *hi);
-int hashTypeCurrent(hashTypeIterator *hi, int what, robj **objval,
-                    unsigned char **v, unsigned int *vlen);
+int hashTypeCurrent(hashTypeIterator *hi, int what, robj **objval, unsigned char **v, unsigned int *vlen);
@@ -733,2 +707 @@ void signalFlushedDb(int dbid);
-unsigned int GetKeysInSlot(unsigned int hashslot, robj **keys,
-                           unsigned int count);
+unsigned int GetKeysInSlot(unsigned int hashslot, robj **keys, unsigned int count);
@@ -737,2 +710 @@ unsigned int GetKeysInSlot(unsigned int hashslot, robj **keys,
-int *getKeysFromCommand(struct redisCommand *cmd, robj **argv, int argc,
-                        int *numkeys, int flags);
+int *getKeysFromCommand(struct redisCommand *cmd, robj **argv, int argc, int *numkeys, int flags);
@@ -740,6 +712,3 @@ void getKeysFreeResult(int *result);
-int *noPreloadGetKeys(struct redisCommand *cmd, robj **argv, int argc,
-                      int *numkeys, int flags);
-int *renameGetKeys(struct redisCommand *cmd, robj **argv, int argc,
-                   int *numkeys, int flags);
-int *zunionInterGetKeys(struct redisCommand *cmd, robj **argv, int argc,
-                        int *numkeys, int flags);
+int *noPreloadGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags);
+int *renameGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags);
+int *zunionInterGetKeys(struct redisCommand *cmd,robj **argv, int argc, int *numkeys, int flags);
@@ -752,2 +721 @@ void clusterCron(void);
-clusterNode *getNodeByQuery(redisClient *c, struct redisCommand *cmd,
-                            robj **argv, int argc, int *hashslot, int *ask);
+clusterNode *getNodeByQuery(redisClient *c, struct redisCommand *cmd, robj **argv, int argc, int *hashslot, int *ask);
@@ -881,0 +850,6 @@ void evalShaCommand(redisClient *c);
+#if defined(__GNUC__)
+void *calloc(size_t count, size_t size) __attribute__ ((deprecated));
+void free(void *ptr) __attribute__ ((deprecated));
+void *malloc(size_t size) __attribute__ ((deprecated));
+void *realloc(void *ptr, size_t size) __attribute__ ((deprecated));
+#endif
