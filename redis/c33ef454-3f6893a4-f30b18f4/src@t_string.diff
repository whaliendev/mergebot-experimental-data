diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c33ef454-3f6893a4-f30b18f4/src@t_string.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c33ef454-3f6893a4-f30b18f4/src@t_string.no_comments_merged.c
index ef88847..3b791e2 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c33ef454-3f6893a4-f30b18f4/src@t_string.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c33ef454-3f6893a4-f30b18f4/src@t_string.no_comments_merged.c
@@ -15,2 +15 @@ static int checkStringLength(client *c, long long size) {
-void setGenericCommand(client *c, int flags, robj *key, robj *val, robj *expire,
-                       int unit, robj *ok_reply, robj *abort_reply) {
+void setGenericCommand(client *c, int flags, robj *key, robj *val, robj *expire, int unit, robj *ok_reply, robj *abort_reply) {
@@ -28 +27,2 @@ void setGenericCommand(client *c, int flags, robj *key, robj *val, robj *expire,
-      (flags & OBJ_SET_XX && lookupKeyWrite(c->db, key) == NULL)) {
+        (flags & OBJ_SET_XX && lookupKeyWrite(c->db,key) == NULL))
+    {
@@ -36 +36,2 @@ void setGenericCommand(client *c, int flags, robj *key, robj *val, robj *expire,
-  if (expire) notifyKeyspaceEvent(NOTIFY_GENERIC, "expire", key, c->db->id);
+    if (expire) notifyKeyspaceEvent(NOTIFY_GENERIC,
+        "expire",key,c->db->id);
@@ -47,2 +48,4 @@ void setCommand(client *c) {
-    if ((a[0] == 'n' || a[0] == 'N') && (a[1] == 'x' || a[1] == 'X') &&
-        a[2] == '\0' && !(flags & OBJ_SET_XX)) {
+        if ((a[0] == 'n' || a[0] == 'N') &&
+            (a[1] == 'x' || a[1] == 'X') && a[2] == '\0' &&
+            !(flags & OBJ_SET_XX))
+        {
@@ -50,2 +53,4 @@ void setCommand(client *c) {
-    } else if ((a[0] == 'x' || a[0] == 'X') && (a[1] == 'x' || a[1] == 'X') &&
-               a[2] == '\0' && !(flags & OBJ_SET_NX)) {
+        } else if ((a[0] == 'x' || a[0] == 'X') &&
+                   (a[1] == 'x' || a[1] == 'X') && a[2] == '\0' &&
+                   !(flags & OBJ_SET_NX))
+        {
@@ -53,2 +58,4 @@ void setCommand(client *c) {
-    } else if ((a[0] == 'e' || a[0] == 'E') && (a[1] == 'x' || a[1] == 'X') &&
-               a[2] == '\0' && !(flags & OBJ_SET_PX) && next) {
+        } else if ((a[0] == 'e' || a[0] == 'E') &&
+                   (a[1] == 'x' || a[1] == 'X') && a[2] == '\0' &&
+                   !(flags & OBJ_SET_PX) && next)
+        {
@@ -59,2 +66,4 @@ void setCommand(client *c) {
-    } else if ((a[0] == 'p' || a[0] == 'P') && (a[1] == 'x' || a[1] == 'X') &&
-               a[2] == '\0' && !(flags & OBJ_SET_EX) && next) {
+        } else if ((a[0] == 'p' || a[0] == 'P') &&
+                   (a[1] == 'x' || a[1] == 'X') && a[2] == '\0' &&
+                   !(flags & OBJ_SET_EX) && next)
+        {
@@ -75,2 +84 @@ void setnxCommand(client *c) {
-  setGenericCommand(c, OBJ_SET_NX, c->argv[1], c->argv[2], NULL, 0, shared.cone,
-                    shared.czero);
+    setGenericCommand(c,OBJ_SET_NX,c->argv[1],c->argv[2],NULL,0,shared.cone,shared.czero);
@@ -80,2 +88 @@ void setexCommand(client *c) {
-  setGenericCommand(c, OBJ_SET_NO_FLAGS, c->argv[1], c->argv[3], c->argv[2],
-                    UNIT_SECONDS, NULL, NULL);
+    setGenericCommand(c,OBJ_SET_NO_FLAGS,c->argv[1],c->argv[3],c->argv[2],UNIT_SECONDS,NULL,NULL);
@@ -85,2 +92 @@ void psetexCommand(client *c) {
-  setGenericCommand(c, OBJ_SET_NO_FLAGS, c->argv[1], c->argv[3], c->argv[2],
-                    UNIT_MILLISECONDS, NULL, NULL);
+    setGenericCommand(c,OBJ_SET_NO_FLAGS,c->argv[1],c->argv[3],c->argv[2],UNIT_MILLISECONDS,NULL,NULL);
@@ -100 +106,3 @@ int getGenericCommand(client *c) {
-void getCommand(client *c) { getGenericCommand(c); }
+void getCommand(client *c) {
+    getGenericCommand(c);
+}
@@ -112 +120,2 @@ void setrangeCommand(client *c) {
-  if (getLongFromObjectOrReply(c, c->argv[2], &offset, NULL) != C_OK) return;
+    if (getLongFromObjectOrReply(c,c->argv[2],&offset,NULL) != C_OK)
+        return;
@@ -123 +132,2 @@ void setrangeCommand(client *c) {
-    if (checkStringLength(c, offset + sdslen(value)) != C_OK) return;
+        if (checkStringLength(c,offset+sdslen(value)) != C_OK)
+            return;
@@ -128 +138,2 @@ void setrangeCommand(client *c) {
-    if (checkType(c, o, OBJ_STRING)) return;
+        if (checkType(c,o,OBJ_STRING))
+            return;
@@ -134 +145,2 @@ void setrangeCommand(client *c) {
-    if (checkStringLength(c, offset + sdslen(value)) != C_OK) return;
+        if (checkStringLength(c,offset+sdslen(value)) != C_OK)
+            return;
@@ -141 +153,2 @@ void setrangeCommand(client *c) {
-    notifyKeyspaceEvent(NOTIFY_STRING, "setrange", c->argv[1], c->db->id);
+        notifyKeyspaceEvent(NOTIFY_STRING,
+            "setrange",c->argv[1],c->db->id);
@@ -151,4 +164,3 @@ void getrangeCommand(client *c) {
-  if (getLongLongFromObjectOrReply(c, c->argv[2], &start, NULL) != C_OK) return;
-  if (getLongLongFromObjectOrReply(c, c->argv[3], &end, NULL) != C_OK) return;
-  if ((o = lookupKeyReadOrReply(c, c->argv[1], shared.emptybulk)) == NULL ||
-      checkType(c, o, OBJ_STRING))
+    if (getLongLongFromObjectOrReply(c,c->argv[2],&start,NULL) != C_OK)
+        return;
+    if (getLongLongFromObjectOrReply(c,c->argv[3],&end,NULL) != C_OK)
@@ -155,0 +168,2 @@ void getrangeCommand(client *c) {
+    if ((o = lookupKeyReadOrReply(c,c->argv[1],shared.emptybulk)) == NULL ||
+        checkType(c,o,OBJ_STRING)) return;
@@ -203,13 +216,0 @@ void msetGenericCommand(client *c, int nx) {
-<<<<<<< HEAD
-|||||||
-        busykeys++;
-      }
-    }
-    if (busykeys) {
-=======
-        busykeys++;
-        break;
-      }
-    }
-    if (busykeys) {
->>>>>>> 3f6893a4e294e90c2cd333c31b822dc131b0ee41
@@ -229,2 +230,6 @@ void msetGenericCommand(client *c, int nx) {
-void msetCommand(client *c) { msetGenericCommand(c, 0); }
-void msetnxCommand(client *c) { msetGenericCommand(c, 1); }
+void msetCommand(client *c) {
+    msetGenericCommand(c,0);
+}
+void msetnxCommand(client *c) {
+    msetGenericCommand(c,1);
+}
@@ -245,2 +250,3 @@ void incrDecrCommand(client *c, long long incr) {
-      (value < 0 || value >= OBJ_SHARED_INTEGERS) && value >= LONG_MIN &&
-      value <= LONG_MAX) {
+        (value < 0 || value >= OBJ_SHARED_INTEGERS) &&
+        value >= LONG_MIN && value <= LONG_MAX)
+    {
@@ -264,2 +270,6 @@ void incrDecrCommand(client *c, long long incr) {
-void incrCommand(client *c) { incrDecrCommand(c, 1); }
-void decrCommand(client *c) { incrDecrCommand(c, -1); }
+void incrCommand(client *c) {
+    incrDecrCommand(c,1);
+}
+void decrCommand(client *c) {
+    incrDecrCommand(c,-1);
+}
@@ -313 +323,2 @@ void appendCommand(client *c) {
-    if (checkType(c, o, OBJ_STRING)) return;
+        if (checkType(c,o,OBJ_STRING))
+            return;
@@ -316 +327,2 @@ void appendCommand(client *c) {
-    if (checkStringLength(c, totlen) != C_OK) return;
+        if (checkStringLength(c,totlen) != C_OK)
+            return;
@@ -329,2 +341 @@ void strlenCommand(client *c) {
-      checkType(c, o, OBJ_STRING))
-    return;
+        checkType(c,o,OBJ_STRING)) return;
