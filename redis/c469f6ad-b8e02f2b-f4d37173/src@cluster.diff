diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@cluster.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@cluster.no_comments_merged.c
index 8e9ad3f..ff146c7 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@cluster.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@cluster.no_comments_merged.c
@@ -42,3 +42 @@ int clusterBumpConfigEpochWithoutConsensus(void);
-void moduleCallClusterReceivers(const char *sender_id, uint64_t module_id,
-                                uint8_t type, const unsigned char *payload,
-                                uint32_t len);
+void moduleCallClusterReceivers(const char *sender_id, uint64_t module_id, uint8_t type, const unsigned char *payload, uint32_t len);
@@ -54 +52,2 @@ int clusterLoadConfig(char *filename) {
-      serverLog(LL_WARNING, "Loading the cluster node config from %s: %s",
+            serverLog(LL_WARNING,
+                "Loading the cluster node config from %s: %s",
@@ -77 +76,2 @@ int clusterLoadConfig(char *filename) {
-          server.cluster->currentEpoch = strtoull(argv[j + 1], NULL, 10);
+                    server.cluster->currentEpoch =
+                            strtoull(argv[j+1],NULL,10);
@@ -79 +79,2 @@ int clusterLoadConfig(char *filename) {
-          server.cluster->lastVoteEpoch = strtoull(argv[j + 1], NULL, 10);
+                    server.cluster->lastVoteEpoch =
+                            strtoull(argv[j+1],NULL,10);
@@ -81 +82,2 @@ int clusterLoadConfig(char *filename) {
-          serverLog(LL_WARNING, "Skipping unknown cluster config variable '%s'",
+                    serverLog(LL_WARNING,
+                        "Skipping unknown cluster config variable '%s'",
@@ -192 +194,2 @@ fmterr:
-  serverLog(LL_WARNING, "Unrecoverable error: corrupted cluster config file.");
+    serverLog(LL_WARNING,
+        "Unrecoverable error: corrupted cluster config file.");
@@ -208,2 +211,2 @@ int clusterSaveConfig(int do_fsync) {
-  if ((fd = open(server.cluster_configfile, O_WRONLY | O_CREAT, 0644)) == -1)
-    goto err;
+    if ((fd = open(server.cluster_configfile,O_WRONLY|O_CREAT,0644))
+        == -1) goto err;
@@ -241 +244,2 @@ int clusterLockConfig(char *filename) {
-    serverLog(LL_WARNING, "Can't open %s in order to acquire a lock: %s",
+        serverLog(LL_WARNING,
+            "Can't open %s in order to acquire a lock: %s",
@@ -251,2 +255 @@ int clusterLockConfig(char *filename) {
-                "files.",
-                filename);
+                 "files.", filename);
@@ -254,2 +257,2 @@ int clusterLockConfig(char *filename) {
-      serverLog(LL_WARNING, "Impossible to lock %s: %s", filename,
-                strerror(errno));
+            serverLog(LL_WARNING,
+                "Impossible to lock %s: %s", filename, strerror(errno));
@@ -265,2 +268,2 @@ void clusterUpdateMyselfFlags(void) {
-  int nofailover =
-      server.cluster_slave_no_failover ? CLUSTER_NODE_NOFAILOVER : 0;
+    int nofailover = server.cluster_slave_no_failover ?
+                     CLUSTER_NODE_NOFAILOVER : 0;
@@ -270 +273,2 @@ void clusterUpdateMyselfFlags(void) {
-    clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG | CLUSTER_TODO_UPDATE_STATE);
+        clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG|
+                             CLUSTER_TODO_UPDATE_STATE);
@@ -297 +301,2 @@ void clusterInit(void) {
-  if (clusterLockConfig(server.cluster_configfile) == C_ERR) exit(1);
+    if (clusterLockConfig(server.cluster_configfile) == C_ERR)
+        exit(1);
@@ -310,2 +315 @@ void clusterInit(void) {
-    serverLog(LL_WARNING,
-              "Redis port number too high. "
+        serverLog(LL_WARNING, "Redis port number too high. "
@@ -318,2 +322,3 @@ void clusterInit(void) {
-  if (listenToPort(port + CLUSTER_PORT_INCR, server.cfd, &server.cfd_count) ==
-      C_ERR) {
+    if (listenToPort(port+CLUSTER_PORT_INCR,
+        server.cfd,&server.cfd_count) == C_ERR)
+    {
@@ -326,2 +331 @@ void clusterInit(void) {
-        serverPanic(
-            "Unrecoverable error creating Redis Cluster "
+                    serverPanic("Unrecoverable error creating Redis Cluster "
@@ -336 +340,2 @@ void clusterInit(void) {
-  if (server.cluster_announce_port) myself->port = server.cluster_announce_port;
+    if (server.cluster_announce_port)
+        myself->port = server.cluster_announce_port;
@@ -375 +380,2 @@ void clusterReset(int hard) {
-  clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG | CLUSTER_TODO_UPDATE_STATE |
+    clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG|
+                         CLUSTER_TODO_UPDATE_STATE|
@@ -394 +400,2 @@ void freeClusterLink(clusterLink *link) {
-  if (link->node) link->node->link = NULL;
+    if (link->node)
+        link->node->link = NULL;
@@ -400,2 +407,2 @@ static void clusterConnAcceptHandler(connection *conn) {
-    serverLog(LL_VERBOSE, "Error accepting cluster node connection: %s",
-              connGetLastError(conn));
+        serverLog(LL_VERBOSE,
+                "Error accepting cluster node connection: %s", connGetLastError(conn));
@@ -423,2 +430,2 @@ void clusterAcceptHandler(aeEventLoop *el, int fd, void *privdata, int mask) {
-        serverLog(LL_VERBOSE, "Error accepting cluster node: %s",
-                  server.neterr);
+                serverLog(LL_VERBOSE,
+                    "Error accepting cluster node: %s", server.neterr);
@@ -427,2 +434 @@ void clusterAcceptHandler(aeEventLoop *el, int fd, void *privdata, int mask) {
-    connection *conn = server.tls_cluster ? connCreateAcceptedTLS(cfd, 1)
-                                          : connCreateAcceptedSocket(cfd);
+        connection *conn = server.tls_cluster ? connCreateAcceptedTLS(cfd,1) : connCreateAcceptedSocket(cfd);
@@ -431,2 +437 @@ void clusterAcceptHandler(aeEventLoop *el, int fd, void *privdata, int mask) {
-    serverLog(LL_VERBOSE, "Accepting cluster node connection from %s:%d", cip,
-              cport);
+        serverLog(LL_VERBOSE,"Accepting cluster node connection from %s:%d", cip, cport);
@@ -434 +439,2 @@ void clusterAcceptHandler(aeEventLoop *el, int fd, void *privdata, int mask) {
-      serverLog(LL_VERBOSE, "Error accepting cluster node connection: %s",
+            serverLog(LL_VERBOSE,
+                    "Error accepting cluster node connection: %s",
@@ -503,2 +509,2 @@ void clusterNodeCleanupFailureReports(clusterNode *node) {
-  mstime_t maxtime =
-      server.cluster_node_timeout * CLUSTER_FAIL_REPORT_VALIDITY_MULT;
+    mstime_t maxtime = server.cluster_node_timeout *
+                     CLUSTER_FAIL_REPORT_VALIDITY_MULT;
@@ -541 +547,2 @@ int clusterNodeRemoveSlave(clusterNode *master, clusterNode *slave) {
-      if (master->numslaves == 0) master->flags &= ~CLUSTER_NODE_MIGRATE_TO;
+            if (master->numslaves == 0)
+                master->flags &= ~CLUSTER_NODE_MIGRATE_TO;
@@ -551,2 +558,2 @@ int clusterNodeAddSlave(clusterNode *master, clusterNode *slave) {
-  master->slaves =
-      zrealloc(master->slaves, sizeof(clusterNode *) * (master->numslaves + 1));
+    master->slaves = zrealloc(master->slaves,
+        sizeof(clusterNode*)*(master->numslaves+1));
@@ -567 +574,2 @@ void freeClusterNode(clusterNode *n) {
-  for (j = 0; j < n->numslaves; j++) n->slaves[j]->slaveof = NULL;
+    for (j = 0; j < n->numslaves; j++)
+        n->slaves[j]->slaveof = NULL;
@@ -592 +600,2 @@ void clusterDelNode(clusterNode *delnode) {
-    if (server.cluster->slots[j] == delnode) clusterDelSlot(j);
+        if (server.cluster->slots[j] == delnode)
+            clusterDelSlot(j);
@@ -614 +623,2 @@ void clusterRenameNode(clusterNode *node, char *newname) {
-  serverLog(LL_DEBUG, "Renaming node %.40s into %.40s", node->name, newname);
+    serverLog(LL_DEBUG,"Renaming node %.40s into %.40s",
+        node->name, newname);
@@ -636 +646,3 @@ int clusterBumpConfigEpochWithoutConsensus(void) {
-  if (myself->configEpoch == 0 || myself->configEpoch != maxEpoch) {
+    if (myself->configEpoch == 0 ||
+        myself->configEpoch != maxEpoch)
+    {
@@ -639,2 +651,4 @@ int clusterBumpConfigEpochWithoutConsensus(void) {
-    clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG | CLUSTER_TODO_FSYNC_CONFIG);
-    serverLog(LL_WARNING, "New configEpoch set to %llu",
+        clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG|
+                             CLUSTER_TODO_FSYNC_CONFIG);
+        serverLog(LL_WARNING,
+            "New configEpoch set to %llu",
@@ -648,3 +662,2 @@ void clusterHandleConfigEpochCollision(clusterNode *sender) {
-  if (sender->configEpoch != myself->configEpoch || !nodeIsMaster(sender) ||
-      !nodeIsMaster(myself))
-    return;
+    if (sender->configEpoch != myself->configEpoch ||
+        !nodeIsMaster(sender) || !nodeIsMaster(myself)) return;
@@ -658 +671,2 @@ void clusterHandleConfigEpochCollision(clusterNode *sender) {
-            sender->name, (unsigned long long)myself->configEpoch);
+        sender->name,
+        (unsigned long long) myself->configEpoch);
@@ -699,2 +713,2 @@ void markNodeAsFailingIfNeeded(clusterNode *node) {
-  serverLog(LL_NOTICE, "Marking node %.40s as failing (quorum reached).",
-            node->name);
+    serverLog(LL_NOTICE,
+        "Marking node %.40s as failing (quorum reached).", node->name);
@@ -711,3 +725,4 @@ void clearNodeFailureIfNeeded(clusterNode *node) {
-    serverLog(
-        LL_NOTICE, "Clear FAIL state for node %.40s: %s is reachable again.",
-        node->name, nodeIsSlave(node) ? "replica" : "master without slots");
+        serverLog(LL_NOTICE,
+            "Clear FAIL state for node %.40s: %s is reachable again.",
+                node->name,
+                nodeIsSlave(node) ? "replica" : "master without slots");
@@ -719 +734,2 @@ void clearNodeFailureIfNeeded(clusterNode *node) {
-          (server.cluster_node_timeout * CLUSTER_FAIL_UNDO_TIME_MULT)) {
+        (server.cluster_node_timeout * CLUSTER_FAIL_UNDO_TIME_MULT))
+    {
@@ -721,2 +737 @@ void clearNodeFailureIfNeeded(clusterNode *node) {
-              "Clear FAIL state for node %.40s: is reachable again and nobody "
-              "is serving its slots after some time.",
+            "Clear FAIL state for node %.40s: is reachable again and nobody is serving its slots after some time.",
@@ -735,2 +750,3 @@ int clusterHandshakeInProgress(char *ip, int port, int cport) {
-    if (!strcasecmp(node->ip, ip) && node->port == port && node->cport == cport)
-      break;
+        if (!strcasecmp(node->ip,ip) &&
+            node->port == port &&
+            node->cport == cport) break;
@@ -745 +761,3 @@ int clusterStartHandshake(char *ip, int port, int cport) {
-  if (inet_pton(AF_INET, ip, &(((struct sockaddr_in *)&sa)->sin_addr))) {
+    if (inet_pton(AF_INET,ip,
+            &(((struct sockaddr_in *)&sa)->sin_addr)))
+    {
@@ -748 +766,2 @@ int clusterStartHandshake(char *ip, int port, int cport) {
-                       &(((struct sockaddr_in6 *)&sa)->sin6_addr))) {
+            &(((struct sockaddr_in6 *)&sa)->sin6_addr)))
+    {
@@ -760 +779,2 @@ int clusterStartHandshake(char *ip, int port, int cport) {
-    inet_ntop(AF_INET, (void *)&(((struct sockaddr_in *)&sa)->sin_addr),
+        inet_ntop(AF_INET,
+            (void*)&(((struct sockaddr_in *)&sa)->sin_addr),
@@ -763 +783,2 @@ int clusterStartHandshake(char *ip, int port, int cport) {
-    inet_ntop(AF_INET6, (void *)&(((struct sockaddr_in6 *)&sa)->sin6_addr),
+        inet_ntop(AF_INET6,
+            (void*)&(((struct sockaddr_in6 *)&sa)->sin6_addr),
@@ -779,2 +800 @@ void clusterProcessGossipSection(clusterMsg *hdr, clusterLink *link) {
-  clusterNode *sender =
-      link->node ? link->node : clusterLookupNode(hdr->sender);
+    clusterNode *sender = link->node ? link->node : clusterLookupNode(hdr->sender);
@@ -787,2 +807,6 @@ void clusterProcessGossipSection(clusterMsg *hdr, clusterLink *link) {
-      serverLog(LL_DEBUG, "GOSSIP %.40s %s:%d@%d %s", g->nodename, g->ip,
-                ntohs(g->port), ntohs(g->cport), ci);
+            serverLog(LL_DEBUG,"GOSSIP %.40s %s:%d@%d %s",
+                g->nodename,
+                g->ip,
+                ntohs(g->port),
+                ntohs(g->cport),
+                ci);
@@ -810 +834,3 @@ void clusterProcessGossipSection(clusterMsg *hdr, clusterLink *link) {
-          node->ping_sent == 0 && clusterNodeFailureReportsCount(node) == 0) {
+                node->ping_sent == 0 &&
+                clusterNodeFailureReportsCount(node) == 0)
+            {
@@ -814 +840,2 @@ void clusterProcessGossipSection(clusterMsg *hdr, clusterLink *link) {
-            pongtime > node->pong_received) {
+                    pongtime > node->pong_received)
+                {
@@ -821,2 +848,4 @@ void clusterProcessGossipSection(clusterMsg *hdr, clusterLink *link) {
-          (strcasecmp(node->ip, g->ip) || node->port != ntohs(g->port) ||
-           node->cport != ntohs(g->cport))) {
+                (strcasecmp(node->ip,g->ip) ||
+                 node->port != ntohs(g->port) ||
+                 node->cport != ntohs(g->cport)))
+            {
@@ -830,2 +859,4 @@ void clusterProcessGossipSection(clusterMsg *hdr, clusterLink *link) {
-      if (sender && !(flags & CLUSTER_NODE_NOADDR) &&
-          !clusterBlacklistExists(g->nodename)) {
+            if (sender &&
+                !(flags & CLUSTER_NODE_NOADDR) &&
+                !clusterBlacklistExists(g->nodename))
+            {
@@ -847 +878,2 @@ int nodeUpdateAddressIfNeeded(clusterNode *node, clusterLink *link,
-                              clusterMsg *hdr) {
+                              clusterMsg *hdr)
+{
@@ -853,2 +885,2 @@ int nodeUpdateAddressIfNeeded(clusterNode *node, clusterLink *link,
-  if (node->port == port && node->cport == cport && strcmp(ip, node->ip) == 0)
-    return 0;
+    if (node->port == port && node->cport == cport &&
+        strcmp(ip,node->ip) == 0) return 0;
@@ -860,2 +892,2 @@ int nodeUpdateAddressIfNeeded(clusterNode *node, clusterLink *link,
-  serverLog(LL_WARNING, "Address updated for node %.40s, now %s:%d", node->name,
-            node->ip, node->port);
+    serverLog(LL_WARNING,"Address updated for node %.40s, now %s:%d",
+        node->name, node->ip, node->port);
@@ -875 +907,2 @@ void clusterSetNodeAsMaster(clusterNode *n) {
-  clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG | CLUSTER_TODO_UPDATE_STATE);
+    clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG|
+                         CLUSTER_TODO_UPDATE_STATE);
@@ -877,3 +910 @@ void clusterSetNodeAsMaster(clusterNode *n) {
-void clusterUpdateSlotsConfigWith(clusterNode *sender,
-                                  uint64_t senderConfigEpoch,
-                                  unsigned char *slots) {
+void clusterUpdateSlotsConfigWith(clusterNode *sender, uint64_t senderConfigEpoch, unsigned char *slots) {
@@ -894,3 +925,6 @@ void clusterUpdateSlotsConfigWith(clusterNode *sender,
-          server.cluster->slots[j]->configEpoch < senderConfigEpoch) {
-        if (server.cluster->slots[j] == myself && countKeysInSlot(j) &&
-            sender != myself) {
+                server.cluster->slots[j]->configEpoch < senderConfigEpoch)
+            {
+                if (server.cluster->slots[j] == myself &&
+                    countKeysInSlot(j) &&
+                    sender != myself)
+                {
@@ -900 +934,2 @@ void clusterUpdateSlotsConfigWith(clusterNode *sender,
-        if (server.cluster->slots[j] == curmaster) newmaster = sender;
+                if (server.cluster->slots[j] == curmaster)
+                    newmaster = sender;
@@ -909 +944,2 @@ void clusterUpdateSlotsConfigWith(clusterNode *sender,
-  if (server.cluster_module_flags & CLUSTER_MODULE_FLAG_NO_REDIRECTION) return;
+    if (server.cluster_module_flags & CLUSTER_MODULE_FLAG_NO_REDIRECTION)
+        return;
@@ -913,2 +949 @@ void clusterUpdateSlotsConfigWith(clusterNode *sender,
-              "as a replica of %.40s",
-              sender->name);
+            "as a replica of %.40s", sender->name);
@@ -916 +951,2 @@ void clusterUpdateSlotsConfigWith(clusterNode *sender,
-    clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG | CLUSTER_TODO_UPDATE_STATE |
+        clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG|
+                             CLUSTER_TODO_UPDATE_STATE|
@@ -919 +955,2 @@ void clusterUpdateSlotsConfigWith(clusterNode *sender,
-    for (j = 0; j < dirty_slots_count; j++) delKeysInSlot(dirty_slots[j]);
+        for (j = 0; j < dirty_slots_count; j++)
+            delKeysInSlot(dirty_slots[j]);
@@ -928,2 +965,2 @@ int clusterProcessPacket(clusterLink *link) {
-  serverLog(LL_DEBUG, "--- Processing packet of type %d, %lu bytes", type,
-            (unsigned long)totlen);
+    serverLog(LL_DEBUG,"--- Processing packet of type %d, %lu bytes",
+        type, (unsigned long) totlen);
@@ -939 +976,2 @@ int clusterProcessPacket(clusterLink *link) {
-      type == CLUSTERMSG_TYPE_MEET) {
+        type == CLUSTERMSG_TYPE_MEET)
+    {
@@ -951 +989,2 @@ int clusterProcessPacket(clusterLink *link) {
-    explen += sizeof(clusterMsgDataPublish) - 8 +
+        explen += sizeof(clusterMsgDataPublish) -
+                8 +
@@ -957 +996,2 @@ int clusterProcessPacket(clusterLink *link) {
-             type == CLUSTERMSG_TYPE_MFSTART) {
+               type == CLUSTERMSG_TYPE_MFSTART)
+    {
@@ -966,2 +1006,2 @@ int clusterProcessPacket(clusterLink *link) {
-    explen +=
-        sizeof(clusterMsgDataPublish) - 3 + ntohl(hdr->data.module.msg.len);
+        explen += sizeof(clusterMsgDataPublish) -
+                3 + ntohl(hdr->data.module.msg.len);
@@ -983,3 +1023,6 @@ int clusterProcessPacket(clusterLink *link) {
-    if (server.cluster->mf_end && nodeIsSlave(myself) &&
-        myself->slaveof == sender && hdr->mflags[0] & CLUSTERMSG_FLAG0_PAUSED &&
-        server.cluster->mf_master_offset == 0) {
+        if (server.cluster->mf_end &&
+            nodeIsSlave(myself) &&
+            myself->slaveof == sender &&
+            hdr->mflags[0] & CLUSTERMSG_FLAG0_PAUSED &&
+            server.cluster->mf_master_offset == 0)
+        {
@@ -996 +1039,2 @@ int clusterProcessPacket(clusterLink *link) {
-        server.cluster_announce_ip == NULL) {
+            server.cluster_announce_ip == NULL)
+        {
@@ -999 +1043,2 @@ int clusterProcessPacket(clusterLink *link) {
-          strcmp(ip, myself->ip)) {
+                strcmp(ip,myself->ip))
+            {
@@ -1020 +1065,2 @@ int clusterProcessPacket(clusterLink *link) {
-      type == CLUSTERMSG_TYPE_MEET) {
+        type == CLUSTERMSG_TYPE_MEET)
+    {
@@ -1029,3 +1075,3 @@ int clusterProcessPacket(clusterLink *link) {
-                    "updating the address if needed.",
-                    sender->name);
-          if (nodeUpdateAddressIfNeeded(sender, link, hdr)) {
+                        "updating the address if needed.", sender->name);
+                    if (nodeUpdateAddressIfNeeded(sender,link,hdr))
+                    {
@@ -1044,5 +1090,6 @@ int clusterProcessPacket(clusterLink *link) {
-      } else if (memcmp(link->node->name, hdr->sender, CLUSTER_NAMELEN) != 0) {
-        serverLog(LL_DEBUG,
-                  "PONG contains mismatching sender ID. About node %.40s added "
-                  "%d ms ago, having flags %d",
-                  link->node->name, (int)(mstime() - (link->node->ctime)),
+            } else if (memcmp(link->node->name,hdr->sender,
+                        CLUSTER_NAMELEN) != 0)
+            {
+                serverLog(LL_DEBUG,"PONG contains mismatching sender ID. About node %.40s added %d ms ago, having flags %d",
+                    link->node->name,
+                    (int)(mstime()-(link->node->ctime)),
@@ -1064,2 +1111,4 @@ int clusterProcessPacket(clusterLink *link) {
-    if (sender && type == CLUSTERMSG_TYPE_PING && !nodeInHandshake(sender) &&
-        nodeUpdateAddressIfNeeded(sender, link, hdr)) {
+        if (sender && type == CLUSTERMSG_TYPE_PING &&
+            !nodeInHandshake(sender) &&
+            nodeUpdateAddressIfNeeded(sender,link,hdr))
+        {
@@ -1081 +1130,3 @@ int clusterProcessPacket(clusterLink *link) {
-      if (!memcmp(hdr->slaveof, CLUSTER_NODE_NULL_NAME, sizeof(hdr->slaveof))) {
+            if (!memcmp(hdr->slaveof,CLUSTER_NODE_NULL_NAME,
+                sizeof(hdr->slaveof)))
+            {
@@ -1087 +1138,2 @@ int clusterProcessPacket(clusterLink *link) {
-          sender->flags &= ~(CLUSTER_NODE_MASTER | CLUSTER_NODE_MIGRATE_TO);
+                    sender->flags &= ~(CLUSTER_NODE_MASTER|
+                                       CLUSTER_NODE_MIGRATE_TO);
@@ -1093 +1145,2 @@ int clusterProcessPacket(clusterLink *link) {
-          if (sender->slaveof) clusterNodeRemoveSlave(sender->slaveof, sender);
+                    if (sender->slaveof)
+                        clusterNodeRemoveSlave(sender->slaveof,sender);
@@ -1105,2 +1158,2 @@ int clusterProcessPacket(clusterLink *link) {
-        dirty_slots = memcmp(sender_master->slots, hdr->myslots,
-                             sizeof(hdr->myslots)) != 0;
+                dirty_slots = memcmp(sender_master->slots,
+                        hdr->myslots,sizeof(hdr->myslots)) != 0;
@@ -1116,3 +1169,4 @@ int clusterProcessPacket(clusterLink *link) {
-              server.cluster->slots[j] == NULL)
-            continue;
-          if (server.cluster->slots[j]->configEpoch > senderConfigEpoch) {
+                        server.cluster->slots[j] == NULL) continue;
+                    if (server.cluster->slots[j]->configEpoch >
+                        senderConfigEpoch)
+                    {
@@ -1123 +1177,2 @@ int clusterProcessPacket(clusterLink *link) {
-            clusterSendUpdate(sender->link, server.cluster->slots[j]);
+                        clusterSendUpdate(sender->link,
+                            server.cluster->slots[j]);
@@ -1129,2 +1184,4 @@ int clusterProcessPacket(clusterLink *link) {
-    if (sender && nodeIsMaster(myself) && nodeIsMaster(sender) &&
-        senderConfigEpoch == myself->configEpoch) {
+        if (sender &&
+            nodeIsMaster(myself) && nodeIsMaster(sender) &&
+            senderConfigEpoch == myself->configEpoch)
+        {
@@ -1139,2 +1196,4 @@ int clusterProcessPacket(clusterLink *link) {
-          !(failing->flags & (CLUSTER_NODE_FAIL | CLUSTER_NODE_MYSELF))) {
-        serverLog(LL_NOTICE, "FAIL message received from %.40s about %.40s",
+                !(failing->flags & (CLUSTER_NODE_FAIL|CLUSTER_NODE_MYSELF)))
+            {
+                serverLog(LL_NOTICE,
+                    "FAIL message received from %.40s about %.40s",
@@ -1157 +1216,2 @@ int clusterProcessPacket(clusterLink *link) {
-        listLength(server.pubsub_patterns)) {
+           listLength(server.pubsub_patterns))
+        {
@@ -1160,2 +1220,2 @@ int clusterProcessPacket(clusterLink *link) {
-      channel = createStringObject((char *)hdr->data.publish.msg.bulk_data,
-                                   channel_len);
+            channel = createStringObject(
+                        (char*)hdr->data.publish.msg.bulk_data,channel_len);
@@ -1163 +1223,2 @@ int clusterProcessPacket(clusterLink *link) {
-          (char *)hdr->data.publish.msg.bulk_data + channel_len, message_len);
+                        (char*)hdr->data.publish.msg.bulk_data+channel_len,
+                        message_len);
@@ -1174 +1235,2 @@ int clusterProcessPacket(clusterLink *link) {
-        senderCurrentEpoch >= server.cluster->failover_auth_epoch) {
+            senderCurrentEpoch >= server.cluster->failover_auth_epoch)
+        {
@@ -1196 +1258,2 @@ int clusterProcessPacket(clusterLink *link) {
-    clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG | CLUSTER_TODO_FSYNC_CONFIG);
+        clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG|
+                             CLUSTER_TODO_FSYNC_CONFIG);
@@ -1211 +1274,3 @@ int clusterProcessPacket(clusterLink *link) {
-void handleLinkIOError(clusterLink *link) { freeClusterLink(link); }
+void handleLinkIOError(clusterLink *link) {
+    freeClusterLink(link);
+}
@@ -1223 +1288,2 @@ void clusterWriteHandler(connection *conn) {
-  if (sdslen(link->sndbuf) == 0) connSetWriteHandler(link->conn, NULL);
+    if (sdslen(link->sndbuf) == 0)
+        connSetWriteHandler(link->conn, NULL);
@@ -1230 +1296,2 @@ void clusterLinkConnectHandler(connection *conn) {
-              node->name, node->ip, node->cport, connGetLastError(conn));
+                node->name, node->ip, node->cport,
+                connGetLastError(conn));
@@ -1236,2 +1303,2 @@ void clusterLinkConnectHandler(connection *conn) {
-  clusterSendPing(link, node->flags & CLUSTER_NODE_MEET ? CLUSTERMSG_TYPE_MEET
-                                                        : CLUSTERMSG_TYPE_PING);
+    clusterSendPing(link, node->flags & CLUSTER_NODE_MEET ?
+            CLUSTERMSG_TYPE_MEET : CLUSTERMSG_TYPE_PING);
@@ -1242,2 +1309,2 @@ void clusterLinkConnectHandler(connection *conn) {
-  serverLog(LL_DEBUG, "Connecting with Node %.40s at %s:%d", node->name,
-            node->ip, node->cport);
+    serverLog(LL_DEBUG,"Connecting with Node %.40s at %s:%d",
+            node->name, node->ip, node->cport);
@@ -1259 +1326,2 @@ void clusterReadHandler(connection *conn) {
-            ntohl(hdr->totlen) < CLUSTERMSG_MIN_LEN) {
+                    ntohl(hdr->totlen) < CLUSTERMSG_MIN_LEN)
+                {
@@ -1271,2 +1339 @@ void clusterReadHandler(connection *conn) {
-    if (nread == -1 && (connGetState(conn) == CONN_STATE_CONNECTED))
-      return;
+        if (nread == -1 && (connGetState(conn) == CONN_STATE_CONNECTED)) return;
@@ -1309 +1376,2 @@ void clusterBroadcastMessage(void *buf, size_t len) {
-    if (node->flags & (CLUSTER_NODE_MYSELF | CLUSTER_NODE_HANDSHAKE)) continue;
+        if (node->flags & (CLUSTER_NODE_MYSELF|CLUSTER_NODE_HANDSHAKE))
+            continue;
@@ -1318 +1386,2 @@ void clusterBuildMessageHdr(clusterMsg *hdr, int type) {
-  master = (nodeIsSlave(myself) && myself->slaveof) ? myself->slaveof : myself;
+    master = (nodeIsSlave(myself) && myself->slaveof) ?
+              myself->slaveof : myself;
@@ -1333,5 +1402,5 @@ void clusterBuildMessageHdr(clusterMsg *hdr, int type) {
-  int announced_port =
-      server.cluster_announce_port ? server.cluster_announce_port : port;
-  int announced_cport = server.cluster_announce_bus_port
-                            ? server.cluster_announce_bus_port
-                            : (port + CLUSTER_PORT_INCR);
+    int announced_port = server.cluster_announce_port ?
+                         server.cluster_announce_port : port;
+    int announced_cport = server.cluster_announce_bus_port ?
+                          server.cluster_announce_bus_port :
+                          (port + CLUSTER_PORT_INCR);
@@ -1367,3 +1436,2 @@ int clusterNodeIsInGossipSection(clusterMsg *hdr, int count, clusterNode *n) {
-    if (memcmp(hdr->data.ping.gossip[j].nodename, n->name, CLUSTER_NAMELEN) ==
-        0)
-      break;
+        if (memcmp(hdr->data.ping.gossip[j].nodename,n->name,
+                CLUSTER_NAMELEN) == 0) break;
@@ -1411 +1479,2 @@ void clusterSendPing(clusterLink *link, int type) {
-        (this->link == NULL && this->numslots == 0)) {
+            (this->link == NULL && this->numslots == 0))
+        {
@@ -1487,2 +1556,2 @@ void clusterSendPublish(clusterLink *link, robj *channel, robj *message) {
-  memcpy(hdr->data.publish.msg.bulk_data + sdslen(channel->ptr), message->ptr,
-         sdslen(message->ptr));
+    memcpy(hdr->data.publish.msg.bulk_data+sdslen(channel->ptr),
+        message->ptr,sdslen(message->ptr));
@@ -1541,3 +1610 @@ void clusterSendModule(clusterLink *link, uint64_t module_id, uint8_t type,
-int clusterSendModuleMessageToTarget(const char *target, uint64_t module_id,
-                                     uint8_t type, unsigned char *payload,
-                                     uint32_t len) {
+int clusterSendModuleMessageToTarget(const char *target, uint64_t module_id, uint8_t type, unsigned char *payload, uint32_t len) {
@@ -1549 +1616,2 @@ int clusterSendModuleMessageToTarget(const char *target, uint64_t module_id,
-  clusterSendModule(target ? node->link : NULL, module_id, type, payload, len);
+    clusterSendModule(target ? node->link : NULL,
+                      module_id, type, payload, len);
@@ -1596 +1664,2 @@ void clusterSendFailoverAuthIfNeeded(clusterNode *node, clusterMsg *request) {
-              node->name, (unsigned long long)requestCurrentEpoch,
+            node->name,
+            (unsigned long long) requestCurrentEpoch,
@@ -1603 +1672,2 @@ void clusterSendFailoverAuthIfNeeded(clusterNode *node, clusterMsg *request) {
-              node->name, (unsigned long long)server.cluster->currentEpoch);
+                node->name,
+                (unsigned long long) server.cluster->currentEpoch);
@@ -1607 +1677,2 @@ void clusterSendFailoverAuthIfNeeded(clusterNode *node, clusterMsg *request) {
-      (!nodeFailed(master) && !force_ack)) {
+        (!nodeFailed(master) && !force_ack))
+    {
@@ -1617 +1688,2 @@ void clusterSendFailoverAuthIfNeeded(clusterNode *node, clusterMsg *request) {
-      serverLog(LL_WARNING, "Failover auth denied to %.40s: its master is up",
+            serverLog(LL_WARNING,
+                    "Failover auth denied to %.40s: its master is up",
@@ -1622 +1694,2 @@ void clusterSendFailoverAuthIfNeeded(clusterNode *node, clusterMsg *request) {
-  if (mstime() - node->slaveof->voted_time < server.cluster_node_timeout * 2) {
+    if (mstime() - node->slaveof->voted_time < server.cluster_node_timeout * 2)
+    {
@@ -1634 +1707,2 @@ void clusterSendFailoverAuthIfNeeded(clusterNode *node, clusterMsg *request) {
-        server.cluster->slots[j]->configEpoch <= requestConfigEpoch) {
+            server.cluster->slots[j]->configEpoch <= requestConfigEpoch)
+        {
@@ -1661,3 +1735,3 @@ int clusterGetSlaveRank(void) {
-    if (master->slaves[j] != myself && !nodeCantFailover(master->slaves[j]) &&
-        master->slaves[j]->repl_offset > myoffset)
-      rank++;
+        if (master->slaves[j] != myself &&
+            !nodeCantFailover(master->slaves[j]) &&
+            master->slaves[j]->repl_offset > myoffset) rank++;
@@ -1674,3 +1748,3 @@ void clusterLogCantFailover(int reason) {
-  if (myself->slaveof && nodeFailed(myself->slaveof) &&
-      (mstime() - myself->slaveof->fail_time) < nolog_fail_time)
-    return;
+    if (myself->slaveof &&
+        nodeFailed(myself->slaveof) &&
+        (mstime() - myself->slaveof->fail_time) < nolog_fail_time) return;
@@ -1679,2 +1753 @@ void clusterLogCantFailover(int reason) {
-      msg =
-          "Disconnected from master for longer than allowed. "
+        msg = "Disconnected from master for longer than allowed. "
@@ -1721,2 +1794,2 @@ void clusterHandleSlaveFailover(void) {
-  int manual_failover =
-      server.cluster->mf_end != 0 && server.cluster->mf_can_start;
+    int manual_failover = server.cluster->mf_end != 0 &&
+                          server.cluster->mf_can_start;
@@ -1728 +1801,2 @@ void clusterHandleSlaveFailover(void) {
-  if (nodeIsMaster(myself) || myself->slaveof == NULL ||
+    if (nodeIsMaster(myself) ||
+        myself->slaveof == NULL ||
@@ -1731 +1805,2 @@ void clusterHandleSlaveFailover(void) {
-      myself->slaveof->numslots == 0) {
+        myself->slaveof->numslots == 0)
+    {
@@ -1736,2 +1811,2 @@ void clusterHandleSlaveFailover(void) {
-    data_age =
-        (mstime_t)(server.unixtime - server.master->lastinteraction) * 1000;
+        data_age = (mstime_t)(server.unixtime - server.master->lastinteraction)
+                   * 1000;
@@ -1744,3 +1819,4 @@ void clusterHandleSlaveFailover(void) {
-      data_age > (((mstime_t)server.repl_ping_slave_period * 1000) +
-                  (server.cluster_node_timeout *
-                   server.cluster_slave_validity_factor))) {
+        data_age >
+        (((mstime_t)server.repl_ping_slave_period * 1000) +
+         (server.cluster_node_timeout * server.cluster_slave_validity_factor)))
+    {
@@ -1753,2 +1829 @@ void clusterHandleSlaveFailover(void) {
-    server.cluster->failover_auth_time =
-        mstime() +
+        server.cluster->failover_auth_time = mstime() +
@@ -1771 +1846,2 @@ void clusterHandleSlaveFailover(void) {
-              server.cluster->failover_auth_rank, replicationGetSlaveOffset());
+            server.cluster->failover_auth_rank,
+            replicationGetSlaveOffset());
@@ -1775 +1851,3 @@ void clusterHandleSlaveFailover(void) {
-  if (server.cluster->failover_auth_sent == 0 && server.cluster->mf_end == 0) {
+    if (server.cluster->failover_auth_sent == 0 &&
+        server.cluster->mf_end == 0)
+    {
@@ -1782,2 +1860 @@ void clusterHandleSlaveFailover(void) {
-      serverLog(
-          LL_WARNING,
+            serverLog(LL_WARNING,
@@ -1803 +1880,2 @@ void clusterHandleSlaveFailover(void) {
-    clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG | CLUSTER_TODO_UPDATE_STATE |
+        clusterDoBeforeSleep(CLUSTER_TODO_SAVE_CONFIG|
+                             CLUSTER_TODO_UPDATE_STATE|
@@ -1808 +1886,2 @@ void clusterHandleSlaveFailover(void) {
-    serverLog(LL_WARNING, "Failover election won: I'm the new master.");
+        serverLog(LL_WARNING,
+            "Failover election won: I'm the new master.");
@@ -1811 +1890,2 @@ void clusterHandleSlaveFailover(void) {
-      serverLog(LL_WARNING, "configEpoch set to %llu after successful failover",
+            serverLog(LL_WARNING,
+                "configEpoch set to %llu after successful failover",
@@ -1827,2 +1907,2 @@ void clusterHandleSlaveMigration(int max_slaves) {
-    if (!nodeFailed(mymaster->slaves[j]) && !nodeTimedOut(mymaster->slaves[j]))
-      okslaves++;
+        if (!nodeFailed(mymaster->slaves[j]) &&
+            !nodeTimedOut(mymaster->slaves[j])) okslaves++;
@@ -1847,2 +1927,4 @@ void clusterHandleSlaveMigration(int max_slaves) {
-        if (memcmp(node->slaves[j]->name, candidate->name, CLUSTER_NAMELEN) <
-            0) {
+                if (memcmp(node->slaves[j]->name,
+                           candidate->name,
+                           CLUSTER_NAMELEN) < 0)
+                {
@@ -1857,2 +1939,4 @@ void clusterHandleSlaveMigration(int max_slaves) {
-      !(server.cluster_module_flags & CLUSTER_MODULE_FLAG_NO_FAILOVER)) {
-    serverLog(LL_WARNING, "Migrating to orphaned master %.40s", target->name);
+       !(server.cluster_module_flags & CLUSTER_MODULE_FLAG_NO_FAILOVER))
+    {
+        serverLog(LL_WARNING,"Migrating to orphaned master %.40s",
+            target->name);
@@ -1905,6 +1989,3 @@ void clusterCron(void) {
-    if (prev_ip == NULL && curr_ip != NULL)
-      changed = 1;
-    else if (prev_ip != NULL && curr_ip == NULL)
-      changed = 1;
-    else if (prev_ip && curr_ip && strcmp(prev_ip, curr_ip))
-      changed = 1;
+        if (prev_ip == NULL && curr_ip != NULL) changed = 1;
+        else if (prev_ip != NULL && curr_ip == NULL) changed = 1;
+        else if (prev_ip && curr_ip && strcmp(prev_ip,curr_ip)) changed = 1;
@@ -1931 +2012,2 @@ void clusterCron(void) {
-    if (node->flags & CLUSTER_NODE_PFAIL) server.cluster->stats_pfail_nodes++;
+        if (node->flags & CLUSTER_NODE_PFAIL)
+            server.cluster->stats_pfail_nodes++;
@@ -1943,4 +2025,3 @@ void clusterCron(void) {
-        serverLog(LL_DEBUG,
-                  "Unable to connect to "
-                  "Cluster Node [%s]:%d -> %s",
-                  node->ip, node->cport, server.neterr);
+                serverLog(LL_DEBUG, "Unable to connect to "
+                    "Cluster Node [%s]:%d -> %s", node->ip,
+                    node->cport, server.neterr);
@@ -1986 +2067,2 @@ void clusterCron(void) {
-          node->flags & CLUSTER_NODE_MIGRATE_TO) {
+                node->flags & CLUSTER_NODE_MIGRATE_TO)
+            {
@@ -1998 +2080,2 @@ void clusterCron(void) {
-        now - node->ping_sent > server.cluster_node_timeout / 2) {
+            now - node->ping_sent > server.cluster_node_timeout/2)
+        {
@@ -2001,2 +2084,4 @@ void clusterCron(void) {
-    if (node->link && node->ping_sent == 0 &&
-        (now - node->pong_received) > server.cluster_node_timeout / 2) {
+        if (node->link &&
+            node->ping_sent == 0 &&
+            (now - node->pong_received) > server.cluster_node_timeout/2)
+        {
@@ -2006,2 +2091,5 @@ void clusterCron(void) {
-    if (server.cluster->mf_end && nodeIsMaster(myself) &&
-        server.cluster->mf_slave == node && node->link) {
+        if (server.cluster->mf_end &&
+            nodeIsMaster(myself) &&
+            server.cluster->mf_slave == node &&
+            node->link)
+        {
@@ -2015 +2103,2 @@ void clusterCron(void) {
-        serverLog(LL_DEBUG, "*** NODE %.40s possibly failing", node->name);
+                serverLog(LL_DEBUG,"*** NODE %.40s possibly failing",
+                    node->name);
@@ -2022,2 +2111,5 @@ void clusterCron(void) {
-  if (nodeIsSlave(myself) && server.masterhost == NULL && myself->slaveof &&
-      nodeHasAddr(myself->slaveof)) {
+    if (nodeIsSlave(myself) &&
+        server.masterhost == NULL &&
+        myself->slaveof &&
+        nodeHasAddr(myself->slaveof))
+    {
@@ -2043 +2135,2 @@ void clusterBeforeSleep(void) {
-    int fsync = server.cluster->todo_before_sleep & CLUSTER_TODO_FSYNC_CONFIG;
+        int fsync = server.cluster->todo_before_sleep &
+                    CLUSTER_TODO_FSYNC_CONFIG;
@@ -2136,3 +2229,3 @@ void clusterUpdateState(void) {
-  if (nodeIsMaster(myself) && server.cluster->state == CLUSTER_FAIL &&
-      mstime() - first_call_time < CLUSTER_WRITABLE_DELAY)
-    return;
+    if (nodeIsMaster(myself) &&
+        server.cluster->state == CLUSTER_FAIL &&
+        mstime() - first_call_time < CLUSTER_WRITABLE_DELAY) return;
@@ -2143 +2236,2 @@ void clusterUpdateState(void) {
-          server.cluster->slots[j]->flags & (CLUSTER_NODE_FAIL)) {
+                server.cluster->slots[j]->flags & (CLUSTER_NODE_FAIL))
+            {
@@ -2177,2 +2271,4 @@ void clusterUpdateState(void) {
-    if (new_state == CLUSTER_OK && nodeIsMaster(myself) &&
-        mstime() - among_minority_time < rejoin_delay) {
+        if (new_state == CLUSTER_OK &&
+            nodeIsMaster(myself) &&
+            mstime() - among_minority_time < rejoin_delay)
+        {
@@ -2198,2 +2294 @@ int verifyClusterConfigWithData(void) {
-        server.cluster->importing_slots_from[j] != NULL)
-      continue;
+            server.cluster->importing_slots_from[j] != NULL) continue;
@@ -2202,4 +2297,2 @@ int verifyClusterConfigWithData(void) {
-      serverLog(LL_WARNING,
-                "I have keys for unassigned slot %d. "
-                "Taking responsibility for it.",
-                j);
+            serverLog(LL_WARNING, "I have keys for unassigned slot %d. "
+                                    "Taking responsibility for it.",j);
@@ -2208,2 +2301 @@ int verifyClusterConfigWithData(void) {
-      serverLog(LL_WARNING,
-                "I have keys for slot %d, but the slot is "
+            serverLog(LL_WARNING, "I have keys for slot %d, but the slot is "
@@ -2211,2 +2303 @@ int verifyClusterConfigWithData(void) {
-                "Setting it to importing state.",
-                j);
+                                    "Setting it to importing state.",j);
@@ -2227 +2318,2 @@ void clusterSetMaster(clusterNode *n) {
-    if (myself->slaveof) clusterNodeRemoveSlave(myself->slaveof, myself);
+        if (myself->slaveof)
+            clusterNodeRemoveSlave(myself->slaveof,myself);
@@ -2239,4 +2331,9 @@ static struct redisNodeFlags redisNodeFlagsTable[] = {
-    {CLUSTER_NODE_MYSELF, "myself,"}, {CLUSTER_NODE_MASTER, "master,"},
-    {CLUSTER_NODE_SLAVE, "slave,"}, {CLUSTER_NODE_PFAIL, "fail?,"},
-    {CLUSTER_NODE_FAIL, "fail,"}, {CLUSTER_NODE_HANDSHAKE, "handshake,"},
-    {CLUSTER_NODE_NOADDR, "noaddr,"}, {CLUSTER_NODE_NOFAILOVER, "nofailover,"}};
+    {CLUSTER_NODE_MYSELF, "myself,"},
+    {CLUSTER_NODE_MASTER, "master,"},
+    {CLUSTER_NODE_SLAVE, "slave,"},
+    {CLUSTER_NODE_PFAIL, "fail?,"},
+    {CLUSTER_NODE_FAIL, "fail,"},
+    {CLUSTER_NODE_HANDSHAKE, "handshake,"},
+    {CLUSTER_NODE_NOADDR, "noaddr,"},
+    {CLUSTER_NODE_NOFAILOVER, "nofailover,"}
+};
@@ -2257,2 +2354,5 @@ sds clusterGenNodeDescription(clusterNode *node) {
-  ci = sdscatprintf(sdsempty(), "%.40s %s:%d@%d ", node->name, node->ip,
-                    node->port, node->cport);
+    ci = sdscatprintf(sdsempty(),"%.40s %s:%d@%d ",
+        node->name,
+        node->ip,
+        node->port,
+        node->cport);
@@ -2264,5 +2364,6 @@ sds clusterGenNodeDescription(clusterNode *node) {
-  ci = sdscatprintf(
-      ci, "%lld %lld %llu %s", (long long)node->ping_sent,
-      (long long)node->pong_received, (unsigned long long)node->configEpoch,
-      (node->link || node->flags & CLUSTER_NODE_MYSELF) ? "connected"
-                                                        : "disconnected");
+    ci = sdscatprintf(ci,"%lld %lld %llu %s",
+        (long long) node->ping_sent,
+        (long long) node->pong_received,
+        (unsigned long long) node->configEpoch,
+        (node->link || node->flags & CLUSTER_NODE_MYSELF) ?
+                    "connected" : "disconnected");
@@ -2316,20 +2417,10 @@ const char *clusterGetMessageTypeString(int type) {
-    case CLUSTERMSG_TYPE_PING:
-      return "ping";
-    case CLUSTERMSG_TYPE_PONG:
-      return "pong";
-    case CLUSTERMSG_TYPE_MEET:
-      return "meet";
-    case CLUSTERMSG_TYPE_FAIL:
-      return "fail";
-    case CLUSTERMSG_TYPE_PUBLISH:
-      return "publish";
-    case CLUSTERMSG_TYPE_FAILOVER_AUTH_REQUEST:
-      return "auth-req";
-    case CLUSTERMSG_TYPE_FAILOVER_AUTH_ACK:
-      return "auth-ack";
-    case CLUSTERMSG_TYPE_UPDATE:
-      return "update";
-    case CLUSTERMSG_TYPE_MFSTART:
-      return "mfstart";
-    case CLUSTERMSG_TYPE_MODULE:
-      return "module";
+    case CLUSTERMSG_TYPE_PING: return "ping";
+    case CLUSTERMSG_TYPE_PONG: return "pong";
+    case CLUSTERMSG_TYPE_MEET: return "meet";
+    case CLUSTERMSG_TYPE_FAIL: return "fail";
+    case CLUSTERMSG_TYPE_PUBLISH: return "publish";
+    case CLUSTERMSG_TYPE_FAILOVER_AUTH_REQUEST: return "auth-req";
+    case CLUSTERMSG_TYPE_FAILOVER_AUTH_ACK: return "auth-ack";
+    case CLUSTERMSG_TYPE_UPDATE: return "update";
+    case CLUSTERMSG_TYPE_MFSTART: return "mfstart";
+    case CLUSTERMSG_TYPE_MODULE: return "module";
@@ -2341,2 +2432,3 @@ int getSlotOrReply(client *c, robj *o) {
-  if (getLongLongFromObject(o, &slot) != C_OK || slot < 0 ||
-      slot >= CLUSTER_SLOTS) {
+    if (getLongLongFromObject(o,&slot) != C_OK ||
+        slot < 0 || slot >= CLUSTER_SLOTS)
+    {
@@ -2403,2 +2495 @@ void clusterCommand(client *c) {
-        "COUNT-failure-reports <node-id> -- Return number of failure reports "
-        "for <node-id>.",
+"COUNT-failure-reports <node-id> -- Return number of failure reports for <node-id>.",
@@ -2406,4 +2497,2 @@ void clusterCommand(client *c) {
-        "DELSLOTS <slot> [slot ...] -- Delete slots information from current "
-        "node.",
-        "FAILOVER [force|takeover] -- Promote current replica node to being a "
-        "master.",
+"DELSLOTS <slot> [slot ...] -- Delete slots information from current node.",
+"FAILOVER [force|takeover] -- Promote current replica node to being a master.",
@@ -2411,2 +2500 @@ void clusterCommand(client *c) {
-        "GETKEYSINSLOT <slot> <count> -- Return key names stored by current "
-        "node in a slot.",
+"GETKEYSINSLOT <slot> <count> -- Return key names stored by current node in a slot.",
@@ -2419,4 +2507,2 @@ void clusterCommand(client *c) {
-        "    <id> <ip:port> <flags> <master> <pings> <pongs> <epoch> <link> "
-        "<slot> ... <slot>",
-        "REPLICATE <node-id> -- Configure current node as replica to "
-        "<node-id>.",
+"    <id> <ip:port> <flags> <master> <pings> <pongs> <epoch> <link> <slot> ... <slot>",
+"REPLICATE <node-id> -- Configure current node as replica to <node-id>.",
@@ -2425,2 +2511 @@ void clusterCommand(client *c) {
-        "SETSLOT <slot> (importing|migrating|stable|node <node-id>) -- Set "
-        "slot state.",
+"SETSLOT <slot> (importing|migrating|stable|node <node-id>) -- Set slot state.",
@@ -2428,2 +2513 @@ void clusterCommand(client *c) {
-        "SLOTS -- Return information about slots range mappings. Each range is "
-        "made of:",
+"SLOTS -- Return information about slots range mappings. Each range is made of:",
@@ -2431 +2515,2 @@ void clusterCommand(client *c) {
-        NULL};
+NULL
+        };
@@ -2433,2 +2518 @@ void clusterCommand(client *c) {
-  } else if (!strcasecmp(c->argv[1]->ptr, "meet") &&
-             (c->argc == 4 || c->argc == 5)) {
+    } else if (!strcasecmp(c->argv[1]->ptr,"meet") && (c->argc == 4 || c->argc == 5)) {
@@ -2451 +2535,2 @@ void clusterCommand(client *c) {
-        errno == EINVAL) {
+            errno == EINVAL)
+        {
@@ -2474,2 +2559,2 @@ void clusterCommand(client *c) {
-              !strcasecmp(c->argv[1]->ptr, "delslots")) &&
-             c->argc >= 3) {
+               !strcasecmp(c->argv[1]->ptr,"delslots")) && c->argc >= 3)
+    {
@@ -2495 +2580,2 @@ void clusterCommand(client *c) {
-        addReplyErrorFormat(c, "Slot %d specified multiple times", (int)slot);
+                addReplyErrorFormat(c,"Slot %d specified multiple times",
+                    (int)slot);
@@ -2505 +2591,2 @@ void clusterCommand(client *c) {
-        retval = del ? clusterDelSlot(j) : clusterAddSlot(myself, j);
+                retval = del ? clusterDelSlot(j) :
+                               clusterAddSlot(myself,j);
@@ -2533 +2620,2 @@ void clusterCommand(client *c) {
-        addReplyErrorFormat(c, "I'm already the owner of hash slot %u", slot);
+                addReplyErrorFormat(c,
+                    "I'm already the owner of hash slot %u",slot);
@@ -2548 +2636,2 @@ void clusterCommand(client *c) {
-        addReplyErrorFormat(c, "Unknown node %s", (char *)c->argv[4]->ptr);
+                addReplyErrorFormat(c,"Unknown node %s",
+                    (char*)c->argv[4]->ptr);
@@ -2555,2 +2644 @@ void clusterCommand(client *c) {
-                              "while I still hold keys for this hash slot.",
-                              slot);
+                        "while I still hold keys for this hash slot.", slot);
@@ -2563 +2651,3 @@ void clusterCommand(client *c) {
-      if (n == myself && server.cluster->importing_slots_from[slot]) {
+            if (n == myself &&
+                server.cluster->importing_slots_from[slot])
+            {
@@ -2565,2 +2655,2 @@ void clusterCommand(client *c) {
-          serverLog(LL_WARNING, "configEpoch updated after importing slot %d",
-                    slot);
+                    serverLog(LL_WARNING,
+                        "configEpoch updated after importing slot %d", slot);
@@ -2574,2 +2664 @@ void clusterCommand(client *c) {
-                    "Invalid CLUSTER SETSLOT action or number of arguments. "
-                    "Try CLUSTER HELP");
+                "Invalid CLUSTER SETSLOT action or number of arguments. Try CLUSTER HELP");
@@ -2603,5 +2692,3 @@ void clusterCommand(client *c) {
-    myepoch = (nodeIsSlave(myself) && myself->slaveof)
-                  ? myself->slaveof->configEpoch
-                  : myself->configEpoch;
-    sds info = sdscatprintf(
-        sdsempty(),
+        myepoch = (nodeIsSlave(myself) && myself->slaveof) ?
+                  myself->slaveof->configEpoch : myself->configEpoch;
+        sds info = sdscatprintf(sdsempty(),
@@ -2616,3 +2703,8 @@ void clusterCommand(client *c) {
-        "cluster_my_epoch:%llu\r\n",
-        statestr[server.cluster->state], slots_assigned, slots_ok, slots_pfail,
-        slots_fail, dictSize(server.cluster->nodes), server.cluster->size,
+            "cluster_my_epoch:%llu\r\n"
+            , statestr[server.cluster->state],
+            slots_assigned,
+            slots_ok,
+            slots_pfail,
+            slots_fail,
+            dictSize(server.cluster->nodes),
+            server.cluster->size,
@@ -2620 +2712,2 @@ void clusterCommand(client *c) {
-        (unsigned long long)myepoch);
+            (unsigned long long) myepoch
+        );
@@ -2626 +2719,2 @@ void clusterCommand(client *c) {
-      info = sdscatprintf(info, "cluster_stats_messages_%s_sent:%lld\r\n",
+            info = sdscatprintf(info,
+                "cluster_stats_messages_%s_sent:%lld\r\n",
@@ -2630,2 +2724,2 @@ void clusterCommand(client *c) {
-    info = sdscatprintf(info, "cluster_stats_messages_sent:%lld\r\n",
-                        tot_msg_sent);
+        info = sdscatprintf(info,
+            "cluster_stats_messages_sent:%lld\r\n", tot_msg_sent);
@@ -2635 +2729,2 @@ void clusterCommand(client *c) {
-      info = sdscatprintf(info, "cluster_stats_messages_%s_received:%lld\r\n",
+            info = sdscatprintf(info,
+                "cluster_stats_messages_%s_received:%lld\r\n",
@@ -2639,2 +2734,2 @@ void clusterCommand(client *c) {
-    info = sdscatprintf(info, "cluster_stats_messages_received:%lld\r\n",
-                        tot_msg_received);
+        info = sdscatprintf(info,
+            "cluster_stats_messages_received:%lld\r\n", tot_msg_received);
@@ -2668 +2763,2 @@ void clusterCommand(client *c) {
-    if (getLongLongFromObjectOrReply(c, c->argv[3], &maxkeys, NULL) != C_OK)
+        if (getLongLongFromObjectOrReply(c,c->argv[3],&maxkeys,NULL)
+            != C_OK)
@@ -2698 +2794,2 @@ void clusterCommand(client *c) {
-    clusterDoBeforeSleep(CLUSTER_TODO_UPDATE_STATE | CLUSTER_TODO_SAVE_CONFIG);
+        clusterDoBeforeSleep(CLUSTER_TODO_UPDATE_STATE|
+                             CLUSTER_TODO_SAVE_CONFIG);
@@ -2725,2 +2822 @@ void clusterCommand(client *c) {
-              !strcasecmp(c->argv[1]->ptr, "replicas")) &&
-             c->argc == 3) {
+                !strcasecmp(c->argv[1]->ptr,"replicas")) && c->argc == 3) {
@@ -2744 +2840,2 @@ void clusterCommand(client *c) {
-             c->argc == 3) {
+               c->argc == 3)
+    {
@@ -2753 +2850,2 @@ void clusterCommand(client *c) {
-             (c->argc == 2 || c->argc == 3)) {
+               (c->argc == 2 || c->argc == 3))
+    {
@@ -2773,3 +2871,4 @@ void clusterCommand(client *c) {
-               (nodeFailed(myself->slaveof) || myself->slaveof->link == NULL)) {
-      addReplyError(c,
-                    "Master is down or failed, "
+                   (nodeFailed(myself->slaveof) ||
+                    myself->slaveof->link == NULL))
+        {
+            addReplyError(c,"Master is down or failed, "
@@ -2793 +2892,2 @@ void clusterCommand(client *c) {
-  } else if (!strcasecmp(c->argv[1]->ptr, "set-config-epoch") && c->argc == 3) {
+    } else if (!strcasecmp(c->argv[1]->ptr,"set-config-epoch") && c->argc == 3)
+    {
@@ -2800,2 +2900 @@ void clusterCommand(client *c) {
-      addReplyError(c,
-                    "The user can assign a config epoch only when the "
+            addReplyError(c,"The user can assign a config epoch only when the "
@@ -2817 +2916,2 @@ void clusterCommand(client *c) {
-             (c->argc == 2 || c->argc == 3)) {
+               (c->argc == 2 || c->argc == 3))
+    {
@@ -2830,2 +2930 @@ void clusterCommand(client *c) {
-      addReplyError(c,
-                    "CLUSTER RESET can't be called with "
+            addReplyError(c,"CLUSTER RESET can't be called with "
@@ -2891,4 +2990,4 @@ void restoreCommand(client *c) {
-               lfu_freq == -1) {
-      if (getLongLongFromObjectOrReply(c, c->argv[j + 1], &lru_idle, NULL) !=
-          C_OK)
-        return;
+                   lfu_freq == -1)
+        {
+            if (getLongLongFromObjectOrReply(c,c->argv[j+1],&lru_idle,NULL)
+                    != C_OK) return;
@@ -2902,4 +3001,4 @@ void restoreCommand(client *c) {
-               lru_idle == -1) {
-      if (getLongLongFromObjectOrReply(c, c->argv[j + 1], &lfu_freq, NULL) !=
-          C_OK)
-        return;
+                   lru_idle == -1)
+        {
+            if (getLongLongFromObjectOrReply(c,c->argv[j+1],&lfu_freq,NULL)
+                    != C_OK) return;
@@ -2926 +3025,2 @@ void restoreCommand(client *c) {
-  if (verifyDumpPayload(c->argv[3]->ptr, sdslen(c->argv[3]->ptr)) == C_ERR) {
+    if (verifyDumpPayload(c->argv[3]->ptr,sdslen(c->argv[3]->ptr)) == C_ERR)
+    {
@@ -2932 +3032,2 @@ void restoreCommand(client *c) {
-      ((obj = rdbLoadObject(type, &payload, c->argv[1])) == NULL)) {
+        ((obj = rdbLoadObject(type,&payload,c->argv[1])) == NULL))
+    {
@@ -2954,2 +3055 @@ typedef struct migrateCachedSocket {
-migrateCachedSocket *migrateGetSocket(client *c, robj *host, robj *port,
-                                      long timeout) {
+migrateCachedSocket* migrateGetSocket(client *c, robj *host, robj *port, long timeout) {
@@ -2976,2 +3076,2 @@ migrateCachedSocket *migrateGetSocket(client *c, robj *host, robj *port,
-  if (connBlockingConnect(conn, c->argv[1]->ptr, atoi(c->argv[2]->ptr),
-                          timeout) != C_OK) {
+    if (connBlockingConnect(conn, c->argv[1]->ptr, atoi(c->argv[2]->ptr), timeout)
+            != C_OK) {
@@ -3065 +3165,2 @@ void migrateCommand(client *c) {
-      getLongFromObjectOrReply(c, c->argv[4], &dbid, NULL) != C_OK) {
+        getLongFromObjectOrReply(c,c->argv[4],&dbid,NULL) != C_OK)
+    {
@@ -3080,2 +3181 @@ void migrateCommand(client *c) {
-    zfree(ov);
-    zfree(kv);
+        zfree(ov); zfree(kv);
@@ -3089,2 +3189 @@ try_again:
-    zfree(ov);
-    zfree(kv);
+        zfree(ov); zfree(kv);
@@ -3097,2 +3196,2 @@ try_again:
-    serverAssertWithInfo(c, NULL,
-                         rioWriteBulkString(&cmd, password, sdslen(password)));
+        serverAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,password,
+            sdslen(password)));
@@ -3126,2 +3225,2 @@ try_again:
-    serverAssertWithInfo(
-        c, NULL, rioWriteBulkString(&cmd, kv[j]->ptr, sdslen(kv[j]->ptr)));
+        serverAssertWithInfo(c,NULL,rioWriteBulkString(&cmd,kv[j]->ptr,
+                sdslen(kv[j]->ptr)));
@@ -3169,2 +3268,4 @@ try_again:
-    if ((password && buf0[0] == '-') || (select && buf1[0] == '-') ||
-        buf2[0] == '-') {
+        if ((password && buf0[0] == '-') ||
+            (select && buf1[0] == '-') ||
+            buf2[0] == '-')
+        {
@@ -3174,6 +3275,3 @@ try_again:
-        if (password && buf0[0] == '-')
-          errbuf = buf0;
-        else if (select && buf1[0] == '-')
-          errbuf = buf1;
-        else
-          errbuf = buf2;
+                if (password && buf0[0] == '-') errbuf = buf0;
+                else if (select && buf1[0] == '-') errbuf = buf1;
+                else errbuf = buf2;
@@ -3195 +3293,2 @@ try_again:
-      errno != ETIMEDOUT) {
+        errno != ETIMEDOUT)
+    {
@@ -3219,3 +3318 @@ try_again:
-  zfree(ov);
-  zfree(kv);
-  zfree(newargv);
+    zfree(ov); zfree(kv); zfree(newargv);
@@ -3232,2 +3329 @@ socket_err:
-  zfree(ov);
-  zfree(kv);
+    zfree(ov); zfree(kv);
@@ -3260,2 +3356 @@ void readwriteCommand(client *c) {
-clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-                            int argc, int *hashslot, int *error_code) {
+clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv, int argc, int *hashslot, int *error_code) {
@@ -3292 +3387,2 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-      int thisslot = keyHashSlot((char *)thiskey->ptr, sdslen(thiskey->ptr));
+            int thisslot = keyHashSlot((char*)thiskey->ptr,
+                                       sdslen(thiskey->ptr));
@@ -3299 +3395,2 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-          if (error_code) *error_code = CLUSTER_REDIR_DOWN_UNBOUND;
+                    if (error_code)
+                        *error_code = CLUSTER_REDIR_DOWN_UNBOUND;
@@ -3302 +3399,3 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-        if (n == myself && server.cluster->migrating_slots_to[slot] != NULL) {
+                if (n == myself &&
+                    server.cluster->migrating_slots_to[slot] != NULL)
+                {
@@ -3311 +3410,2 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-            if (error_code) *error_code = CLUSTER_REDIR_CROSS_SLOT;
+                        if (error_code)
+                            *error_code = CLUSTER_REDIR_CROSS_SLOT;
@@ -3319 +3419,2 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-          lookupKeyRead(&server.db[0], thiskey) == NULL) {
+                lookupKeyRead(&server.db[0],thiskey) == NULL)
+            {
@@ -3337 +3438,3 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-  if (importing_slot && (c->flags & CLIENT_ASKING || cmd->flags & CMD_ASKING)) {
+    if (importing_slot &&
+        (c->flags & CLIENT_ASKING || cmd->flags & CMD_ASKING))
+    {
@@ -3348 +3451,3 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-      nodeIsSlave(myself) && myself->slaveof == n) {
+        nodeIsSlave(myself) &&
+        myself->slaveof == n)
+    {
@@ -3354,2 +3459 @@ clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv,
-void clusterRedirectClient(client *c, clusterNode *n, int hashslot,
-                           int error_code) {
+void clusterRedirectClient(client *c, clusterNode *n, int hashslot, int error_code) {
@@ -3357,3 +3461 @@ void clusterRedirectClient(client *c, clusterNode *n, int hashslot,
-    addReplySds(
-        c,
-        sdsnew("-CROSSSLOT Keys in request don't hash to the same slot\r\n"));
+        addReplySds(c,sdsnew("-CROSSSLOT Keys in request don't hash to the same slot\r\n"));
@@ -3361,3 +3463 @@ void clusterRedirectClient(client *c, clusterNode *n, int hashslot,
-    addReplySds(
-        c,
-        sdsnew("-TRYAGAIN Multiple keys request during rehashing of slot\r\n"));
+        addReplySds(c,sdsnew("-TRYAGAIN Multiple keys request during rehashing of slot\r\n"));
@@ -3369,3 +3469,4 @@ void clusterRedirectClient(client *c, clusterNode *n, int hashslot,
-             error_code == CLUSTER_REDIR_ASK) {
-    addReplySds(
-        c, sdscatprintf(sdsempty(), "-%s %d %s:%d\r\n",
+               error_code == CLUSTER_REDIR_ASK)
+    {
+        addReplySds(c,sdscatprintf(sdsempty(),
+            "-%s %d %s:%d\r\n",
@@ -3380,2 +3481,4 @@ int clusterRedirectBlockedClientIfNeeded(client *c) {
-      (c->btype == BLOCKED_LIST || c->btype == BLOCKED_ZSET ||
-       c->btype == BLOCKED_STREAM)) {
+        (c->btype == BLOCKED_LIST ||
+         c->btype == BLOCKED_ZSET ||
+         c->btype == BLOCKED_STREAM))
+    {
@@ -3394 +3497,2 @@ int clusterRedirectBlockedClientIfNeeded(client *c) {
-          server.cluster->importing_slots_from[slot] == NULL) {
+                server.cluster->importing_slots_from[slot] == NULL)
+            {
@@ -3396 +3500,2 @@ int clusterRedirectBlockedClientIfNeeded(client *c) {
-          clusterRedirectClient(c, NULL, 0, CLUSTER_REDIR_DOWN_UNBOUND);
+                    clusterRedirectClient(c,NULL,0,
+                        CLUSTER_REDIR_DOWN_UNBOUND);
@@ -3398 +3503,2 @@ int clusterRedirectBlockedClientIfNeeded(client *c) {
-          clusterRedirectClient(c, node, slot, CLUSTER_REDIR_MOVED);
+                    clusterRedirectClient(c,node,slot,
+                        CLUSTER_REDIR_MOVED);
