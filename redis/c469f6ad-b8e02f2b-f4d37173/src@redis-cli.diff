diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@redis-cli.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@redis-cli.no_comments_merged.c
index 6be7ab6..df72ab2 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@redis-cli.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@redis-cli.no_comments_merged.c
@@ -51 +51,2 @@
-#define CLUSTER_MANAGER_COMMAND(n,...) (redisCommand(n->context, __VA_ARGS__))
+#define CLUSTER_MANAGER_COMMAND(n,...) \
+        (redisCommand(n->context, __VA_ARGS__))
@@ -54,2 +55,2 @@
-  clusterManagerLogErr("Node %s:%d replied with error:\n%s\n", n->ip, n->port, \
-                       err);
+    clusterManagerLogErr("Node %s:%d replied with error:\n%s\n", \
+                         n->ip, n->port, err);
@@ -98,3 +99 @@ int spectrum_palette_color_size = 19;
-int spectrum_palette_color[] = {0, 233, 234, 235, 237, 239, 241,
-                                243, 245, 247, 144, 143, 142, 184,
-                                226, 214, 208, 202, 196};
+int spectrum_palette_color[] = {0,233,234,235,237,239,241,243,245,247,144,143,142,184,226,214,208,202,196};
@@ -102,2 +101 @@ int spectrum_palette_mono_size = 13;
-int spectrum_palette_mono[] = {0, 233, 234, 235, 237, 239, 241,
-                               243, 245, 247, 249, 251, 253};
+int spectrum_palette_mono[] = {0,233,234,235,237,239,241,243,245,247,249,251,253};
@@ -205 +203,3 @@ static long long ustime(void) {
-static long long mstime(void) { return ustime() / 1000; }
+static long long mstime(void) {
+    return ustime()/1000;
+}
@@ -216 +216,2 @@ static void cliRefreshPrompt(void) {
-  if (config.dbnum != 0) prompt = sdscatfmt(prompt, "[%i]", config.dbnum);
+    if (config.dbnum != 0)
+        prompt = sdscatfmt(prompt,"[%i]",config.dbnum);
@@ -237,0 +239,3 @@ static sds getDotfilePath(char *envoverride, char *dotfilename) {
+#define isHexChar(c) (isdigit(c) || (c >= 'a' && c <= 'f'))
+#define decodeHexChar(c) (isdigit(c) ? c - '0' : c - 'a' + 10)
+#define decodeHex(h,l) ((decodeHexChar(h) << 4) + decodeHexChar(l))
@@ -299 +303,2 @@ static int dictSdsKeyCompare(void *privdata, const void *key1,
-                             const void *key2) {
+        const void *key2)
+{
@@ -307 +312,2 @@ static int dictSdsKeyCompare(void *privdata, const void *key1,
-static void dictSdsDestructor(void *privdata, void *val) {
+static void dictSdsDestructor(void *privdata, void *val)
+{
@@ -311 +317,2 @@ static void dictSdsDestructor(void *privdata, void *val) {
-void dictListDestructor(void *privdata, void *val) {
+void dictListDestructor(void *privdata, void *val)
+{
@@ -375,2 +382 @@ static void cliIntegrateHelp(void) {
-        entry->element[3]->type != REDIS_REPLY_INTEGER)
-      return;
+            entry->element[3]->type != REDIS_REPLY_INTEGER) return;
@@ -381 +387,2 @@ static void cliIntegrateHelp(void) {
-      if (!strcasecmp(he->argv[0], cmdname)) break;
+            if (!strcasecmp(he->argv[0],cmdname))
+                break;
@@ -413,2 +420 @@ static void cliOutputCommandHelp(struct commandHelp *help, int group) {
-  printf("\r\n  \x1b[1m%s\x1b[0m \x1b[90m%s\x1b[0m\r\n", help->name,
-         help->params);
+    printf("\r\n  \x1b[1m%s\x1b[0m \x1b[90m%s\x1b[0m\r\n", help->name, help->params);
@@ -435 +441,2 @@ static void cliOutputGenericHelp(void) {
-      version);
+        version
+    );
@@ -512 +519,2 @@ static char *hintsCallback(const char *buf, int *color, int *bold) {
-    if (strcasecmp(argv[0], helpEntries[i].full) == 0) {
+        if (strcasecmp(argv[0],helpEntries[i].full) == 0)
+        {
@@ -535 +543,3 @@ static char *hintsCallback(const char *buf, int *color, int *bold) {
-static void freeHintsCallback(void *ptr) { sdsfree(ptr); }
+static void freeHintsCallback(void *ptr) {
+    sdsfree(ptr);
+}
@@ -575,2 +585 @@ static int cliSecureConnection(redisContext *c, const char **err) {
-      if (!SSL_CTX_load_verify_locations(ssl_ctx, config.cacert,
-                                         config.cacertdir)) {
+            if (!SSL_CTX_load_verify_locations(ssl_ctx, config.cacert, config.cacertdir)) {
@@ -586,2 +595 @@ static int cliSecureConnection(redisContext *c, const char **err) {
-    if (config.cert &&
-        !SSL_CTX_use_certificate_chain_file(ssl_ctx, config.cert)) {
+        if (config.cert && !SSL_CTX_use_certificate_chain_file(ssl_ctx, config.cert)) {
@@ -591,2 +599 @@ static int cliSecureConnection(redisContext *c, const char **err) {
-    if (config.key &&
-        !SSL_CTX_use_PrivateKey_file(ssl_ctx, config.key, SSL_FILETYPE_PEM)) {
+        if (config.key && !SSL_CTX_use_PrivateKey_file(ssl_ctx, config.key, SSL_FILETYPE_PEM)) {
@@ -653,2 +660,2 @@ static int cliConnect(int flags) {
-          fprintf(stderr, "%s:%d: %s\n", config.hostip, config.hostport,
-                  context->errstr);
+                    fprintf(stderr,"%s:%d: %s\n",
+                        config.hostip,config.hostport,context->errstr);
@@ -656 +663,2 @@ static int cliConnect(int flags) {
-          fprintf(stderr, "%s: %s\n", config.hostsocket, context->errstr);
+                    fprintf(stderr,"%s: %s\n",
+                        config.hostsocket,context->errstr);
@@ -663,3 +671,6 @@ static int cliConnect(int flags) {
-    if (cliAuth() != REDIS_OK) return REDIS_ERR;
-    if (cliSelect() != REDIS_OK) return REDIS_ERR;
-    if (cliSwitchProto() != REDIS_OK) return REDIS_ERR;
+        if (cliAuth() != REDIS_OK)
+            return REDIS_ERR;
+        if (cliSelect() != REDIS_OK)
+            return REDIS_ERR;
+        if (cliSwitchProto() != REDIS_OK)
+            return REDIS_ERR;
@@ -733,6 +744,3 @@ static sds cliFormatReplyTTY(redisReply *r, char *prefix) {
-        if (r->type == REDIS_REPLY_SET)
-          numsep = '~';
-        else if (r->type == REDIS_REPLY_MAP)
-          numsep = '#';
-        else
-          numsep = ')';
+            if (r->type == REDIS_REPLY_SET) numsep = '~';
+            else if (r->type == REDIS_REPLY_MAP) numsep = '#';
+            else numsep = ')';
@@ -741 +749,2 @@ static sds cliFormatReplyTTY(redisReply *r, char *prefix) {
-          unsigned int human_idx = (r->type == REDIS_REPLY_MAP) ? i / 2 : i;
+                unsigned int human_idx = (r->type == REDIS_REPLY_MAP) ?
+                                         i/2 : i;
@@ -773,14 +782,7 @@ sds sdscatcolor(sds o, char *s, size_t len, char *color) {
-  if (strstr(color, "red"))
-    ccode = 31;
-  else if (strstr(color, "green"))
-    ccode = 32;
-  else if (strstr(color, "yellow"))
-    ccode = 33;
-  else if (strstr(color, "blue"))
-    ccode = 34;
-  else if (strstr(color, "magenta"))
-    ccode = 35;
-  else if (strstr(color, "cyan"))
-    ccode = 36;
-  else if (strstr(color, "white"))
-    ccode = 37;
+    if (strstr(color,"red")) ccode = 31;
+    else if (strstr(color,"green")) ccode = 32;
+    else if (strstr(color,"yellow")) ccode = 33;
+    else if (strstr(color,"blue")) ccode = 34;
+    else if (strstr(color,"magenta")) ccode = 35;
+    else if (strstr(color,"cyan")) ccode = 36;
+    else if (strstr(color,"white")) ccode = 37;
@@ -801,4 +803,2 @@ sds sdsCatColorizedLdbReply(sds o, char *s, size_t len) {
-    if (s[1] == '>')
-      color = "yellow";
-    else if (s[2] == '#')
-      color = "bold";
+        if (s[1] == '>') color = "yellow";
+        else if (s[2] == '#') color = "bold";
@@ -927 +927,2 @@ static int cliReadReply(int output_raw_strings) {
-      if (context->err == REDIS_ERR_EOF) return REDIS_ERR;
+            if (context->err == REDIS_ERR_EOF)
+                return REDIS_ERR;
@@ -936 +937,2 @@ static int cliReadReply(int output_raw_strings) {
-      (!strncmp(reply->str, "MOVED", 5) || !strcmp(reply->str, "ASK"))) {
+        (!strncmp(reply->str,"MOVED",5) || !strcmp(reply->str,"ASK")))
+    {
@@ -950,2 +952,2 @@ static int cliReadReply(int output_raw_strings) {
-      printf("-> Redirected to slot [%d] located at %s:%d\n", slot,
-             config.hostip, config.hostport);
+            printf("-> Redirected to slot [%d] located at %s:%d\n",
+                slot, config.hostip, config.hostport);
@@ -986 +988,2 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-  if (!strcasecmp(command, "info") || !strcasecmp(command, "lolwut") ||
+    if (!strcasecmp(command,"info") ||
+        !strcasecmp(command,"lolwut") ||
@@ -995 +998,2 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-       (!strcasecmp(argv[1], "nodes") || !strcasecmp(argv[1], "info"))) ||
+                      (!strcasecmp(argv[1],"nodes") ||
+                       !strcasecmp(argv[1],"info"))) ||
@@ -1001 +1005,2 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-       !strcasecmp(argv[1], "doctor"))) {
+                       !strcasecmp(argv[1],"doctor")))
+    {
@@ -1006,4 +1011,4 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-  if (!strcasecmp(command, "subscribe") || !strcasecmp(command, "psubscribe"))
-    config.pubsub_mode = 1;
-  if (!strcasecmp(command, "sync") || !strcasecmp(command, "psync"))
-    config.slave_mode = 1;
+    if (!strcasecmp(command,"subscribe") ||
+        !strcasecmp(command,"psubscribe")) config.pubsub_mode = 1;
+    if (!strcasecmp(command,"sync") ||
+        !strcasecmp(command,"psync")) config.slave_mode = 1;
@@ -1011 +1016,2 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-      !strcasecmp(argv[1], "debug")) {
+                     !strcasecmp(argv[1],"debug"))
+    {
@@ -1023 +1029,2 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-  for (j = 0; j < argc; j++) argvlen[j] = sdslen(argv[j]);
+    for (j = 0; j < argc; j++)
+        argvlen[j] = sdslen(argv[j]);
@@ -1048,2 +1055 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-      if (!strcasecmp(command, "select") && argc == 2 &&
-          config.last_cmd_type != REDIS_REPLY_ERROR) {
+            if (!strcasecmp(command,"select") && argc == 2 && config.last_cmd_type != REDIS_REPLY_ERROR) {
@@ -1052 +1058,2 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-      } else if (!strcasecmp(command, "auth") && (argc == 2 || argc == 3)) {
+            } else if (!strcasecmp(command,"auth") && (argc == 2 || argc == 3))
+            {
@@ -1065,2 +1072 @@ static int cliSendCommand(int argc, char **argv, long repeat) {
-static redisReply *reconnectingRedisCommand(redisContext *c, const char *fmt,
-                                            ...) {
+static redisReply *reconnectingRedisCommand(redisContext *c, const char *fmt, ...) {
@@ -1126,2 +1132,3 @@ static int parseOptions(int argc, char **argv) {
-    } else if ((!strcmp(argv[i], "-a") || !strcmp(argv[i], "--pass")) &&
-               !lastarg) {
+        } else if ((!strcmp(argv[i],"-a") || !strcmp(argv[i],"--pass"))
+                   && !lastarg)
+        {
@@ -1218,2 +1225 @@ static int parseOptions(int argc, char **argv) {
-        fprintf(stderr,
-                "WARNING: you cannot use --cluster-weight "
+                fprintf(stderr, "WARNING: you cannot use --cluster-weight "
@@ -1248 +1254,2 @@ static int parseOptions(int argc, char **argv) {
-      config.cluster_manager_command.flags |= CLUSTER_MANAGER_CMD_FLAG_YES;
+            config.cluster_manager_command.flags |=
+                CLUSTER_MANAGER_CMD_FLAG_YES;
@@ -1250 +1257,2 @@ static int parseOptions(int argc, char **argv) {
-      config.cluster_manager_command.flags |= CLUSTER_MANAGER_CMD_FLAG_SIMULATE;
+            config.cluster_manager_command.flags |=
+                CLUSTER_MANAGER_CMD_FLAG_SIMULATE;
@@ -1252 +1260,2 @@ static int parseOptions(int argc, char **argv) {
-      config.cluster_manager_command.flags |= CLUSTER_MANAGER_CMD_FLAG_REPLACE;
+            config.cluster_manager_command.flags |=
+                CLUSTER_MANAGER_CMD_FLAG_REPLACE;
@@ -1254 +1263,2 @@ static int parseOptions(int argc, char **argv) {
-      config.cluster_manager_command.flags |= CLUSTER_MANAGER_CMD_FLAG_COPY;
+            config.cluster_manager_command.flags |=
+                CLUSTER_MANAGER_CMD_FLAG_COPY;
@@ -1256 +1266,2 @@ static int parseOptions(int argc, char **argv) {
-      config.cluster_manager_command.flags |= CLUSTER_MANAGER_CMD_FLAG_SLAVE;
+            config.cluster_manager_command.flags |=
+                CLUSTER_MANAGER_CMD_FLAG_SLAVE;
@@ -1295 +1306,2 @@ static int parseOptions(int argc, char **argv) {
-        fprintf(stderr, "Unrecognized option or bad number of args for: '%s'\n",
+                fprintf(stderr,
+                    "Unrecognized option or bad number of args for: '%s'\n",
@@ -1309,4 +1321,2 @@ static int parseOptions(int argc, char **argv) {
-    fputs(
-        "Warning: Using a password with '-a' or '-u' option on the command"
-        " line interface may not be safe.\n",
-        stderr);
+        fputs("Warning: Using a password with '-a' or '-u' option on the command"
+              " line interface may not be safe.\n", stderr);
@@ -1327,2 +1337 @@ static sds readArgFromStdin(void) {
-    if (nread == 0)
-      break;
+        if (nread == 0) break;
@@ -1339,2 +1348 @@ static void usage(void) {
-  fprintf(
-      stderr,
+    fprintf(stderr,
@@ -1348,2 +1356 @@ static void usage(void) {
-      "                     You can also use the " REDIS_CLI_AUTH_ENV
-      " environment\n"
+"                     You can also use the " REDIS_CLI_AUTH_ENV " environment\n"
@@ -1351,6 +1358,3 @@ static void usage(void) {
-      "                     (if both are used, this argument takes "
-      "predecence).\n"
-      "  -user <username>   Used to send ACL style 'AUTH username pass'. Needs "
-      "-a.\n"
-      "  -pass <password>   Alias of -a for consistency with the new --user "
-      "option.\n"
+"                     (if both are used, this argument takes predecence).\n"
+"  -user <username>   Used to send ACL style 'AUTH username pass'. Needs -a.\n"
+"  -pass <password>   Alias of -a for consistency with the new --user option.\n"
@@ -1359,4 +1363,2 @@ static void usage(void) {
-      "  -i <interval>      When -r is used, waits <interval> seconds per "
-      "command.\n"
-      "                     It is possible to specify sub-second times like -i "
-      "0.1.\n"
+"  -i <interval>      When -r is used, waits <interval> seconds per command.\n"
+"                     It is possible to specify sub-second times like -i 0.1.\n"
@@ -1366,4 +1368,2 @@ static void usage(void) {
-      "  -d <delimiter>     Multi-bulk delimiter in for raw formatting "
-      "(default: \\n).\n"
-      "  -c                 Enable cluster mode (follow -ASK and -MOVED "
-      "redirections).\n"
+"  -d <delimiter>     Multi-bulk delimiter in for raw formatting (default: \\n).\n"
+"  -c                 Enable cluster mode (follow -ASK and -MOVED redirections).\n"
@@ -1373,6 +1373,3 @@ static void usage(void) {
-      "  --cacertdir        Directory where trusted CA certificates are "
-      "stored.\n"
-      "                     If neither cacert nor cacertdir are specified, the "
-      "default\n"
-      "                     system-wide trusted root certs configuration will "
-      "apply.\n"
+"  --cacertdir        Directory where trusted CA certificates are stored.\n"
+"                     If neither cacert nor cacertdir are specified, the default\n"
+"                     system-wide trusted root certs configuration will apply.\n"
@@ -1382,2 +1379 @@ static void usage(void) {
-      "  --raw              Use raw formatting for replies (default when "
-      "STDOUT is\n"
+"  --raw              Use raw formatting for replies (default when STDOUT is\n"
@@ -1385,2 +1381 @@ static void usage(void) {
-      "  --no-raw           Force formatted output even when STDOUT is not a "
-      "tty.\n"
+"  --no-raw           Force formatted output even when STDOUT is not a tty.\n"
@@ -1388,32 +1383,16 @@ static void usage(void) {
-      "  --stat             Print rolling stats about server: mem, clients, "
-      "...\n"
-      "  --latency          Enter a special mode continuously sampling "
-      "latency.\n"
-      "                     If you use this mode in an interactive session it "
-      "runs\n"
-      "                     forever displaying real-time stats. Otherwise if "
-      "--raw or\n"
-      "                     --csv is specified, or if you redirect the output "
-      "to a non\n"
-      "                     TTY, it samples the latency for 1 second (you can "
-      "use\n"
-      "                     -i to change the interval), then produces a single "
-      "output\n"
-      "                     and exits.\n",
-      version);
-  fprintf(
-      stderr,
-      "  --latency-history  Like --latency but tracking latency changes over "
-      "time.\n"
-      "                     Default time interval is 15 sec. Change it using "
-      "-i.\n"
-      "  --latency-dist     Shows latency as a spectrum, requires xterm 256 "
-      "colors.\n"
-      "                     Default time interval is 1 sec. Change it using "
-      "-i.\n"
-      "  --lru-test <keys>  Simulate a cache workload with an 80-20 "
-      "distribution.\n"
-      "  --replica          Simulate a replica showing commands received from "
-      "the master.\n"
-      "  --rdb <filename>   Transfer an RDB dump from remote server to local "
-      "file.\n"
+"  --stat             Print rolling stats about server: mem, clients, ...\n"
+"  --latency          Enter a special mode continuously sampling latency.\n"
+"                     If you use this mode in an interactive session it runs\n"
+"                     forever displaying real-time stats. Otherwise if --raw or\n"
+"                     --csv is specified, or if you redirect the output to a non\n"
+"                     TTY, it samples the latency for 1 second (you can use\n"
+"                     -i to change the interval), then produces a single output\n"
+"                     and exits.\n",version);
+    fprintf(stderr,
+"  --latency-history  Like --latency but tracking latency changes over time.\n"
+"                     Default time interval is 15 sec. Change it using -i.\n"
+"  --latency-dist     Shows latency as a spectrum, requires xterm 256 colors.\n"
+"                     Default time interval is 1 sec. Change it using -i.\n"
+"  --lru-test <keys>  Simulate a cache workload with an 80-20 distribution.\n"
+"  --replica          Simulate a replica showing commands received from the master.\n"
+"  --rdb <filename>   Transfer an RDB dump from remote server to local file.\n"
@@ -1421,2 +1400 @@ static void usage(void) {
-      "  --pipe-timeout <n> In --pipe mode, abort with error if after sending "
-      "all data.\n"
+"  --pipe-timeout <n> In --pipe mode, abort with error if after sending all data.\n"
@@ -1425,9 +1403,5 @@ static void usage(void) {
-      version, REDIS_CLI_DEFAULT_PIPE_TIMEOUT);
-  fprintf(
-      stderr,
-      "  --bigkeys          Sample Redis keys looking for keys with many "
-      "elements (complexity).\n"
-      "  --memkeys          Sample Redis keys looking for keys consuming a lot "
-      "of memory.\n"
-      "  --memkeys-samples <n> Sample Redis keys looking for keys consuming a "
-      "lot of memory.\n"
+    REDIS_CLI_DEFAULT_PIPE_TIMEOUT);
+    fprintf(stderr,
+"  --bigkeys          Sample Redis keys looking for keys with many elements (complexity).\n"
+"  --memkeys          Sample Redis keys looking for keys consuming a lot of memory.\n"
+"  --memkeys-samples <n> Sample Redis keys looking for keys consuming a lot of memory.\n"
@@ -1439,6 +1413,3 @@ static void usage(void) {
-      "  --intrinsic-latency <sec> Run a test to measure intrinsic system "
-      "latency.\n"
-      "                     The test will run for the specified amount of "
-      "seconds.\n"
-      "  --eval <file>      Send an EVAL command using the Lua script at "
-      "<file>.\n"
+"  --intrinsic-latency <sec> Run a test to measure intrinsic system latency.\n"
+"                     The test will run for the specified amount of seconds.\n"
+"  --eval <file>      Send an EVAL command using the Lua script at <file>.\n"
@@ -1446,4 +1417,2 @@ static void usage(void) {
-      "  --ldb-sync-mode    Like --ldb but uses the synchronous Lua debugger, "
-      "in\n"
-      "                     this mode the server is blocked and script changes "
-      "are\n"
+"  --ldb-sync-mode    Like --ldb but uses the synchronous Lua debugger, in\n"
+"                     this mode the server is blocked and script changes are\n"
@@ -1452,2 +1421 @@ static void usage(void) {
-      "                     Cluster Manager command and arguments (see "
-      "below).\n"
+"                     Cluster Manager command and arguments (see below).\n"
@@ -1455,2 +1423 @@ static void usage(void) {
-      "  --no-auth-warning  Don't show warning message when using password on "
-      "command\n"
+"  --no-auth-warning  Don't show warning message when using password on command\n"
@@ -1460 +1426,0 @@ static void usage(void) {
-<<<<<<< HEAD
@@ -1462,9 +1428 @@ static void usage(void) {
-|||||||
-      "\n",
-      version, REDIS_CLI_DEFAULT_PIPE_TIMEOUT);
-=======
-      "\n",
-      REDIS_CLI_DEFAULT_PIPE_TIMEOUT);
->>>>>>> b8e02f2b4005febbdaa11ff978c4f98b664464c9
-  fprintf(
-      stderr,
+    fprintf(stderr,
@@ -1482,2 +1440 @@ static void usage(void) {
-      "  (Note: when using --eval the comma separates KEYS[] from ARGV[] "
-      "items)\n"
+"  (Note: when using --eval the comma separates KEYS[] from ARGV[] items)\n"
@@ -1486,2 +1443 @@ static void usage(void) {
-      "Type \"help\" in interactive mode for information on available "
-      "commands\n"
+"Type \"help\" in interactive mode for information on available commands\n"
@@ -1504 +1460,2 @@ static char **convertToSds(int count, char **args) {
-  for (j = 0; j < count; j++) sds[j] = sdsnew(args[j]);
+  for(j = 0; j < count; j++)
+    sds[j] = sdsnew(args[j]);
@@ -1529,2 +1486,3 @@ static sds *cliSplitArgs(char *line, int *argc) {
-  if (config.eval_ldb &&
-      (strstr(line, "eval ") == line || strstr(line, "e ") == line)) {
+    if (config.eval_ldb && (strstr(line,"eval ") == line ||
+                            strstr(line,"e ") == line))
+    {
@@ -1544,4 +1502,2 @@ void cliSetPreferences(char **argv, int argc, int interactive) {
-    if (!strcasecmp(argv[1], "hints"))
-      pref.hints = 1;
-    else if (!strcasecmp(argv[1], "nohints"))
-      pref.hints = 0;
+        if (!strcasecmp(argv[1],"hints")) pref.hints = 1;
+        else if (!strcasecmp(argv[1],"nohints")) pref.hints = 0;
@@ -1550 +1506,2 @@ void cliSetPreferences(char **argv, int argc, int interactive) {
-             interactive ? "" : ".redisclirc: ", argv[1]);
+                interactive ? "" : ".redisclirc: ",
+                argv[1]);
@@ -1554 +1511,2 @@ void cliSetPreferences(char **argv, int argc, int interactive) {
-           interactive ? "" : ".redisclirc: ", argv[0]);
+            interactive ? "" : ".redisclirc: ",
+            argv[0]);
@@ -1588,2 +1546 @@ static void repl(void) {
-    historyfile =
-        getDotfilePath(REDIS_CLI_HISTFILE_ENV, REDIS_CLI_HISTFILE_DEFAULT);
+        historyfile = getDotfilePath(REDIS_CLI_HISTFILE_ENV,REDIS_CLI_HISTFILE_DEFAULT);
@@ -1597,2 +1554 @@ static void repl(void) {
-  while ((line = linenoise(context ? config.prompt : "not connected> ")) !=
-         NULL) {
+    while((line = linenoise(context ? config.prompt : "not connected> ")) != NULL) {
@@ -1629 +1585,2 @@ static void repl(void) {
-            strcasecmp(argv[0], "exit") == 0) {
+                    strcasecmp(argv[0],"exit") == 0)
+                {
@@ -1658,3 +1615,3 @@ static void repl(void) {
-            printf(
-                "\n(Lua debugging session ended%s)\n\n",
-                config.eval_ldb_sync ? "" : " -- dataset changes rolled back");
+                        printf("\n(Lua debugging session ended%s)\n\n",
+                            config.eval_ldb_sync ? "" :
+                            " -- dataset changes rolled back");
@@ -1663 +1620,3 @@ static void repl(void) {
-          if (elapsed >= 500 && config.output == OUTPUT_STANDARD) {
+                    if (elapsed >= 500 &&
+                        config.output == OUTPUT_STANDARD)
+                    {
@@ -1699 +1658,2 @@ static int evalMode(int argc, char **argv) {
-          "help    -- Show Lua script debugging commands.\n\n");
+            "help    -- Show Lua script debugging commands.\n\n"
+            );
@@ -1707,2 +1667,2 @@ static int evalMode(int argc, char **argv) {
-      fprintf(stderr, "Can't open file '%s': %s\n", config.eval,
-              strerror(errno));
+            fprintf(stderr,
+                "Can't open file '%s': %s\n", config.eval, strerror(errno));
@@ -1716,3 +1676,3 @@ static int evalMode(int argc, char **argv) {
-      redisReply *reply =
-          redisCommand(context, config.eval_ldb_sync ? "SCRIPT DEBUG sync"
-                                                     : "SCRIPT DEBUG yes");
+            redisReply *reply = redisCommand(context,
+                    config.eval_ldb_sync ?
+                    "SCRIPT DEBUG sync": "SCRIPT DEBUG yes");
@@ -1827,3 +1787 @@ static int clusterManagerGetAntiAffinityScore(clusterManagerNodeArray *ipnodes,
-                                              int ip_count,
-                                              clusterManagerNode ***offending,
-                                              int *offending_len);
+    int ip_count, clusterManagerNode ***offending, int *offending_len);
@@ -1886,2 +1844,2 @@ clusterManagerCommandDef clusterManagerCommands[] = {
-    {"call", clusterManagerCommandCall, -2, "host:port command arg arg .. arg",
-     NULL},
+    {"call", clusterManagerCommandCall, -2,
+        "host:port command arg arg .. arg", NULL},
@@ -1894 +1852,2 @@ clusterManagerCommandDef clusterManagerCommands[] = {
-    {"help", clusterManagerCommandHelp, 0, NULL, NULL}};
+    {"help", clusterManagerCommandHelp, 0, NULL, NULL}
+};
@@ -1904,2 +1863,2 @@ static clusterManagerCommandProc *validateClusterManagerCommand(void) {
-  int i, commands_count =
-             sizeof(clusterManagerCommands) / sizeof(clusterManagerCommandDef);
+    int i, commands_count = sizeof(clusterManagerCommands) /
+                            sizeof(clusterManagerCommandDef);
@@ -1914,2 +1873 @@ static clusterManagerCommandProc *validateClusterManagerCommand(void) {
-        fprintf(stderr,
-                "[ERR] Wrong number of arguments for "
+                fprintf(stderr, "[ERR] Wrong number of arguments for "
@@ -1926 +1884,2 @@ static int parseClusterNodeAddress(char *addr, char **ip_ptr, int *port_ptr,
-                                   int *bus_port_ptr) {
+                                   int *bus_port_ptr)
+{
@@ -1930 +1889,2 @@ static int parseClusterNodeAddress(char *addr, char **ip_ptr, int *port_ptr,
-    if (bus_port_ptr != NULL) *bus_port_ptr = atoi(c + 1);
+        if (bus_port_ptr != NULL)
+            *bus_port_ptr = atoi(c + 1);
@@ -1937,2 +1897 @@ static int parseClusterNodeAddress(char *addr, char **ip_ptr, int *port_ptr,
-  } else
-    return 0;
+    } else return 0;
@@ -1941,2 +1900,2 @@ static int parseClusterNodeAddress(char *addr, char **ip_ptr, int *port_ptr,
-static int getClusterHostFromCmdArgs(int argc, char **argv, char **ip_ptr,
-                                     int *port_ptr) {
+static int getClusterHostFromCmdArgs(int argc, char **argv,
+                                     char **ip_ptr, int *port_ptr) {
@@ -1952,2 +1911 @@ static int getClusterHostFromCmdArgs(int argc, char **argv, char **ip_ptr,
-  if (!ip || !port)
-    return 0;
+    if (!ip || !port) return 0;
@@ -2053 +2011,2 @@ static sds clusterManagerGetNodeRDBFilename(clusterManagerNode *node) {
-  if (filename[sdslen(filename) - 1] != '/') filename = sdscat(filename, "/");
+    if (filename[sdslen(filename) - 1] != '/')
+        filename = sdscat(filename, "/");
@@ -2058,2 +2017,3 @@ static sds clusterManagerGetNodeRDBFilename(clusterManagerNode *node) {
-static int clusterManagerCheckRedisReply(clusterManagerNode *n, redisReply *r,
-                                         char **err) {
+static int clusterManagerCheckRedisReply(clusterManagerNode *n,
+                                         redisReply *r, char **err)
+{
@@ -2066,2 +2026 @@ static int clusterManagerCheckRedisReply(clusterManagerNode *n, redisReply *r,
-      } else
-        CLUSTER_MANAGER_PRINT_REPLY_ERROR(n, r->str);
+            } else CLUSTER_MANAGER_PRINT_REPLY_ERROR(n, r->str);
@@ -2080 +2039,2 @@ static int clusterManagerExecTransaction(clusterManagerNode *node,
-                                         clusterManagerOnReplyError onerror) {
+                                         clusterManagerOnReplyError onerror)
+{
@@ -2095 +2055,2 @@ static int clusterManagerExecTransaction(clusterManagerNode *node,
-        if (!success) CLUSTER_MANAGER_PRINT_REPLY_ERROR(node, err);
+                if (!success)
+                    CLUSTER_MANAGER_PRINT_REPLY_ERROR(node, err);
@@ -2119 +2080,2 @@ static int clusterManagerNodeConnect(clusterManagerNode *node) {
-    fprintf(stderr, "%s:%d: %s\n", node->ip, node->port, node->context->errstr);
+        fprintf(stderr,"%s:%d: %s\n", node->ip, node->port,
+                node->context->errstr);
@@ -2130,2 +2092,2 @@ static int clusterManagerNodeConnect(clusterManagerNode *node) {
-      reply =
-          redisCommand(node->context, "AUTH %s %s", config.user, config.auth);
+            reply = redisCommand(node->context,"AUTH %s %s",
+                                 config.user,config.auth);
@@ -2169,2 +2131,2 @@ static clusterManagerNode *clusterManagerNodeByName(const char *name) {
-static clusterManagerNode *clusterManagerNodeByAbbreviatedName(
-    const char *name) {
+static clusterManagerNode *clusterManagerNodeByAbbreviatedName(const char*name)
+{
@@ -2181 +2143,2 @@ static clusterManagerNode *clusterManagerNodeByAbbreviatedName(
-    if (n->name && strstr(n->name, lcname) == n->name) {
+        if (n->name &&
+            strstr(n->name, lcname) == n->name) {
@@ -2194 +2157,2 @@ static redisReply *clusterManagerGetNodeRedisInfo(clusterManagerNode *node,
-                                                  char **err) {
+                                                  char **err)
+{
@@ -2237,3 +2201,2 @@ static int clusterManagerGetAntiAffinityScore(clusterManagerNodeArray *ipnodes,
-                                              int ip_count,
-                                              clusterManagerNode ***offending,
-                                              int *offending_len) {
+    int ip_count, clusterManagerNode ***offending, int *offending_len)
+{
@@ -2259,8 +2222,4 @@ static int clusterManagerGetAntiAffinityScore(clusterManagerNodeArray *ipnodes,
-      if (entry)
-        types = sdsdup((sds)dictGetVal(entry));
-      else
-        types = sdsempty();
-      if (!node->replicate)
-        types = sdscatprintf(types, "m%s", types);
-      else
-        types = sdscat(types, "s");
+            if (entry) types = sdsdup((sds) dictGetVal(entry));
+            else types = sdsempty();
+            if (!node->replicate) types = sdscatprintf(types, "m%s", types);
+            else types = sdscat(types, "s");
@@ -2276,4 +2235,2 @@ static int clusterManagerGetAntiAffinityScore(clusterManagerNodeArray *ipnodes,
-      if (types[0] == 'm')
-        score += (10000 * (typeslen - 1));
-      else
-        score += (1 * typeslen);
+            if (types[0] == 'm') score += (10000 * (typeslen - 1));
+            else score += (1 * typeslen);
@@ -2300 +2257,2 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-                                               int ip_count) {
+    int ip_count)
+{
@@ -2302 +2260,2 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-  int score = clusterManagerGetAntiAffinityScore(ipnodes, ip_count, NULL, NULL);
+    int score = clusterManagerGetAntiAffinityScore(ipnodes, ip_count,
+                                                   NULL, NULL);
@@ -2304,2 +2263 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-  clusterManagerLogInfo(
-      ">>> Trying to optimize slaves allocation "
+    clusterManagerLogInfo(">>> Trying to optimize slaves allocation "
@@ -2316 +2274,3 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-    score = clusterManagerGetAntiAffinityScore(ipnodes, ip_count, &offenders,
+        score = clusterManagerGetAntiAffinityScore(ipnodes,
+                                                   ip_count,
+                                                   &offenders,
@@ -2320,3 +2280,4 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-    clusterManagerNode *first = offenders[rand_idx], *second = NULL;
-    clusterManagerNode **other_replicas =
-        zcalloc((node_len - 1) * sizeof(*other_replicas));
+        clusterManagerNode *first = offenders[rand_idx],
+                           *second = NULL;
+        clusterManagerNode **other_replicas = zcalloc((node_len - 1) *
+                                                      sizeof(*other_replicas));
@@ -2338 +2299,2 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-    char *first_master = first->replicate, *second_master = second->replicate;
+        char *first_master = first->replicate,
+             *second_master = second->replicate;
@@ -2341,2 +2303,3 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-    int new_score =
-        clusterManagerGetAntiAffinityScore(ipnodes, ip_count, NULL, NULL);
+        int new_score = clusterManagerGetAntiAffinityScore(ipnodes,
+                                                           ip_count,
+                                                           NULL, NULL);
@@ -2353,4 +2316,3 @@ static void clusterManagerOptimizeAntiAffinity(clusterManagerNodeArray *ipnodes,
-  int log_level = (perfect ? CLUSTER_MANAGER_LOG_LVL_SUCCESS
-                           : CLUSTER_MANAGER_LOG_LVL_WARN);
-  if (perfect)
-    msg = "[OK] Perfect anti-affinity obtained!";
+    int log_level = (perfect ? CLUSTER_MANAGER_LOG_LVL_SUCCESS :
+                               CLUSTER_MANAGER_LOG_LVL_WARN);
+    if (perfect) msg = "[OK] Perfect anti-affinity obtained!";
@@ -2397,2 +2359 @@ static sds clusterManagerNodeSlotsString(clusterManagerNode *node) {
-        else
-          slots = sdscatfmt(slots, "-%u]", last_slot_idx);
+                else slots = sdscatfmt(slots, "-%u]", last_slot_idx);
@@ -2405,4 +2366,2 @@ static sds clusterManagerNodeSlotsString(clusterManagerNode *node) {
-    if (first_range_idx == last_slot_idx)
-      slots = sdscat(slots, "]");
-    else
-      slots = sdscatfmt(slots, "-%u]", last_slot_idx);
+        if (first_range_idx == last_slot_idx) slots = sdscat(slots, "]");
+        else slots = sdscatfmt(slots, "-%u]", last_slot_idx);
@@ -2413 +2372,2 @@ static sds clusterManagerNodeGetJSON(clusterManagerNode *node,
-                                     unsigned long error_count) {
+                                     unsigned long error_count)
+{
@@ -2423 +2383,2 @@ static sds clusterManagerNodeGetJSON(clusterManagerNode *node,
-  while ((p = strchr(p, '-')) != NULL) *(p++) = ',';
+    while ((p = strchr(p, '-')) != NULL)
+        *(p++) = ',';
@@ -2434,3 +2395,9 @@ static sds clusterManagerNodeGetJSON(clusterManagerNode *node,
-                      node->name, node->ip, node->port, replicate, slots,
-                      node->slots_count, flags,
-                      (unsigned long long)node->current_epoch);
+        node->name,
+        node->ip,
+        node->port,
+        replicate,
+        slots,
+        node->slots_count,
+        flags,
+        (unsigned long long)node->current_epoch
+    );
@@ -2438 +2405,2 @@ static sds clusterManagerNodeGetJSON(clusterManagerNode *node,
-    json = sdscatprintf(json, ",\n    \"cluster_errors\": %lu", error_count);
+        json = sdscatprintf(json, ",\n    \"cluster_errors\": %lu",
+                            error_count);
@@ -2500,2 +2468 @@ static sds clusterManagerNodeInfo(clusterManagerNode *node, int indent) {
-    info = sdscatfmt(info,
-                     "%s: %S %s:%u\n"
+        info = sdscatfmt(info, "%s: %S %s:%u\n"
@@ -2504,2 +2471,2 @@ static sds clusterManagerNodeInfo(clusterManagerNode *node, int indent) {
-                     role, node->name, node->ip, node->port, spaces, slots,
-                     node->slots_count, flags);
+                               role, node->name, node->ip, node->port, spaces,
+                               slots, node->slots_count, flags);
@@ -2512,2 +2479,2 @@ static sds clusterManagerNodeInfo(clusterManagerNode *node, int indent) {
-    info = sdscatfmt(info, "\n%s   %U additional replica(s)", spaces,
-                     node->replicas_count);
+        info = sdscatfmt(info, "\n%s   %U additional replica(s)",
+                         spaces, node->replicas_count);
@@ -2548,2 +2515,4 @@ static void clusterManagerShowClusterInfo(void) {
-        if (n == node || !(n->flags & CLUSTER_MANAGER_FLAG_SLAVE)) continue;
-        if (n->replicate && !strcmp(n->replicate, node->name)) replicas++;
+                if (n == node || !(n->flags & CLUSTER_MANAGER_FLAG_SLAVE))
+                    continue;
+                if (n->replicate && !strcmp(n->replicate, node->name))
+                    replicas++;
@@ -2556 +2525,2 @@ static void clusterManagerShowClusterInfo(void) {
-        if (reply != NULL && reply->type == REDIS_REPLY_ERROR) err = reply->str;
+                if (reply != NULL && reply->type == REDIS_REPLY_ERROR)
+                    err = reply->str;
@@ -2562,2 +2532,3 @@ static void clusterManagerShowClusterInfo(void) {
-      printf("%s:%d (%s...) -> %d keys | %d slots | %d slaves.\n", node->ip,
-             node->port, name, dbsize, node->slots_count, replicas);
+            printf("%s:%d (%s...) -> %d keys | %d slots | %d slaves.\n",
+                   node->ip, node->port, name, dbsize,
+                   node->slots_count, replicas);
@@ -2572 +2543,2 @@ static void clusterManagerShowClusterInfo(void) {
-static int clusterManagerAddSlots(clusterManagerNode *node, char **err) {
+static int clusterManagerAddSlots(clusterManagerNode *node, char**err)
+{
@@ -2614 +2586,2 @@ static clusterManagerNode *clusterManagerGetSlotOwner(clusterManagerNode *n,
-                                                      int slot, char **err) {
+                                                      int slot, char **err)
+{
@@ -2631 +2604,2 @@ static clusterManagerNode *clusterManagerGetSlotOwner(clusterManagerNode *n,
-      if (nr->elements >= 3) name = nr->element[2]->str;
+            if (nr->elements >= 3)
+                name = nr->element[2]->str;
@@ -2656,5 +2630,3 @@ static int clusterManagerSetSlot(clusterManagerNode *node1,
-                                 clusterManagerNode *node2, int slot,
-                                 const char *status, char **err) {
-  redisReply *reply =
-      CLUSTER_MANAGER_COMMAND(node1,
-                              "CLUSTER "
+                                 clusterManagerNode *node2,
+                                 int slot, const char *status, char **err) {
+    redisReply *reply = CLUSTER_MANAGER_COMMAND(node1, "CLUSTER "
@@ -2662 +2634,2 @@ static int clusterManagerSetSlot(clusterManagerNode *node1,
-                              slot, status, (char *)node2->name);
+                                                slot, status,
+                                                (char *) node2->name);
@@ -2671,2 +2644 @@ static int clusterManagerSetSlot(clusterManagerNode *node1,
-    } else
-      CLUSTER_MANAGER_PRINT_REPLY_ERROR(node1, reply->str);
+        } else CLUSTER_MANAGER_PRINT_REPLY_ERROR(node1, reply->str);
@@ -2680,2 +2652,2 @@ static int clusterManagerClearSlotStatus(clusterManagerNode *node, int slot) {
-  redisReply *reply =
-      CLUSTER_MANAGER_COMMAND(node, "CLUSTER SETSLOT %d %s", slot, "STABLE");
+    redisReply *reply = CLUSTER_MANAGER_COMMAND(node,
+        "CLUSTER SETSLOT %d %s", slot, "STABLE");
@@ -2687,3 +2659,4 @@ static int clusterManagerDelSlot(clusterManagerNode *node, int slot,
-                                 int ignore_unassigned_err) {
-  redisReply *reply =
-      CLUSTER_MANAGER_COMMAND(node, "CLUSTER DELSLOTS %d", slot);
+                                 int ignore_unassigned_err)
+{
+    redisReply *reply = CLUSTER_MANAGER_COMMAND(node,
+        "CLUSTER DELSLOTS %d", slot);
@@ -2693 +2666,2 @@ static int clusterManagerDelSlot(clusterManagerNode *node, int slot,
-      ignore_unassigned_err) {
+        ignore_unassigned_err)
+    {
@@ -2698,2 +2672 @@ static int clusterManagerDelSlot(clusterManagerNode *node, int slot,
-      if (get_owner_err == NULL)
-        success = 1;
+            if (get_owner_err == NULL) success = 1;
@@ -2714,2 +2687,2 @@ static int clusterManagerAddSlot(clusterManagerNode *node, int slot) {
-  redisReply *reply =
-      CLUSTER_MANAGER_COMMAND(node, "CLUSTER ADDSLOTS %d", slot);
+    redisReply *reply = CLUSTER_MANAGER_COMMAND(node,
+        "CLUSTER ADDSLOTS %d", slot);
@@ -2721,3 +2694,4 @@ static signed int clusterManagerCountKeysInSlot(clusterManagerNode *node,
-                                                int slot) {
-  redisReply *reply =
-      CLUSTER_MANAGER_COMMAND(node, "CLUSTER COUNTKEYSINSLOT %d", slot);
+                                                int slot)
+{
+    redisReply *reply = CLUSTER_MANAGER_COMMAND(node,
+        "CLUSTER COUNTKEYSINSLOT %d", slot);
@@ -2736,2 +2710,3 @@ static int clusterManagerBumpEpoch(clusterManagerNode *node) {
-static int clusterManagerOnSetOwnerErr(redisReply *reply, clusterManagerNode *n,
-                                       int bulk_idx) {
+static int clusterManagerOnSetOwnerErr(redisReply *reply,
+    clusterManagerNode *n, int bulk_idx)
+{
@@ -2742,2 +2717,4 @@ static int clusterManagerOnSetOwnerErr(redisReply *reply, clusterManagerNode *n,
-static int clusterManagerSetSlotOwner(clusterManagerNode *owner, int slot,
-                                      int do_clear) {
+static int clusterManagerSetSlotOwner(clusterManagerNode *owner,
+                                      int slot,
+                                      int do_clear)
+{
@@ -2756 +2733,2 @@ static int clusterManagerCompareKeysValues(clusterManagerNode *n1,
-                                           list *diffs) {
+                                          list *diffs)
+{
@@ -2813 +2791,2 @@ static redisReply *clusterManagerMigrateKeysInReply(clusterManagerNode *source,
-                                                    char *dots) {
+                                                    char *dots)
+{
@@ -2865 +2844,2 @@ static redisReply *clusterManagerMigrateKeysInReply(clusterManagerNode *source,
-  redisAppendCommandArgv(source->context, argc, (const char **)argv, argv_len);
+    redisAppendCommandArgv(source->context,argc,
+                           (const char**)argv,argv_len);
@@ -2876,3 +2856,5 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-                                           clusterManagerNode *target, int slot,
-                                           int timeout, int pipeline,
-                                           int verbose, char **err) {
+                                           clusterManagerNode *target,
+                                           int slot, int timeout,
+                                           int pipeline, int verbose,
+                                           char **err)
+{
@@ -2880,4 +2862,4 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-  int do_fix =
-      config.cluster_manager_command.flags & CLUSTER_MANAGER_CMD_FLAG_FIX;
-  int do_replace =
-      config.cluster_manager_command.flags & CLUSTER_MANAGER_CMD_FLAG_REPLACE;
+    int do_fix = config.cluster_manager_command.flags &
+                 CLUSTER_MANAGER_CMD_FLAG_FIX;
+    int do_replace = config.cluster_manager_command.flags &
+                     CLUSTER_MANAGER_CMD_FLAG_REPLACE;
@@ -2887,4 +2869,3 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-    reply = CLUSTER_MANAGER_COMMAND(source,
-                                    "CLUSTER "
-                                    "GETKEYSINSLOT %d %d",
-                                    slot, pipeline);
+        reply = CLUSTER_MANAGER_COMMAND(source, "CLUSTER "
+                                        "GETKEYSINSLOT %d %d", slot,
+                                        pipeline);
@@ -2909,2 +2890,3 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-    migrate_reply = clusterManagerMigrateKeysInReply(source, target, reply, 0,
-                                                     timeout, dots);
+        migrate_reply = clusterManagerMigrateKeysInReply(source, target,
+                                                         reply, 0, timeout,
+                                                         dots);
@@ -2920,2 +2902 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-          if (get_owner_err == NULL)
-            not_served = 1;
+                    if (get_owner_err == NULL) not_served = 1;
@@ -2923 +2904,2 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-            CLUSTER_MANAGER_PRINT_REPLY_ERROR(source, get_owner_err);
+                        CLUSTER_MANAGER_PRINT_REPLY_ERROR(source,
+                                                          get_owner_err);
@@ -2930,2 +2912 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-          clusterManagerLogWarn(
-              "*** Slot was not served, setting "
+                    clusterManagerLogWarn("*** Slot was not served, setting "
@@ -2939,2 +2920 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-            clusterManagerLogWarn(
-                "*** Checking key values on "
+                        clusterManagerLogWarn("*** Checking key values on "
@@ -2943,2 +2923,2 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-            success =
-                clusterManagerCompareKeysValues(source, target, reply, diffs);
+                        success = clusterManagerCompareKeysValues(source,
+                            target, reply, diffs);
@@ -2958,2 +2938,3 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-                  listLength(diffs), source->ip, source->port, target->ip,
-                  target->port);
+                                listLength(diffs),
+                                source->ip, source->port,
+                                target->ip, target->port);
@@ -2967,2 +2948 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-              clusterManagerLogErr(
-                  "Please fix the above key(s) "
+                            clusterManagerLogErr("Please fix the above key(s) "
@@ -2982,6 +2962,9 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-        migrate_reply = clusterManagerMigrateKeysInReply(
-            source, target, reply, is_busy, timeout, NULL);
-        success =
-            (migrate_reply != NULL && migrate_reply->type != REDIS_REPLY_ERROR);
-      } else
-        success = 0;
+                migrate_reply = clusterManagerMigrateKeysInReply(source,
+                                                                 target,
+                                                                 reply,
+                                                                 is_busy,
+                                                                 timeout,
+                                                                 NULL);
+                success = (migrate_reply != NULL &&
+                           migrate_reply->type != REDIS_REPLY_ERROR);
+            } else success = 0;
@@ -2995 +2978,2 @@ static int clusterManagerMigrateKeysInSlot(clusterManagerNode *source,
-          CLUSTER_MANAGER_PRINT_REPLY_ERROR(source, migrate_reply->str);
+                    CLUSTER_MANAGER_PRINT_REPLY_ERROR(source,
+                                                      migrate_reply->str);
@@ -3013,2 +2997,3 @@ static int clusterManagerMoveSlot(clusterManagerNode *source,
-                                  clusterManagerNode *target, int slot,
-                                  int opts, char **err) {
+                                  clusterManagerNode *target,
+                                  int slot, int opts, char**err)
+{
@@ -3024 +3009,2 @@ static int clusterManagerMoveSlot(clusterManagerNode *source,
-      option_cold = (opts & CLUSTER_MANAGER_OPT_COLD), success = 1;
+        option_cold = (opts & CLUSTER_MANAGER_OPT_COLD),
+        success = 1;
@@ -3026 +3012,2 @@ static int clusterManagerMoveSlot(clusterManagerNode *source,
-    success = clusterManagerSetSlot(target, source, slot, "importing", err);
+        success = clusterManagerSetSlot(target, source, slot,
+                                        "importing", err);
@@ -3028 +3015,2 @@ static int clusterManagerMoveSlot(clusterManagerNode *source,
-    success = clusterManagerSetSlot(source, target, slot, "migrating", err);
+        success = clusterManagerSetSlot(source, target, slot,
+                                        "migrating", err);
@@ -3042,2 +3030 @@ static int clusterManagerMoveSlot(clusterManagerNode *source,
-      redisReply *r = CLUSTER_MANAGER_COMMAND(n,
-                                              "CLUSTER "
+            redisReply *r = CLUSTER_MANAGER_COMMAND(n, "CLUSTER "
@@ -3045 +3032,2 @@ static int clusterManagerMoveSlot(clusterManagerNode *source,
-                                              slot, "node", target->name);
+                                                    slot, "node",
+                                                    target->name);
@@ -3072,2 +3060,2 @@ static int clusterManagerFlushNodeConfig(clusterManagerNode *node, char **err) {
-    reply =
-        CLUSTER_MANAGER_COMMAND(node, "CLUSTER REPLICATE %s", node->replicate);
+        reply = CLUSTER_MANAGER_COMMAND(node, "CLUSTER REPLICATE %s",
+                                        node->replicate);
@@ -3105,4 +3093,2 @@ static void clusterManagerWaitForClusterJoin(void) {
-        clusterManagerLogErr(
-            "Warning: %d node(s) may "
-            "be unreachable\n",
-            dictSize(status));
+                clusterManagerLogErr("Warning: %d node(s) may "
+                                     "be unreachable\n", dictSize(status));
@@ -3116,5 +3102,3 @@ static void clusterManagerWaitForClusterJoin(void) {
-          if (parseClusterNodeAddress(nodeaddr, &node_ip, &node_port,
-                                      &node_bus_port) &&
-              node_bus_port) {
-            clusterManagerLogErr(
-                " - The port %d of node %s may "
+                    if (parseClusterNodeAddress(nodeaddr, &node_ip,
+                        &node_port, &node_bus_port) && node_bus_port) {
+                        clusterManagerLogErr(" - The port %d of node %s may "
@@ -3124,4 +3108,2 @@ static void clusterManagerWaitForClusterJoin(void) {
-            clusterManagerLogErr(
-                " - Node %s may be unreachable "
-                "from:\n",
-                nodeaddr);
+                        clusterManagerLogErr(" - Node %s may be unreachable "
+                                             "from:\n", nodeaddr);
@@ -3137,2 +3119 @@ static void clusterManagerWaitForClusterJoin(void) {
-          clusterManagerLogErr(
-              "Cluster bus ports must be reachable "
+                    clusterManagerLogErr("Cluster bus ports must be reachable "
@@ -3153 +3134,2 @@ static int clusterManagerNodeLoadInfo(clusterManagerNode *node, int opts,
-                                      char **err) {
+                                      char **err)
+{
@@ -3177,24 +3159,8 @@ static int clusterManagerNodeLoadInfo(clusterManagerNode *node, int opts,
-        case 0:
-          name = token;
-          break;
-        case 1:
-          addr = token;
-          break;
-        case 2:
-          flags = token;
-          break;
-        case 3:
-          master_id = token;
-          break;
-        case 4:
-          ping_sent = token;
-          break;
-        case 5:
-          ping_recv = token;
-          break;
-        case 6:
-          config_epoch = token;
-          break;
-        case 7:
-          link_status = token;
-          break;
+            case 0: name = token; break;
+            case 1: addr = token; break;
+            case 2: flags = token; break;
+            case 3: master_id = token; break;
+            case 4: ping_sent = token; break;
+            case 5: ping_recv = token; break;
+            case 6: config_epoch = token; break;
+            case 7: link_status = token; break;
@@ -3225,2 +3191 @@ static int clusterManagerNodeLoadInfo(clusterManagerNode *node, int opts,
-          } else
-            line = p;
+                    } else line = p;
@@ -3240,2 +3205,4 @@ static int clusterManagerNodeLoadInfo(clusterManagerNode *node, int opts,
-              node->migrating[node->migrating_count - 2] = slot;
-              node->migrating[node->migrating_count - 1] = dst;
+                            node->migrating[node->migrating_count - 2] =
+                                slot;
+                            node->migrating[node->migrating_count - 1] =
+                                dst;
@@ -3252,2 +3219,4 @@ static int clusterManagerNodeLoadInfo(clusterManagerNode *node, int opts,
-              node->importing[node->importing_count - 2] = slot;
-              node->importing[node->importing_count - 1] = src;
+                            node->importing[node->importing_count - 2] =
+                                slot;
+                            node->importing[node->importing_count - 1] =
+                                src;
@@ -3271,4 +3240,2 @@ static int clusterManagerNodeLoadInfo(clusterManagerNode *node, int opts,
-      if (!(node->flags & CLUSTER_MANAGER_FLAG_MYSELF))
-        continue;
-      else
-        break;
+            if (!(node->flags & CLUSTER_MANAGER_FLAG_MYSELF)) continue;
+            else break;
@@ -3330 +3297,2 @@ static int clusterManagerNodeLoadInfo(clusterManagerNode *node, int opts,
-    if (config_epoch != NULL) currentNode->current_epoch = atoll(config_epoch);
+        if (config_epoch != NULL)
+            currentNode->current_epoch = atoll(config_epoch);
@@ -3380,2 +3348,2 @@ static int clusterManagerLoadInfoFromNode(clusterManagerNode *node, int opts) {
-        if (friend->flags &
-            (CLUSTER_MANAGER_FLAG_NOADDR | CLUSTER_MANAGER_FLAG_DISCONNECT |
+                if (friend->flags & (CLUSTER_MANAGER_FLAG_NOADDR |
+                                     CLUSTER_MANAGER_FLAG_DISCONNECT |
@@ -3386,2 +3354 @@ static int clusterManagerLoadInfoFromNode(clusterManagerNode *node, int opts) {
-        clusterManagerLogErr(
-            "[ERR] Unable to load info for "
+                clusterManagerLogErr("[ERR] Unable to load info for "
@@ -3405,2 +3372 @@ static int clusterManagerLoadInfoFromNode(clusterManagerNode *node, int opts) {
-        clusterManagerLogWarn(
-            "*** WARNING: %s:%d claims to be "
+                clusterManagerLogWarn("*** WARNING: %s:%d claims to be "
@@ -3409,2 +3375 @@ static int clusterManagerLoadInfoFromNode(clusterManagerNode *node, int opts) {
-      } else
-        master->replicas_count++;
+            } else master->replicas_count++;
@@ -3435 +3400,2 @@ static sds clusterManagerGetConfigSignature(clusterManagerNode *node) {
-  if (reply == NULL || reply->type == REDIS_REPLY_ERROR) goto cleanup;
+    if (reply == NULL || reply->type == REDIS_REPLY_ERROR)
+        goto cleanup;
@@ -3472,2 +3438 @@ static sds clusterManagerGetConfigSignature(clusterManagerNode *node) {
-      } else
-        line = p;
+            } else line = p;
@@ -3481 +3446,2 @@ static sds clusterManagerGetConfigSignature(clusterManagerNode *node) {
-      if (c > 1) qsort(slots, c, sizeof(char *), clusterManagerSlotCompare);
+            if (c > 1)
+                qsort(slots, c, sizeof(char *), clusterManagerSlotCompare);
@@ -3483 +3449,2 @@ static sds clusterManagerGetConfigSignature(clusterManagerNode *node) {
-      node_configs = zrealloc(node_configs, (node_count * sizeof(char *)));
+            node_configs =
+                zrealloc(node_configs, (node_count * sizeof(char *)));
@@ -3534,2 +3501 @@ static int clusterManagerIsConfigConsistent(void) {
-    if (first_cfg == NULL)
-      first_cfg = cfg;
+        if (first_cfg == NULL) first_cfg = cfg;
@@ -3561,10 +3527,5 @@ static list *clusterManagerGetDisconnectedLinks(clusterManagerNode *node) {
-      if (i == 0)
-        nodename = token;
-      else if (i == 1)
-        addr = token;
-      else if (i == 2)
-        flags = token;
-      else if (i == 7)
-        link_status = token;
-      else if (i == 8)
-        break;
+            if (i == 0) nodename = token;
+            else if (i == 1) addr = token;
+            else if (i == 2) flags = token;
+            else if (i == 7) link_status = token;
+            else if (i == 8) break;
@@ -3575,2 +3536 @@ static list *clusterManagerGetDisconnectedLinks(clusterManagerNode *node) {
-        link_status == NULL)
-      continue;
+            link_status == NULL) continue;
@@ -3611,2 +3571 @@ static dict *clusterManagerGetLinkStatus(void) {
-        if (entry)
-          from = dictGetVal(entry);
+                if (entry) from = dictGetVal(entry);
@@ -3630 +3589,2 @@ static void clusterManagerOnError(sds err) {
-  if (cluster_manager.errors == NULL) cluster_manager.errors = listCreate();
+    if (cluster_manager.errors == NULL)
+        cluster_manager.errors = listCreate();
@@ -3658,4 +3618,2 @@ static void clusterManagerPrintSlotsList(list *slots) {
-    if (!first)
-      first = slot;
-    else
-      printf(", ");
+        if (!first) first = slot;
+        else printf(", ");
@@ -3668 +3626,2 @@ static clusterManagerNode *clusterManagerGetNodeWithMostKeysInSlot(list *nodes,
-                                                                   char **err) {
+                                                                    char **err)
+{
@@ -3677 +3636,2 @@ static clusterManagerNode *clusterManagerGetNodeWithMostKeysInSlot(list *nodes,
-    if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate) continue;
+        if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate)
+            continue;
@@ -3756,3 +3716,4 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-        if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate) continue;
-        redisReply *reply =
-            CLUSTER_MANAGER_COMMAND(n, "CLUSTER GETKEYSINSLOT %d %d", i, 1);
+                if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate)
+                    continue;
+                redisReply *reply = CLUSTER_MANAGER_COMMAND(n,
+                    "CLUSTER GETKEYSINSLOT %d %d", i, 1);
@@ -3769 +3730,2 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-          slot_nodes_str = sdscatfmt(slot_nodes_str, "%s:%u", n->ip, n->port);
+                    slot_nodes_str = sdscatfmt(slot_nodes_str,
+                                               "%s:%u", n->ip, n->port);
@@ -3773,2 +3735,2 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-      log = sdscatfmt(log, "\nSlot %S has keys in %u nodes: %S", key,
-                      listLength(slot_nodes), slot_nodes_str);
+            log = sdscatfmt(log, "\nSlot %S has keys in %u nodes: %S",
+                            key, listLength(slot_nodes), slot_nodes_str);
@@ -3789,9 +3751,3 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-      case 0:
-        listAddNodeTail(none, slot);
-        break;
-      case 1:
-        listAddNodeTail(single, slot);
-        break;
-      default:
-        listAddNodeTail(multi, slot);
-        break;
+        case 0: listAddNodeTail(none, slot); break;
+        case 1: listAddNodeTail(single, slot); break;
+        default: listAddNodeTail(multi, slot); break;
@@ -3802,2 +3758 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-    printf(
-        "The following uncovered slots have no keys "
+        printf("The following uncovered slots have no keys "
@@ -3814,2 +3769,2 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-        clusterManagerLogInfo(">>> Covering slot %s with %s:%d\n", slot, n->ip,
-                              n->port);
+                clusterManagerLogInfo(">>> Covering slot %s with %s:%d\n",
+                                      slot, n->ip, n->port);
@@ -3841,2 +3796,2 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-        clusterManagerLogInfo(">>> Covering slot %s with %s:%d\n", slot, n->ip,
-                              n->port);
+                clusterManagerLogInfo(">>> Covering slot %s with %s:%d\n",
+                                      slot, n->ip, n->port);
@@ -3872,4 +3827,3 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-        clusterManagerLogInfo(
-            ">>> Covering slot %s moving keys "
-            "to %s:%d\n",
-            slot, target->ip, target->port);
+                clusterManagerLogInfo(">>> Covering slot %s moving keys "
+                                      "to %s:%d\n", slot,
+                                      target->ip, target->port);
@@ -3887,3 +3841 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-          if (!clusterManagerSetSlot(src, target, s, "NODE", NULL)) fixed = -1;
-          if (fixed < 0) goto cleanup;
-          if (!clusterManagerSetSlot(src, target, s, "IMPORTING", NULL))
+                    if (!clusterManagerSetSlot(src, target, s, "NODE", NULL))
@@ -3892 +3844,5 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-          int opts = CLUSTER_MANAGER_OPT_VERBOSE | CLUSTER_MANAGER_OPT_COLD;
+                    if (!clusterManagerSetSlot(src, target, s,
+                                               "IMPORTING", NULL)) fixed = -1;
+                    if (fixed < 0) goto cleanup;
+                    int opts = CLUSTER_MANAGER_OPT_VERBOSE |
+                               CLUSTER_MANAGER_OPT_COLD;
@@ -3897 +3853,2 @@ static int clusterManagerFixSlotsCoverage(char *all_slots) {
-          if (!clusterManagerClearSlotStatus(src, s)) fixed = -1;
+                    if (!clusterManagerClearSlotStatus(src, s))
+                        fixed = -1;
@@ -3926,2 +3883 @@ static int clusterManagerFixOpenSlot(int slot) {
-    if (n->slots[slot])
-      listAddNodeTail(owners, n);
+        if (n->slots[slot]) listAddNodeTail(owners, n);
@@ -3929,2 +3885,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-      redisReply *r =
-          CLUSTER_MANAGER_COMMAND(n, "CLUSTER COUNTKEYSINSLOT %d", slot);
+            redisReply *r = CLUSTER_MANAGER_COMMAND(n,
+                "CLUSTER COUNTKEYSINSLOT %d", slot);
@@ -3933,4 +3889,3 @@ static int clusterManagerFixOpenSlot(int slot) {
-        clusterManagerLogWarn(
-            "*** Found keys about slot %d "
-            "in non-owner node %s:%d!\n",
-            slot, n->ip, n->port);
+                clusterManagerLogWarn("*** Found keys about slot %d "
+                                      "in non-owner node %s:%d!\n", slot,
+                                      n->ip, n->port);
@@ -3954,2 +3909,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-          migrating_str =
-              sdscatfmt(migrating_str, "%s%s:%u", sep, n->ip, n->port);
+                    migrating_str = sdscatfmt(migrating_str, "%s%s:%u",
+                                              sep, n->ip, n->port);
@@ -3967,2 +3922,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-          importing_str =
-              sdscatfmt(importing_str, "%s%s:%u", sep, n->ip, n->port);
+                    importing_str = sdscatfmt(importing_str, "%s%s:%u",
+                                              sep, n->ip, n->port);
@@ -3976,2 +3931,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-      redisReply *r =
-          CLUSTER_MANAGER_COMMAND(n, "CLUSTER COUNTKEYSINSLOT %d", slot);
+            redisReply *r = CLUSTER_MANAGER_COMMAND(n,
+                "CLUSTER COUNTKEYSINSLOT %d", slot);
@@ -3980,4 +3935,3 @@ static int clusterManagerFixOpenSlot(int slot) {
-        clusterManagerLogWarn(
-            "*** Found keys about slot %d "
-            "in node %s:%d!\n",
-            slot, n->ip, n->port);
+                clusterManagerLogWarn("*** Found keys about slot %d "
+                                      "in node %s:%d!\n", slot, n->ip,
+                                      n->port);
@@ -3985,2 +3939,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-        importing_str =
-            sdscatfmt(importing_str, "%s%S:%u", sep, n->ip, n->port);
+                importing_str = sdscatfmt(importing_str, "%s%S:%u",
+                                          sep, n->ip, n->port);
@@ -3998,2 +3952 @@ static int clusterManagerFixOpenSlot(int slot) {
-    clusterManagerLogInfo(
-        ">>> Nobody claims ownership, "
+        clusterManagerLogInfo(">>> Nobody claims ownership, "
@@ -4001,2 +3954,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-    owner = clusterManagerGetNodeWithMostKeysInSlot(cluster_manager.nodes, slot,
-                                                    NULL);
+        owner = clusterManagerGetNodeWithMostKeysInSlot(cluster_manager.nodes,
+                                                        slot, NULL);
@@ -4004,2 +3957 @@ static int clusterManagerFixOpenSlot(int slot) {
-      clusterManagerLogErr(
-          "[ERR] Can't select a slot owner. "
+            clusterManagerLogErr("[ERR] Can't select a slot owner. "
@@ -4044,4 +3996,3 @@ static int clusterManagerFixOpenSlot(int slot) {
-    clusterManagerLogInfo(
-        ">>> Case 1: Moving slot %d from "
-        "%s:%d to %s:%d\n",
-        slot, src->ip, src->port, dst->ip, dst->port);
+        clusterManagerLogInfo(">>> Case 1: Moving slot %d from "
+                              "%s:%d to %s:%d\n", slot,
+                              src->ip, src->port, dst->ip, dst->port);
@@ -4052,4 +4003,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-    clusterManagerLogInfo(
-        ">>> Case 2: Moving all the %d slot keys to its "
-        "owner %s:%d\n",
-        slot, owner->ip, owner->port);
+        clusterManagerLogInfo(">>> Case 2: Moving all the %d slot keys to its "
+                              "owner %s:%d\n", slot, owner->ip, owner->port);
@@ -4063,4 +4012,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-      clusterManagerLogInfo(
-          ">>> Setting %d as STABLE in "
-          "%s:%d\n",
-          slot, n->ip, n->port);
+            clusterManagerLogInfo(">>> Setting %d as STABLE in "
+                                  "%s:%d\n", slot, n->ip, n->port);
@@ -4106,2 +4053 @@ static int clusterManagerFixOpenSlot(int slot) {
-      clusterManagerLogInfo(
-          ">>> Case 3: Moving slot %d from %s:%d to "
+            clusterManagerLogInfo(">>> Case 3: Moving slot %d from %s:%d to "
@@ -4110 +4056,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-          slot, src->ip, src->port, dst->ip, dst->port);
+                                  slot, src->ip, src->port,
+                                  dst->ip, dst->port);
@@ -4121,4 +4068,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-      clusterManagerLogInfo(
-          ">>> Case 3: Closing slot %d on both "
-          "migrating and importing nodes.\n",
-          slot);
+            clusterManagerLogInfo(">>> Case 3: Closing slot %d on both "
+                                  "migrating and importing nodes.\n", slot);
@@ -4135,2 +4080,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-    int try_to_close_slot =
-        (listLength(importing) == 0 && listLength(migrating) == 1);
+        int try_to_close_slot = (listLength(importing) == 0 &&
+                                 listLength(migrating) == 1);
@@ -4140,2 +4085,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-        redisReply *r =
-            CLUSTER_MANAGER_COMMAND(n, "CLUSTER GETKEYSINSLOT %d %d", slot, 10);
+                redisReply *r = CLUSTER_MANAGER_COMMAND(n,
+                    "CLUSTER GETKEYSINSLOT %d %d", slot, 10);
@@ -4152,4 +4097,4 @@ static int clusterManagerFixOpenSlot(int slot) {
-      clusterManagerLogInfo(">>> Case 4: Closing slot %d on %s:%d\n", slot,
-                            n->ip, n->port);
-      redisReply *r =
-          CLUSTER_MANAGER_COMMAND(n, "CLUSTER SETSLOT %d %s", slot, "STABLE");
+            clusterManagerLogInfo(">>> Case 4: Closing slot %d on %s:%d\n",
+                                  slot, n->ip, n->port);
+            redisReply *r = CLUSTER_MANAGER_COMMAND(n, "CLUSTER SETSLOT %d %s",
+                                                    slot, "STABLE");
@@ -4162,2 +4107 @@ static int clusterManagerFixOpenSlot(int slot) {
-      clusterManagerLogErr(
-          "[ERR] Sorry, redis-cli can't fix this slot "
+            clusterManagerLogErr("[ERR] Sorry, redis-cli can't fix this slot "
@@ -4166,2 +4110,2 @@ static int clusterManagerFixOpenSlot(int slot) {
-          "owner is %s:%d\n",
-          migrating_str, importing_str, owner->ip, owner->port);
+                                 "owner is %s:%d\n", migrating_str,
+                                 importing_str, owner->ip, owner->port);
@@ -4182,2 +4126,3 @@ static int clusterManagerFixMultipleSlotOwners(int slot, list *owners) {
-  clusterManagerNode *owner =
-      clusterManagerGetNodeWithMostKeysInSlot(owners, slot, NULL);
+    clusterManagerNode *owner = clusterManagerGetNodeWithMostKeysInSlot(owners,
+                                                                        slot,
+                                                                        NULL);
@@ -4185,2 +4130,2 @@ static int clusterManagerFixMultipleSlotOwners(int slot, list *owners) {
-  clusterManagerLogInfo(">>> Setting slot %d owner: %s:%d\n", slot, owner->ip,
-                        owner->port);
+    clusterManagerLogInfo(">>> Setting slot %d owner: %s:%d\n",
+                          slot, owner->ip, owner->port);
@@ -4201 +4146,2 @@ static int clusterManagerFixMultipleSlotOwners(int slot, list *owners) {
-      int opts = CLUSTER_MANAGER_OPT_VERBOSE | CLUSTER_MANAGER_OPT_COLD;
+            int opts = CLUSTER_MANAGER_OPT_VERBOSE |
+                       CLUSTER_MANAGER_OPT_COLD;
@@ -4215,2 +4161,2 @@ static int clusterManagerCheckCluster(int quiet) {
-  int do_fix =
-      config.cluster_manager_command.flags & CLUSTER_MANAGER_CMD_FLAG_FIX;
+    int do_fix = config.cluster_manager_command.flags &
+                 CLUSTER_MANAGER_CMD_FLAG_FIX;
@@ -4224,2 +4170 @@ static int clusterManagerCheckCluster(int quiet) {
-    clusterManagerLogOk(
-        "[OK] All nodes agree about slots "
+        clusterManagerLogOk("[OK] All nodes agree about slots "
@@ -4242 +4187,2 @@ static int clusterManagerCheckCluster(int quiet) {
-                            n->ip, n->port);
+                                n->ip,
+                                n->port);
@@ -4259 +4205,2 @@ static int clusterManagerCheckCluster(int quiet) {
-                            n->ip, n->port);
+                                n->ip,
+                                n->port);
@@ -4300 +4247,2 @@ static int clusterManagerCheckCluster(int quiet) {
-    clusterManagerLogOk("[OK] All %d slots covered.\n", CLUSTER_MANAGER_SLOTS);
+        clusterManagerLogOk("[OK] All %d slots covered.\n",
+                            CLUSTER_MANAGER_SLOTS);
@@ -4303,2 +4251 @@ static int clusterManagerCheckCluster(int quiet) {
-    err = sdscatprintf(err,
-                       "[ERR] Not all %d slots are "
+        err = sdscatprintf(err, "[ERR] Not all %d slots are "
@@ -4331,2 +4278 @@ static int clusterManagerCheckCluster(int quiet) {
-        if (n->slots[slot])
-          listAddNodeTail(owners, n);
+                if (n->slots[slot]) listAddNodeTail(owners, n);
@@ -4340,2 +4286,2 @@ static int clusterManagerCheckCluster(int quiet) {
-        clusterManagerLogErr("[WARNING] Slot %d has %d owners:\n", slot,
-                             listLength(owners));
+                clusterManagerLogErr("[WARNING] Slot %d has %d owners:\n",
+                                     slot, listLength(owners));
@@ -4351,4 +4297,2 @@ static int clusterManagerCheckCluster(int quiet) {
-            clusterManagerLogErr(
-                "Failed to fix multiple owners "
-                "for slot %d\n",
-                slot);
+                        clusterManagerLogErr("Failed to fix multiple owners "
+                                             "for slot %d\n", slot);
@@ -4357,2 +4301 @@ static int clusterManagerCheckCluster(int quiet) {
-          } else
-            slots_with_multiple_owners--;
+                    } else slots_with_multiple_owners--;
@@ -4370 +4313,2 @@ static clusterManagerNode *clusterNodeForResharding(char *id,
-                                                    int *raise_err) {
+                                                    int *raise_err)
+{
@@ -4372,2 +4316 @@ static clusterManagerNode *clusterNodeForResharding(char *id,
-  const char *invalid_node_msg =
-      "*** The specified node (%s) is not known "
+    const char *invalid_node_msg = "*** The specified node (%s) is not known "
@@ -4383,2 +4326 @@ static clusterManagerNode *clusterNodeForResharding(char *id,
-      clusterManagerLogErr(
-          "*** It is not possible to use "
+            clusterManagerLogErr( "*** It is not possible to use "
@@ -4409,4 +4351,2 @@ static list *clusterManagerComputeReshardTable(list *sources, int numslots) {
-    if (i == 0)
-      n = ceil(n);
-    else
-      n = floor(n);
+        if (i == 0) n = ceil(n);
+        else n = floor(n);
@@ -4456,15 +4396,5 @@ static void clusterManagerLog(int level, const char *fmt, ...) {
-      case CLUSTER_MANAGER_LOG_LVL_INFO:
-        printf(LOG_COLOR_BOLD);
-        break;
-      case CLUSTER_MANAGER_LOG_LVL_WARN:
-        printf(LOG_COLOR_YELLOW);
-        break;
-      case CLUSTER_MANAGER_LOG_LVL_ERR:
-        printf(LOG_COLOR_RED);
-        break;
-      case CLUSTER_MANAGER_LOG_LVL_SUCCESS:
-        printf(LOG_COLOR_GREEN);
-        break;
-      default:
-        printf(LOG_COLOR_RESET);
-        break;
+        case CLUSTER_MANAGER_LOG_LVL_INFO: printf(LOG_COLOR_BOLD); break;
+        case CLUSTER_MANAGER_LOG_LVL_WARN: printf(LOG_COLOR_YELLOW); break;
+        case CLUSTER_MANAGER_LOG_LVL_ERR: printf(LOG_COLOR_RED); break;
+        case CLUSTER_MANAGER_LOG_LVL_SUCCESS: printf(LOG_COLOR_GREEN); break;
+        default: printf(LOG_COLOR_RESET); break;
@@ -4480 +4410,2 @@ static void clusterManagerNodeArrayInit(clusterManagerNodeArray *array,
-                                        int alloc_len) {
+                                        int alloc_len)
+{
@@ -4498 +4429,2 @@ static void clusterManagerNodeArrayShift(clusterManagerNodeArray *array,
-                                         clusterManagerNode **nodeptr) {
+                                         clusterManagerNode **nodeptr)
+{
@@ -4506 +4438,2 @@ static void clusterManagerNodeArrayAdd(clusterManagerNodeArray *array,
-                                       clusterManagerNode *node) {
+                                       clusterManagerNode *node)
+{
@@ -4513 +4446,2 @@ static void clusterManagerPrintNotEmptyNodeError(clusterManagerNode *node,
-                                                 char *err) {
+                                                 char *err)
+{
@@ -4515,2 +4449 @@ static void clusterManagerPrintNotEmptyNodeError(clusterManagerNode *node,
-  if (err)
-    msg = err;
+    if (err) msg = err;
@@ -4518,2 +4451 @@ static void clusterManagerPrintNotEmptyNodeError(clusterManagerNode *node,
-    msg =
-        "is not empty. Either the node already knows other "
+        msg = "is not empty. Either the node already knows other "
@@ -4526 +4458,2 @@ static void clusterManagerPrintNotClusterNodeError(clusterManagerNode *node,
-                                                   char *err) {
+                                                   char *err)
+{
@@ -4601,4 +4534,2 @@ static int clusterManagerCommandCreate(int argc, char **argv) {
-  clusterManagerLogInfo(
-      ">>> Performing hash slots allocation "
-      "on %d nodes...\n",
-      node_len);
+    clusterManagerLogInfo(">>> Performing hash slots allocation "
+                          "on %d nodes...\n", node_len);
@@ -4685,2 +4616 @@ assign_replicas:
-      if (found)
-        slave = found;
+            if (found) slave = found;
@@ -4698,2 +4628 @@ assign_replicas:
-      } else
-        break;
+            } else break;
@@ -4729,2 +4658 @@ assign_replicas:
-      } else if (err != NULL)
-        zfree(err);
+            } else if (err != NULL) zfree(err);
@@ -4733,2 +4661 @@ assign_replicas:
-    clusterManagerLogInfo(
-        ">>> Assign a different config epoch to "
+        clusterManagerLogInfo(">>> Assign a different config epoch to "
@@ -4741 +4668,2 @@ assign_replicas:
-      reply = CLUSTER_MANAGER_COMMAND(node, "cluster set-config-epoch %d",
+            reply = CLUSTER_MANAGER_COMMAND(node,
+                                            "cluster set-config-epoch %d",
@@ -4745,2 +4673 @@ assign_replicas:
-    clusterManagerLogInfo(
-        ">>> Sending CLUSTER MEET messages to join "
+        clusterManagerLogInfo(">>> Sending CLUSTER MEET messages to join "
@@ -4757,2 +4684,2 @@ assign_replicas:
-      reply = CLUSTER_MANAGER_COMMAND(node, "cluster meet %s %d", first->ip,
-                                      first->port);
+            reply = CLUSTER_MANAGER_COMMAND(node, "cluster meet %s %d",
+                                            first->ip, first->port);
@@ -4794,4 +4721,2 @@ assign_replicas:
-      if (!first_node)
-        first_node = node;
-      else
-        freeClusterManagerNode(node);
+            if (!first_node) first_node = node;
+            else freeClusterManagerNode(node);
@@ -4823 +4748,2 @@ static int clusterManagerCommandAddNode(int argc, char **argv) {
-  if (!getClusterHostFromCmdArgs(1, argv, &ip, &port)) goto invalid_args;
+    if (!getClusterHostFromCmdArgs(1, argv, &ip, &port))
+        goto invalid_args;
@@ -4848,2 +4774,2 @@ static int clusterManagerCommandAddNode(int argc, char **argv) {
-    clusterManagerLogErr("[ERR] Sorry, can't connect to node %s:%d\n", ip,
-                         port);
+        clusterManagerLogErr("[ERR] Sorry, can't connect to node %s:%d\n",
+                             ip, port);
@@ -4875,6 +4801,4 @@ static int clusterManagerCommandAddNode(int argc, char **argv) {
-  clusterManagerLogInfo(
-      ">>> Send CLUSTER MEET to node %s:%d to make it "
-      "join the cluster.\n",
-      ip, port);
-  reply = CLUSTER_MANAGER_COMMAND(new_node, "CLUSTER MEET %s %d", first->ip,
-                                  first->port);
+    clusterManagerLogInfo(">>> Send CLUSTER MEET to node %s:%d to make it "
+                          "join the cluster.\n", ip, port);
+    reply = CLUSTER_MANAGER_COMMAND(new_node, "CLUSTER MEET %s %d",
+                                    first->ip, first->port);
@@ -4910,2 +4834,2 @@ static int clusterManagerCommandDeleteNode(int argc, char **argv) {
-  clusterManagerLogInfo(">>> Removing node %s from cluster %s:%d\n", node_id,
-                        ip, port);
+    clusterManagerLogInfo(">>> Removing node %s from cluster %s:%d\n",
+                          node_id, ip, port);
@@ -4921,4 +4845,2 @@ static int clusterManagerCommandDeleteNode(int argc, char **argv) {
-    clusterManagerLogErr(
-        "[ERR] Node %s:%d is not empty! Reshard data "
-        "away and try again.\n",
-        node->ip, node->port);
+        clusterManagerLogErr("[ERR] Node %s:%d is not empty! Reshard data "
+                             "away and try again.\n", node->ip, node->port);
@@ -4927,2 +4849 @@ static int clusterManagerCommandDeleteNode(int argc, char **argv) {
-  clusterManagerLogInfo(
-      ">>> Sending CLUSTER FORGET messages to the "
+    clusterManagerLogInfo(">>> Sending CLUSTER FORGET messages to the "
@@ -4939,4 +4860,4 @@ static int clusterManagerCommandDeleteNode(int argc, char **argv) {
-      clusterManagerLogInfo(">>> %s:%d as replica of %s:%d\n", n->ip, n->port,
-                            master->ip, master->port);
-      redisReply *r =
-          CLUSTER_MANAGER_COMMAND(n, "CLUSTER REPLICATE %s", master->name);
+            clusterManagerLogInfo(">>> %s:%d as replica of %s:%d\n",
+                                  n->ip, n->port, master->ip, master->port);
+            redisReply *r = CLUSTER_MANAGER_COMMAND(n, "CLUSTER REPLICATE %s",
+                                                    master->name);
@@ -4947 +4868,2 @@ static int clusterManagerCommandDeleteNode(int argc, char **argv) {
-    redisReply *r = CLUSTER_MANAGER_COMMAND(n, "CLUSTER FORGET %s", node_id);
+        redisReply *r = CLUSTER_MANAGER_COMMAND(n, "CLUSTER FORGET %s",
+                                                node_id);
@@ -4952,2 +4874 @@ static int clusterManagerCommandDeleteNode(int argc, char **argv) {
-  clusterManagerLogInfo(
-      ">>> Sending CLUSTER RESET SOFT to the "
+    clusterManagerLogInfo(">>> Sending CLUSTER RESET SOFT to the "
@@ -5000 +4921,2 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-    fprintf(stderr, "*** Please fix your cluster problems before resharding\n");
+        fprintf(stderr,
+                "*** Please fix your cluster problems before resharding\n");
@@ -5015,2 +4937 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-        while ((ch = getchar()) != '\n' && ch != EOF) {
-        }
+                while ((ch = getchar()) != '\n' && ch != EOF) {}
@@ -5033,2 +4954 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-      while ((ch = getchar()) != '\n' && ch != EOF) {
-      }
+            while ((ch = getchar()) != '\n' && ch != EOF) {}
@@ -5047,2 +4967 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-    printf(
-        "  Type 'all' to use all the nodes as source nodes for "
+        printf("  Type 'all' to use all the nodes as source nodes for "
@@ -5059,2 +4978 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-        while ((ch = getchar()) != '\n' && ch != EOF) {
-        }
+                while ((ch = getchar()) != '\n' && ch != EOF) {}
@@ -5063,2 +4981 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-      if (!strcmp(buf, "done"))
-        break;
+            if (!strcmp(buf, "done")) break;
@@ -5071,2 +4988 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-        if (src != NULL)
-          listAddNodeTail(sources, src);
+                if (src != NULL) listAddNodeTail(sources, src);
@@ -5089,2 +5005 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-        if (src != NULL)
-          listAddNodeTail(sources, src);
+                if (src != NULL) listAddNodeTail(sources, src);
@@ -5103,2 +5018 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-        if (src != NULL)
-          listAddNodeTail(sources, src);
+                if (src != NULL) listAddNodeTail(sources, src);
@@ -5119 +5033,2 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-      if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate) continue;
+            if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate)
+                continue;
@@ -5145,3 +5060,4 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-  if (!(config.cluster_manager_command.flags & CLUSTER_MANAGER_CMD_FLAG_YES)) {
-    printf(
-        "Do you want to proceed with the proposed "
+    if (!(config.cluster_manager_command.flags &
+          CLUSTER_MANAGER_CMD_FLAG_YES))
+    {
+        printf("Do you want to proceed with the proposed "
@@ -5163,2 +5079,2 @@ static int clusterManagerCommandReshard(int argc, char **argv) {
-    result =
-        clusterManagerMoveSlot(item->source, target, item->slot, opts, &err);
+        result = clusterManagerMoveSlot(item->source, target, item->slot,
+                                        opts, &err);
@@ -5218 +5134,2 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-    if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate) continue;
+        if (n->flags & CLUSTER_MANAGER_FLAG_SLAVE || n->replicate)
+            continue;
@@ -5231,2 +5148 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-    clusterManagerLogErr(
-        "*** Please fix your cluster problems "
+        clusterManagerLogErr("*** Please fix your cluster problems "
@@ -5244,2 +5160,2 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-    int expected =
-        (int)(((float)CLUSTER_MANAGER_SLOTS / total_weight) * n->weight);
+        int expected = (int) (((float)CLUSTER_MANAGER_SLOTS / total_weight) *
+                        n->weight);
@@ -5260,2 +5176 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-    clusterManagerLogWarn(
-        "*** No rebalancing needed! "
+        clusterManagerLogWarn("*** No rebalancing needed! "
@@ -5278,2 +5193 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-  clusterManagerLogInfo(
-      ">>> Rebalancing across %d nodes. "
+    clusterManagerLogInfo(">>> Rebalancing across %d nodes. "
@@ -5290,2 +5204,2 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-  int simulate =
-      config.cluster_manager_command.flags & CLUSTER_MANAGER_CMD_FLAG_SIMULATE;
+    int simulate = config.cluster_manager_command.flags &
+                   CLUSTER_MANAGER_CMD_FLAG_SIMULATE;
@@ -5299,2 +5213,5 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-      printf("Moving %d slots from %s:%d to %s:%d\n", numslots, src->ip,
-             src->port, dst->ip, dst->port);
+            printf("Moving %d slots from %s:%d to %s:%d\n", numslots,
+                                                            src->ip,
+                                                            src->port,
+                                                            dst->ip,
+                                                            dst->port);
@@ -5307,2 +5224 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-        clusterManagerLogErr(
-            "*** Assertion failed: Reshard table "
+                clusterManagerLogErr("*** Assertion failed: Reshard table "
@@ -5316 +5232,2 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-        int opts = CLUSTER_MANAGER_OPT_QUIET | CLUSTER_MANAGER_OPT_UPDATE;
+                int opts = CLUSTER_MANAGER_OPT_QUIET |
+                           CLUSTER_MANAGER_OPT_UPDATE;
@@ -5320,2 +5237,4 @@ static int clusterManagerCommandRebalance(int argc, char **argv) {
-          result =
-              clusterManagerMoveSlot(item->source, dst, item->slot, opts, NULL);
+                    result = clusterManagerMoveSlot(item->source,
+                                                    dst,
+                                                    item->slot,
+                                                    opts, NULL);
@@ -5352,2 +5271 @@ static int clusterManagerCommandSetTimeout(int argc, char **argv) {
-    fprintf(stderr,
-            "Setting a node timeout of less than 100 "
+        fprintf(stderr, "Setting a node timeout of less than 100 "
@@ -5360,2 +5278 @@ static int clusterManagerCommandSetTimeout(int argc, char **argv) {
-  clusterManagerLogInfo(
-      ">>> Reconfiguring node timeout in every "
+    clusterManagerLogInfo(">>> Reconfiguring node timeout in every "
@@ -5369,2 +5286,4 @@ static int clusterManagerCommandSetTimeout(int argc, char **argv) {
-    redisReply *reply = CLUSTER_MANAGER_COMMAND(
-        n, "CONFIG %s %s %d", "SET", "cluster-node-timeout", timeout);
+        redisReply *reply = CLUSTER_MANAGER_COMMAND(n, "CONFIG %s %s %d",
+                                                    "SET",
+                                                    "cluster-node-timeout",
+                                                    timeout);
@@ -5380 +5299,2 @@ static int clusterManagerCommandSetTimeout(int argc, char **argv) {
-    clusterManagerLogWarn("*** New timeout set for %s:%d\n", n->ip, n->port);
+        clusterManagerLogWarn("*** New timeout set for %s:%d\n", n->ip,
+                              n->port);
@@ -5385,4 +5305,2 @@ static int clusterManagerCommandSetTimeout(int argc, char **argv) {
-    if (err == NULL)
-      err = "";
-    else
-      need_free = 1;
+        if (err == NULL) err = "";
+        else need_free = 1;
@@ -5394,2 +5312,2 @@ static int clusterManagerCommandSetTimeout(int argc, char **argv) {
-  clusterManagerLogInfo(">>> New node timeout set. %d OK, %d ERR.\n", ok_count,
-                        err_count);
+    clusterManagerLogInfo(">>> New node timeout set. %d OK, %d ERR.\n",
+                          ok_count, err_count);
@@ -5411,2 +5329 @@ static int clusterManagerCommandImport(int argc, char **argv) {
-    invalid_args_msg =
-        "[ERR] Option '--cluster-from' is required for "
+        invalid_args_msg = "[ERR] Option '--cluster-from' is required for "
@@ -5418,2 +5335 @@ static int clusterManagerCommandImport(int argc, char **argv) {
-    invalid_args_msg =
-        "[ERR] Invalid --cluster-from host. You need to "
+        invalid_args_msg = "[ERR] Invalid --cluster-from host. You need to "
@@ -5444,2 +5360 @@ static int clusterManagerCommandImport(int argc, char **argv) {
-    clusterManagerLogErr(
-        "[ERR] The source node should not be a "
+        clusterManagerLogErr("[ERR] The source node should not be a "
@@ -5484,2 +5399,2 @@ static int clusterManagerCommandImport(int argc, char **argv) {
-    src_reply =
-        reconnectingRedisCommand(src_ctx, "SCAN %d COUNT %d", cursor, 1000);
+        src_reply = reconnectingRedisCommand(src_ctx, "SCAN %d COUNT %d",
+                                             cursor, 1000);
@@ -5506,3 +5421,4 @@ static int clusterManagerCommandImport(int argc, char **argv) {
-      redisReply *r =
-          reconnectingRedisCommand(src_ctx, cmdfmt, target->ip, target->port,
-                                   key, 0, timeout, "COPY", "REPLACE");
+            redisReply *r = reconnectingRedisCommand(src_ctx, cmdfmt,
+                                                     target->ip, target->port,
+                                                     key, 0, timeout,
+                                                     "COPY", "REPLACE");
@@ -5511,4 +5427,3 @@ static int clusterManagerCommandImport(int argc, char **argv) {
-          clusterManagerLogErr(
-              "Source %s:%d replied with "
-              "error:\n%s\n",
-              src_ip, src_port, r->str);
+                    clusterManagerLogErr("Source %s:%d replied with "
+                                         "error:\n%s\n", src_ip, src_port,
+                                         r->str);
@@ -5525,2 +5440,2 @@ cleanup:
-    clusterManagerLogErr("Source %s:%d replied with error:\n%s\n", src_ip,
-                         src_port, reply_err);
+        clusterManagerLogErr("Source %s:%d replied with error:\n%s\n",
+                             src_ip, src_port, reply_err);
@@ -5581,2 +5496,2 @@ static int clusterManagerCommandBackup(int argc, char **argv) {
-  int cluster_errors_count =
-      (no_issues ? 0 : listLength(cluster_manager.errors));
+    int cluster_errors_count = (no_issues ? 0 :
+                                listLength(cluster_manager.errors));
@@ -5590,4 +5505,2 @@ static int clusterManagerCommandBackup(int argc, char **argv) {
-    if (!first_node)
-      first_node = 1;
-    else
-      json = sdscat(json, ",\n");
+        if (!first_node) first_node = 1;
+        else json = sdscat(json, ",\n");
@@ -5598,3 +5511,4 @@ static int clusterManagerCommandBackup(int argc, char **argv) {
-    if (node->replicate) continue;
-    clusterManagerLogInfo(">>> Node %s:%d -> Saving RDB...\n", node->ip,
-                          node->port);
+        if (node->replicate)
+            continue;
+        clusterManagerLogInfo(">>> Node %s:%d -> Saving RDB...\n",
+                              node->ip, node->port);
@@ -5606 +5520,2 @@ static int clusterManagerCommandBackup(int argc, char **argv) {
-  if (jsonpath[sdslen(jsonpath) - 1] != '/') jsonpath = sdscat(jsonpath, "/");
+    if (jsonpath[sdslen(jsonpath) - 1] != '/')
+        jsonpath = sdscat(jsonpath, "/");
@@ -5623,2 +5538 @@ cleanup:
-      clusterManagerLogWarn(
-          "*** Cluster seems to have some problems, "
+            clusterManagerLogWarn("*** Cluster seems to have some problems, "
@@ -5630,2 +5544 @@ cleanup:
-  } else
-    clusterManagerLogOk("[ERR] Failed to back cluster!\n");
+    } else clusterManagerLogOk("[ERR] Failed to back cluster!\n");
@@ -5640,2 +5553,2 @@ static int clusterManagerCommandHelp(int argc, char **argv) {
-  int commands_count =
-      sizeof(clusterManagerCommands) / sizeof(clusterManagerCommandDef);
+    int commands_count = sizeof(clusterManagerCommands) /
+                         sizeof(clusterManagerCommandDef);
@@ -5671,2 +5584 @@ static int clusterManagerCommandHelp(int argc, char **argv) {
-  fprintf(stderr,
-          "\nFor check, fix, reshard, del-node, set-timeout you "
+    fprintf(stderr, "\nFor check, fix, reshard, del-node, set-timeout you "
@@ -5677,2 +5589 @@ static int clusterManagerCommandHelp(int argc, char **argv) {
-static void latencyModePrint(long long min, long long max, double avg,
-                             long long count) {
+static void latencyModePrint(long long min, long long max, double avg, long long count) {
@@ -5680,2 +5591,2 @@ static void latencyModePrint(long long min, long long max, double avg,
-    printf("min: %lld, max: %lld, avg: %.2f (%lld samples)", min, max, avg,
-           count);
+        printf("min: %lld, max: %lld, avg: %.2f (%lld samples)",
+                min, max, avg, count);
@@ -5694,3 +5605,3 @@ static void latencyMode(void) {
-  long long history_interval = config.interval
-                                   ? config.interval / 1000
-                                   : LATENCY_HISTORY_DEFAULT_INTERVAL;
+    long long history_interval =
+        config.interval ? config.interval/1000 :
+                          LATENCY_HISTORY_DEFAULT_INTERVAL;
@@ -5735,3 +5646,3 @@ static void latencyMode(void) {
-    if (config.latency_history && mstime() - history_start > history_interval) {
-      printf(" -- %.2f seconds range\n",
-             (float)(mstime() - history_start) / 1000);
+        if (config.latency_history && mstime()-history_start > history_interval)
+        {
+            printf(" -- %.2f seconds range\n", (float)(mstime()-history_start)/1000);
@@ -5783 +5694,2 @@ static void latencyDistMode(void) {
-      config.interval ? config.interval / 1000 : LATENCY_DIST_DEFAULT_INTERVAL;
+        config.interval ? config.interval/1000 :
+                          LATENCY_DIST_DEFAULT_INTERVAL;
@@ -5837 +5749,2 @@ static void latencyDistMode(void) {
-      if ((outputs++ % 20) == 0) showLatencyDistLegend();
+            if ((outputs++ % 20) == 0)
+                showLatencyDistLegend();
@@ -5857 +5770,3 @@ void sendReplconf(const char *arg1, const char *arg2) {
-void sendCapa() { sendReplconf("capa", "eof"); }
+void sendCapa() {
+    sendReplconf("capa", "eof");
+}
@@ -5880,2 +5795 @@ unsigned long long sendSync(int fd, char *out_eof) {
-  if (strncmp(buf + 1, "EOF:", 4) == 0 &&
-      strlen(buf + 5) >= RDB_EOF_MARK_SIZE) {
+    if (strncmp(buf+1,"EOF:",4) == 0 && strlen(buf+5) >= RDB_EOF_MARK_SIZE) {
@@ -5899,2 +5813 @@ static void slaveMode(void) {
-    fprintf(stderr,
-            "SYNC with master, discarding "
+        fprintf(stderr,"SYNC with master, discarding "
@@ -5903,4 +5816,2 @@ static void slaveMode(void) {
-    fprintf(stderr,
-            "SYNC with master, discarding %llu "
-            "bytes of bulk transfer...\n",
-            payload);
+        fprintf(stderr,"SYNC with master, discarding %llu "
+                       "bytes of bulk transfer...\n", payload);
@@ -5924 +5835,2 @@ static void slaveMode(void) {
-      if (memcmp(lastbytes, eofmark, RDB_EOF_MARK_SIZE) == 0) break;
+            if (memcmp(lastbytes,eofmark,RDB_EOF_MARK_SIZE) == 0)
+                break;
@@ -5929,3 +5841 @@ static void slaveMode(void) {
-    fprintf(stderr,
-            "SYNC done after %llu bytes. Logging commands from master.\n",
-            offset);
+        fprintf(stderr,"SYNC done after %llu bytes. Logging commands from master.\n", offset);
@@ -5937,2 +5847 @@ static void slaveMode(void) {
-  while (cliReadReply(0) == REDIS_OK)
-    ;
+    while (cliReadReply(0) == REDIS_OK);
@@ -5961,4 +5870,2 @@ static void getRDB(clusterManagerNode *node) {
-    fprintf(stderr,
-            "SYNC sent to master, writing bytes of bulk transfer "
-            "until EOF marker to '%s'\n",
-            filename);
+        fprintf(stderr,"SYNC sent to master, writing bytes of bulk transfer "
+                "until EOF marker to '%s'\n", filename);
@@ -5974 +5881,2 @@ static void getRDB(clusterManagerNode *node) {
-      fprintf(stderr, "Error opening '%s': %s\n", filename, strerror(errno));
+            fprintf(stderr, "Error opening '%s': %s\n", filename,
+                strerror(errno));
@@ -6000 +5908,2 @@ static void getRDB(clusterManagerNode *node) {
-      if (memcmp(lastbytes, eofmark, RDB_EOF_MARK_SIZE) == 0) break;
+            if (memcmp(lastbytes,eofmark,RDB_EOF_MARK_SIZE) == 0)
+                break;
@@ -6007,2 +5916 @@ static void getRDB(clusterManagerNode *node) {
-    fprintf(stderr, "Transfer finished with success after %llu bytes\n",
-            payload);
+        fprintf(stderr,"Transfer finished with success after %llu bytes\n", payload);
@@ -6036 +5944,2 @@ static void pipeMode(void) {
-    fprintf(stderr, "Can't set the socket in non blocking mode: %s\n", aneterr);
+        fprintf(stderr, "Can't set the socket in non blocking mode: %s\n",
+            aneterr);
@@ -6108 +6017,2 @@ static void pipeMode(void) {
-            for (j = 0; j < 20; j++) magic[j] = rand() & 0xff;
+                        for (j = 0; j < 20; j++)
+                            magic[j] = rand() & 0xff;
@@ -6115 +6025,2 @@ static void pipeMode(void) {
-            fprintf(stderr, "Error reading from stdin: %s\n", strerror(errno));
+                        fprintf(stderr, "Error reading from stdin: %s\n",
+                            strerror(errno));
@@ -6123,2 +6034 @@ static void pipeMode(void) {
-            loop_nwritten > PIPEMODE_WRITE_LOOP_MAX_BYTES)
-          break;
+                    loop_nwritten > PIPEMODE_WRITE_LOOP_MAX_BYTES) break;
@@ -6128 +6038,2 @@ static void pipeMode(void) {
-        time(NULL) - last_read_time > config.pipe_timeout) {
+            time(NULL)-last_read_time > config.pipe_timeout)
+        {
@@ -6190,2 +6101 @@ typeinfo type_other = {"other", NULL, "?"};
-static typeinfo *typeinfo_add(dict *types, char *name,
-                              typeinfo *type_template) {
+static typeinfo* typeinfo_add(dict *types, char* name, typeinfo* type_template) {
@@ -6201 +6111,2 @@ void type_free(void *priv_data, void *val) {
-  if (info->biggest_key) sdsfree(info->biggest_key);
+    if (info->biggest_key)
+        sdsfree(info->biggest_key);
@@ -6228 +6139,2 @@ static void getKeyTypes(dict *types_dict, redisReply *keys, typeinfo **types) {
-        fprintf(stderr, "Invalid reply type (%d) for TYPE on key '%s'!\n",
+                fprintf(stderr,
+                    "Invalid reply type (%d) for TYPE on key '%s'!\n",
@@ -6239,4 +6151 @@ static void getKeyTypes(dict *types_dict, redisReply *keys, typeinfo **types) {
-    else if (
-        strcmp(
-            reply->str,
-            "none"))
+        else if (strcmp(reply->str, "none"))
@@ -6250 +6159,2 @@ static void getKeySizes(redisReply *keys, typeinfo **types,
-                        unsigned memkeys_samples) {
+                        unsigned memkeys_samples)
+{
@@ -6254 +6164,2 @@ static void getKeySizes(redisReply *keys, typeinfo **types,
-    if (!types[i] || (!types[i]->sizecmd && !memkeys)) continue;
+        if(!types[i] || (!types[i]->sizecmd && !memkeys))
+            continue;
@@ -6256,2 +6167,2 @@ static void getKeySizes(redisReply *keys, typeinfo **types,
-      redisAppendCommand(context, "%s %s", types[i]->sizecmd,
-                         keys->element[i]->str);
+            redisAppendCommand(context, "%s %s",
+                types[i]->sizecmd, keys->element[i]->str);
@@ -6259,2 +6170,2 @@ static void getKeySizes(redisReply *keys, typeinfo **types,
-      redisAppendCommand(context, "%s %s %s", "MEMORY", "USAGE",
-                         keys->element[i]->str);
+            redisAppendCommand(context, "%s %s %s",
+                "MEMORY", "USAGE", keys->element[i]->str);
@@ -6262,2 +6173,2 @@ static void getKeySizes(redisReply *keys, typeinfo **types,
-      redisAppendCommand(context, "%s %s %s SAMPLES %u", "MEMORY", "USAGE",
-                         keys->element[i]->str, memkeys_samples);
+            redisAppendCommand(context, "%s %s %s SAMPLES %u",
+                "MEMORY", "USAGE", keys->element[i]->str, memkeys_samples);
@@ -6275 +6186,2 @@ static void getKeySizes(redisReply *keys, typeinfo **types,
-      fprintf(stderr, "Warning:  %s on '%s' failed (may have changed type)\n",
+            fprintf(stderr,
+                "Warning:  %s on '%s' failed (may have changed type)\n",
@@ -6302,2 +6214 @@ static void findBigKeys(int memkeys, unsigned memkeys_samples) {
-  printf(
-      "# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n");
+    printf("# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n");
@@ -6322 +6233,2 @@ static void findBigKeys(int memkeys, unsigned memkeys_samples) {
-      if (!type) continue;
+            if(!type)
+                continue;
@@ -6328,2 +6240,3 @@ static void findBigKeys(int memkeys, unsigned memkeys_samples) {
-        printf("[%05.2f%%] Biggest %-6s found so far '%s' with %llu %s\n", pct,
-               type->name, keys->element[i]->str, sizes[i],
+                printf(
+                   "[%05.2f%%] Biggest %-6s found so far '%s' with %llu %s\n",
+                   pct, type->name, keys->element[i]->str, sizes[i],
@@ -6331 +6244,2 @@ static void findBigKeys(int memkeys, unsigned memkeys_samples) {
-        if (type->biggest_key) sdsfree(type->biggest_key);
+                if (type->biggest_key)
+                    sdsfree(type->biggest_key);
@@ -6352,2 +6266,2 @@ static void findBigKeys(int memkeys, unsigned memkeys_samples) {
-  printf("Total key length in bytes is %llu (avg len %.2f)\n\n", totlen,
-         totlen ? (double)totlen / sampled : 0);
+    printf("Total key length in bytes is %llu (avg len %.2f)\n\n",
+       totlen, totlen ? (double)totlen/sampled : 0);
@@ -6358,3 +6272,2 @@ static void findBigKeys(int memkeys, unsigned memkeys_samples) {
-      printf("Biggest %6s found '%s' has %llu %s\n", type->name,
-             type->biggest_key, type->biggest,
-             !memkeys ? type->sizeunit : "bytes");
+            printf("Biggest %6s found '%s' has %llu %s\n", type->name, type->biggest_key,
+               type->biggest, !memkeys? type->sizeunit: "bytes");
@@ -6369,2 +6282 @@ static void findBigKeys(int memkeys, unsigned memkeys_samples) {
-           type->count, type->name, type->totalsize,
-           !memkeys ? type->sizeunit : "bytes",
+           type->count, type->name, type->totalsize, !memkeys? type->sizeunit: "bytes",
@@ -6394,3 +6306 @@ static void getKeyFreqs(redisReply *keys, unsigned long long *freqs) {
-        fprintf(stderr,
-                "Warning: OBJECT freq on '%s' failed (may have been deleted)\n",
-                keys->element[i]->str);
+                fprintf(stderr, "Warning: OBJECT freq on '%s' failed (may have been deleted)\n", keys->element[i]->str);
@@ -6415,2 +6325 @@ static void findHotKeys(void) {
-  printf(
-      "# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n");
+    printf("# average sizes per key type.  You can use -i 0.1 to sleep 0.1 sec\n");
@@ -6449,2 +6358,3 @@ static void findHotKeys(void) {
-      printf("[%05.2f%%] Hot key '%s' found so far with counter %llu\n", pct,
-             keys->element[i]->str, freqs[i]);
+            printf(
+               "[%05.2f%%] Hot key '%s' found so far with counter %llu\n",
+               pct, keys->element[i]->str, freqs[i]);
@@ -6463,2 +6373 @@ static void findHotKeys(void) {
-      printf("hot key found with counter: %llu\tkeyname: %s\n", counters[k],
-             hotkeys[k]);
+            printf("hot key found with counter: %llu\tkeyname: %s\n", counters[k], hotkeys[k]);
@@ -6492 +6401 @@ static long getLongInfoField(char *info, char *field) {
-void bytesToHuman(char *s, unsigned long long n) {
+void bytesToHuman(char *s, long long n) {
@@ -6493,0 +6403,5 @@ void bytesToHuman(char *s, unsigned long long n) {
+    if (n < 0) {
+        *s = '-';
+        s++;
+        n = -n;
+    }
@@ -6495 +6409,2 @@ void bytesToHuman(char *s, unsigned long long n) {
-    sprintf(s, "%lluB", n);
+        sprintf(s,"%lldB",n);
+        return;
@@ -6505,8 +6419,0 @@ void bytesToHuman(char *s, unsigned long long n) {
-  } else if (n < (1024LL * 1024 * 1024 * 1024 * 1024)) {
-    d = (double)n / (1024LL * 1024 * 1024 * 1024);
-    sprintf(s, "%.2fT", d);
-  } else if (n < (1024LL * 1024 * 1024 * 1024 * 1024 * 1024)) {
-    d = (double)n / (1024LL * 1024 * 1024 * 1024 * 1024);
-    sprintf(s, "%.2fP", d);
-  } else {
-    sprintf(s, "%lluB", n);
@@ -6529,4 +6436,2 @@ static void statMode(void) {
-          "------- data ------ --------------------- load -------------------- "
-          "- child -\n"
-          "keys       mem      clients blocked requests            connections "
-          "         \n");
+"------- data ------ --------------------- load -------------------- - child -\n"
+"keys       mem      clients blocked requests            connections          \n");
@@ -6564,2 +6469 @@ static void statMode(void) {
-      case 0:
-        break;
+        case 0: break;
@@ -6589 +6493,2 @@ static void scanMode(void) {
-      reply = redisCommand(context, "SCAN %llu MATCH %s", cur, config.pattern);
+            reply = redisCommand(context,"SCAN %llu MATCH %s",
+                cur,config.pattern);
@@ -6666,3 +6571,5 @@ static void LRUTestMode(void) {
-    printf("%lld Gets/sec | Hits: %lld (%.2f%%) | Misses: %lld (%.2f%%)\n",
-           hits + misses, hits, (double)hits / (hits + misses) * 100, misses,
-           (double)misses / (hits + misses) * 100);
+        printf(
+            "%lld Gets/sec | Hits: %lld (%.2f%%) | Misses: %lld (%.2f%%)\n",
+            hits+misses,
+            hits, (double)hits/(hits+misses)*100,
+            misses, (double)misses/(hits+misses)*100);
@@ -6713,2 +6620 @@ static void intrinsicLatencyMode(void) {
-      printf(
-          "\n%lld total runs "
+            printf("\n%lld total runs "
@@ -6725,69 +6631,71 @@ int main(int argc, char **argv) {
-  struct timeval tv;
-  int j;
-#ifdef REDIS_TEST
-  if (argc == 3 && !strcasecmp(argv[1], "test")) {
-    if (!strcasecmp(argv[2], "ziplist")) {
-      return ziplistTest(argc, argv);
-    } else if (!strcasecmp(argv[2], "quicklist")) {
-      quicklistTest(argc, argv);
-    } else if (!strcasecmp(argv[2], "intset")) {
-      return intsetTest(argc, argv);
-    } else if (!strcasecmp(argv[2], "zipmap")) {
-      return zipmapTest(argc, argv);
-    } else if (!strcasecmp(argv[2], "sha1test")) {
-      return sha1Test(argc, argv);
-    } else if (!strcasecmp(argv[2], "util")) {
-      return utilTest(argc, argv);
-    } else if (!strcasecmp(argv[2], "endianconv")) {
-      return endianconvTest(argc, argv);
-    } else if (!strcasecmp(argv[2], "crc64")) {
-      return crc64Test(argc, argv);
-    } else if (!strcasecmp(argv[2], "zmalloc")) {
-      return zmalloc_test(argc, argv);
-    }
-    return -1;
-  }
-#endif
-#ifdef INIT_SETPROCTITLE_REPLACEMENT
-  spt_init(argc, argv);
-#endif
-  setlocale(LC_COLLATE, "");
-  tzset();
-  zmalloc_set_oom_handler(redisOutOfMemoryHandler);
-  srand(time(NULL) ^ getpid());
-  gettimeofday(&tv, NULL);
-  uint8_t hashseed[16];
-  getRandomBytes(hashseed, sizeof(hashseed));
-  dictSetHashFunctionSeed(hashseed);
-  server.sentinel_mode = checkForSentinelMode(argc, argv);
-  initServerConfig();
-  ACLInit();
-  moduleInitModulesSystem();
-  tlsInit();
-  server.executable = getAbsolutePath(argv[0]);
-  server.exec_argv = zmalloc(sizeof(char *) * (argc + 1));
-  server.exec_argv[argc] = NULL;
-  for (j = 0; j < argc; j++) server.exec_argv[j] = zstrdup(argv[j]);
-  if (server.sentinel_mode) {
-    initSentinelConfig();
-    initSentinel();
-  }
-  if (strstr(argv[0], "redis-check-rdb") != NULL)
-    redis_check_rdb_main(argc, argv, NULL);
-  else if (strstr(argv[0], "redis-check-aof") != NULL)
-    redis_check_aof_main(argc, argv);
-  if (argc >= 2) {
-    j = 1;
-    sds options = sdsempty();
-    char *configfile = NULL;
-    if (strcmp(argv[1], "-v") == 0 || strcmp(argv[1], "--version") == 0)
-      version();
-    if (strcmp(argv[1], "--help") == 0 || strcmp(argv[1], "-h") == 0) usage();
-    if (strcmp(argv[1], "--test-memory") == 0) {
-      if (argc == 3) {
-        memtest(atoi(argv[2]), 50);
-        exit(0);
-      } else {
-        fprintf(stderr,
-                "Please specify the amount of memory to test in megabytes.\n");
-        fprintf(stderr, "Example: ./redis-server --test-memory 4096\n\n");
+    int firstarg;
+    config.hostip = sdsnew("127.0.0.1");
+    config.hostport = 6379;
+    config.hostsocket = NULL;
+    config.repeat = 1;
+    config.interval = 0;
+    config.dbnum = 0;
+    config.interactive = 0;
+    config.shutdown = 0;
+    config.monitor_mode = 0;
+    config.pubsub_mode = 0;
+    config.latency_mode = 0;
+    config.latency_dist_mode = 0;
+    config.latency_history = 0;
+    config.lru_test_mode = 0;
+    config.lru_test_sample_size = 0;
+    config.cluster_mode = 0;
+    config.slave_mode = 0;
+    config.getrdb_mode = 0;
+    config.stat_mode = 0;
+    config.scan_mode = 0;
+    config.intrinsic_latency_mode = 0;
+    config.pattern = NULL;
+    config.rdb_filename = NULL;
+    config.pipe_mode = 0;
+    config.pipe_timeout = REDIS_CLI_DEFAULT_PIPE_TIMEOUT;
+    config.bigkeys = 0;
+    config.hotkeys = 0;
+    config.stdinarg = 0;
+    config.auth = NULL;
+    config.user = NULL;
+    config.eval = NULL;
+    config.eval_ldb = 0;
+    config.eval_ldb_end = 0;
+    config.eval_ldb_sync = 0;
+    config.enable_ldb_on_eval = 0;
+    config.last_cmd_type = -1;
+    config.verbose = 0;
+    config.no_auth_warning = 0;
+    config.cluster_manager_command.name = NULL;
+    config.cluster_manager_command.argc = 0;
+    config.cluster_manager_command.argv = NULL;
+    config.cluster_manager_command.flags = 0;
+    config.cluster_manager_command.replicas = 0;
+    config.cluster_manager_command.from = NULL;
+    config.cluster_manager_command.to = NULL;
+    config.cluster_manager_command.weight = NULL;
+    config.cluster_manager_command.weight_argc = 0;
+    config.cluster_manager_command.slots = 0;
+    config.cluster_manager_command.timeout = CLUSTER_MANAGER_MIGRATE_TIMEOUT;
+    config.cluster_manager_command.pipeline = CLUSTER_MANAGER_MIGRATE_PIPELINE;
+    config.cluster_manager_command.threshold =
+        CLUSTER_MANAGER_REBALANCE_THRESHOLD;
+    config.cluster_manager_command.backup_dir = NULL;
+    pref.hints = 1;
+    spectrum_palette = spectrum_palette_color;
+    spectrum_palette_size = spectrum_palette_color_size;
+    if (!isatty(fileno(stdout)) && (getenv("FAKETTY") == NULL))
+        config.output = OUTPUT_RAW;
+    else
+        config.output = OUTPUT_STANDARD;
+    config.mb_delim = sdsnew("\n");
+    firstarg = parseOptions(argc,argv);
+    argc -= firstarg;
+    argv += firstarg;
+    parseEnv();
+    if (CLUSTER_MANAGER_MODE()) {
+        clusterManagerCommandProc *proc = validateClusterManagerCommand();
+        if (!proc) {
+            sdsfree(config.hostip);
+            sdsfree(config.mb_delim);
@@ -6795,0 +6704 @@ int main(int argc, char **argv) {
+        clusterManagerMode(proc);
@@ -6797,6 +6706,3 @@ int main(int argc, char **argv) {
-    if (argv[j][0] != '-' || argv[j][1] != '-') {
-      configfile = argv[j];
-      server.configfile = getAbsolutePath(configfile);
-      zfree(server.exec_argv[j]);
-      server.exec_argv[j] = zstrdup(server.configfile);
-      j++;
+    if (config.latency_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        latencyMode();
@@ -6804,5 +6710,3 @@ int main(int argc, char **argv) {
-    while (j != argc) {
-      if (argv[j][0] == '-' && argv[j][1] == '-') {
-        if (!strcmp(argv[j], "--check-rdb")) {
-          j++;
-          continue;
+    if (config.latency_dist_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        latencyDistMode();
@@ -6810,6 +6714,4 @@ int main(int argc, char **argv) {
-        if (sdslen(options)) options = sdscat(options, "\n");
-        options = sdscat(options, argv[j] + 2);
-        options = sdscat(options, " ");
-      } else {
-        options = sdscatrepr(options, argv[j], strlen(argv[j]));
-        options = sdscat(options, " ");
+    if (config.slave_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        sendCapa();
+        slaveMode();
@@ -6817 +6719,4 @@ int main(int argc, char **argv) {
-      j++;
+    if (config.getrdb_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        sendCapa();
+        getRDB(NULL);
@@ -6819,6 +6724,3 @@ int main(int argc, char **argv) {
-    if (server.sentinel_mode && configfile && *configfile == '-') {
-      serverLog(LL_WARNING, "Sentinel config from STDIN not allowed.");
-      serverLog(
-          LL_WARNING,
-          "Sentinel needs config file on disk to save state.  Exiting...");
-      exit(1);
+    if (config.pipe_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        pipeMode();
@@ -6826,3 +6728,3 @@ int main(int argc, char **argv) {
-    resetServerSaveParams();
-    loadServerConfig(configfile, options);
-    sdsfree(options);
+    if (config.bigkeys) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        findBigKeys(0, 0);
@@ -6830,37 +6732,7 @@ int main(int argc, char **argv) {
-  serverLog(LL_WARNING, "oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo");
-  serverLog(
-      LL_WARNING,
-      "Redis version=%s, bits=%d, commit=%s, modified=%d, pid=%d, just started",
-      REDIS_VERSION, (sizeof(long) == 8) ? 64 : 32, redisGitSHA1(),
-      strtol(redisGitDirty(), NULL, 10) > 0, (int)getpid());
-  if (argc == 1) {
-    serverLog(LL_WARNING,
-              "Warning: no config file specified, using the default config. In "
-              "order to specify a config file use %s /path/to/%s.conf",
-              argv[0], server.sentinel_mode ? "sentinel" : "redis");
-  } else {
-    serverLog(LL_WARNING, "Configuration loaded");
-  }
-  server.supervised = redisIsSupervised(server.supervised_mode);
-  int background = server.daemonize && !server.supervised;
-  if (background) daemonize();
-  initServer();
-  if (background || server.pidfile) createPidFile();
-  redisSetProcTitle(argv[0]);
-  redisAsciiArt();
-  checkTcpBacklogSettings();
-  if (!server.sentinel_mode) {
-    serverLog(LL_WARNING, "Server initialized");
-#ifdef __linux__
-    linuxMemoryWarnings();
-#endif
-    moduleLoadFromQueue();
-    ACLLoadUsersAtStartup();
-    InitServerLast();
-    loadDataFromDisk();
-    if (server.cluster_enabled) {
-      if (verifyClusterConfigWithData() == C_ERR) {
-        serverLog(LL_WARNING,
-                  "You can't have keys in a DB different than DB 0 when in "
-                  "Cluster mode. Exiting.");
-        exit(1);
+    if (config.memkeys) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        findBigKeys(1, config.memkeys_samples);
+    }
+    if (config.hotkeys) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        findHotKeys();
@@ -6867,0 +6740,4 @@ int main(int argc, char **argv) {
+    if (config.stat_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        if (config.interval == 0) config.interval = 1000000;
+        statMode();
@@ -6869,6 +6745,17 @@ int main(int argc, char **argv) {
-    if (server.ipfd_count > 0 || server.tlsfd_count > 0)
-      serverLog(LL_NOTICE, "Ready to accept connections");
-    if (server.sofd > 0)
-      serverLog(LL_NOTICE,
-                "The server is now ready to accept connections at %s",
-                server.unixsocket);
+    if (config.scan_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        scanMode();
+    }
+    if (config.lru_test_mode) {
+        if (cliConnect(0) == REDIS_ERR) exit(1);
+        LRUTestMode();
+    }
+    if (config.intrinsic_latency_mode) intrinsicLatencyMode();
+    if (argc == 0 && !config.eval) {
+        signal(SIGPIPE, SIG_IGN);
+        cliConnect(0);
+        repl();
+    }
+    if (cliConnect(0) != REDIS_OK) exit(1);
+    if (config.eval) {
+        return evalMode(argc,argv);
@@ -6876,15 +6763,2 @@ int main(int argc, char **argv) {
-    InitServerLast();
-    sentinelIsRunning();
-  }
-  if (server.maxmemory > 0 && server.maxmemory < 1024 * 1024) {
-    serverLog(LL_WARNING,
-              "WARNING: You specified a maxmemory value that is less than 1MB "
-              "(current value is %llu bytes). Are you sure this is what you "
-              "really want?",
-              server.maxmemory);
-  }
-  aeSetBeforeSleepProc(server.el, beforeSleep);
-  aeSetAfterSleepProc(server.el, afterSleep);
-  aeMain(server.el);
-  aeDeleteEventLoop(server.el);
-  return 0;
+        return noninteractive(argc,convertToSds(argc,argv));
+    }
