diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@server.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@server.no_comments_merged.c
index a3b1913..4c3e96b 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@server.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/redis/c469f6ad-b8e02f2b-f4d37173/src@server.no_comments_merged.c
@@ -23,0 +24 @@
+#include <sys/resource.h>
@@ -32,51 +33,84 @@ struct redisCommand redisCommandTable[] = {
-    {"module", moduleCommand, -2, "admin no-script", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"get", getCommand, 2, "read-only fast @string", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"set", setCommand, -3, "write use-memory @string", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"setnx", setnxCommand, 3, "write use-memory fast @string", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"setex", setexCommand, 4, "write use-memory @string", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"psetex", psetexCommand, 4, "write use-memory @string", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"append", appendCommand, 3, "write use-memory fast @string", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"strlen", strlenCommand, 2, "read-only fast @string", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"del", delCommand, -2, "write @keyspace", 0, NULL, 1, -1, 1, 0, 0, 0},
-    {"unlink", unlinkCommand, -2, "write fast @keyspace", 0, NULL, 1, -1, 1, 0,
-     0, 0},
-    {"exists", existsCommand, -2, "read-only fast @keyspace", 0, NULL, 1, -1, 1,
-     0, 0, 0},
-    {"setbit", setbitCommand, 4, "write use-memory @bitmap", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"getbit", getbitCommand, 3, "read-only fast @bitmap", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"bitfield", bitfieldCommand, -2, "write use-memory @bitmap", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"setrange", setrangeCommand, 4, "write use-memory @string", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"getrange", getrangeCommand, 4, "read-only @string", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"substr", getrangeCommand, 4, "read-only @string", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"incr", incrCommand, 2, "write use-memory fast @string", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"decr", decrCommand, 2, "write use-memory fast @string", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"mget", mgetCommand, -2, "read-only fast @string", 0, NULL, 1, -1, 1, 0, 0,
-     0},
-    {"rpush", rpushCommand, -3, "write use-memory fast @list", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"lpush", lpushCommand, -3, "write use-memory fast @list", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"rpushx", rpushxCommand, -3, "write use-memory fast @list", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"lpushx", lpushxCommand, -3, "write use-memory fast @list", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"linsert", linsertCommand, 5, "write use-memory @list", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"rpop", rpopCommand, 2, "write fast @list", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"lpop", lpopCommand, 2, "write fast @list", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"brpop", brpopCommand, -3, "write no-script @list @blocking", 0, NULL, 1,
-     -2, 1, 0, 0, 0},
+    {"module",moduleCommand,-2,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"get",getCommand,2,
+     "read-only fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"set",setCommand,-3,
+     "write use-memory @string",
+     0,NULL,1,1,1,0,0,0},
+    {"setnx",setnxCommand,3,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"setex",setexCommand,4,
+     "write use-memory @string",
+     0,NULL,1,1,1,0,0,0},
+    {"psetex",psetexCommand,4,
+     "write use-memory @string",
+     0,NULL,1,1,1,0,0,0},
+    {"append",appendCommand,3,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"strlen",strlenCommand,2,
+     "read-only fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"del",delCommand,-2,
+     "write @keyspace",
+     0,NULL,1,-1,1,0,0,0},
+    {"unlink",unlinkCommand,-2,
+     "write fast @keyspace",
+     0,NULL,1,-1,1,0,0,0},
+    {"exists",existsCommand,-2,
+     "read-only fast @keyspace",
+     0,NULL,1,-1,1,0,0,0},
+    {"setbit",setbitCommand,4,
+     "write use-memory @bitmap",
+     0,NULL,1,1,1,0,0,0},
+    {"getbit",getbitCommand,3,
+     "read-only fast @bitmap",
+     0,NULL,1,1,1,0,0,0},
+    {"bitfield",bitfieldCommand,-2,
+     "write use-memory @bitmap",
+     0,NULL,1,1,1,0,0,0},
+    {"setrange",setrangeCommand,4,
+     "write use-memory @string",
+     0,NULL,1,1,1,0,0,0},
+    {"getrange",getrangeCommand,4,
+     "read-only @string",
+     0,NULL,1,1,1,0,0,0},
+    {"substr",getrangeCommand,4,
+     "read-only @string",
+     0,NULL,1,1,1,0,0,0},
+    {"incr",incrCommand,2,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"decr",decrCommand,2,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"mget",mgetCommand,-2,
+     "read-only fast @string",
+     0,NULL,1,-1,1,0,0,0},
+    {"rpush",rpushCommand,-3,
+     "write use-memory fast @list",
+     0,NULL,1,1,1,0,0,0},
+    {"lpush",lpushCommand,-3,
+     "write use-memory fast @list",
+     0,NULL,1,1,1,0,0,0},
+    {"rpushx",rpushxCommand,-3,
+     "write use-memory fast @list",
+     0,NULL,1,1,1,0,0,0},
+    {"lpushx",lpushxCommand,-3,
+     "write use-memory fast @list",
+     0,NULL,1,1,1,0,0,0},
+    {"linsert",linsertCommand,5,
+     "write use-memory @list",
+     0,NULL,1,1,1,0,0,0},
+    {"rpop",rpopCommand,2,
+     "write fast @list",
+     0,NULL,1,1,1,0,0,0},
+    {"lpop",lpopCommand,2,
+     "write fast @list",
+     0,NULL,1,1,1,0,0,0},
+    {"brpop",brpopCommand,-3,
+     "write no-script @list @blocking",
+     0,NULL,1,-2,1,0,0,0},
@@ -84,86 +118,140 @@ struct redisCommand redisCommandTable[] = {
-     "write use-memory no-script @list @blocking", 0, NULL, 1, 2, 1, 0, 0, 0},
-    {"blpop", blpopCommand, -3, "write no-script @list @blocking", 0, NULL, 1,
-     -2, 1, 0, 0, 0},
-    {"llen", llenCommand, 2, "read-only fast @list", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"lindex", lindexCommand, 3, "read-only @list", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"lset", lsetCommand, 4, "write use-memory @list", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"lrange", lrangeCommand, 4, "read-only @list", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"ltrim", ltrimCommand, 4, "write @list", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"lrem", lremCommand, 4, "write @list", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"rpoplpush", rpoplpushCommand, 3, "write use-memory @list", 0, NULL, 1, 2,
-     1, 0, 0, 0},
-    {"sadd", saddCommand, -3, "write use-memory fast @set", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"srem", sremCommand, -3, "write fast @set", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"smove", smoveCommand, 4, "write fast @set", 0, NULL, 1, 2, 1, 0, 0, 0},
-    {"sismember", sismemberCommand, 3, "read-only fast @set", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"scard", scardCommand, 2, "read-only fast @set", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"spop", spopCommand, -2, "write random fast @set", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"srandmember", srandmemberCommand, -2, "read-only random @set", 0, NULL, 1,
-     1, 1, 0, 0, 0},
-    {"sinter", sinterCommand, -2, "read-only to-sort @set", 0, NULL, 1, -1, 1,
-     0, 0, 0},
-    {"sinterstore", sinterstoreCommand, -3, "write use-memory @set", 0, NULL, 1,
-     -1, 1, 0, 0, 0},
-    {"sunion", sunionCommand, -2, "read-only to-sort @set", 0, NULL, 1, -1, 1,
-     0, 0, 0},
-    {"sunionstore", sunionstoreCommand, -3, "write use-memory @set", 0, NULL, 1,
-     -1, 1, 0, 0, 0},
-    {"sdiff", sdiffCommand, -2, "read-only to-sort @set", 0, NULL, 1, -1, 1, 0,
-     0, 0},
-    {"sdiffstore", sdiffstoreCommand, -3, "write use-memory @set", 0, NULL, 1,
-     -1, 1, 0, 0, 0},
-    {"smembers", sinterCommand, 2, "read-only to-sort @set", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"sscan", sscanCommand, -3, "read-only random @set", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"zadd", zaddCommand, -4, "write use-memory fast @sortedset", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"zincrby", zincrbyCommand, 4, "write use-memory fast @sortedset", 0, NULL,
-     1, 1, 1, 0, 0, 0},
-    {"zrem", zremCommand, -3, "write fast @sortedset", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"zremrangebyscore", zremrangebyscoreCommand, 4, "write @sortedset", 0,
-     NULL, 1, 1, 1, 0, 0, 0},
-    {"zremrangebyrank", zremrangebyrankCommand, 4, "write @sortedset", 0, NULL,
-     1, 1, 1, 0, 0, 0},
-    {"zremrangebylex", zremrangebylexCommand, 4, "write @sortedset", 0, NULL, 1,
-     1, 1, 0, 0, 0},
-    {"zunionstore", zunionstoreCommand, -4, "write use-memory @sortedset", 0,
-     zunionInterGetKeys, 0, 0, 0, 0, 0, 0},
-    {"zinterstore", zinterstoreCommand, -4, "write use-memory @sortedset", 0,
-     zunionInterGetKeys, 0, 0, 0, 0, 0, 0},
-    {"zrange", zrangeCommand, -4, "read-only @sortedset", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"zrangebyscore", zrangebyscoreCommand, -4, "read-only @sortedset", 0, NULL,
-     1, 1, 1, 0, 0, 0},
-    {"zrevrangebyscore", zrevrangebyscoreCommand, -4, "read-only @sortedset", 0,
-     NULL, 1, 1, 1, 0, 0, 0},
-    {"zrangebylex", zrangebylexCommand, -4, "read-only @sortedset", 0, NULL, 1,
-     1, 1, 0, 0, 0},
-    {"zrevrangebylex", zrevrangebylexCommand, -4, "read-only @sortedset", 0,
-     NULL, 1, 1, 1, 0, 0, 0},
-    {"zcount", zcountCommand, 4, "read-only fast @sortedset", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"zlexcount", zlexcountCommand, 4, "read-only fast @sortedset", 0, NULL, 1,
-     1, 1, 0, 0, 0},
-    {"zrevrange", zrevrangeCommand, -4, "read-only @sortedset", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"zcard", zcardCommand, 2, "read-only fast @sortedset", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"zscore", zscoreCommand, 3, "read-only fast @sortedset", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"zrank", zrankCommand, 3, "read-only fast @sortedset", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"zrevrank", zrevrankCommand, 3, "read-only fast @sortedset", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"zscan", zscanCommand, -3, "read-only random @sortedset", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"zpopmin", zpopminCommand, -2, "write fast @sortedset", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"zpopmax", zpopmaxCommand, -2, "write fast @sortedset", 0, NULL, 1, 1, 1,
-     0, 0, 0},
+     "write use-memory no-script @list @blocking",
+     0,NULL,1,2,1,0,0,0},
+    {"blpop",blpopCommand,-3,
+     "write no-script @list @blocking",
+     0,NULL,1,-2,1,0,0,0},
+    {"llen",llenCommand,2,
+     "read-only fast @list",
+     0,NULL,1,1,1,0,0,0},
+    {"lindex",lindexCommand,3,
+     "read-only @list",
+     0,NULL,1,1,1,0,0,0},
+    {"lset",lsetCommand,4,
+     "write use-memory @list",
+     0,NULL,1,1,1,0,0,0},
+    {"lrange",lrangeCommand,4,
+     "read-only @list",
+     0,NULL,1,1,1,0,0,0},
+    {"ltrim",ltrimCommand,4,
+     "write @list",
+     0,NULL,1,1,1,0,0,0},
+    {"lrem",lremCommand,4,
+     "write @list",
+     0,NULL,1,1,1,0,0,0},
+    {"rpoplpush",rpoplpushCommand,3,
+     "write use-memory @list",
+     0,NULL,1,2,1,0,0,0},
+    {"sadd",saddCommand,-3,
+     "write use-memory fast @set",
+     0,NULL,1,1,1,0,0,0},
+    {"srem",sremCommand,-3,
+     "write fast @set",
+     0,NULL,1,1,1,0,0,0},
+    {"smove",smoveCommand,4,
+     "write fast @set",
+     0,NULL,1,2,1,0,0,0},
+    {"sismember",sismemberCommand,3,
+     "read-only fast @set",
+     0,NULL,1,1,1,0,0,0},
+    {"scard",scardCommand,2,
+     "read-only fast @set",
+     0,NULL,1,1,1,0,0,0},
+    {"spop",spopCommand,-2,
+     "write random fast @set",
+     0,NULL,1,1,1,0,0,0},
+    {"srandmember",srandmemberCommand,-2,
+     "read-only random @set",
+     0,NULL,1,1,1,0,0,0},
+    {"sinter",sinterCommand,-2,
+     "read-only to-sort @set",
+     0,NULL,1,-1,1,0,0,0},
+    {"sinterstore",sinterstoreCommand,-3,
+     "write use-memory @set",
+     0,NULL,1,-1,1,0,0,0},
+    {"sunion",sunionCommand,-2,
+     "read-only to-sort @set",
+     0,NULL,1,-1,1,0,0,0},
+    {"sunionstore",sunionstoreCommand,-3,
+     "write use-memory @set",
+     0,NULL,1,-1,1,0,0,0},
+    {"sdiff",sdiffCommand,-2,
+     "read-only to-sort @set",
+     0,NULL,1,-1,1,0,0,0},
+    {"sdiffstore",sdiffstoreCommand,-3,
+     "write use-memory @set",
+     0,NULL,1,-1,1,0,0,0},
+    {"smembers",sinterCommand,2,
+     "read-only to-sort @set",
+     0,NULL,1,1,1,0,0,0},
+    {"sscan",sscanCommand,-3,
+     "read-only random @set",
+     0,NULL,1,1,1,0,0,0},
+    {"zadd",zaddCommand,-4,
+     "write use-memory fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zincrby",zincrbyCommand,4,
+     "write use-memory fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrem",zremCommand,-3,
+     "write fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zremrangebyscore",zremrangebyscoreCommand,4,
+     "write @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zremrangebyrank",zremrangebyrankCommand,4,
+     "write @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zremrangebylex",zremrangebylexCommand,4,
+     "write @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zunionstore",zunionstoreCommand,-4,
+     "write use-memory @sortedset",
+     0,zunionInterGetKeys,0,0,0,0,0,0},
+    {"zinterstore",zinterstoreCommand,-4,
+     "write use-memory @sortedset",
+     0,zunionInterGetKeys,0,0,0,0,0,0},
+    {"zrange",zrangeCommand,-4,
+     "read-only @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrangebyscore",zrangebyscoreCommand,-4,
+     "read-only @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrevrangebyscore",zrevrangebyscoreCommand,-4,
+     "read-only @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrangebylex",zrangebylexCommand,-4,
+     "read-only @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrevrangebylex",zrevrangebylexCommand,-4,
+     "read-only @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zcount",zcountCommand,4,
+     "read-only fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zlexcount",zlexcountCommand,4,
+     "read-only fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrevrange",zrevrangeCommand,-4,
+     "read-only @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zcard",zcardCommand,2,
+     "read-only fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zscore",zscoreCommand,3,
+     "read-only fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrank",zrankCommand,3,
+     "read-only fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zrevrank",zrevrankCommand,3,
+     "read-only fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zscan",zscanCommand,-3,
+     "read-only random @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zpopmin",zpopminCommand,-2,
+     "write fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
+    {"zpopmax",zpopmaxCommand,-2,
+     "write fast @sortedset",
+     0,NULL,1,1,1,0,0,0},
@@ -171 +259,2 @@ struct redisCommand redisCommandTable[] = {
-     "write no-script fast @sortedset @blocking", 0, NULL, 1, -2, 1, 0, 0, 0},
+     "write no-script fast @sortedset @blocking",
+     0,NULL,1,-2,1,0,0,0},
@@ -173,64 +262,104 @@ struct redisCommand redisCommandTable[] = {
-     "write no-script fast @sortedset @blocking", 0, NULL, 1, -2, 1, 0, 0, 0},
-    {"hset", hsetCommand, -4, "write use-memory fast @hash", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"hsetnx", hsetnxCommand, 4, "write use-memory fast @hash", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"hget", hgetCommand, 3, "read-only fast @hash", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"hmset", hsetCommand, -4, "write use-memory fast @hash", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"hmget", hmgetCommand, -3, "read-only fast @hash", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"hincrby", hincrbyCommand, 4, "write use-memory fast @hash", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"hincrbyfloat", hincrbyfloatCommand, 4, "write use-memory fast @hash", 0,
-     NULL, 1, 1, 1, 0, 0, 0},
-    {"hdel", hdelCommand, -3, "write fast @hash", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"hlen", hlenCommand, 2, "read-only fast @hash", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"hstrlen", hstrlenCommand, 3, "read-only fast @hash", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"hkeys", hkeysCommand, 2, "read-only to-sort @hash", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"hvals", hvalsCommand, 2, "read-only to-sort @hash", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"hgetall", hgetallCommand, 2, "read-only random @hash", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"hexists", hexistsCommand, 3, "read-only fast @hash", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"hscan", hscanCommand, -3, "read-only random @hash", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"incrby", incrbyCommand, 3, "write use-memory fast @string", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"decrby", decrbyCommand, 3, "write use-memory fast @string", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"incrbyfloat", incrbyfloatCommand, 3, "write use-memory fast @string", 0,
-     NULL, 1, 1, 1, 0, 0, 0},
-    {"getset", getsetCommand, 3, "write use-memory fast @string", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"mset", msetCommand, -3, "write use-memory @string", 0, NULL, 1, -1, 2, 0,
-     0, 0},
-    {"msetnx", msetnxCommand, -3, "write use-memory @string", 0, NULL, 1, -1, 2,
-     0, 0, 0},
-    {"randomkey", randomkeyCommand, 1, "read-only random @keyspace", 0, NULL, 0,
-     0, 0, 0, 0, 0},
-    {"select", selectCommand, 2, "ok-loading fast @keyspace", 0, NULL, 0, 0, 0,
-     0, 0, 0},
-    {"swapdb", swapdbCommand, 3, "write fast @keyspace @dangerous", 0, NULL, 0,
-     0, 0, 0, 0, 0},
-    {"move", moveCommand, 3, "write fast @keyspace", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"rename", renameCommand, 3, "write @keyspace", 0, NULL, 1, 2, 1, 0, 0, 0},
-    {"renamenx", renamenxCommand, 3, "write fast @keyspace", 0, NULL, 1, 2, 1,
-     0, 0, 0},
-    {"expire", expireCommand, 3, "write fast @keyspace", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"expireat", expireatCommand, 3, "write fast @keyspace", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"pexpire", pexpireCommand, 3, "write fast @keyspace", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"pexpireat", pexpireatCommand, 3, "write fast @keyspace", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"keys", keysCommand, 2, "read-only to-sort @keyspace @dangerous", 0, NULL,
-     0, 0, 0, 0, 0, 0},
-    {"scan", scanCommand, -2, "read-only random @keyspace", 0, NULL, 0, 0, 0, 0,
-     0, 0},
-    {"dbsize", dbsizeCommand, 1, "read-only fast @keyspace", 0, NULL, 0, 0, 0,
-     0, 0, 0},
+     "write no-script fast @sortedset @blocking",
+     0,NULL,1,-2,1,0,0,0},
+    {"hset",hsetCommand,-4,
+     "write use-memory fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hsetnx",hsetnxCommand,4,
+     "write use-memory fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hget",hgetCommand,3,
+     "read-only fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hmset",hsetCommand,-4,
+     "write use-memory fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hmget",hmgetCommand,-3,
+     "read-only fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hincrby",hincrbyCommand,4,
+     "write use-memory fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hincrbyfloat",hincrbyfloatCommand,4,
+     "write use-memory fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hdel",hdelCommand,-3,
+     "write fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hlen",hlenCommand,2,
+     "read-only fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hstrlen",hstrlenCommand,3,
+     "read-only fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hkeys",hkeysCommand,2,
+     "read-only to-sort @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hvals",hvalsCommand,2,
+     "read-only to-sort @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hgetall",hgetallCommand,2,
+     "read-only random @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hexists",hexistsCommand,3,
+     "read-only fast @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"hscan",hscanCommand,-3,
+     "read-only random @hash",
+     0,NULL,1,1,1,0,0,0},
+    {"incrby",incrbyCommand,3,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"decrby",decrbyCommand,3,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"incrbyfloat",incrbyfloatCommand,3,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"getset",getsetCommand,3,
+     "write use-memory fast @string",
+     0,NULL,1,1,1,0,0,0},
+    {"mset",msetCommand,-3,
+     "write use-memory @string",
+     0,NULL,1,-1,2,0,0,0},
+    {"msetnx",msetnxCommand,-3,
+     "write use-memory @string",
+     0,NULL,1,-1,2,0,0,0},
+    {"randomkey",randomkeyCommand,1,
+     "read-only random @keyspace",
+     0,NULL,0,0,0,0,0,0},
+    {"select",selectCommand,2,
+     "ok-loading fast @keyspace",
+     0,NULL,0,0,0,0,0,0},
+    {"swapdb",swapdbCommand,3,
+     "write fast @keyspace @dangerous",
+     0,NULL,0,0,0,0,0,0},
+    {"move",moveCommand,3,
+     "write fast @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"rename",renameCommand,3,
+     "write @keyspace",
+     0,NULL,1,2,1,0,0,0},
+    {"renamenx",renamenxCommand,3,
+     "write fast @keyspace",
+     0,NULL,1,2,1,0,0,0},
+    {"expire",expireCommand,3,
+     "write fast @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"expireat",expireatCommand,3,
+     "write fast @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"pexpire",pexpireCommand,3,
+     "write fast @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"pexpireat",pexpireatCommand,3,
+     "write fast @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"keys",keysCommand,2,
+     "read-only to-sort @keyspace @dangerous",
+     0,NULL,0,0,0,0,0,0},
+    {"scan",scanCommand,-2,
+     "read-only random @keyspace",
+     0,NULL,0,0,0,0,0,0},
+    {"dbsize",dbsizeCommand,1,
+     "read-only fast @keyspace",
+     0,NULL,0,0,0,0,0,0},
@@ -238,13 +367,49 @@ struct redisCommand redisCommandTable[] = {
-     "no-script ok-loading ok-stale fast no-monitor no-slowlog @connection", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"ping", pingCommand, -1, "ok-stale fast @connection", 0, NULL, 0, 0, 0, 0,
-     0, 0},
-    {"echo", echoCommand, 2, "read-only fast @connection", 0, NULL, 0, 0, 0, 0,
-     0, 0},
-    {"save", saveCommand, 1, "admin no-script", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"bgsave", bgsaveCommand, -1, "admin no-script", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"bgrewriteaof", bgrewriteaofCommand, 1, "admin no-script", 0, NULL, 0, 0,
-     0, 0, 0, 0},
-    {"shutdown", shutdownCommand, -1, "admin no-script ok-loading ok-stale", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"lastsave", lastsaveCommand, 1, "read-only random fast @admin @dangerous",
+     "no-script ok-loading ok-stale fast no-monitor no-slowlog @connection",
+     0,NULL,0,0,0,0,0,0},
+    {"ping",pingCommand,-1,
+     "ok-stale fast @connection",
+     0,NULL,0,0,0,0,0,0},
+    {"echo",echoCommand,2,
+     "read-only fast @connection",
+     0,NULL,0,0,0,0,0,0},
+    {"save",saveCommand,1,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"bgsave",bgsaveCommand,-1,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"bgrewriteaof",bgrewriteaofCommand,1,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"shutdown",shutdownCommand,-1,
+     "admin no-script ok-loading ok-stale",
+     0,NULL,0,0,0,0,0,0},
+    {"lastsave",lastsaveCommand,1,
+     "read-only random fast @admin @dangerous",
+     0,NULL,0,0,0,0,0,0},
+    {"type",typeCommand,2,
+     "read-only fast @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"multi",multiCommand,1,
+     "no-script fast @transaction",
+     0,NULL,0,0,0,0,0,0},
+    {"exec",execCommand,1,
+     "no-script no-monitor no-slowlog @transaction",
+     0,NULL,0,0,0,0,0,0},
+    {"discard",discardCommand,1,
+     "no-script fast @transaction",
+     0,NULL,0,0,0,0,0,0},
+    {"sync",syncCommand,1,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"psync",syncCommand,3,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"replconf",replconfCommand,-1,
+     "admin no-script ok-loading ok-stale",
+     0,NULL,0,0,0,0,0,0},
+    {"flushdb",flushdbCommand,-1,
+     "write @keyspace @dangerous",
+     0,NULL,0,0,0,0,0,0},
+    {"flushall",flushallCommand,-1,
+     "write @keyspace @dangerous",
@@ -252,16 +416,0 @@ struct redisCommand redisCommandTable[] = {
-    {"type", typeCommand, 2, "read-only fast @keyspace", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"multi", multiCommand, 1, "no-script fast @transaction", 0, NULL, 0, 0, 0,
-     0, 0, 0},
-    {"exec", execCommand, 1, "no-script no-monitor no-slowlog @transaction", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"discard", discardCommand, 1, "no-script fast @transaction", 0, NULL, 0, 0,
-     0, 0, 0, 0},
-    {"sync", syncCommand, 1, "admin no-script", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"psync", syncCommand, 3, "admin no-script", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"replconf", replconfCommand, -1, "admin no-script ok-loading ok-stale", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"flushdb", flushdbCommand, -1, "write @keyspace @dangerous", 0, NULL, 0, 0,
-     0, 0, 0, 0},
-    {"flushall", flushallCommand, -1, "write @keyspace @dangerous", 0, NULL, 0,
-     0, 0, 0, 0, 0},
@@ -269,18 +418,26 @@ struct redisCommand redisCommandTable[] = {
-     "write use-memory @list @set @sortedset @dangerous", 0, sortGetKeys, 1, 1,
-     1, 0, 0, 0},
-    {"info", infoCommand, -1, "ok-loading ok-stale random @dangerous", 0, NULL,
-     0, 0, 0, 0, 0, 0},
-    {"monitor", monitorCommand, 1, "admin no-script", 0, NULL, 0, 0, 0, 0, 0,
-     0},
-    {"ttl", ttlCommand, 2, "read-only fast random @keyspace", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"touch", touchCommand, -2, "read-only fast @keyspace", 0, NULL, 1, -1, 1,
-     0, 0, 0},
-    {"pttl", pttlCommand, 2, "read-only fast random @keyspace", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"persist", persistCommand, 2, "write fast @keyspace", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"slaveof", replicaofCommand, 3, "admin no-script ok-stale", 0, NULL, 0, 0,
-     0, 0, 0, 0},
-    {"replicaof", replicaofCommand, 3, "admin no-script ok-stale", 0, NULL, 0,
-     0, 0, 0, 0, 0},
+     "write use-memory @list @set @sortedset @dangerous",
+     0,sortGetKeys,1,1,1,0,0,0},
+    {"info",infoCommand,-1,
+     "ok-loading ok-stale random @dangerous",
+     0,NULL,0,0,0,0,0,0},
+    {"monitor",monitorCommand,1,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"ttl",ttlCommand,2,
+     "read-only fast random @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"touch",touchCommand,-2,
+     "read-only fast @keyspace",
+     0,NULL,1,-1,1,0,0,0},
+    {"pttl",pttlCommand,2,
+     "read-only fast random @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"persist",persistCommand,2,
+     "write fast @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"slaveof",replicaofCommand,3,
+     "admin no-script ok-stale",
+     0,NULL,0,0,0,0,0,0},
+    {"replicaof",replicaofCommand,3,
+     "admin no-script ok-stale",
+     0,NULL,0,0,0,0,0,0},
@@ -288,6 +445,10 @@ struct redisCommand redisCommandTable[] = {
-     "ok-loading ok-stale no-script fast read-only @dangerous", 0, NULL, 0, 0,
-     0, 0, 0, 0},
-    {"debug", debugCommand, -2, "admin no-script", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"config", configCommand, -2, "admin ok-loading ok-stale no-script", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"subscribe", subscribeCommand, -2, "pub-sub no-script ok-loading ok-stale",
+     "ok-loading ok-stale no-script fast read-only @dangerous",
+     0,NULL,0,0,0,0,0,0},
+    {"debug",debugCommand,-2,
+     "admin no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"config",configCommand,-2,
+     "admin ok-loading ok-stale no-script",
+     0,NULL,0,0,0,0,0,0},
+    {"subscribe",subscribeCommand,-2,
+     "pub-sub no-script ok-loading ok-stale",
@@ -296 +457,2 @@ struct redisCommand redisCommandTable[] = {
-     "pub-sub no-script ok-loading ok-stale", 0, NULL, 0, 0, 0, 0, 0, 0},
+     "pub-sub no-script ok-loading ok-stale",
+     0,NULL,0,0,0,0,0,0},
@@ -298 +460,2 @@ struct redisCommand redisCommandTable[] = {
-     "pub-sub no-script ok-loading ok-stale", 0, NULL, 0, 0, 0, 0, 0, 0},
+     "pub-sub no-script ok-loading ok-stale",
+     0,NULL,0,0,0,0,0,0},
@@ -300,13 +463,20 @@ struct redisCommand redisCommandTable[] = {
-     "pub-sub no-script ok-loading ok-stale", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"publish", publishCommand, 3, "pub-sub ok-loading ok-stale fast", 0, NULL,
-     0, 0, 0, 0, 0, 0},
-    {"pubsub", pubsubCommand, -2, "pub-sub ok-loading ok-stale random", 0, NULL,
-     0, 0, 0, 0, 0, 0},
-    {"watch", watchCommand, -2, "no-script fast @transaction", 0, NULL, 1, -1,
-     1, 0, 0, 0},
-    {"unwatch", unwatchCommand, 1, "no-script fast @transaction", 0, NULL, 0, 0,
-     0, 0, 0, 0},
-    {"cluster", clusterCommand, -2, "admin ok-stale random", 0, NULL, 0, 0, 0,
-     0, 0, 0},
-    {"restore", restoreCommand, -4, "write use-memory @keyspace @dangerous", 0,
-     NULL, 1, 1, 1, 0, 0, 0},
+     "pub-sub no-script ok-loading ok-stale",
+     0,NULL,0,0,0,0,0,0},
+    {"publish",publishCommand,3,
+     "pub-sub ok-loading ok-stale fast",
+     0,NULL,0,0,0,0,0,0},
+    {"pubsub",pubsubCommand,-2,
+     "pub-sub ok-loading ok-stale random",
+     0,NULL,0,0,0,0,0,0},
+    {"watch",watchCommand,-2,
+     "no-script fast @transaction",
+     0,NULL,1,-1,1,0,0,0},
+    {"unwatch",unwatchCommand,1,
+     "no-script fast @transaction",
+     0,NULL,0,0,0,0,0,0},
+    {"cluster",clusterCommand,-2,
+     "admin ok-stale random",
+     0,NULL,0,0,0,0,0,0},
+    {"restore",restoreCommand,-4,
+     "write use-memory @keyspace @dangerous",
+     0,NULL,1,1,1,0,0,0},
@@ -314,17 +484,26 @@ struct redisCommand redisCommandTable[] = {
-     "write use-memory cluster-asking @keyspace @dangerous", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"migrate", migrateCommand, -6, "write random @keyspace @dangerous", 0,
-     migrateGetKeys, 0, 0, 0, 0, 0, 0},
-    {"asking", askingCommand, 1, "fast @keyspace", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"readonly", readonlyCommand, 1, "fast @keyspace", 0, NULL, 0, 0, 0, 0, 0,
-     0},
-    {"readwrite", readwriteCommand, 1, "fast @keyspace", 0, NULL, 0, 0, 0, 0, 0,
-     0},
-    {"dump", dumpCommand, 2, "read-only random @keyspace", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"object", objectCommand, -2, "read-only random @keyspace", 0, NULL, 2, 2,
-     1, 0, 0, 0},
-    {"memory", memoryCommand, -2, "random read-only", 0, NULL, 0, 0, 0, 0, 0,
-     0},
-    {"client", clientCommand, -2, "admin no-script random @connection", 0, NULL,
-     0, 0, 0, 0, 0, 0},
+    "write use-memory cluster-asking @keyspace @dangerous",
+    0,NULL,1,1,1,0,0,0},
+    {"migrate",migrateCommand,-6,
+     "write random @keyspace @dangerous",
+     0,migrateGetKeys,0,0,0,0,0,0},
+    {"asking",askingCommand,1,
+     "fast @keyspace",
+     0,NULL,0,0,0,0,0,0},
+    {"readonly",readonlyCommand,1,
+     "fast @keyspace",
+     0,NULL,0,0,0,0,0,0},
+    {"readwrite",readwriteCommand,1,
+     "fast @keyspace",
+     0,NULL,0,0,0,0,0,0},
+    {"dump",dumpCommand,2,
+     "read-only random @keyspace",
+     0,NULL,1,1,1,0,0,0},
+    {"object",objectCommand,-2,
+     "read-only random @keyspace",
+     0,NULL,2,2,1,0,0,0},
+    {"memory",memoryCommand,-2,
+     "random read-only",
+     0,NULL,0,0,0,0,0,0},
+    {"client",clientCommand,-2,
+     "admin no-script random @connection",
+     0,NULL,0,0,0,0,0,0},
@@ -332,29 +511,37 @@ struct redisCommand redisCommandTable[] = {
-     "no-script fast no-monitor no-slowlog @connection", 0, NULL, 0, 0, 0, 0, 0,
-     0},
-    {"eval", evalCommand, -3, "no-script @scripting", 0, evalGetKeys, 0, 0, 0,
-     0, 0, 0},
-    {"evalsha", evalShaCommand, -3, "no-script @scripting", 0, evalGetKeys, 0,
-     0, 0, 0, 0, 0},
-    {"slowlog", slowlogCommand, -2, "admin random", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"script", scriptCommand, -2, "no-script @scripting", 0, NULL, 0, 0, 0, 0,
-     0, 0},
-    {"time", timeCommand, 1, "read-only random fast", 0, NULL, 0, 0, 0, 0, 0,
-     0},
-    {"bitop", bitopCommand, -4, "write use-memory @bitmap", 0, NULL, 2, -1, 1,
-     0, 0, 0},
-    {"bitcount", bitcountCommand, -2, "read-only @bitmap", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"bitpos", bitposCommand, -3, "read-only @bitmap", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"wait", waitCommand, 3, "no-script @keyspace", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"command", commandCommand, -1, "ok-loading ok-stale random @connection", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"geoadd", geoaddCommand, -5, "write use-memory @geo", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"georadius", georadiusCommand, -6, "write @geo", 0, georadiusGetKeys, 1, 1,
-     1, 0, 0, 0},
-    {"georadius_ro", georadiusroCommand, -6, "read-only @geo", 0,
-     georadiusGetKeys, 1, 1, 1, 0, 0, 0},
-    {"georadiusbymember", georadiusbymemberCommand, -5, "write @geo", 0,
-     georadiusGetKeys, 1, 1, 1, 0, 0, 0},
-    {"georadiusbymember_ro", georadiusbymemberroCommand, -5, "read-only @geo",
+     "no-script fast no-monitor no-slowlog @connection",
+     0,NULL,0,0,0,0,0,0},
+    {"eval",evalCommand,-3,
+     "no-script @scripting",
+     0,evalGetKeys,0,0,0,0,0,0},
+    {"evalsha",evalShaCommand,-3,
+     "no-script @scripting",
+     0,evalGetKeys,0,0,0,0,0,0},
+    {"slowlog",slowlogCommand,-2,
+     "admin random",
+     0,NULL,0,0,0,0,0,0},
+    {"script",scriptCommand,-2,
+     "no-script @scripting",
+     0,NULL,0,0,0,0,0,0},
+    {"time",timeCommand,1,
+     "read-only random fast",
+     0,NULL,0,0,0,0,0,0},
+    {"bitop",bitopCommand,-4,
+     "write use-memory @bitmap",
+     0,NULL,2,-1,1,0,0,0},
+    {"bitcount",bitcountCommand,-2,
+     "read-only @bitmap",
+     0,NULL,1,1,1,0,0,0},
+    {"bitpos",bitposCommand,-3,
+     "read-only @bitmap",
+     0,NULL,1,1,1,0,0,0},
+    {"wait",waitCommand,3,
+     "no-script @keyspace",
+     0,NULL,0,0,0,0,0,0},
+    {"command",commandCommand,-1,
+     "ok-loading ok-stale random @connection",
+     0,NULL,0,0,0,0,0,0},
+    {"geoadd",geoaddCommand,-5,
+     "write use-memory @geo",
+     0,NULL,1,1,1,0,0,0},
+    {"georadius",georadiusCommand,-6,
+     "write @geo",
@@ -362,50 +549,91 @@ struct redisCommand redisCommandTable[] = {
-    {"geohash", geohashCommand, -2, "read-only @geo", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"geopos", geoposCommand, -2, "read-only @geo", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"geodist", geodistCommand, -4, "read-only @geo", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"pfselftest", pfselftestCommand, 1, "admin @hyperloglog", 0, NULL, 0, 0, 0,
-     0, 0, 0},
-    {"pfadd", pfaddCommand, -2, "write use-memory fast @hyperloglog", 0, NULL,
-     1, 1, 1, 0, 0, 0},
-    {"pfcount", pfcountCommand, -2, "read-only @hyperloglog", 0, NULL, 1, -1, 1,
-     0, 0, 0},
-    {"pfmerge", pfmergeCommand, -2, "write use-memory @hyperloglog", 0, NULL, 1,
-     -1, 1, 0, 0, 0},
-    {"pfdebug", pfdebugCommand, -3, "admin write", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"xadd", xaddCommand, -5, "write use-memory fast random @stream", 0, NULL,
-     1, 1, 1, 0, 0, 0},
-    {"xrange", xrangeCommand, -4, "read-only @stream", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"xrevrange", xrevrangeCommand, -4, "read-only @stream", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"xlen", xlenCommand, 2, "read-only fast @stream", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"xread", xreadCommand, -4, "read-only no-script @stream @blocking", 0,
-     xreadGetKeys, 1, 1, 1, 0, 0, 0},
-    {"xreadgroup", xreadCommand, -7, "write no-script @stream @blocking", 0,
-     xreadGetKeys, 1, 1, 1, 0, 0, 0},
-    {"xgroup", xgroupCommand, -2, "write use-memory @stream", 0, NULL, 2, 2, 1,
-     0, 0, 0},
-    {"xsetid", xsetidCommand, 3, "write use-memory fast @stream", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"xack", xackCommand, -4, "write fast random @stream", 0, NULL, 1, 1, 1, 0,
-     0, 0},
-    {"xpending", xpendingCommand, -3, "read-only random @stream", 0, NULL, 1, 1,
-     1, 0, 0, 0},
-    {"xclaim", xclaimCommand, -6, "write random fast @stream", 0, NULL, 1, 1, 1,
-     0, 0, 0},
-    {"xinfo", xinfoCommand, -2, "read-only random @stream", 0, NULL, 2, 2, 1, 0,
-     0, 0},
-    {"xdel", xdelCommand, -3, "write fast @stream", 0, NULL, 1, 1, 1, 0, 0, 0},
-    {"xtrim", xtrimCommand, -2, "write random @stream", 0, NULL, 1, 1, 1, 0, 0,
-     0},
-    {"post", securityWarningCommand, -1, "ok-loading ok-stale read-only", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"host:", securityWarningCommand, -1, "ok-loading ok-stale read-only", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"latency", latencyCommand, -2, "admin no-script ok-loading ok-stale", 0,
-     NULL, 0, 0, 0, 0, 0, 0},
-    {"lolwut", lolwutCommand, -1, "read-only fast", 0, NULL, 0, 0, 0, 0, 0, 0},
-    {"acl", aclCommand, -2, "admin no-script ok-loading ok-stale", 0, NULL, 0,
-     0, 0, 0, 0, 0}};
+    {"georadius_ro",georadiusroCommand,-6,
+     "read-only @geo",
+     0,georadiusGetKeys,1,1,1,0,0,0},
+    {"georadiusbymember",georadiusbymemberCommand,-5,
+     "write @geo",
+     0,georadiusGetKeys,1,1,1,0,0,0},
+    {"georadiusbymember_ro",georadiusbymemberroCommand,-5,
+     "read-only @geo",
+     0,georadiusGetKeys,1,1,1,0,0,0},
+    {"geohash",geohashCommand,-2,
+     "read-only @geo",
+     0,NULL,1,1,1,0,0,0},
+    {"geopos",geoposCommand,-2,
+     "read-only @geo",
+     0,NULL,1,1,1,0,0,0},
+    {"geodist",geodistCommand,-4,
+     "read-only @geo",
+     0,NULL,1,1,1,0,0,0},
+    {"pfselftest",pfselftestCommand,1,
+     "admin @hyperloglog",
+      0,NULL,0,0,0,0,0,0},
+    {"pfadd",pfaddCommand,-2,
+     "write use-memory fast @hyperloglog",
+     0,NULL,1,1,1,0,0,0},
+    {"pfcount",pfcountCommand,-2,
+     "read-only @hyperloglog",
+     0,NULL,1,-1,1,0,0,0},
+    {"pfmerge",pfmergeCommand,-2,
+     "write use-memory @hyperloglog",
+     0,NULL,1,-1,1,0,0,0},
+    {"pfdebug",pfdebugCommand,-3,
+     "admin write",
+     0,NULL,0,0,0,0,0,0},
+    {"xadd",xaddCommand,-5,
+     "write use-memory fast random @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xrange",xrangeCommand,-4,
+     "read-only @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xrevrange",xrevrangeCommand,-4,
+     "read-only @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xlen",xlenCommand,2,
+     "read-only fast @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xread",xreadCommand,-4,
+     "read-only no-script @stream @blocking",
+     0,xreadGetKeys,1,1,1,0,0,0},
+    {"xreadgroup",xreadCommand,-7,
+     "write no-script @stream @blocking",
+     0,xreadGetKeys,1,1,1,0,0,0},
+    {"xgroup",xgroupCommand,-2,
+     "write use-memory @stream",
+     0,NULL,2,2,1,0,0,0},
+    {"xsetid",xsetidCommand,3,
+     "write use-memory fast @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xack",xackCommand,-4,
+     "write fast random @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xpending",xpendingCommand,-3,
+     "read-only random @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xclaim",xclaimCommand,-6,
+     "write random fast @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xinfo",xinfoCommand,-2,
+     "read-only random @stream",
+     0,NULL,2,2,1,0,0,0},
+    {"xdel",xdelCommand,-3,
+     "write fast @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"xtrim",xtrimCommand,-2,
+     "write random @stream",
+     0,NULL,1,1,1,0,0,0},
+    {"post",securityWarningCommand,-1,
+     "ok-loading ok-stale read-only",
+     0,NULL,0,0,0,0,0,0},
+    {"host:",securityWarningCommand,-1,
+     "ok-loading ok-stale read-only",
+     0,NULL,0,0,0,0,0,0},
+    {"latency",latencyCommand,-2,
+     "admin no-script ok-loading ok-stale",
+     0,NULL,0,0,0,0,0,0},
+    {"lolwut",lolwutCommand,-1,
+     "read-only fast",
+     0,NULL,0,0,0,0,0,0},
+    {"acl",aclCommand,-2,
+     "admin no-script ok-loading ok-stale",
+     0,NULL,0,0,0,0,0,0}
+};
@@ -443,2 +671,2 @@ void serverLogRaw(int level, const char *msg) {
-    fprintf(fp, "%d:%c %s %c %s\n", (int)getpid(), role_char, buf, c[level],
-            msg);
+        fprintf(fp,"%d:%c %s %c %s\n",
+            (int)getpid(),role_char, buf,c[level],msg);
@@ -465,3 +693,2 @@ void serverLogFromHandler(int level, const char *msg) {
-  fd = log_to_stdout
-           ? STDOUT_FILENO
-           : open(server.logfile, O_APPEND | O_CREAT | O_WRONLY, 0644);
+    fd = log_to_stdout ? STDOUT_FILENO :
+                         open(server.logfile, O_APPEND|O_CREAT|O_WRONLY, 0644);
@@ -488 +715,3 @@ long long ustime(void) {
-mstime_t mstime(void) { return ustime() / 1000; }
+mstime_t mstime(void) {
+    return ustime()/1000;
+}
@@ -496 +725,2 @@ void exitFromChild(int retcode) {
-void dictVanillaFree(void *privdata, void *val) {
+void dictVanillaFree(void *privdata, void *val)
+{
@@ -500 +730,2 @@ void dictVanillaFree(void *privdata, void *val) {
-void dictListDestructor(void *privdata, void *val) {
+void dictListDestructor(void *privdata, void *val)
+{
@@ -504 +735,3 @@ void dictListDestructor(void *privdata, void *val) {
-int dictSdsKeyCompare(void *privdata, const void *key1, const void *key2) {
+int dictSdsKeyCompare(void *privdata, const void *key1,
+        const void *key2)
+{
@@ -512 +745,3 @@ int dictSdsKeyCompare(void *privdata, const void *key1, const void *key2) {
-int dictSdsKeyCaseCompare(void *privdata, const void *key1, const void *key2) {
+int dictSdsKeyCaseCompare(void *privdata, const void *key1,
+        const void *key2)
+{
@@ -516 +751,2 @@ int dictSdsKeyCaseCompare(void *privdata, const void *key1, const void *key2) {
-void dictObjectDestructor(void *privdata, void *val) {
+void dictObjectDestructor(void *privdata, void *val)
+{
@@ -521 +757,2 @@ void dictObjectDestructor(void *privdata, void *val) {
-void dictSdsDestructor(void *privdata, void *val) {
+void dictSdsDestructor(void *privdata, void *val)
+{
@@ -525 +762,3 @@ void dictSdsDestructor(void *privdata, void *val) {
-int dictObjKeyCompare(void *privdata, const void *key1, const void *key2) {
+int dictObjKeyCompare(void *privdata, const void *key1,
+        const void *key2)
+{
@@ -539 +778,3 @@ uint64_t dictSdsCaseHash(const void *key) {
-int dictEncObjKeyCompare(void *privdata, const void *key1, const void *key2) {
+int dictEncObjKeyCompare(void *privdata, const void *key1,
+        const void *key2)
+{
@@ -542 +783,2 @@ int dictEncObjKeyCompare(void *privdata, const void *key1, const void *key2) {
-  if (o1->encoding == OBJ_ENCODING_INT && o2->encoding == OBJ_ENCODING_INT)
+    if (o1->encoding == OBJ_ENCODING_INT &&
+        o2->encoding == OBJ_ENCODING_INT)
@@ -698 +940,2 @@ void tryResizeHashTables(int dbid) {
-  if (htNeedsResize(server.db[dbid].dict)) dictResize(server.db[dbid].dict);
+    if (htNeedsResize(server.db[dbid].dict))
+        dictResize(server.db[dbid].dict);
@@ -720 +963,2 @@ int hasActiveChildProcess() {
-  return server.rdb_child_pid != -1 || server.aof_child_pid != -1 ||
+    return server.rdb_child_pid != -1 ||
+           server.aof_child_pid != -1 ||
@@ -725,2 +969,2 @@ void trackInstantaneousMetric(int metric, long long current_reading) {
-  long long ops =
-      current_reading - server.inst_metric[metric].last_sample_count;
+    long long ops = current_reading -
+                    server.inst_metric[metric].last_sample_count;
@@ -729 +973,2 @@ void trackInstantaneousMetric(int metric, long long current_reading) {
-  server.inst_metric[metric].samples[server.inst_metric[metric].idx] = ops_sec;
+    server.inst_metric[metric].samples[server.inst_metric[metric].idx] =
+        ops_sec;
@@ -749 +994,2 @@ int clientsCronHandleTimeout(client *c, mstime_t now_ms) {
-      (now - c->lastinteraction > server.maxidletime)) {
+        (now - c->lastinteraction > server.maxidletime))
+    {
@@ -758 +1004,2 @@ int clientsCronHandleTimeout(client *c, mstime_t now_ms) {
-      if (clusterRedirectBlockedClientIfNeeded(c)) unblockClient(c);
+            if (clusterRedirectBlockedClientIfNeeded(c))
+                unblockClient(c);
@@ -767 +1014,3 @@ int clientsCronResizeQueryBuffer(client *c) {
-      ((querybuf_size / (c->querybuf_peak + 1)) > 2 || idletime > 2)) {
+         ((querybuf_size/(c->querybuf_peak+1)) > 2 ||
+          idletime > 2))
+    {
@@ -776 +1025,2 @@ int clientsCronResizeQueryBuffer(client *c) {
-        sdslen(c->pending_querybuf) < (pending_querybuf_size / 2)) {
+           sdslen(c->pending_querybuf) < (pending_querybuf_size/2))
+        {
@@ -811,3 +1061,2 @@ void clientsCron(void) {
-    iterations = (numclients < CLIENTS_CRON_MIN_ITERATIONS)
-                     ? numclients
-                     : CLIENTS_CRON_MIN_ITERATIONS;
+        iterations = (numclients < CLIENTS_CRON_MIN_ITERATIONS) ?
+                     numclients : CLIENTS_CRON_MIN_ITERATIONS;
@@ -833 +1082,2 @@ void databasesCron(void) {
-  if (server.active_defrag_enabled) activeDefragCycle();
+    if (server.active_defrag_enabled)
+        activeDefragCycle();
@@ -868 +1118,2 @@ void checkChildrenDone(void) {
-  if (server.rdb_child_pid != -1 && server.rdb_pipe_conns) return;
+    if (server.rdb_child_pid != -1 && server.rdb_pipe_conns)
+        return;
@@ -872,0 +1124,4 @@ void checkChildrenDone(void) {
+        if (exitcode == SERVER_CHILD_NOERROR_RETVAL) {
+            bysignal = SIGUSR1;
+            exitcode = 1;
+        }
@@ -874,5 +1129,6 @@ void checkChildrenDone(void) {
-      serverLog(LL_WARNING,
-                "wait3() returned an error: %s. "
-                "rdb_child_pid = %d, aof_child_pid = %d",
-                strerror(errno), (int)server.rdb_child_pid,
-                (int)server.aof_child_pid);
+            serverLog(LL_WARNING,"wait3() returned an error: %s. "
+                "rdb_child_pid = %d, aof_child_pid = %d, module_child_pid = %d",
+                strerror(errno),
+                (int) server.rdb_child_pid,
+                (int) server.aof_child_pid,
+                (int) server.module_child_pid);
@@ -884,0 +1141,3 @@ void checkChildrenDone(void) {
+        } else if (pid == server.module_child_pid) {
+            ModuleForkDoneHandler(exitcode,bysignal);
+            if (!bysignal && exitcode == 0) receiveChildInfo();
@@ -887 +1146,2 @@ void checkChildrenDone(void) {
-        serverLog(LL_WARNING, "Warning, detected child with unmatched pid: %ld",
+                serverLog(LL_WARNING,
+                    "Warning, detected child with unmatched pid: %ld",
@@ -905 +1165,2 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-           MAX_CLIENTS_PER_CLOCK_TICK) {
+               MAX_CLIENTS_PER_CLOCK_TICK)
+        {
@@ -931,2 +1192 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-      server.cron_malloc_stats.allocator_resident =
-          server.cron_malloc_stats.process_rss - lua_memory;
+            server.cron_malloc_stats.allocator_resident = server.cron_malloc_stats.process_rss - lua_memory;
@@ -935,2 +1195 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-      server.cron_malloc_stats.allocator_active =
-          server.cron_malloc_stats.allocator_resident;
+            server.cron_malloc_stats.allocator_active = server.cron_malloc_stats.allocator_resident;
@@ -938,2 +1197 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-      server.cron_malloc_stats.allocator_allocated =
-          server.cron_malloc_stats.zmalloc_used;
+            server.cron_malloc_stats.allocator_allocated = server.cron_malloc_stats.zmalloc_used;
@@ -943,3 +1201 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-    serverLog(LL_WARNING,
-              "SIGTERM received but errors trying to shut down the server, "
-              "check the logs for more information");
+        serverLog(LL_WARNING,"SIGTERM received but errors trying to shut down the server, check the logs for more information");
@@ -955,3 +1211 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-        serverLog(LL_VERBOSE,
-                  "DB %d: %lld keys (%lld volatile) in %lld slots HT.", j, used,
-                  vkeys, size);
+                serverLog(LL_VERBOSE,"DB %d: %lld keys (%lld volatile) in %lld slots HT.",j,used,vkeys,size);
@@ -966 +1220,2 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-                listLength(server.slaves), zmalloc_used_memory());
+                listLength(server.slaves),
+                zmalloc_used_memory());
@@ -971 +1226,3 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-  if (!hasActiveChildProcess() && server.aof_rewrite_scheduled) {
+    if (!hasActiveChildProcess() &&
+        server.aof_rewrite_scheduled)
+    {
@@ -974,2 +1231,2 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-  if (hasActiveChildProcess() || ldbPendingChildren()) {
-<<<<<<< HEAD
+    if (hasActiveChildProcess() || ldbPendingChildren())
+    {
@@ -977,67 +1233,0 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-|||||||
-    int statloc;
-    pid_t pid;
-    if ((pid = wait3(&statloc, WNOHANG, NULL)) != 0) {
-      int exitcode = WEXITSTATUS(statloc);
-      int bysignal = 0;
-      if (WIFSIGNALED(statloc)) bysignal = WTERMSIG(statloc);
-      if (pid == -1) {
-        serverLog(LL_WARNING,
-                  "wait3() returned an error: %s. "
-                  "rdb_child_pid = %d, aof_child_pid = %d",
-                  strerror(errno), (int)server.rdb_child_pid,
-                  (int)server.aof_child_pid);
-      } else if (pid == server.rdb_child_pid) {
-        backgroundSaveDoneHandler(exitcode, bysignal);
-        if (!bysignal && exitcode == 0) receiveChildInfo();
-      } else if (pid == server.aof_child_pid) {
-        backgroundRewriteDoneHandler(exitcode, bysignal);
-        if (!bysignal && exitcode == 0) receiveChildInfo();
-      } else {
-        if (!ldbRemoveChild(pid)) {
-          serverLog(LL_WARNING,
-                    "Warning, detected child with unmatched pid: %ld",
-                    (long)pid);
-        }
-      }
-      updateDictResizePolicy();
-      closeChildInfoPipe();
-    }
-=======
-    int statloc;
-    pid_t pid;
-    if ((pid = wait3(&statloc, WNOHANG, NULL)) != 0) {
-      int exitcode = WEXITSTATUS(statloc);
-      int bysignal = 0;
-      if (WIFSIGNALED(statloc)) bysignal = WTERMSIG(statloc);
-      if (exitcode == SERVER_CHILD_NOERROR_RETVAL) {
-        bysignal = SIGUSR1;
-        exitcode = 1;
-      }
-      if (pid == -1) {
-        serverLog(
-            LL_WARNING,
-            "wait3() returned an error: %s. "
-            "rdb_child_pid = %d, aof_child_pid = %d, module_child_pid = %d",
-            strerror(errno), (int)server.rdb_child_pid,
-            (int)server.aof_child_pid, (int)server.module_child_pid);
-      } else if (pid == server.rdb_child_pid) {
-        backgroundSaveDoneHandler(exitcode, bysignal);
-        if (!bysignal && exitcode == 0) receiveChildInfo();
-      } else if (pid == server.aof_child_pid) {
-        backgroundRewriteDoneHandler(exitcode, bysignal);
-        if (!bysignal && exitcode == 0) receiveChildInfo();
-      } else if (pid == server.module_child_pid) {
-        ModuleForkDoneHandler(exitcode, bysignal);
-        if (!bysignal && exitcode == 0) receiveChildInfo();
-      } else {
-        if (!ldbRemoveChild(pid)) {
-          serverLog(LL_WARNING,
-                    "Warning, detected child with unmatched pid: %ld",
-                    (long)pid);
-        }
-      }
-      updateDictResizePolicy();
-      closeChildInfoPipe();
-    }
->>>>>>> b8e02f2b4005febbdaa11ff978c4f98b664464c9
@@ -1051,3 +1241,4 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-           server.lastbgsave_status == C_OK)) {
-        serverLog(LL_NOTICE, "%d changes in %d seconds. Saving...", sp->changes,
-                  (int)sp->seconds);
+                 server.lastbgsave_status == C_OK))
+            {
+                serverLog(LL_NOTICE,"%d changes in %d seconds. Saving...",
+                    sp->changes, (int)sp->seconds);
@@ -1060 +1251,2 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-    if (server.aof_state == AOF_ON && !hasActiveChildProcess() &&
+        if (server.aof_state == AOF_ON &&
+            !hasActiveChildProcess() &&
@@ -1062,3 +1254,4 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-        server.aof_current_size > server.aof_rewrite_min_size) {
-      long long base =
-          server.aof_rewrite_base_size ? server.aof_rewrite_base_size : 1;
+            server.aof_current_size > server.aof_rewrite_min_size)
+        {
+            long long base = server.aof_rewrite_base_size ?
+                server.aof_rewrite_base_size : 1;
@@ -1067,3 +1260 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-        serverLog(LL_NOTICE,
-                  "Starting automatic rewriting of AOF on %lld%% growth",
-                  growth);
+                serverLog(LL_NOTICE,"Starting automatic rewriting of AOF on %lld%% growth",growth);
@@ -1076 +1267,2 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-    if (server.aof_last_write_status == C_ERR) flushAppendOnlyFile(0);
+        if (server.aof_last_write_status == C_ERR)
+            flushAppendOnlyFile(0);
@@ -1084 +1276,3 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-  run_with_period(1000) { migrateCloseTimedoutSockets(); }
+    run_with_period(1000) {
+        migrateCloseTimedoutSockets();
+    }
@@ -1086 +1280,2 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-  if (!hasActiveChildProcess() && server.rdb_bgsave_scheduled &&
+    if (!hasActiveChildProcess() &&
+        server.rdb_bgsave_scheduled &&
@@ -1088 +1283,2 @@ int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {
-       server.lastbgsave_status == C_OK)) {
+         server.lastbgsave_status == C_OK))
+    {
@@ -1115 +1311,2 @@ void beforeSleep(struct aeEventLoop *eventLoop) {
-  if (listLength(server.clients_waiting_acks)) processClientsWaitingReplicas();
+    if (listLength(server.clients_waiting_acks))
+        processClientsWaitingReplicas();
@@ -1117 +1314,2 @@ void beforeSleep(struct aeEventLoop *eventLoop) {
-  if (listLength(server.unblocked_clients)) processUnblockedClients();
+    if (listLength(server.unblocked_clients))
+        processUnblockedClients();
@@ -1139,42 +1337,28 @@ void createSharedObjects(void) {
-  shared.emptyscan =
-      createObject(OBJ_STRING, sdsnew("*2\r\n$1\r\n0\r\n*0\r\n"));
-  shared.wrongtypeerr =
-      createObject(OBJ_STRING, sdsnew("-WRONGTYPE Operation against a key "
-                                      "holding the wrong kind of value\r\n"));
-  shared.nokeyerr = createObject(OBJ_STRING, sdsnew("-ERR no such key\r\n"));
-  shared.syntaxerr = createObject(OBJ_STRING, sdsnew("-ERR syntax error\r\n"));
-  shared.sameobjecterr = createObject(
-      OBJ_STRING,
-      sdsnew("-ERR source and destination objects are the same\r\n"));
-  shared.outofrangeerr =
-      createObject(OBJ_STRING, sdsnew("-ERR index out of range\r\n"));
-  shared.noscripterr = createObject(
-      OBJ_STRING, sdsnew("-NOSCRIPT No matching script. Please use EVAL.\r\n"));
-  shared.loadingerr = createObject(
-      OBJ_STRING,
-      sdsnew("-LOADING Redis is loading the dataset in memory\r\n"));
-  shared.slowscripterr = createObject(
-      OBJ_STRING, sdsnew("-BUSY Redis is busy running a script. You can only "
-                         "call SCRIPT KILL or SHUTDOWN NOSAVE.\r\n"));
-  shared.masterdownerr = createObject(
-      OBJ_STRING, sdsnew("-MASTERDOWN Link with MASTER is down and "
-                         "replica-serve-stale-data is set to 'no'.\r\n"));
-  shared.bgsaveerr = createObject(
-      OBJ_STRING,
-      sdsnew("-MISCONF Redis is configured to save RDB snapshots, but it is "
-             "currently not able to persist on disk. Commands that may modify "
-             "the data set are disabled, because this instance is configured "
-             "to report errors during writes if RDB snapshotting fails "
-             "(stop-writes-on-bgsave-error option). Please check the Redis "
-             "logs for details about the RDB error.\r\n"));
-  shared.roslaveerr = createObject(
-      OBJ_STRING,
-      sdsnew("-READONLY You can't write against a read only replica.\r\n"));
-  shared.noautherr =
-      createObject(OBJ_STRING, sdsnew("-NOAUTH Authentication required.\r\n"));
-  shared.oomerr = createObject(
-      OBJ_STRING,
-      sdsnew("-OOM command not allowed when used memory > 'maxmemory'.\r\n"));
-  shared.execaborterr = createObject(
-      OBJ_STRING,
-      sdsnew(
+    shared.emptyscan = createObject(OBJ_STRING,sdsnew("*2\r\n$1\r\n0\r\n*0\r\n"));
+    shared.wrongtypeerr = createObject(OBJ_STRING,sdsnew(
+        "-WRONGTYPE Operation against a key holding the wrong kind of value\r\n"));
+    shared.nokeyerr = createObject(OBJ_STRING,sdsnew(
+        "-ERR no such key\r\n"));
+    shared.syntaxerr = createObject(OBJ_STRING,sdsnew(
+        "-ERR syntax error\r\n"));
+    shared.sameobjecterr = createObject(OBJ_STRING,sdsnew(
+        "-ERR source and destination objects are the same\r\n"));
+    shared.outofrangeerr = createObject(OBJ_STRING,sdsnew(
+        "-ERR index out of range\r\n"));
+    shared.noscripterr = createObject(OBJ_STRING,sdsnew(
+        "-NOSCRIPT No matching script. Please use EVAL.\r\n"));
+    shared.loadingerr = createObject(OBJ_STRING,sdsnew(
+        "-LOADING Redis is loading the dataset in memory\r\n"));
+    shared.slowscripterr = createObject(OBJ_STRING,sdsnew(
+        "-BUSY Redis is busy running a script. You can only call SCRIPT KILL or SHUTDOWN NOSAVE.\r\n"));
+    shared.masterdownerr = createObject(OBJ_STRING,sdsnew(
+        "-MASTERDOWN Link with MASTER is down and replica-serve-stale-data is set to 'no'.\r\n"));
+    shared.bgsaveerr = createObject(OBJ_STRING,sdsnew(
+        "-MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.\r\n"));
+    shared.roslaveerr = createObject(OBJ_STRING,sdsnew(
+        "-READONLY You can't write against a read only replica.\r\n"));
+    shared.noautherr = createObject(OBJ_STRING,sdsnew(
+        "-NOAUTH Authentication required.\r\n"));
+    shared.oomerr = createObject(OBJ_STRING,sdsnew(
+        "-OOM command not allowed when used memory > 'maxmemory'.\r\n"));
+    shared.execaborterr = createObject(OBJ_STRING,sdsnew(
@@ -1182,4 +1366,4 @@ void createSharedObjects(void) {
-  shared.noreplicaserr = createObject(
-      OBJ_STRING, sdsnew("-NOREPLICAS Not enough good replicas to write.\r\n"));
-  shared.busykeyerr = createObject(
-      OBJ_STRING, sdsnew("-BUSYKEY Target key name already exists.\r\n"));
+    shared.noreplicaserr = createObject(OBJ_STRING,sdsnew(
+        "-NOREPLICAS Not enough good replicas to write.\r\n"));
+    shared.busykeyerr = createObject(OBJ_STRING,sdsnew(
+        "-BUSYKEY Target key name already exists.\r\n"));
@@ -1209,3 +1393,3 @@ void createSharedObjects(void) {
-    shared.select[j] = createObject(
-        OBJ_STRING,
-        sdscatprintf(sdsempty(), "*2\r\n$6\r\nSELECT\r\n$%d\r\n%s\r\n",
+        shared.select[j] = createObject(OBJ_STRING,
+            sdscatprintf(sdsempty(),
+                "*2\r\n$6\r\nSELECT\r\n$%d\r\n%s\r\n",
@@ -1234,4 +1418,4 @@ void createSharedObjects(void) {
-    shared.mbulkhdr[j] =
-        createObject(OBJ_STRING, sdscatprintf(sdsempty(), "*%d\r\n", j));
-    shared.bulkhdr[j] =
-        createObject(OBJ_STRING, sdscatprintf(sdsempty(), "$%d\r\n", j));
+        shared.mbulkhdr[j] = createObject(OBJ_STRING,
+            sdscatprintf(sdsempty(),"*%d\r\n",j));
+        shared.bulkhdr[j] = createObject(OBJ_STRING,
+            sdscatprintf(sdsempty(),"$%d\r\n",j));
@@ -1306,2 +1490 @@ void initServerConfig(void) {
-  server.aof_rewrite_incremental_fsync =
-      CONFIG_DEFAULT_AOF_REWRITE_INCREMENTAL_FSYNC;
+    server.aof_rewrite_incremental_fsync = CONFIG_DEFAULT_AOF_REWRITE_INCREMENTAL_FSYNC;
@@ -1441,4 +1624,2 @@ int restartServer(int flags, mstime_t delay) {
-    serverLog(LL_WARNING,
-              "Can't restart: this process has no "
-              "permissions to execute %s",
-              server.executable);
+        serverLog(LL_WARNING,"Can't restart: this process has no "
+                             "permissions to execute %s", server.executable);
@@ -1447,4 +1628,5 @@ int restartServer(int flags, mstime_t delay) {
-  if (flags & RESTART_SERVER_CONFIG_REWRITE && server.configfile &&
-      rewriteConfig(server.configfile) == -1) {
-    serverLog(LL_WARNING,
-              "Can't restart: configuration rewrite process "
+    if (flags & RESTART_SERVER_CONFIG_REWRITE &&
+        server.configfile &&
+        rewriteConfig(server.configfile) == -1)
+    {
+        serverLog(LL_WARNING,"Can't restart: configuration rewrite process "
@@ -1455 +1637,2 @@ int restartServer(int flags, mstime_t delay) {
-      prepareForShutdown(SHUTDOWN_NOFLAGS) != C_OK) {
+        prepareForShutdown(SHUTDOWN_NOFLAGS) != C_OK)
+    {
@@ -1473,3 +1656 @@ void adjustOpenFilesLimit(void) {
-    serverLog(LL_WARNING,
-              "Unable to obtain the current NOFILE limit (%s), assuming 1024 "
-              "and setting the max clients configuration accordingly.",
+        serverLog(LL_WARNING,"Unable to obtain the current NOFILE limit (%s), assuming 1024 and setting the max clients configuration accordingly.",
@@ -1498,2 +1679 @@ void adjustOpenFilesLimit(void) {
-          serverLog(LL_WARNING,
-                    "Your current 'ulimit -n' "
+                    serverLog(LL_WARNING,"Your current 'ulimit -n' "
@@ -1503 +1683,2 @@ void adjustOpenFilesLimit(void) {
-                    (unsigned long long)oldlimit, (unsigned long long)maxfiles);
+                        (unsigned long long) oldlimit,
+                        (unsigned long long) maxfiles);
@@ -1506,2 +1687 @@ void adjustOpenFilesLimit(void) {
-        serverLog(LL_WARNING,
-                  "You requested maxclients of %d "
+                serverLog(LL_WARNING,"You requested maxclients of %d "
@@ -1509,3 +1689,3 @@ void adjustOpenFilesLimit(void) {
-                  old_maxclients, (unsigned long long)maxfiles);
-        serverLog(LL_WARNING,
-                  "Server can't set maximum open files "
+                    old_maxclients,
+                    (unsigned long long) maxfiles);
+                serverLog(LL_WARNING,"Server can't set maximum open files "
@@ -1514,2 +1694 @@ void adjustOpenFilesLimit(void) {
-        serverLog(LL_WARNING,
-                  "Current maximum open files is %llu. "
+                serverLog(LL_WARNING,"Current maximum open files is %llu. "
@@ -1521,2 +1700 @@ void adjustOpenFilesLimit(void) {
-        serverLog(LL_NOTICE,
-                  "Increased maximum number of open files "
+                serverLog(LL_NOTICE,"Increased maximum number of open files "
@@ -1524 +1702,2 @@ void adjustOpenFilesLimit(void) {
-                  (unsigned long long)maxfiles, (unsigned long long)oldlimit);
+                    (unsigned long long) maxfiles,
+                    (unsigned long long) oldlimit);
@@ -1537,5 +1716 @@ void checkTcpBacklogSettings(void) {
-      serverLog(
-          LL_WARNING,
-          "WARNING: The TCP backlog setting of %d cannot be enforced because "
-          "/proc/sys/net/core/somaxconn is set to the lower value of %d.",
-          server.tcp_backlog, somaxconn);
+            serverLog(LL_WARNING,"WARNING: The TCP backlog setting of %d cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of %d.", server.tcp_backlog, somaxconn);
@@ -1553,2 +1728,2 @@ int listenToPort(int port, int *fds, int *count) {
-      fds[*count] =
-          anetTcp6Server(server.neterr, port, NULL, server.tcp_backlog);
+            fds[*count] = anetTcp6Server(server.neterr,port,NULL,
+                server.tcp_backlog);
@@ -1563,2 +1738,2 @@ int listenToPort(int port, int *fds, int *count) {
-        fds[*count] =
-            anetTcpServer(server.neterr, port, NULL, server.tcp_backlog);
+                fds[*count] = anetTcpServer(server.neterr,port,NULL,
+                    server.tcp_backlog);
@@ -1582,3 +1757,4 @@ int listenToPort(int port, int *fds, int *count) {
-      serverLog(
-          LL_WARNING, "Could not create server TCP listening socket %s:%d: %s",
-          server.bindaddr[j] ? server.bindaddr[j] : "*", port, server.neterr);
+            serverLog(LL_WARNING,
+                "Could not create server TCP listening socket %s:%d: %s",
+                server.bindaddr[j] ? server.bindaddr[j] : "*",
+                port, server.neterr);
@@ -1662 +1838,2 @@ void initServer(void) {
-    serverLog(LL_WARNING, "Failed creating the event loop. Error message: '%s'",
+        serverLog(LL_WARNING,
+            "Failed creating the event loop. Error message: '%s'",
@@ -1744,2 +1921,4 @@ void initServer(void) {
-                          acceptTcpHandler, NULL) == AE_ERR) {
-      serverPanic("Unrecoverable error creating server.ipfd file event.");
+            acceptTcpHandler,NULL) == AE_ERR)
+            {
+                serverPanic(
+                    "Unrecoverable error creating server.ipfd file event.");
@@ -1750,2 +1929,4 @@ void initServer(void) {
-                          acceptTLSHandler, NULL) == AE_ERR) {
-      serverPanic("Unrecoverable error creating server.tlsfd file event.");
+            acceptTLSHandler,NULL) == AE_ERR)
+            {
+                serverPanic(
+                    "Unrecoverable error creating server.tlsfd file event.");
@@ -1755,2 +1936 @@ void initServer(void) {
-                                           acceptUnixHandler, NULL) == AE_ERR)
-    serverPanic("Unrecoverable error creating server.sofd file event.");
+        acceptUnixHandler,NULL) == AE_ERR) serverPanic("Unrecoverable error creating server.sofd file event.");
@@ -1764,2 +1944,2 @@ void initServer(void) {
-    server.aof_fd =
-        open(server.aof_filename, O_WRONLY | O_APPEND | O_CREAT, 0644);
+        server.aof_fd = open(server.aof_filename,
+                               O_WRONLY|O_APPEND|O_CREAT,0644);
@@ -1773,3 +1953 @@ void initServer(void) {
-    serverLog(LL_WARNING,
-              "Warning: 32 bit instance detected but no memory limit set. "
-              "Setting 3 GB maxmemory limit with 'noeviction' policy now.");
+        serverLog(LL_WARNING,"Warning: 32 bit instance detected but no memory limit set. Setting 3 GB maxmemory limit with 'noeviction' policy now.");
@@ -1829 +2007,2 @@ int populateCommandTableParseFlags(struct redisCommand *c, char *strflags) {
-          (catflag = ACLGetCommandCategoryFlagByName(flag + 1)) != 0) {
+                (catflag = ACLGetCommandCategoryFlagByName(flag+1)) != 0)
+            {
@@ -1872 +2051,2 @@ int redisOpArrayAppend(redisOpArray *oa, struct redisCommand *cmd, int dbid,
-                       robj **argv, int argc, int target) {
+                       robj **argv, int argc, int target)
+{
@@ -1890 +2070,2 @@ void redisOpArrayFree(redisOpArray *oa) {
-    for (j = 0; j < op->argc; j++) decrRefCount(op->argv[j]);
+        for (j = 0; j < op->argc; j++)
+            decrRefCount(op->argv[j]);
@@ -1911 +2092,2 @@ void propagate(struct redisCommand *cmd, int dbid, robj **argv, int argc,
-               int flags) {
+               int flags)
+{
@@ -1918 +2100,2 @@ void alsoPropagate(struct redisCommand *cmd, int dbid, robj **argv, int argc,
-                   int target) {
+                   int target)
+{
@@ -1933,2 +2116,6 @@ void forceCommandPropagation(client *c, int flags) {
-void preventCommandPropagation(client *c) { c->flags |= CLIENT_PREVENT_PROP; }
-void preventCommandAOF(client *c) { c->flags |= CLIENT_PREVENT_AOF_PROP; }
+void preventCommandPropagation(client *c) {
+    c->flags |= CLIENT_PREVENT_PROP;
+}
+void preventCommandAOF(client *c) {
+    c->flags |= CLIENT_PREVENT_AOF_PROP;
+}
@@ -1942,2 +2129,4 @@ void call(client *c, int flags) {
-  if (listLength(server.monitors) && !server.loading &&
-      !(c->cmd->flags & (CMD_SKIP_MONITOR | CMD_ADMIN))) {
+    if (listLength(server.monitors) &&
+        !server.loading &&
+        !(c->cmd->flags & (CMD_SKIP_MONITOR|CMD_ADMIN)))
+    {
@@ -1964,2 +2153,2 @@ void call(client *c, int flags) {
-    char *latency_event =
-        (c->cmd->flags & CMD_FAST) ? "fast-command" : "command";
+        char *latency_event = (c->cmd->flags & CMD_FAST) ?
+                              "fast-command" : "command";
@@ -1974 +2163,2 @@ void call(client *c, int flags) {
-      (c->flags & CLIENT_PREVENT_PROP) != CLIENT_PREVENT_PROP) {
+        (c->flags & CLIENT_PREVENT_PROP) != CLIENT_PREVENT_PROP)
+    {
@@ -1982 +2172,2 @@ void call(client *c, int flags) {
-    if (c->flags & CLIENT_PREVENT_AOF_PROP || !(flags & CMD_CALL_PROPAGATE_AOF))
+        if (c->flags & CLIENT_PREVENT_AOF_PROP ||
+            !(flags & CMD_CALL_PROPAGATE_AOF))
@@ -2007,3 +2198,4 @@ void call(client *c, int flags) {
-    client *caller =
-        (c->flags & CLIENT_LUA && server.lua_caller) ? server.lua_caller : c;
-    if (caller->flags & CLIENT_TRACKING) trackingRememberKeys(caller);
+        client *caller = (c->flags & CLIENT_LUA && server.lua_caller) ?
+                            server.lua_caller : c;
+        if (caller->flags & CLIENT_TRACKING)
+            trackingRememberKeys(caller);
@@ -2026,2 +2218 @@ int processCommand(client *c) {
-      args = sdscatprintf(args, "`%.*s`, ", 128 - (int)sdslen(args),
-                          (char *)c->argv[i]->ptr);
+            args = sdscatprintf(args, "`%.*s`, ", 128-(int)sdslen(args), (char*)c->argv[i]->ptr);
@@ -2055,2 +2246 @@ int processCommand(client *c) {
-                          "the '%s' command or its subcommand",
-                          c->cmd->name);
+                "the '%s' command or its subcommand", c->cmd->name);
@@ -2063,2 +2253,4 @@ int processCommand(client *c) {
-  if (server.cluster_enabled && !(c->flags & CLIENT_MASTER) &&
-      !(c->flags & CLIENT_LUA && server.lua_caller->flags & CLIENT_MASTER) &&
+    if (server.cluster_enabled &&
+        !(c->flags & CLIENT_MASTER) &&
+        !(c->flags & CLIENT_LUA &&
+          server.lua_caller->flags & CLIENT_MASTER) &&
@@ -2066 +2258,2 @@ int processCommand(client *c) {
-        c->cmd->proc != execCommand)) {
+          c->cmd->proc != execCommand))
+    {
@@ -2069,2 +2262,2 @@ int processCommand(client *c) {
-    clusterNode *n =
-        getNodeByQuery(c, c->cmd, c->argv, c->argc, &hashslot, &error_code);
+        clusterNode *n = getNodeByQuery(c,c->cmd,c->argv,c->argc,
+                                        &hashslot,&error_code);
@@ -2086,2 +2279,4 @@ int processCommand(client *c) {
-         (c->flags & CLIENT_MULTI && c->cmd->proc != execCommand &&
-          c->cmd->proc != discardCommand))) {
+             (c->flags & CLIENT_MULTI &&
+              c->cmd->proc != execCommand &&
+              c->cmd->proc != discardCommand)))
+        {
@@ -2095,2 +2290,5 @@ int processCommand(client *c) {
-  if (deny_write_type != DISK_ERROR_TYPE_NONE && server.masterhost == NULL &&
-      (c->cmd->flags & CMD_WRITE || c->cmd->proc == pingCommand)) {
+    if (deny_write_type != DISK_ERROR_TYPE_NONE &&
+        server.masterhost == NULL &&
+        (c->cmd->flags & CMD_WRITE ||
+         c->cmd->proc == pingCommand))
+    {
@@ -2101,2 +2299,2 @@ int processCommand(client *c) {
-      addReplySds(
-          c, sdscatprintf(sdsempty(),
+            addReplySds(c,
+                sdscatprintf(sdsempty(),
@@ -2107,3 +2305,6 @@ int processCommand(client *c) {
-  if (server.masterhost == NULL && server.repl_min_slaves_to_write &&
-      server.repl_min_slaves_max_lag && c->cmd->flags & CMD_WRITE &&
-      server.repl_good_slaves_count < server.repl_min_slaves_to_write) {
+    if (server.masterhost == NULL &&
+        server.repl_min_slaves_to_write &&
+        server.repl_min_slaves_max_lag &&
+        c->cmd->flags & CMD_WRITE &&
+        server.repl_good_slaves_count < server.repl_min_slaves_to_write)
+    {
@@ -2115 +2316,3 @@ int processCommand(client *c) {
-      !(c->flags & CLIENT_MASTER) && c->cmd->flags & CMD_WRITE) {
+        !(c->flags & CLIENT_MASTER) &&
+        c->cmd->flags & CMD_WRITE)
+    {
@@ -2120,2 +2323,4 @@ int processCommand(client *c) {
-      c->cmd->proc != pingCommand && c->cmd->proc != subscribeCommand &&
-      c->cmd->proc != unsubscribeCommand && c->cmd->proc != psubscribeCommand &&
+        c->cmd->proc != pingCommand &&
+        c->cmd->proc != subscribeCommand &&
+        c->cmd->proc != unsubscribeCommand &&
+        c->cmd->proc != psubscribeCommand &&
@@ -2123,3 +2328 @@ int processCommand(client *c) {
-    addReplyError(c,
-                  "only (P)SUBSCRIBE / (P)UNSUBSCRIBE / PING / QUIT allowed in "
-                  "this context");
+        addReplyError(c,"only (P)SUBSCRIBE / (P)UNSUBSCRIBE / PING / QUIT allowed in this context");
@@ -2129 +2332,3 @@ int processCommand(client *c) {
-      server.repl_serve_stale_data == 0 && !(c->cmd->flags & CMD_STALE)) {
+        server.repl_serve_stale_data == 0 &&
+        !(c->cmd->flags & CMD_STALE))
+    {
@@ -2138,3 +2343,6 @@ int processCommand(client *c) {
-  if (server.lua_timedout && c->cmd->proc != authCommand &&
-      c->cmd->proc != helloCommand && c->cmd->proc != replconfCommand &&
-      !(c->cmd->proc == shutdownCommand && c->argc == 2 &&
+    if (server.lua_timedout &&
+          c->cmd->proc != authCommand &&
+          c->cmd->proc != helloCommand &&
+          c->cmd->proc != replconfCommand &&
+        !(c->cmd->proc == shutdownCommand &&
+          c->argc == 2 &&
@@ -2142,2 +2350,4 @@ int processCommand(client *c) {
-      !(c->cmd->proc == scriptCommand && c->argc == 2 &&
-        tolower(((char *)c->argv[1]->ptr)[0]) == 'k')) {
+        !(c->cmd->proc == scriptCommand &&
+          c->argc == 2 &&
+          tolower(((char*)c->argv[1]->ptr)[0]) == 'k'))
+    {
@@ -2148,3 +2358,4 @@ int processCommand(client *c) {
-  if (c->flags & CLIENT_MULTI && c->cmd->proc != execCommand &&
-      c->cmd->proc != discardCommand && c->cmd->proc != multiCommand &&
-      c->cmd->proc != watchCommand) {
+    if (c->flags & CLIENT_MULTI &&
+        c->cmd->proc != execCommand && c->cmd->proc != discardCommand &&
+        c->cmd->proc != multiCommand && c->cmd->proc != watchCommand)
+    {
@@ -2156 +2367,2 @@ int processCommand(client *c) {
-    if (listLength(server.ready_keys)) handleClientsBlockedOnKeys();
+        if (listLength(server.ready_keys))
+            handleClientsBlockedOnKeys();
@@ -2191 +2403,2 @@ int prepareForShutdown(int flags) {
-      serverLog(LL_WARNING, "There is a child rewriting the AOF. Killing it!");
+            serverLog(LL_WARNING,
+                "There is a child rewriting the AOF. Killing it!");
@@ -2218,2 +2431,4 @@ int writeCommandsDeniedByDiskError(void) {
-  if (server.stop_writes_on_bgsave_err && server.saveparamslen > 0 &&
-      server.lastbgsave_status == C_ERR) {
+    if (server.stop_writes_on_bgsave_err &&
+        server.saveparamslen > 0 &&
+        server.lastbgsave_status == C_ERR)
+    {
@@ -2222 +2437,2 @@ int writeCommandsDeniedByDiskError(void) {
-             server.aof_last_write_status == C_ERR) {
+               server.aof_last_write_status == C_ERR)
+    {
@@ -2248 +2464,3 @@ void pingCommand(client *c) {
-void echoCommand(client *c) { addReplyBulk(c, c->argv[1]); }
+void echoCommand(client *c) {
+    addReplyBulk(c,c->argv[1]);
+}
@@ -2256,2 +2474 @@ void timeCommand(client *c) {
-int addReplyCommandFlag(client *c, struct redisCommand *cmd, int f,
-                        char *reply) {
+int addReplyCommandFlag(client *c, struct redisCommand *cmd, int f, char *reply) {
@@ -2280,2 +2497 @@ void addReplyCommand(client *c, struct redisCommand *cmd) {
-    flagcount +=
-        addReplyCommandFlag(c, cmd, CMD_SORT_FOR_SCRIPT, "sort_for_script");
+        flagcount += addReplyCommandFlag(c,cmd,CMD_SORT_FOR_SCRIPT,"sort_for_script");
@@ -2289 +2505,2 @@ void addReplyCommand(client *c, struct redisCommand *cmd) {
-        cmd->flags & CMD_MODULE_GETKEYS) {
+            cmd->flags & CMD_MODULE_GETKEYS)
+        {
@@ -2308,3 +2525,3 @@ void commandCommand(client *c) {
-        "INFO [command-name ...] -- Return details about multiple Redis "
-        "commands.",
-        NULL};
+"INFO [command-name ...] -- Return details about multiple Redis commands.",
+NULL
+        };
@@ -2337 +2554,2 @@ void commandCommand(client *c) {
-               ((c->argc - 2) < -cmd->arity)) {
+                   ((c->argc-2) < -cmd->arity))
+        {
@@ -2395,6 +2613,3 @@ sds genRedisInfoString(char *section) {
-    if (server.cluster_enabled)
-      mode = "cluster";
-    else if (server.sentinel_mode)
-      mode = "sentinel";
-    else
-      mode = "standalone";
+        if (server.cluster_enabled) mode = "cluster";
+        else if (server.sentinel_mode) mode = "sentinel";
+        else mode = "standalone";
@@ -2406,2 +2621 @@ sds genRedisInfoString(char *section) {
-    info = sdscatfmt(
-        info,
+        info = sdscatfmt(info,
@@ -2429,3 +2643,9 @@ sds genRedisInfoString(char *section) {
-        REDIS_VERSION, redisGitSHA1(), strtol(redisGitDirty(), NULL, 10) > 0,
-        redisBuildIdString(), mode, name.sysname, name.release, name.machine,
-        server.arch_bits, aeGetApiName(), REDIS_ATOMIC_API,
+            REDIS_VERSION,
+            redisGitSHA1(),
+            strtol(redisGitDirty(),NULL,10) > 0,
+            redisBuildIdString(),
+            mode,
+            name.sysname, name.release, name.machine,
+            server.arch_bits,
+            aeGetApiName(),
+            REDIS_ATOMIC_API,
@@ -2437,10 +2657,8 @@ sds genRedisInfoString(char *section) {
-        (int64_t)getpid(), server.runid,
-<<<<<<< HEAD
-        server.port ? server.port : server.tls_port, (intmax_t)uptime,
-        (intmax_t)(uptime / (3600 * 24)),
-|||||||
-        server.port, (intmax_t)uptime, (intmax_t)(uptime / (3600 * 24)),
-=======
-        server.port, (int64_t)uptime, (int64_t)(uptime / (3600 * 24)),
->>>>>>> b8e02f2b4005febbdaa11ff978c4f98b664464c9
-        server.hz, server.config_hz, server.lruclock,
+            (int64_t) getpid(),
+            server.runid,
+            server.port ? server.port : server.tls_port,
+            (int64_t)uptime,
+            (int64_t)(uptime/(3600*24)),
+            server.hz,
+            server.config_hz,
+            server.lruclock,
@@ -2462 +2680,2 @@ sds genRedisInfoString(char *section) {
-                        maxin, maxout, server.blocked_clients,
+            maxin, maxout,
+            server.blocked_clients,
@@ -2488,2 +2707 @@ sds genRedisInfoString(char *section) {
-    info = sdscatprintf(
-        info,
+        info = sdscatprintf(info,
@@ -2531,4 +2749,12 @@ sds genRedisInfoString(char *section) {
-        zmalloc_used, hmem, server.cron_malloc_stats.process_rss,
-        used_memory_rss_hmem, server.stat_peak_memory, peak_hmem, mh->peak_perc,
-        mh->overhead_total, mh->startup_allocated, mh->dataset,
-        mh->dataset_perc, server.cron_malloc_stats.allocator_allocated,
+            zmalloc_used,
+            hmem,
+            server.cron_malloc_stats.process_rss,
+            used_memory_rss_hmem,
+            server.stat_peak_memory,
+            peak_hmem,
+            mh->peak_perc,
+            mh->overhead_total,
+            mh->startup_allocated,
+            mh->dataset,
+            mh->dataset_perc,
+            server.cron_malloc_stats.allocator_allocated,
@@ -2537,6 +2763,16 @@ sds genRedisInfoString(char *section) {
-        (unsigned long)total_system_mem, total_system_hmem, memory_lua,
-        used_memory_lua_hmem, (long long)mh->lua_caches,
-        used_memory_scripts_hmem, dictSize(server.lua_scripts),
-        server.maxmemory, maxmemory_hmem, evict_policy, mh->allocator_frag,
-        mh->allocator_frag_bytes, mh->allocator_rss, mh->allocator_rss_bytes,
-        mh->rss_extra, mh->rss_extra_bytes,
+            (unsigned long)total_system_mem,
+            total_system_hmem,
+            memory_lua,
+            used_memory_lua_hmem,
+            (long long) mh->lua_caches,
+            used_memory_scripts_hmem,
+            dictSize(server.lua_scripts),
+            server.maxmemory,
+            maxmemory_hmem,
+            evict_policy,
+            mh->allocator_frag,
+            mh->allocator_frag_bytes,
+            mh->allocator_rss,
+            mh->allocator_rss_bytes,
+            mh->rss_extra,
+            mh->rss_extra_bytes,
@@ -2544,3 +2780,10 @@ sds genRedisInfoString(char *section) {
-        mh->total_frag_bytes, freeMemoryGetNotCountedMemory(), mh->repl_backlog,
-        mh->clients_slaves, mh->clients_normal, mh->aof_buffer, ZMALLOC_LIB,
-        server.active_defrag_running, lazyfreeGetPendingObjectsCount());
+            mh->total_frag_bytes,
+            freeMemoryGetNotCountedMemory(),
+            mh->repl_backlog,
+            mh->clients_slaves,
+            mh->clients_normal,
+            mh->aof_buffer,
+            ZMALLOC_LIB,
+            server.active_defrag_running,
+            lazyfreeGetPendingObjectsCount()
+        );
@@ -2551,2 +2794 @@ sds genRedisInfoString(char *section) {
-    info = sdscatprintf(
-        info,
+        info = sdscatprintf(info,
@@ -2572 +2814,3 @@ sds genRedisInfoString(char *section) {
-        server.loading, server.dirty, server.rdb_child_pid != -1,
+            server.loading,
+            server.dirty,
+            server.rdb_child_pid != -1,
@@ -2576,5 +2820,6 @@ sds genRedisInfoString(char *section) {
-        (intmax_t)((server.rdb_child_pid == -1)
-                       ? -1
-                       : time(NULL) - server.rdb_save_time_start),
-        server.stat_rdb_cow_bytes, server.aof_state != AOF_OFF,
-        server.aof_child_pid != -1, server.aof_rewrite_scheduled,
+            (intmax_t)((server.rdb_child_pid == -1) ?
+                -1 : time(NULL)-server.rdb_save_time_start),
+            server.stat_rdb_cow_bytes,
+            server.aof_state != AOF_OFF,
+            server.aof_child_pid != -1,
+            server.aof_rewrite_scheduled,
@@ -2582,3 +2827,2 @@ sds genRedisInfoString(char *section) {
-        (intmax_t)((server.aof_child_pid == -1)
-                       ? -1
-                       : time(NULL) - server.aof_rewrite_time_start),
+            (intmax_t)((server.aof_child_pid == -1) ?
+                -1 : time(NULL)-server.aof_rewrite_time_start),
@@ -2587 +2831,2 @@ sds genRedisInfoString(char *section) {
-        server.stat_aof_cow_bytes, server.module_child_pid != -1,
+            server.stat_aof_cow_bytes,
+            server.module_child_pid != -1,
@@ -2590,2 +2835 @@ sds genRedisInfoString(char *section) {
-      info = sdscatprintf(
-          info,
+            info = sdscatprintf(info,
@@ -2600,3 +2844,6 @@ sds genRedisInfoString(char *section) {
-          (long long)server.aof_rewrite_base_size, server.aof_rewrite_scheduled,
-          sdslen(server.aof_buf), aofRewriteBufferSize(),
-          bioPendingJobsOfType(BIO_AOF_FSYNC), server.aof_delayed_fsync);
+                (long long) server.aof_rewrite_base_size,
+                server.aof_rewrite_scheduled,
+                sdslen(server.aof_buf),
+                aofRewriteBufferSize(),
+                bioPendingJobsOfType(BIO_AOF_FSYNC),
+                server.aof_delayed_fsync);
@@ -2607,2 +2854,2 @@ sds genRedisInfoString(char *section) {
-      off_t remaining_bytes =
-          server.loading_total_bytes - server.loading_loaded_bytes;
+            off_t remaining_bytes = server.loading_total_bytes-
+                                    server.loading_loaded_bytes;
@@ -2610,2 +2857 @@ sds genRedisInfoString(char *section) {
-              (server.loading_total_bytes + 1)) *
-             100;
+                   (server.loading_total_bytes+1)) * 100;
@@ -2626,2 +2872,4 @@ sds genRedisInfoString(char *section) {
-                          (unsigned long long)server.loading_loaded_bytes, perc,
-                          (intmax_t)eta);
+                (unsigned long long) server.loading_loaded_bytes,
+                perc,
+                (intmax_t)eta
+            );
@@ -2632,2 +2880 @@ sds genRedisInfoString(char *section) {
-    info = sdscatprintf(
-        info,
+        info = sdscatprintf(info,
@@ -2662 +2909,2 @@ sds genRedisInfoString(char *section) {
-        server.stat_numconnections, server.stat_numcommands,
+            server.stat_numconnections,
+            server.stat_numcommands,
@@ -2664 +2912,2 @@ sds genRedisInfoString(char *section) {
-        server.stat_net_input_bytes, server.stat_net_output_bytes,
+            server.stat_net_input_bytes,
+            server.stat_net_output_bytes,
@@ -2667,10 +2916,20 @@ sds genRedisInfoString(char *section) {
-        server.stat_rejected_conn, server.stat_sync_full,
-        server.stat_sync_partial_ok, server.stat_sync_partial_err,
-        server.stat_expiredkeys, server.stat_expired_stale_perc * 100,
-        server.stat_expired_time_cap_reached_count, server.stat_evictedkeys,
-        server.stat_keyspace_hits, server.stat_keyspace_misses,
-        dictSize(server.pubsub_channels), listLength(server.pubsub_patterns),
-        server.stat_fork_time, dictSize(server.migrate_cached_sockets),
-        getSlaveKeyWithExpireCount(), server.stat_active_defrag_hits,
-        server.stat_active_defrag_misses, server.stat_active_defrag_key_hits,
-        server.stat_active_defrag_key_misses, trackingGetUsedSlots());
+            server.stat_rejected_conn,
+            server.stat_sync_full,
+            server.stat_sync_partial_ok,
+            server.stat_sync_partial_err,
+            server.stat_expiredkeys,
+            server.stat_expired_stale_perc*100,
+            server.stat_expired_time_cap_reached_count,
+            server.stat_evictedkeys,
+            server.stat_keyspace_hits,
+            server.stat_keyspace_misses,
+            dictSize(server.pubsub_channels),
+            listLength(server.pubsub_patterns),
+            server.stat_fork_time,
+            dictSize(server.migrate_cached_sockets),
+            getSlaveKeyWithExpireCount(),
+            server.stat_active_defrag_hits,
+            server.stat_active_defrag_misses,
+            server.stat_active_defrag_key_hits,
+            server.stat_active_defrag_key_misses,
+            trackingGetUsedSlots());
@@ -2690,2 +2949 @@ sds genRedisInfoString(char *section) {
-      info = sdscatprintf(
-          info,
+            info = sdscatprintf(info,
@@ -2697,7 +2955,10 @@ sds genRedisInfoString(char *section) {
-          "slave_repl_offset:%lld\r\n",
-          server.masterhost, server.masterport,
-          (server.repl_state == REPL_STATE_CONNECTED) ? "up" : "down",
-          server.master
-              ? ((int)(server.unixtime - server.master->lastinteraction))
-              : -1,
-          server.repl_state == REPL_STATE_TRANSFER, slave_repl_offset);
+                "slave_repl_offset:%lld\r\n"
+                ,server.masterhost,
+                server.masterport,
+                (server.repl_state == REPL_STATE_CONNECTED) ?
+                    "up" : "down",
+                server.master ?
+                ((int)(server.unixtime-server.master->lastinteraction)) : -1,
+                server.repl_state == REPL_STATE_TRANSFER,
+                slave_repl_offset
+            );
@@ -2705,2 +2966 @@ sds genRedisInfoString(char *section) {
-        info = sdscatprintf(
-            info,
+                info = sdscatprintf(info,
@@ -2708,3 +2968,5 @@ sds genRedisInfoString(char *section) {
-            "master_sync_last_io_seconds_ago:%d\r\n",
-            (long long)(server.repl_transfer_size - server.repl_transfer_read),
-            (int)(server.unixtime - server.repl_transfer_lastio));
+                    "master_sync_last_io_seconds_ago:%d\r\n"
+                    , (long long)
+                        (server.repl_transfer_size - server.repl_transfer_read),
+                    (int)(server.unixtime-server.repl_transfer_lastio)
+                );
@@ -2713,2 +2975,2 @@ sds genRedisInfoString(char *section) {
-        info =
-            sdscatprintf(info, "master_link_down_since_seconds:%jd\r\n",
+                info = sdscatprintf(info,
+                    "master_link_down_since_seconds:%jd\r\n",
@@ -2720 +2982,2 @@ sds genRedisInfoString(char *section) {
-                          server.slave_priority, server.repl_slave_ro);
+                server.slave_priority,
+                server.repl_slave_ro);
@@ -2722 +2985,2 @@ sds genRedisInfoString(char *section) {
-    info = sdscatprintf(info, "connected_slaves:%lu\r\n",
+        info = sdscatprintf(info,
+            "connected_slaves:%lu\r\n",
@@ -2724,2 +2988,4 @@ sds genRedisInfoString(char *section) {
-    if (server.repl_min_slaves_to_write && server.repl_min_slaves_max_lag) {
-      info = sdscatprintf(info, "min_slaves_good_slaves:%d\r\n",
+        if (server.repl_min_slaves_to_write &&
+            server.repl_min_slaves_max_lag) {
+            info = sdscatprintf(info,
+                "min_slaves_good_slaves:%d\r\n",
@@ -2762,2 +3028,2 @@ sds genRedisInfoString(char *section) {
-                            slaveid, slaveip, slave->slave_listening_port,
-                            state, slave->repl_ack_off, lag);
+                    slaveid,slaveip,slave->slave_listening_port,state,
+                    slave->repl_ack_off, lag);
@@ -2776,4 +3042,8 @@ sds genRedisInfoString(char *section) {
-                        server.replid, server.replid2,
-                        server.master_repl_offset, server.second_replid_offset,
-                        server.repl_backlog != NULL, server.repl_backlog_size,
-                        server.repl_backlog_off, server.repl_backlog_histlen);
+            server.replid,
+            server.replid2,
+            server.master_repl_offset,
+            server.second_replid_offset,
+            server.repl_backlog != NULL,
+            server.repl_backlog_size,
+            server.repl_backlog_off,
+            server.repl_backlog_histlen);
@@ -2783,2 +3053 @@ sds genRedisInfoString(char *section) {
-    info = sdscatprintf(
-        info,
+        info = sdscatprintf(info,
@@ -2810,2 +3079,2 @@ sds genRedisInfoString(char *section) {
-      info = sdscatprintf(
-          info, "cmdstat_%s:calls=%lld,usec=%lld,usec_per_call=%.2f\r\n",
+            info = sdscatprintf(info,
+                "cmdstat_%s:calls=%lld,usec=%lld,usec_per_call=%.2f\r\n",
@@ -2832,2 +3101,2 @@ sds genRedisInfoString(char *section) {
-        info =
-            sdscatprintf(info, "db%d:keys=%lld,expires=%lld,avg_ttl=%lld\r\n",
+                info = sdscatprintf(info,
+                    "db%d:keys=%lld,expires=%lld,avg_ttl=%lld\r\n",
@@ -2840 +3109,2 @@ sds genRedisInfoString(char *section) {
-    info = modulesCollectInfo(info, everything || modules ? NULL : section,
+        info = modulesCollectInfo(info,
+                                  everything || modules ? NULL: section,
@@ -2876,6 +3146 @@ void linuxMemoryWarnings(void) {
-    serverLog(
-        LL_WARNING,
-        "WARNING overcommit_memory is set to 0! Background save may fail under "
-        "low memory condition. To fix this issue add 'vm.overcommit_memory = "
-        "1' to /etc/sysctl.conf and then reboot or run the command 'sysctl "
-        "vm.overcommit_memory=1' for this to take effect.");
+        serverLog(LL_WARNING,"WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.");
@@ -2884,7 +3149 @@ void linuxMemoryWarnings(void) {
-    serverLog(LL_WARNING,
-              "WARNING you have Transparent Huge Pages (THP) support enabled "
-              "in your kernel. This will create latency and memory usage "
-              "issues with Redis. To fix this issue run the command 'echo "
-              "never > /sys/kernel/mm/transparent_hugepage/enabled' as root, "
-              "and add it to your /etc/rc.local in order to retain the setting "
-              "after a reboot. Redis must be restarted after THP is disabled.");
+        serverLog(LL_WARNING,"WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.");
@@ -2915,2 +3174,6 @@ void version(void) {
-         REDIS_VERSION, redisGitSHA1(), atoi(redisGitDirty()) > 0, ZMALLOC_LIB,
-         sizeof(long) == 4 ? 32 : 64, (unsigned long long)redisBuildId());
+        REDIS_VERSION,
+        redisGitSHA1(),
+        atoi(redisGitDirty()) > 0,
+        ZMALLOC_LIB,
+        sizeof(long) == 4 ? 32 : 64,
+        (unsigned long long) redisBuildId());
@@ -2929,4 +3192,2 @@ void usage(void) {
-  fprintf(stderr,
-          "       ./redis-server --port 7777 --replicaof 127.0.0.1 8888\n");
-  fprintf(stderr,
-          "       ./redis-server /etc/myredis.conf --loglevel verbose\n\n");
+    fprintf(stderr,"       ./redis-server --port 7777 --replicaof 127.0.0.1 8888\n");
+    fprintf(stderr,"       ./redis-server /etc/myredis.conf --loglevel verbose\n\n");
@@ -2941,7 +3202,5 @@ void redisAsciiArt(void) {
-  if (server.cluster_enabled)
-    mode = "cluster";
-  else if (server.sentinel_mode)
-    mode = "sentinel";
-  else
-    mode = "standalone";
-  int show_logo = ((!server.syslog_enabled && server.logfile[0] == '\0' &&
+    if (server.cluster_enabled) mode = "cluster";
+    else if (server.sentinel_mode) mode = "sentinel";
+    else mode = "standalone";
+    int show_logo = ((!server.syslog_enabled &&
+                      server.logfile[0] == '\0' &&
@@ -2951,2 +3210,4 @@ void redisAsciiArt(void) {
-    serverLog(LL_NOTICE, "Running mode=%s, port=%d.", mode,
-              server.port ? server.port : server.tls_port);
+        serverLog(LL_NOTICE,
+            "Running mode=%s, port=%d.",
+            mode, server.port ? server.port : server.tls_port
+        );
@@ -2954 +3215,3 @@ void redisAsciiArt(void) {
-    snprintf(buf, 1024 * 16, ascii_logo, REDIS_VERSION, redisGitSHA1(),
+        snprintf(buf,1024*16,ascii_logo,
+            REDIS_VERSION,
+            redisGitSHA1(),
@@ -2956,2 +3219,4 @@ void redisAsciiArt(void) {
-             (sizeof(long) == 8) ? "64" : "32", mode,
-             server.port ? server.port : server.tls_port, (long)getpid());
+            (sizeof(long) == 8) ? "64" : "32",
+            mode, server.port ? server.port : server.tls_port,
+            (long) getpid()
+        );
@@ -2979,2 +3244 @@ static void sigShutdownHandler(int sig) {
-    serverLogFromHandler(
-        LL_WARNING, "Received shutdown signal during loading, exiting now.");
+        serverLogFromHandler(LL_WARNING, "Received shutdown signal during loading, exiting now.");
@@ -3025,3 +3289 @@ int redisFork() {
-    server.stat_fork_rate = (double)zmalloc_used_memory() * 1000000 /
-                            server.stat_fork_time /
-                            (1024 * 1024 * 1024);
+        server.stat_fork_rate = (double) zmalloc_used_memory() * 1000000 / server.stat_fork_time / (1024*1024*1024);
@@ -3039,2 +3301,3 @@ void sendChildCOWInfo(int ptype, char *pname) {
-    serverLog(LL_NOTICE, "%s: %zu MB of memory used by copy-on-write", pname,
-              private_dirty / (1024 * 1024));
+        serverLog(LL_NOTICE,
+            "%s: %zu MB of memory used by copy-on-write",
+            pname, private_dirty/(1024*1024));
@@ -3057,2 +3320 @@ void loadDataFromDisk(void) {
-      serverLog(LL_NOTICE, "DB loaded from append only file: %.3f seconds",
-                (float)(ustime() - start) / 1000000);
+            serverLog(LL_NOTICE,"DB loaded from append only file: %.3f seconds",(float)(ustime()-start)/1000000);
@@ -3065,3 +3327,6 @@ void loadDataFromDisk(void) {
-           (server.cluster_enabled && nodeIsSlave(server.cluster->myself))) &&
-          rsi.repl_id_is_set && rsi.repl_offset != -1 &&
-          rsi.repl_stream_db != -1) {
+                (server.cluster_enabled &&
+                nodeIsSlave(server.cluster->myself))) &&
+                rsi.repl_id_is_set &&
+                rsi.repl_offset != -1 &&
+                rsi.repl_stream_db != -1)
+            {
@@ -3074,2 +3339 @@ void loadDataFromDisk(void) {
-      serverLog(LL_WARNING, "Fatal error loading the DB: %s. Exiting.",
-                strerror(errno));
+            serverLog(LL_WARNING,"Fatal error loading the DB: %s. Exiting.",strerror(errno));
@@ -3081 +3345,2 @@ void redisOutOfMemoryHandler(size_t allocation_size) {
-  serverLog(LL_WARNING, "Out Of Memory allocating %zu bytes!", allocation_size);
+    serverLog(LL_WARNING,"Out Of Memory allocating %zu bytes!",
+        allocation_size);
@@ -3087,5 +3352,4 @@ void redisSetProcTitle(char *title) {
-  if (server.cluster_enabled)
-    server_mode = " [cluster]";
-  else if (server.sentinel_mode)
-    server_mode = " [sentinel]";
-  setproctitle("%s %s:%d%s", title,
+    if (server.cluster_enabled) server_mode = " [cluster]";
+    else if (server.sentinel_mode) server_mode = " [sentinel]";
+    setproctitle("%s %s:%d%s",
+        title,
@@ -3093 +3357,2 @@ void redisSetProcTitle(char *title) {
-               server.port ? server.port : server.tls_port, server_mode);
+        server.port ? server.port : server.tls_port,
+        server_mode);
@@ -3127 +3392,2 @@ int redisSupervisedSystemd(void) {
-    serverLog(LL_WARNING, "Can't connect to systemd socket %s", notify_socket);
+        serverLog(LL_WARNING,
+                "Can't connect to systemd socket %s", notify_socket);
@@ -3134 +3400,2 @@ int redisSupervisedSystemd(void) {
-  if (notify_socket[0] == '@') su.sun_path[0] = '\0';
+    if (notify_socket[0] == '@')
+        su.sun_path[0] = '\0';
@@ -3140,2 +3407,2 @@ int redisSupervisedSystemd(void) {
-  hdr.msg_namelen =
-      offsetof(struct sockaddr_un, sun_path) + strlen(notify_socket);
+    hdr.msg_namelen = offsetof(struct sockaddr_un, sun_path) +
+        strlen(notify_socket);
@@ -3207,3 +3474,3 @@ int main(int argc, char **argv) {
-  char hashseed[16];
-  getRandomHexChars(hashseed, sizeof(hashseed));
-  dictSetHashFunctionSeed((uint8_t *)hashseed);
+    uint8_t hashseed[16];
+    getRandomBytes(hashseed,sizeof(hashseed));
+    dictSetHashFunctionSeed(hashseed);
@@ -3213,0 +3481 @@ int main(int argc, char **argv) {
+    tlsInit();
@@ -3230,3 +3498,4 @@ int main(int argc, char **argv) {
-    if (strcmp(argv[1], "-v") == 0 || strcmp(argv[1], "--version") == 0)
-      version();
-    if (strcmp(argv[1], "--help") == 0 || strcmp(argv[1], "-h") == 0) usage();
+        if (strcmp(argv[1], "-v") == 0 ||
+            strcmp(argv[1], "--version") == 0) version();
+        if (strcmp(argv[1], "--help") == 0 ||
+            strcmp(argv[1], "-h") == 0) usage();
@@ -3238,2 +3507 @@ int main(int argc, char **argv) {
-        fprintf(stderr,
-                "Please specify the amount of memory to test in megabytes.\n");
+                fprintf(stderr,"Please specify the amount of memory to test in megabytes.\n");
@@ -3267,3 +3535,3 @@ int main(int argc, char **argv) {
-      serverLog(LL_WARNING, "Sentinel config from STDIN not allowed.");
-      serverLog(
-          LL_WARNING,
+            serverLog(LL_WARNING,
+                "Sentinel config from STDIN not allowed.");
+            serverLog(LL_WARNING,
@@ -3278,2 +3546 @@ int main(int argc, char **argv) {
-  serverLog(
-      LL_WARNING,
+    serverLog(LL_WARNING,
@@ -3281,2 +3548,5 @@ int main(int argc, char **argv) {
-      REDIS_VERSION, (sizeof(long) == 8) ? 64 : 32, redisGitSHA1(),
-      strtol(redisGitDirty(), NULL, 10) > 0, (int)getpid());
+            REDIS_VERSION,
+            (sizeof(long) == 8) ? 64 : 32,
+            redisGitSHA1(),
+            strtol(redisGitDirty(),NULL,10) > 0,
+            (int)getpid());
@@ -3284,4 +3554 @@ int main(int argc, char **argv) {
-    serverLog(LL_WARNING,
-              "Warning: no config file specified, using the default config. In "
-              "order to specify a config file use %s /path/to/%s.conf",
-              argv[0], server.sentinel_mode ? "sentinel" : "redis");
+        serverLog(LL_WARNING, "Warning: no config file specified, using the default config. In order to specify a config file use %s /path/to/%s.conf", argv[0], server.sentinel_mode ? "sentinel" : "redis");
@@ -3305,0 +3573 @@ int main(int argc, char **argv) {
+        InitServerLast();
@@ -3315 +3583 @@ int main(int argc, char **argv) {
-    if (server.ipfd_count > 0)
+        if (server.ipfd_count > 0 || server.tlsfd_count > 0)
@@ -3318,3 +3586 @@ int main(int argc, char **argv) {
-      serverLog(LL_NOTICE,
-                "The server is now ready to accept connections at %s",
-                server.unixsocket);
+            serverLog(LL_NOTICE,"The server is now ready to accept connections at %s", server.unixsocket);
@@ -3321,0 +3588 @@ int main(int argc, char **argv) {
+        InitServerLast();
@@ -3325,5 +3592 @@ int main(int argc, char **argv) {
-    serverLog(LL_WARNING,
-              "WARNING: You specified a maxmemory value that is less than 1MB "
-              "(current value is %llu bytes). Are you sure this is what you "
-              "really want?",
-              server.maxmemory);
+        serverLog(LL_WARNING,"WARNING: You specified a maxmemory value that is less than 1MB (current value is %llu bytes). Are you sure this is what you really want?", server.maxmemory);
