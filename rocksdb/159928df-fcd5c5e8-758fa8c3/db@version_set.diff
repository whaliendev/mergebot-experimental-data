diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/rocksdb/159928df-fcd5c5e8-758fa8c3/db@version_set.no_comments_mergebot.cc b/home/whalien/codebase/cpp/mergebot/eva/output/rocksdb/159928df-fcd5c5e8-758fa8c3/db@version_set.no_comments_merged.cc
index 775392b..d5730af 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/rocksdb/159928df-fcd5c5e8-758fa8c3/db@version_set.no_comments_mergebot.cc
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/rocksdb/159928df-fcd5c5e8-758fa8c3/db@version_set.no_comments_merged.cc
@@ -56 +56,2 @@ int FindFile(const InternalKeyComparator& icmp,
-             const std::vector<FileMetaData*>& files, const Slice& key) {
+             const std::vector<FileMetaData*>& files,
+             const Slice& key) {
@@ -70,2 +71,2 @@ int FindFile(const InternalKeyComparator& icmp,
-static bool AfterFile(const Comparator* ucmp, const Slice* user_key,
-                      const FileMetaData* f) {
+static bool AfterFile(const Comparator* ucmp,
+                      const Slice* user_key, const FileMetaData* f) {
@@ -75,2 +76,2 @@ static bool AfterFile(const Comparator* ucmp, const Slice* user_key,
-static bool BeforeFile(const Comparator* ucmp, const Slice* user_key,
-                       const FileMetaData* f) {
+static bool BeforeFile(const Comparator* ucmp,
+                       const Slice* user_key, const FileMetaData* f) {
@@ -80 +81,2 @@ static bool BeforeFile(const Comparator* ucmp, const Slice* user_key,
-bool SomeFileOverlapsRange(const InternalKeyComparator& icmp,
+bool SomeFileOverlapsRange(
+    const InternalKeyComparator& icmp,
@@ -99,2 +101 @@ bool SomeFileOverlapsRange(const InternalKeyComparator& icmp,
-    InternalKey small(*smallest_user_key, kMaxSequenceNumber,
-                      kValueTypeForSeek);
+    InternalKey small(*smallest_user_key, kMaxSequenceNumber,kValueTypeForSeek);
@@ -112 +113,6 @@ class Version::LevelFileNumIterator : public Iterator {
-      : icmp_(icmp), flist_(flist), index_(flist->size()) {
+      : icmp_(icmp),
+        flist_(flist),
+        index_(flist->size()) {
+  }
+  virtual bool Valid() const {
+    return index_ < flist_->size();
@@ -114 +119,0 @@ class Version::LevelFileNumIterator : public Iterator {
-  virtual bool Valid() const { return index_ < flist_->size(); }
@@ -180,2 +185,2 @@ bool Version::PrefixMayMatch(const ReadOptions& options,
-  } else if (ExtractUserKey(level_iter->key())
-                 .starts_with(ExtractUserKey(internal_prefix))) {
+  } else if (ExtractUserKey(level_iter->key()).starts_with(
+                                             ExtractUserKey(internal_prefix))) {
@@ -238,2 +243,2 @@ Iterator* Version::NewConcatenatingIterator(const ReadOptions& options,
-    if (!PrefixMayMatch(options, soptions, internal_prefix.Encode(),
-                        level_iter)) {
+    if (!PrefixMayMatch(options, soptions,
+                        internal_prefix.Encode(), level_iter)) {
@@ -368 +372,0 @@ Version::Version(ColumnFamilyData* cfd, VersionSet* vset,
-      num_levels_(vset->num_levels_),
@@ -370 +373,0 @@ Version::Version(ColumnFamilyData* cfd, VersionSet* vset,
-      finalized_(false),
@@ -379,4 +382,8 @@ Version::Version(ColumnFamilyData* cfd, VersionSet* vset,
-void Version::Get(const ReadOptions& options, const LookupKey& k,
-                  std::string* value, Status* status,
-                  MergeContext* merge_context, GetStats* stats,
-                  const Options& db_options, bool* value_found) {
+void Version::Get(const ReadOptions& options,
+                  const LookupKey& k,
+                  std::string* value,
+                  Status* status,
+                  MergeContext* merge_context,
+                  GetStats* stats,
+                  const Options& db_options,
+                  bool* value_found) {
@@ -475,2 +482,2 @@ void Version::Get(const ReadOptions& options, const LookupKey& k,
-                                  saver.merge_context->GetOperands(), value,
-                                  logger)) {
+                                  saver.merge_context->GetOperands(),
+                                  value, logger)) {
@@ -501,18 +507,0 @@ void Version::ComputeCompactionScore(
-<<<<<<< HEAD
-  assert(!finalized_);
-  finalized_ = true;
-  if (cfd_->options()->compaction_style == kCompactionStyleUniversal) {
-    std::sort(files_[0].begin(), files_[0].end(), NewestFirstBySeqNo);
-  } else {
-    std::sort(files_[0].begin(), files_[0].end(), NewestFirst);
-  }
-||||||| 758fa8c35
-  assert(!finalized_);
-  finalized_ = true;
-  if (vset_->options_->compaction_style == kCompactionStyleUniversal) {
-    std::sort(files_[0].begin(), files_[0].end(), NewestFirstBySeqNo);
-  } else {
-    std::sort(files_[0].begin(), files_[0].end(), NewestFirst);
-  }
-=======
->>>>>>> fcd5c5e8289d88f1100d24e7331020ee3d280464
@@ -623 +612,3 @@ void Version::UpdateFilesBySize() {
-void Version::Ref() { ++refs_; }
+void Version::Ref() {
+  ++refs_;
+}
@@ -648 +639,2 @@ bool Version::NeedsCompaction() const {
-bool Version::OverlapInLevel(int level, const Slice* smallest_user_key,
+bool Version::OverlapInLevel(int level,
+                             const Slice* smallest_user_key,
@@ -654 +646,2 @@ bool Version::OverlapInLevel(int level, const Slice* smallest_user_key,
-int Version::PickLevelForMemTableOutput(const Slice& smallest_user_key,
+int Version::PickLevelForMemTableOutput(
+    const Slice& smallest_user_key,
@@ -680 +673,2 @@ int Version::PickLevelForMemTableOutput(const Slice& smallest_user_key,
-void Version::GetOverlappingInputs(int level, const InternalKey* begin,
+void Version::GetOverlappingInputs(int level,
+                                   const InternalKey* begin,
@@ -683 +677,2 @@ void Version::GetOverlappingInputs(int level, const InternalKey* begin,
-                                   int hint_index, int* file_index) {
+                                   int hint_index,
+                                   int* file_index) {
@@ -714,2 +709,2 @@ void Version::GetOverlappingInputs(int level, const InternalKey* begin,
-        } else if (end != nullptr &&
-                   user_cmp->Compare(file_limit, user_end) > 0) {
+        } else if (end != nullptr
+            && user_cmp->Compare(file_limit, user_end) > 0) {
@@ -727,2 +722,6 @@ void Version::GetOverlappingInputsBinarySearch(
-    int level, const Slice& user_begin, const Slice& user_end,
-    std::vector<FileMetaData*>* inputs, int hint_index, int* file_index) {
+    int level,
+    const Slice& user_begin,
+    const Slice& user_end,
+    std::vector<FileMetaData*>* inputs,
+    int hint_index,
+    int* file_index) {
@@ -761 +760,3 @@ void Version::GetOverlappingInputsBinarySearch(
-void Version::ExtendOverlappingInputs(int level, const Slice& user_begin,
+void Version::ExtendOverlappingInputs(
+    int level,
+    const Slice& user_begin,
@@ -808 +809,2 @@ void Version::ExtendOverlappingInputs(int level, const Slice& user_begin,
-bool Version::HasOverlappingUserKey(const std::vector<FileMetaData*>* inputs,
+bool Version::HasOverlappingUserKey(
+    const std::vector<FileMetaData*>* inputs,
@@ -859,5 +861,8 @@ const char* Version::LevelFileSummary(FileSummaryStorage* scratch,
-    int ret = snprintf(
-        scratch->buffer + len, sz, "#%lu(seq=%lu,sz=%lu,%lu) ",
-        (unsigned long)f->number, (unsigned long)f->smallest_seqno,
-        (unsigned long)f->file_size, (unsigned long)f->being_compacted);
-    if (ret < 0 || ret >= sz) break;
+    int ret = snprintf(scratch->buffer + len, sz,
+                       "#%lu(seq=%lu,sz=%lu,%lu) ",
+                       (unsigned long)f->number,
+                       (unsigned long)f->smallest_seqno,
+                       (unsigned long)f->file_size,
+                       (unsigned long)f->being_compacted);
+    if (ret < 0 || ret >= sz)
+      break;
@@ -960,2 +965,2 @@ class VersionSet::Builder {
-      for (FileSet::const_iterator it = added->begin(); it != added->end();
-           ++it) {
+      for (FileSet::const_iterator it = added->begin();
+          it != added->end(); ++it) {
@@ -1069 +1074,2 @@ class VersionSet::Builder {
-             base_iter != bpos; ++base_iter) {
+             base_iter != bpos;
+             ++base_iter) {
@@ -1078 +1084 @@ class VersionSet::Builder {
-    if (v->vset_->options_->compaction_style == kCompactionStyleUniversal) {
+    if (cfd_->options()->compaction_style == kCompactionStyleUniversal) {
@@ -1112,2 +1118,2 @@ VersionSet::VersionSet(const std::string& dbname, const DBOptions* options,
-    : column_family_set_(
-          new ColumnFamilySet(dbname, options, storage_options, table_cache)),
+    : column_family_set_(new ColumnFamilySet(dbname, options, storage_options,
+                                             table_cache)),
@@ -1133,7 +1138,0 @@ VersionSet::~VersionSet() {
-{
-  column_family_set_.reset();
-  for (auto file : obsolete_files_) {
-    delete file;
-  }
-  obsolete_files_.clear();
-}
@@ -1241 +1239,0 @@ Status VersionSet::LogAndApply(ColumnFamilyData* column_family_data,
-<<<<<<< HEAD
@@ -1243,3 +1240,0 @@ Status VersionSet::LogAndApply(ColumnFamilyData* column_family_data,
-||||||| 758fa8c35
-=======
->>>>>>> fcd5c5e8289d88f1100d24e7331020ee3d280464
@@ -1393,2 +1388,3 @@ Status VersionSet::Recover(
-  Status s =
-      ReadFileToString(env_, CurrentFileName(dbname_), &manifest_filename);
+  Status s = ReadFileToString(
+      env_, CurrentFileName(dbname_), &manifest_filename
+  );
@@ -1398 +1394,2 @@ Status VersionSet::Recover(
-  if (manifest_filename.empty() || manifest_filename.back() != '\n') {
+  if (manifest_filename.empty() ||
+      manifest_filename.back() != '\n') {
@@ -1593 +1589,0 @@ Status VersionSet::Recover(
-<<<<<<< HEAD
@@ -1595 +1591 @@ Status VersionSet::Recover(
-      v->Finalize(size_being_compacted);
+      v->ComputeCompactionScore(size_being_compacted);
@@ -1599,7 +1594,0 @@ Status VersionSet::Recover(
-||||||| 758fa8c35
-      compaction_picker_->SizeBeingCompacted(size_being_compacted);
-      v->Finalize(size_being_compacted);
-=======
-      compaction_picker_->SizeBeingCompacted(size_being_compacted);
-      v->ComputeCompactionScore(size_being_compacted);
->>>>>>> fcd5c5e8289d88f1100d24e7331020ee3d280464
@@ -1610,2 +1599 @@ Status VersionSet::Recover(
-    Log(options_->info_log,
-        "Recovered from manifest file:%s succeeded,"
+    Log(options_->info_log, "Recovered from manifest file:%s succeeded,"
@@ -1616,3 +1604,6 @@ Status VersionSet::Recover(
-        manifest_filename.c_str(), (unsigned long)manifest_file_number_,
-        (unsigned long)next_file_number_, (unsigned long)last_sequence_,
-        (unsigned long)log_number, (unsigned long)prev_log_number_,
+        manifest_filename.c_str(),
+        (unsigned long)manifest_file_number_,
+        (unsigned long)next_file_number_,
+        (unsigned long)last_sequence_,
+        (unsigned long)log_number,
+        (unsigned long)prev_log_number_,
@@ -1790,2 +1781,2 @@ Status VersionSet::DumpManifest(Options& options, std::string& dscname,
-        printf("*************************Edit[%d] = %s\n", count,
-               edit.DebugString(hex).c_str());
+        printf("*************************Edit[%d] = %s\n",
+                count, edit.DebugString(hex).c_str());
@@ -1876 +1866,0 @@ Status VersionSet::DumpManifest(Options& options, std::string& dscname,
-<<<<<<< HEAD
@@ -1878 +1868 @@ Status VersionSet::DumpManifest(Options& options, std::string& dscname,
-      v->Finalize(size_being_compacted);
+      v->ComputeCompactionScore(size_being_compacted);
@@ -1893,7 +1882,0 @@ Status VersionSet::DumpManifest(Options& options, std::string& dscname,
-||||||| 758fa8c35
-        compaction_picker_->SizeBeingCompacted(size_being_compacted);
-        v->Finalize(size_being_compacted);
-=======
-        compaction_picker_->SizeBeingCompacted(size_being_compacted);
-        v->ComputeCompactionScore(size_being_compacted);
->>>>>>> fcd5c5e8289d88f1100d24e7331020ee3d280464
@@ -1944,2 +1927,7 @@ Status VersionSet::WriteSnapshot(log::Writer* log) {
-          edit.AddFile(level, f->number, f->file_size, f->smallest, f->largest,
-                       f->smallest_seqno, f->largest_seqno);
+          edit.AddFile(level,
+                       f->number,
+                       f->file_size,
+                       f->smallest,
+                       f->largest,
+                       f->smallest_seqno,
+                       f->largest_seqno);
@@ -1961 +1949,2 @@ bool VersionSet::ManifestContains(uint64_t manifest_file_number,
-  std::string fname = DescriptorFileName(dbname_, manifest_file_number);
+  std::string fname =
+      DescriptorFileName(dbname_, manifest_file_number);
@@ -2155,2 +2143,0 @@ ColumnFamilyData* VersionSet::CreateColumnFamily(
-  std::vector<uint64_t> size_being_compacted(options.num_levels - 1, 0);
-  v->Finalize(size_being_compacted);
