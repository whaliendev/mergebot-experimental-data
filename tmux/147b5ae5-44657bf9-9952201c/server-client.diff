diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/147b5ae5-44657bf9-9952201c/server-client.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/147b5ae5-44657bf9-9952201c/server-client.no_comments_merged.c
index 74cde39..e2c4f8d 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/147b5ae5-44657bf9-9952201c/server-client.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/147b5ae5-44657bf9-9952201c/server-client.no_comments_merged.c
@@ -6,2 +5,0 @@
-#include <imsg.h>
-#include <paths.h>
@@ -29 +27,3 @@ void server_client_dispatch_shell(struct client *);
-int server_client_check_nested(struct client *c) {
+int
+server_client_check_nested(struct client *c)
+{
@@ -32 +32,2 @@ int server_client_check_nested(struct client *c) {
-  if (c->tty.path == NULL) return (0);
+ if (c->tty.path == NULL)
+  return (0);
@@ -34 +35,2 @@ int server_client_check_nested(struct client *c) {
-  if (envent == NULL || *envent->value == '\0') return (0);
+ if (envent == NULL || *envent->value == '\0')
+  return (0);
@@ -36 +38,2 @@ int server_client_check_nested(struct client *c) {
-    if (strcmp(wp->tty, c->tty.path) == 0) return (1);
+  if (strcmp(wp->tty, c->tty.path) == 0)
+   return (1);
@@ -40 +43,3 @@ int server_client_check_nested(struct client *c) {
-void server_client_key_table(struct client *c, const char *name) {
+void
+server_client_key_table(struct client *c, const char *name)
+{
@@ -45 +50,3 @@ void server_client_key_table(struct client *c, const char *name) {
-void server_client_create(int fd) {
+void
+server_client_create(int fd)
+{
@@ -51 +58,2 @@ void server_client_create(int fd) {
-  if (gettimeofday(&c->creation_time, NULL) != 0) fatal("gettimeofday failed");
+ if (gettimeofday(&c->creation_time, NULL) != 0)
+  fatal("gettimeofday failed");
@@ -80,2 +88,5 @@ void server_client_create(int fd) {
-int server_client_open(struct client *c, char **cause) {
-  if (c->flags & CLIENT_CONTROL) return (0);
+int
+server_client_open(struct client *c, char **cause)
+{
+ if (c->flags & CLIENT_CONTROL)
+  return (0);
@@ -90 +101,2 @@ int server_client_open(struct client *c, char **cause) {
-  if (tty_open(&c->tty, cause) != 0) return (-1);
+ if (tty_open(&c->tty, cause) != 0)
+  return (-1);
@@ -93 +105,3 @@ int server_client_open(struct client *c, char **cause) {
-void server_client_lost(struct client *c) {
+void
+server_client_lost(struct client *c)
+{
@@ -102 +116,2 @@ void server_client_lost(struct client *c) {
-  if (c->flags & CLIENT_TERMINAL) tty_free(&c->tty);
+ if (c->flags & CLIENT_TERMINAL)
+  tty_free(&c->tty);
@@ -107,2 +122,4 @@ void server_client_lost(struct client *c) {
-  if (c->stderr_data != c->stdout_data) evbuffer_free(c->stderr_data);
-  if (event_initialized(&c->status_timer)) evtimer_del(&c->status_timer);
+ if (c->stderr_data != c->stdout_data)
+  evbuffer_free(c->stderr_data);
+ if (event_initialized(&c->status_timer))
+  evtimer_del(&c->status_timer);
@@ -114 +131,2 @@ void server_client_lost(struct client *c) {
-  if (event_initialized(&c->identify_timer)) evtimer_del(&c->identify_timer);
+ if (event_initialized(&c->identify_timer))
+  evtimer_del(&c->identify_timer);
@@ -116 +134,2 @@ void server_client_lost(struct client *c) {
-  if (event_initialized(&c->message_timer)) evtimer_del(&c->message_timer);
+ if (event_initialized(&c->message_timer))
+  evtimer_del(&c->message_timer);
@@ -136 +155,3 @@ void server_client_lost(struct client *c) {
-void server_client_unref(struct client *c) {
+void
+server_client_unref(struct client *c)
+{
@@ -142 +163,3 @@ void server_client_unref(struct client *c) {
-void server_client_free(unused int fd, unused short events, void *arg) {
+void
+server_client_free(unused int fd, unused short events, void *arg)
+{
@@ -145 +168,2 @@ void server_client_free(unused int fd, unused short events, void *arg) {
-  if (c->references == 0) free(c);
+ if (c->references == 0)
+  free(c);
@@ -147 +171,3 @@ void server_client_free(unused int fd, unused short events, void *arg) {
-int server_client_check_mouse(struct client *c) {
+int
+server_client_check_mouse(struct client *c)
+{
@@ -156,2 +182,2 @@ int server_client_check_mouse(struct client *c) {
-  log_debug("mouse %02x at %u,%u (last %u,%u) (%d)", m->b, m->x, m->y, m->lx,
-            m->ly, c->tty.mouse_drag_flag);
+ log_debug("mouse %02x at %u,%u (last %u,%u) (%d)", m->b, m->x, m->y,
+     m->lx, m->ly, c->tty.mouse_drag_flag);
@@ -180 +206,2 @@ int server_client_check_mouse(struct client *c) {
-  if (type == NOTYPE) return (KEYC_NONE);
+ if (type == NOTYPE)
+  return (KEYC_NONE);
@@ -185 +212,2 @@ int server_client_check_mouse(struct client *c) {
-    if (w == NULL) return (KEYC_NONE);
+  if (w == NULL)
+   return (KEYC_NONE);
@@ -196 +224,2 @@ int server_client_check_mouse(struct client *c) {
-      if ((wp->xoff + wp->sx == x && wp->yoff <= 1 + y &&
+   if ((wp->xoff + wp->sx == x &&
+       wp->yoff <= 1 + y &&
@@ -198 +227,2 @@ int server_client_check_mouse(struct client *c) {
-          (wp->yoff + wp->sy == y && wp->xoff <= 1 + x &&
+       (wp->yoff + wp->sy == y &&
+       wp->xoff <= 1 + x &&
@@ -206,2 +236,4 @@ int server_client_check_mouse(struct client *c) {
-      if (wp != NULL) where = PANE;
-      log_debug("mouse at %u,%u is on pane %%%u", x, y, wp->id);
+   if (wp != NULL)
+    where = PANE;
+   log_debug("mouse at %u,%u is on pane %%%u", x, y,
+       wp->id);
@@ -209 +241,2 @@ int server_client_check_mouse(struct client *c) {
-    if (where == NOWHERE) return (KEYC_NONE);
+  if (where == NOWHERE)
+   return (KEYC_NONE);
@@ -215 +248,2 @@ int server_client_check_mouse(struct client *c) {
-    if (c->tty.mouse_drag_release != NULL) c->tty.mouse_drag_release(c, m);
+  if (c->tty.mouse_drag_release != NULL)
+   c->tty.mouse_drag_release(c, m);
@@ -231,3 +265,6 @@ int server_client_check_mouse(struct client *c) {
-            if (where == PANE) key = KEYC_MOUSEDRAG1_PANE;
-            if (where == STATUS) key = KEYC_MOUSEDRAG1_STATUS;
-            if (where == BORDER) key = KEYC_MOUSEDRAG1_BORDER;
+    if (where == PANE)
+     key = KEYC_MOUSEDRAG1_PANE;
+    if (where == STATUS)
+     key = KEYC_MOUSEDRAG1_STATUS;
+    if (where == BORDER)
+     key = KEYC_MOUSEDRAG1_BORDER;
@@ -236,3 +273,6 @@ int server_client_check_mouse(struct client *c) {
-            if (where == PANE) key = KEYC_MOUSEDRAG2_PANE;
-            if (where == STATUS) key = KEYC_MOUSEDRAG2_STATUS;
-            if (where == BORDER) key = KEYC_MOUSEDRAG2_BORDER;
+    if (where == PANE)
+     key = KEYC_MOUSEDRAG2_PANE;
+    if (where == STATUS)
+     key = KEYC_MOUSEDRAG2_STATUS;
+    if (where == BORDER)
+     key = KEYC_MOUSEDRAG2_BORDER;
@@ -241,3 +281,6 @@ int server_client_check_mouse(struct client *c) {
-            if (where == PANE) key = KEYC_MOUSEDRAG3_PANE;
-            if (where == STATUS) key = KEYC_MOUSEDRAG3_STATUS;
-            if (where == BORDER) key = KEYC_MOUSEDRAG3_BORDER;
+    if (where == PANE)
+     key = KEYC_MOUSEDRAG3_PANE;
+    if (where == STATUS)
+     key = KEYC_MOUSEDRAG3_STATUS;
+    if (where == BORDER)
+     key = KEYC_MOUSEDRAG3_BORDER;
@@ -251,3 +294,6 @@ int server_client_check_mouse(struct client *c) {
-        if (where == PANE) key = KEYC_WHEELUP_PANE;
-        if (where == STATUS) key = KEYC_WHEELUP_STATUS;
-        if (where == BORDER) key = KEYC_WHEELUP_BORDER;
+   if (where == PANE)
+    key = KEYC_WHEELUP_PANE;
+   if (where == STATUS)
+    key = KEYC_WHEELUP_STATUS;
+   if (where == BORDER)
+    key = KEYC_WHEELUP_BORDER;
@@ -255,3 +301,6 @@ int server_client_check_mouse(struct client *c) {
-        if (where == PANE) key = KEYC_WHEELDOWN_PANE;
-        if (where == STATUS) key = KEYC_WHEELDOWN_STATUS;
-        if (where == BORDER) key = KEYC_WHEELDOWN_BORDER;
+   if (where == PANE)
+    key = KEYC_WHEELDOWN_PANE;
+   if (where == STATUS)
+    key = KEYC_WHEELDOWN_STATUS;
+   if (where == BORDER)
+    key = KEYC_WHEELDOWN_BORDER;
@@ -263,3 +312,6 @@ int server_client_check_mouse(struct client *c) {
-          if (where == PANE) key = KEYC_MOUSEUP1_PANE;
-          if (where == STATUS) key = KEYC_MOUSEUP1_STATUS;
-          if (where == BORDER) key = KEYC_MOUSEUP1_BORDER;
+   if (where == PANE)
+    key = KEYC_MOUSEUP1_PANE;
+   if (where == STATUS)
+    key = KEYC_MOUSEUP1_STATUS;
+   if (where == BORDER)
+    key = KEYC_MOUSEUP1_BORDER;
@@ -268,3 +320,6 @@ int server_client_check_mouse(struct client *c) {
-          if (where == PANE) key = KEYC_MOUSEUP2_PANE;
-          if (where == STATUS) key = KEYC_MOUSEUP2_STATUS;
-          if (where == BORDER) key = KEYC_MOUSEUP2_BORDER;
+   if (where == PANE)
+    key = KEYC_MOUSEUP2_PANE;
+   if (where == STATUS)
+    key = KEYC_MOUSEUP2_STATUS;
+   if (where == BORDER)
+    key = KEYC_MOUSEUP2_BORDER;
@@ -273,3 +328,6 @@ int server_client_check_mouse(struct client *c) {
-          if (where == PANE) key = KEYC_MOUSEUP3_PANE;
-          if (where == STATUS) key = KEYC_MOUSEUP3_STATUS;
-          if (where == BORDER) key = KEYC_MOUSEUP3_BORDER;
+   if (where == PANE)
+    key = KEYC_MOUSEUP3_PANE;
+   if (where == STATUS)
+    key = KEYC_MOUSEUP3_STATUS;
+   if (where == BORDER)
+    key = KEYC_MOUSEUP3_BORDER;
@@ -282,3 +340,6 @@ int server_client_check_mouse(struct client *c) {
-          if (where == PANE) key = KEYC_MOUSEDOWN1_PANE;
-          if (where == STATUS) key = KEYC_MOUSEDOWN1_STATUS;
-          if (where == BORDER) key = KEYC_MOUSEDOWN1_BORDER;
+   if (where == PANE)
+    key = KEYC_MOUSEDOWN1_PANE;
+   if (where == STATUS)
+    key = KEYC_MOUSEDOWN1_STATUS;
+   if (where == BORDER)
+    key = KEYC_MOUSEDOWN1_BORDER;
@@ -287,3 +348,6 @@ int server_client_check_mouse(struct client *c) {
-          if (where == PANE) key = KEYC_MOUSEDOWN2_PANE;
-          if (where == STATUS) key = KEYC_MOUSEDOWN2_STATUS;
-          if (where == BORDER) key = KEYC_MOUSEDOWN2_BORDER;
+   if (where == PANE)
+    key = KEYC_MOUSEDOWN2_PANE;
+   if (where == STATUS)
+    key = KEYC_MOUSEDOWN2_STATUS;
+   if (where == BORDER)
+    key = KEYC_MOUSEDOWN2_BORDER;
@@ -292,3 +356,6 @@ int server_client_check_mouse(struct client *c) {
-          if (where == PANE) key = KEYC_MOUSEDOWN3_PANE;
-          if (where == STATUS) key = KEYC_MOUSEDOWN3_STATUS;
-          if (where == BORDER) key = KEYC_MOUSEDOWN3_BORDER;
+   if (where == PANE)
+    key = KEYC_MOUSEDOWN3_PANE;
+   if (where == STATUS)
+    key = KEYC_MOUSEDOWN3_STATUS;
+   if (where == BORDER)
+    key = KEYC_MOUSEDOWN3_BORDER;
@@ -299,4 +366,8 @@ int server_client_check_mouse(struct client *c) {
-  if (key == KEYC_NONE) return (KEYC_NONE);
-  if (b & MOUSE_MASK_META) key |= KEYC_ESCAPE;
-  if (b & MOUSE_MASK_CTRL) key |= KEYC_CTRL;
-  if (b & MOUSE_MASK_SHIFT) key |= KEYC_SHIFT;
+ if (key == KEYC_NONE)
+  return (KEYC_NONE);
+ if (b & MOUSE_MASK_META)
+  key |= KEYC_ESCAPE;
+ if (b & MOUSE_MASK_CTRL)
+  key |= KEYC_CTRL;
+ if (b & MOUSE_MASK_SHIFT)
+  key |= KEYC_SHIFT;
@@ -305 +376,3 @@ int server_client_check_mouse(struct client *c) {
-int server_client_assume_paste(struct session *s) {
+int
+server_client_assume_paste(struct session *s)
+{
@@ -311 +384,2 @@ int server_client_assume_paste(struct session *s) {
-  if (tv.tv_sec == 0 && tv.tv_usec < t * 1000) return (1);
+ if (tv.tv_sec == 0 && tv.tv_usec < t * 1000)
+  return (1);
@@ -314 +388,3 @@ int server_client_assume_paste(struct session *s) {
-void server_client_handle_key(struct client *c, int key) {
+void
+server_client_handle_key(struct client *c, int key)
+{
@@ -323 +399,2 @@ void server_client_handle_key(struct client *c, int key) {
-  if (s == NULL || (c->flags & (CLIENT_DEAD | CLIENT_SUSPENDED)) != 0) return;
+ if (s == NULL || (c->flags & (CLIENT_DEAD|CLIENT_SUSPENDED)) != 0)
+  return;
@@ -325 +402,2 @@ void server_client_handle_key(struct client *c, int key) {
-  if (gettimeofday(&c->activity_time, NULL) != 0) fatal("gettimeofday failed");
+ if (gettimeofday(&c->activity_time, NULL) != 0)
+  fatal("gettimeofday failed");
@@ -328 +406,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (c->flags & CLIENT_READONLY) return;
+  if (c->flags & CLIENT_READONLY)
+   return;
@@ -331 +410,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (wp != NULL && window_pane_visible(wp)) window_set_active_pane(w, wp);
+  if (wp != NULL && window_pane_visible(wp))
+   window_set_active_pane(w, wp);
@@ -340 +420,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (!(c->flags & CLIENT_READONLY)) status_prompt_key(c, key);
+  if (!(c->flags & CLIENT_READONLY))
+   status_prompt_key(c, key);
@@ -344 +425,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (c->flags & CLIENT_READONLY) return;
+  if (c->flags & CLIENT_READONLY)
+   return;
@@ -346 +428,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (key == KEYC_NONE) return;
+  if (key == KEYC_NONE)
+   return;
@@ -349 +432,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (!options_get_number(s->options, "mouse")) goto forward;
+  if (!options_get_number(s->options, "mouse"))
+   goto forward;
@@ -352 +436,2 @@ void server_client_handle_key(struct client *c, int key) {
-  if (!KEYC_IS_MOUSE(key) && server_client_assume_paste(s)) goto forward;
+ if (!KEYC_IS_MOUSE(key) && server_client_assume_paste(s))
+  goto forward;
@@ -399 +484,2 @@ forward:
-  if (c->flags & CLIENT_READONLY) return;
+ if (c->flags & CLIENT_READONLY)
+  return;
@@ -404 +490,2 @@ forward:
-  if (wp != NULL) window_pane_key(wp, c, s, key, m);
+ if (wp != NULL)
+  window_pane_key(wp, c, s, key, m);
@@ -406 +493,3 @@ forward:
-void server_client_loop(void) {
+void
+server_client_loop(void)
+{
@@ -429 +518,3 @@ void server_client_loop(void) {
-void server_client_check_resize(struct window_pane *wp) {
+void
+server_client_check_resize(struct window_pane *wp)
+{
@@ -431 +522,2 @@ void server_client_check_resize(struct window_pane *wp) {
-  if (!(wp->flags & PANE_RESIZE)) return;
+ if (!(wp->flags & PANE_RESIZE))
+  return;
@@ -443 +535,3 @@ void server_client_check_resize(struct window_pane *wp) {
-void server_client_check_focus(struct window_pane *wp) {
+void
+server_client_check_focus(struct window_pane *wp)
+{
@@ -446 +540,2 @@ void server_client_check_focus(struct window_pane *wp) {
-  if (!options_get_number(global_options, "focus-events")) return;
+ if (!options_get_number(global_options, "focus-events"))
+  return;
@@ -449,3 +544,6 @@ void server_client_check_focus(struct window_pane *wp) {
-  if (!(wp->base.mode & MODE_FOCUSON)) return;
-  if (wp->window->active != wp) goto not_focused;
-  if (wp->screen != &wp->base) goto not_focused;
+ if (!(wp->base.mode & MODE_FOCUSON))
+  return;
+ if (wp->window->active != wp)
+  goto not_focused;
+ if (wp->screen != &wp->base)
+  goto not_focused;
@@ -453,3 +551,6 @@ void server_client_check_focus(struct window_pane *wp) {
-    if (c->session == NULL || !(c->flags & CLIENT_FOCUSED)) continue;
-    if (c->session->flags & SESSION_UNATTACHED) continue;
-    if (c->session->curw->window == wp->window) goto focused;
+  if (c->session == NULL || !(c->flags & CLIENT_FOCUSED))
+   continue;
+  if (c->session->flags & SESSION_UNATTACHED)
+   continue;
+  if (c->session->curw->window == wp->window)
+   goto focused;
@@ -467 +568,3 @@ focused:
-void server_client_reset_state(struct client *c) {
+void
+server_client_reset_state(struct client *c)
+{
@@ -473,2 +576,4 @@ void server_client_reset_state(struct client *c) {
-  if (c->flags & CLIENT_SUSPENDED) return;
-  if (c->flags & CLIENT_CONTROL) return;
+ if (c->flags & CLIENT_SUSPENDED)
+  return;
+ if (c->flags & CLIENT_CONTROL)
+  return;
@@ -486,2 +591,2 @@ void server_client_reset_state(struct client *c) {
-  if ((c->tty.flags & TTY_UTF8) && (mode & ALL_MOUSE_MODES) &&
-      options_get_number(oo, "mouse-utf8"))
+ if ((c->tty.flags & TTY_UTF8) &&
+     (mode & ALL_MOUSE_MODES) && options_get_number(oo, "mouse-utf8"))
@@ -494,2 +599,3 @@ void server_client_reset_state(struct client *c) {
-void server_client_repeat_timer(unused int fd, unused short events,
-                                void *data) {
+void
+server_client_repeat_timer(unused int fd, unused short events, void *data)
+{
@@ -503,5 +609,11 @@ void server_client_repeat_timer(unused int fd, unused short events,
-void server_client_check_exit(struct client *c) {
-  if (!(c->flags & CLIENT_EXIT)) return;
-  if (EVBUFFER_LENGTH(c->stdin_data) != 0) return;
-  if (EVBUFFER_LENGTH(c->stdout_data) != 0) return;
-  if (EVBUFFER_LENGTH(c->stderr_data) != 0) return;
+void
+server_client_check_exit(struct client *c)
+{
+ if (!(c->flags & CLIENT_EXIT))
+  return;
+ if (EVBUFFER_LENGTH(c->stdin_data) != 0)
+  return;
+ if (EVBUFFER_LENGTH(c->stdout_data) != 0)
+  return;
+ if (EVBUFFER_LENGTH(c->stderr_data) != 0)
+  return;
@@ -511 +623,3 @@ void server_client_check_exit(struct client *c) {
-void server_client_check_redraw(struct client *c) {
+void
+server_client_check_redraw(struct client *c)
+{
@@ -516 +630,2 @@ void server_client_check_redraw(struct client *c) {
-  if (c->flags & (CLIENT_CONTROL | CLIENT_SUSPENDED)) return;
+ if (c->flags & (CLIENT_CONTROL|CLIENT_SUSPENDED))
+  return;
@@ -526 +641,2 @@ void server_client_check_redraw(struct client *c) {
-    if (!redraw) c->flags &= ~CLIENT_STATUS;
+  if (!redraw)
+   c->flags &= ~CLIENT_STATUS;
@@ -557,2 +673,2 @@ void server_client_check_redraw(struct client *c) {
-  c->flags &=
-      ~(CLIENT_REDRAW | CLIENT_BORDERS | CLIENT_STATUS | CLIENT_STATUSFORCE);
+ c->flags &= ~(CLIENT_REDRAW|CLIENT_BORDERS|CLIENT_STATUS|
+     CLIENT_STATUSFORCE);
@@ -560 +676,3 @@ void server_client_check_redraw(struct client *c) {
-void server_client_set_title(struct client *c) {
+void
+server_client_set_title(struct client *c)
+{
@@ -577 +695,3 @@ void server_client_set_title(struct client *c) {
-voidserver_client_dispatch(struct imsg *imsg, void *arg) {
+void
+server_client_dispatch(struct imsg *imsg, void *arg)
+{
@@ -583 +703,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-  if (c->flags & CLIENT_DEAD) return;
+ if (c->flags & CLIENT_DEAD)
+  return;
@@ -605 +726,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      if (datalen != sizeof stdindata) fatalx("bad MSG_STDIN size");
+  if (datalen != sizeof stdindata)
+   fatalx("bad MSG_STDIN size");
@@ -607 +729,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      if (c->stdin_callback == NULL) break;
+  if (c->stdin_callback == NULL)
+   break;
@@ -611 +734,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-        evbuffer_add(c->stdin_data, stdindata.data, stdindata.size);
+   evbuffer_add(c->stdin_data, stdindata.data,
+       stdindata.size);
@@ -613 +737,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      c->stdin_callback(c, c->stdin_closed, c->stdin_callback_data);
+  c->stdin_callback(c, c->stdin_closed,
+      c->stdin_callback_data);
@@ -616,2 +741,4 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      if (datalen != 0) fatalx("bad MSG_RESIZE size");
-      if (c->flags & CLIENT_CONTROL) break;
+  if (datalen != 0)
+   fatalx("bad MSG_RESIZE size");
+  if (c->flags & CLIENT_CONTROL)
+   break;
@@ -624 +751,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      if (datalen != 0) fatalx("bad MSG_EXITING size");
+  if (datalen != 0)
+   fatalx("bad MSG_EXITING size");
@@ -631,2 +759,4 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      if (datalen != 0) fatalx("bad MSG_WAKEUP size");
-      if (!(c->flags & CLIENT_SUSPENDED)) break;
+  if (datalen != 0)
+   fatalx("bad MSG_WAKEUP size");
+  if (!(c->flags & CLIENT_SUSPENDED))
+   break;
@@ -639 +769,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      if (s != NULL) session_update_activity(s, &c->activity_time);
+  if (s != NULL)
+   session_update_activity(s, &c->activity_time);
@@ -645 +776,2 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-      if (datalen != 0) fatalx("bad MSG_SHELL size");
+  if (datalen != 0)
+   fatalx("bad MSG_SHELL size");
@@ -652 +784,3 @@ voidserver_client_dispatch(struct imsg *imsg, void *arg) {
-void server_client_dispatch_command(struct client *c, struct imsg *imsg) {
+void
+server_client_dispatch_command(struct client *c, struct imsg *imsg)
+{
@@ -664 +798,2 @@ void server_client_dispatch_command(struct client *c, struct imsg *imsg) {
-  if (len > 0 && buf[len - 1] != '\0') fatalx("bad MSG_COMMAND string");
+ if (len > 0 && buf[len - 1] != '\0')
+  fatalx("bad MSG_COMMAND string");
@@ -688 +823,2 @@ error:
-  if (cmdlist != NULL) cmd_list_free(cmdlist);
+ if (cmdlist != NULL)
+  cmd_list_free(cmdlist);
@@ -691 +827,3 @@ error:
-voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
+void
+server_client_dispatch_identify(struct client *c, struct imsg *imsg)
+{
@@ -695 +833,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-  if (c->flags & CLIENT_IDENTIFIED) fatalx("out-of-order identify message");
+ if (c->flags & CLIENT_IDENTIFIED)
+  fatalx("out-of-order identify message");
@@ -700 +839,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-      if (datalen != sizeof flags) fatalx("bad MSG_IDENTIFY_FLAGS size");
+  if (datalen != sizeof flags)
+   fatalx("bad MSG_IDENTIFY_FLAGS size");
@@ -720 +860,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-      if ((c->cwd = open(data, O_RDONLY)) == -1) c->cwd = open("/", O_RDONLY);
+  if ((c->cwd = open(data, O_RDONLY)) == -1)
+   c->cwd = open("/", O_RDONLY);
@@ -724 +865,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-      if (datalen != 0) fatalx("bad MSG_IDENTIFY_STDIN size");
+  if (datalen != 0)
+   fatalx("bad MSG_IDENTIFY_STDIN size");
@@ -731 +873,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-      if (strchr(data, '=') != NULL) environ_put(&c->environ, data);
+  if (strchr(data, '=') != NULL)
+   environ_put(&c->environ, data);
@@ -735 +878,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-      if (datalen != sizeof c->pid) fatalx("bad MSG_IDENTIFY_CLIENTPID size");
+  if (datalen != sizeof c->pid)
+   fatalx("bad MSG_IDENTIFY_CLIENTPID size");
@@ -742 +886,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-  if (imsg->hdr.type != MSG_IDENTIFY_DONE) return;
+ if (imsg->hdr.type != MSG_IDENTIFY_DONE)
+  return;
@@ -743,0 +889,4 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
+#ifdef __CYGWIN__
+ c->fd = open(c->ttyname, O_RDWR|O_NOCTTY);
+ c->cwd = open(".", O_RDONLY);
+#endif
@@ -757 +906,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-  if (c->fd == -1) return;
+ if (c->fd == -1)
+  return;
@@ -763,2 +913,4 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-  if (c->flags & CLIENT_UTF8) c->tty.flags |= TTY_UTF8;
-  if (c->flags & CLIENT_256COLOURS) c->tty.term_flags |= TERM_256COLOURS;
+ if (c->flags & CLIENT_UTF8)
+  c->tty.flags |= TTY_UTF8;
+ if (c->flags & CLIENT_256COLOURS)
+  c->tty.term_flags |= TERM_256COLOURS;
@@ -766 +918,2 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-  if (!(c->flags & CLIENT_CONTROL)) c->flags |= CLIENT_TERMINAL;
+ if (!(c->flags & CLIENT_CONTROL))
+  c->flags |= CLIENT_TERMINAL;
@@ -768 +921,3 @@ voidserver_client_dispatch_identify(struct client *c, struct imsg *imsg) {
-void server_client_dispatch_shell(struct client *c) {
+void
+server_client_dispatch_shell(struct client *c)
+{
@@ -771 +926,2 @@ void server_client_dispatch_shell(struct client *c) {
-  if (*shell == '\0' || areshell(shell)) shell = _PATH_BSHELL;
+ if (*shell == '\0' || areshell(shell))
+  shell = _PATH_BSHELL;
