diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/cmd.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/cmd.no_comments_merged.c
index 4eb8f53..4bcb3a9 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/cmd.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/cmd.no_comments_merged.c
@@ -4 +3,0 @@
-#include <paths.h>
@@ -10 +9,2 @@
-const struct cmd_entry *cmd_table[] = {&cmd_attach_session_entry,
+const struct cmd_entry *cmd_table[] = {
+ &cmd_attach_session_entry,
@@ -95 +95,2 @@ const struct cmd_entry *cmd_table[] = {&cmd_attach_session_entry,
-                                       NULL};
+ NULL
+};
@@ -113 +114,3 @@ struct window_pane *cmd_find_pane_offset(const char *, struct winlink *);
-int cmd_pack_argv(int argc, char **argv, char *buf, size_t len) {
+int
+cmd_pack_argv(int argc, char **argv, char *buf, size_t len)
+{
@@ -118 +121,2 @@ int cmd_pack_argv(int argc, char **argv, char *buf, size_t len) {
-    if (strlcpy(buf, argv[i], len) >= len) return (-1);
+  if (strlcpy(buf, argv[i], len) >= len)
+   return (-1);
@@ -125 +129,3 @@ int cmd_pack_argv(int argc, char **argv, char *buf, size_t len) {
-int cmd_unpack_argv(char *buf, size_t len, int argc, char ***argv) {
+int
+cmd_unpack_argv(char *buf, size_t len, int argc, char ***argv)
+{
@@ -128 +134,2 @@ int cmd_unpack_argv(char *buf, size_t len, int argc, char ***argv) {
-  if (argc == 0) return (0);
+ if (argc == 0)
+  return (0);
@@ -143 +150,3 @@ int cmd_unpack_argv(char *buf, size_t len, int argc, char ***argv) {
-char **cmd_copy_argv(int argc, char *const *argv) {
+char **
+cmd_copy_argv(int argc, char *const *argv)
+{
@@ -146 +155,2 @@ char **cmd_copy_argv(int argc, char *const *argv) {
-  if (argc == 0) return (NULL);
+ if (argc == 0)
+  return (NULL);
@@ -149 +159,2 @@ char **cmd_copy_argv(int argc, char *const *argv) {
-    if (argv[i] != NULL) new_argv[i] = xstrdup(argv[i]);
+  if (argv[i] != NULL)
+   new_argv[i] = xstrdup(argv[i]);
@@ -153 +164,3 @@ char **cmd_copy_argv(int argc, char *const *argv) {
-void cmd_free_argv(int argc, char **argv) {
+void
+cmd_free_argv(int argc, char **argv)
+{
@@ -155,2 +168,4 @@ void cmd_free_argv(int argc, char **argv) {
-  if (argc == 0) return;
-  for (i = 0; i < argc; i++) free(argv[i]);
+ if (argc == 0)
+  return;
+ for (i = 0; i < argc; i++)
+  free(argv[i]);
@@ -159,2 +174,3 @@ void cmd_free_argv(int argc, char **argv) {
-struct cmd *cmd_parse(int argc, char **argv, const char *file, u_int line,
-                      char **cause) {
+struct cmd *
+cmd_parse(int argc, char **argv, const char *file, u_int line, char **cause)
+{
@@ -173 +189,2 @@ struct cmd *cmd_parse(int argc, char **argv, const char *file, u_int line,
-    if ((*entryp)->alias != NULL && strcmp((*entryp)->alias, argv[0]) == 0) {
+  if ((*entryp)->alias != NULL &&
+      strcmp((*entryp)->alias, argv[0]) == 0) {
@@ -178,2 +195,4 @@ struct cmd *cmd_parse(int argc, char **argv, const char *file, u_int line,
-    if (strncmp((*entryp)->name, argv[0], strlen(argv[0])) != 0) continue;
-    if (entry != NULL) ambiguous = 1;
+  if (strncmp((*entryp)->name, argv[0], strlen(argv[0])) != 0)
+   continue;
+  if (entry != NULL)
+   ambiguous = 1;
@@ -181 +200,2 @@ struct cmd *cmd_parse(int argc, char **argv, const char *file, u_int line,
-    if (strcmp(entry->name, argv[0]) == 0) break;
+  if (strcmp(entry->name, argv[0]) == 0)
+   break;
@@ -183 +203,2 @@ struct cmd *cmd_parse(int argc, char **argv, const char *file, u_int line,
-  if (ambiguous) goto ambiguous;
+ if (ambiguous)
+  goto ambiguous;
@@ -189,4 +210,8 @@ struct cmd *cmd_parse(int argc, char **argv, const char *file, u_int line,
-  if (args == NULL) goto usage;
-  if (entry->args_lower != -1 && args->argc < entry->args_lower) goto usage;
-  if (entry->args_upper != -1 && args->argc > entry->args_upper) goto usage;
-  if (entry->check != NULL && entry->check(args) != 0) goto usage;
+ if (args == NULL)
+  goto usage;
+ if (entry->args_lower != -1 && args->argc < entry->args_lower)
+  goto usage;
+ if (entry->args_upper != -1 && args->argc > entry->args_upper)
+  goto usage;
+ if (entry->check != NULL && entry->check(args) != 0)
+  goto usage;
@@ -196 +221,2 @@ struct cmd *cmd_parse(int argc, char **argv, const char *file, u_int line,
-  if (file != NULL) cmd->file = xstrdup(file);
+ if (file != NULL)
+  cmd->file = xstrdup(file);
@@ -202,3 +228,6 @@ ambiguous:
-    if (strncmp((*entryp)->name, argv[0], strlen(argv[0])) != 0) continue;
-    if (strlcat(s, (*entryp)->name, sizeof s) >= sizeof s) break;
-    if (strlcat(s, ", ", sizeof s) >= sizeof s) break;
+  if (strncmp((*entryp)->name, argv[0], strlen(argv[0])) != 0)
+   continue;
+  if (strlcat(s, (*entryp)->name, sizeof s) >= sizeof s)
+   break;
+  if (strlcat(s, ", ", sizeof s) >= sizeof s)
+   break;
@@ -210 +239,2 @@ usage:
-  if (args != NULL) args_free(args);
+ if (args != NULL)
+  args_free(args);
@@ -214 +244,3 @@ usage:
-size_t cmd_print(struct cmd *cmd, char *buf, size_t len) {
+size_t
+cmd_print(struct cmd *cmd, char *buf, size_t len)
+{
@@ -227 +259,3 @@ size_t cmd_print(struct cmd *cmd, char *buf, size_t len) {
-struct session *cmd_current_session(struct cmd_q *cmdq, int prefer_unattached) {
+struct session *
+cmd_current_session(struct cmd_q *cmdq, int prefer_unattached)
+{
@@ -236 +270,2 @@ struct session *cmd_current_session(struct cmd_q *cmdq, int prefer_unattached) {
-  if (c != NULL && c->session != NULL) return (c->session);
+ if (c != NULL && c->session != NULL)
+  return (c->session);
@@ -249 +284,2 @@ struct session *cmd_current_session(struct cmd_q *cmdq, int prefer_unattached) {
-        if (found) break;
+    if (found)
+     break;
@@ -251 +287,2 @@ struct session *cmd_current_session(struct cmd_q *cmdq, int prefer_unattached) {
-      if (found) ARRAY_ADD(&ss, s);
+   if (found)
+    ARRAY_ADD(&ss, s);
@@ -255 +292,2 @@ struct session *cmd_current_session(struct cmd_q *cmdq, int prefer_unattached) {
-    if (s != NULL) return (s);
+  if (s != NULL)
+   return (s);
@@ -259 +297,2 @@ struct session *cmd_current_session(struct cmd_q *cmdq, int prefer_unattached) {
-    if (s != NULL) return (s);
+  if (s != NULL)
+   return (s);
@@ -263,3 +302,6 @@ struct session *cmd_current_session(struct cmd_q *cmdq, int prefer_unattached) {
-int cmd_session_better(struct session *s, struct session *best,
-                       int prefer_unattached) {
-  if (best == NULL) return (1);
+int
+cmd_session_better(struct session *s, struct session *best,
+    int prefer_unattached)
+{
+ if (best == NULL)
+  return (1);
@@ -267 +309,2 @@ int cmd_session_better(struct session *s, struct session *best,
-    if (!(best->flags & SESSION_UNATTACHED) && (s->flags & SESSION_UNATTACHED))
+  if (!(best->flags & SESSION_UNATTACHED) &&
+      (s->flags & SESSION_UNATTACHED))
@@ -275 +318,3 @@ int cmd_session_better(struct session *s, struct session *best,
-struct session *cmd_choose_session(int prefer_unattached) {
+struct session *
+cmd_choose_session(int prefer_unattached)
+{
@@ -279 +324,2 @@ struct session *cmd_choose_session(int prefer_unattached) {
-    if (cmd_session_better(s, best, prefer_unattached)) best = s;
+  if (cmd_session_better(s, best, prefer_unattached))
+   best = s;
@@ -283 +329,3 @@ struct session *cmd_choose_session(int prefer_unattached) {
-struct session *cmd_choose_session_list(struct sessionslist *ss) {
+struct session *
+cmd_choose_session_list(struct sessionslist *ss)
+{
@@ -289 +337,2 @@ struct session *cmd_choose_session_list(struct sessionslist *ss) {
-    if ((s = ARRAY_ITEM(ss, i)) == NULL) continue;
+  if ((s = ARRAY_ITEM(ss, i)) == NULL)
+   continue;
@@ -297 +346,3 @@ struct session *cmd_choose_session_list(struct sessionslist *ss) {
-struct client *cmd_current_client(struct cmd_q *cmdq) {
+struct client *
+cmd_current_client(struct cmd_q *cmdq)
+{
@@ -308,2 +359,4 @@ struct client *cmd_current_client(struct cmd_q *cmdq) {
-      if ((c = ARRAY_ITEM(&clients, i)) == NULL) continue;
-      if (s == c->session) ARRAY_ADD(&cc, c);
+   if ((c = ARRAY_ITEM(&clients, i)) == NULL)
+    continue;
+   if (s == c->session)
+    ARRAY_ADD(&cc, c);
@@ -313 +366,2 @@ struct client *cmd_current_client(struct cmd_q *cmdq) {
-    if (c != NULL) return (c);
+  if (c != NULL)
+   return (c);
@@ -317 +371,3 @@ struct client *cmd_current_client(struct cmd_q *cmdq) {
-struct client *cmd_choose_client(struct clients *cc) {
+struct client *
+cmd_choose_client(struct clients *cc)
+{
@@ -323,2 +379,4 @@ struct client *cmd_choose_client(struct clients *cc) {
-    if ((c = ARRAY_ITEM(cc, i)) == NULL) continue;
-    if (c->session == NULL) continue;
+  if ((c = ARRAY_ITEM(cc, i)) == NULL)
+   continue;
+  if (c->session == NULL)
+   continue;
@@ -332 +390,3 @@ struct client *cmd_choose_client(struct clients *cc) {
-struct client *cmd_find_client(struct cmd_q *cmdq, const char *arg, int quiet) {
+struct client *
+cmd_find_client(struct cmd_q *cmdq, const char *arg, int quiet)
+{
@@ -338 +398,2 @@ struct client *cmd_find_client(struct cmd_q *cmdq, const char *arg, int quiet) {
-    if (c == NULL && !quiet) cmdq_error(cmdq, "no clients");
+  if (c == NULL && !quiet)
+   cmdq_error(cmdq, "no clients");
@@ -343 +404,2 @@ struct client *cmd_find_client(struct cmd_q *cmdq, const char *arg, int quiet) {
-  if (arglen != 0 && tmparg[arglen - 1] == ':') tmparg[arglen - 1] = '\0';
+ if (arglen != 0 && tmparg[arglen - 1] == ':')
+  tmparg[arglen - 1] = '\0';
@@ -345 +407,2 @@ struct client *cmd_find_client(struct cmd_q *cmdq, const char *arg, int quiet) {
-  if (c == NULL && !quiet) cmdq_error(cmdq, "client not found: %s", tmparg);
+ if (c == NULL && !quiet)
+  cmdq_error(cmdq, "client not found: %s", tmparg);
@@ -349 +412,3 @@ struct client *cmd_find_client(struct cmd_q *cmdq, const char *arg, int quiet) {
-struct client *cmd_lookup_client(const char *name) {
+struct client *
+cmd_lookup_client(const char *name)
+{
@@ -355 +420,2 @@ struct client *cmd_lookup_client(const char *name) {
-    if (c == NULL || c->session == NULL || c->tty.path == NULL) continue;
+  if (c == NULL || c->session == NULL || c->tty.path == NULL)
+   continue;
@@ -357,3 +423,6 @@ struct client *cmd_lookup_client(const char *name) {
-    if (strcmp(name, path) == 0) return (c);
-    if (strncmp(path, _PATH_DEV, (sizeof _PATH_DEV) - 1) != 0) continue;
-    if (strcmp(name, path + (sizeof _PATH_DEV) - 1) == 0) return (c);
+  if (strcmp(name, path) == 0)
+   return (c);
+  if (strncmp(path, _PATH_DEV, (sizeof _PATH_DEV) - 1) != 0)
+   continue;
+  if (strcmp(name, path + (sizeof _PATH_DEV) - 1) == 0)
+   return (c);
@@ -363 +432,3 @@ struct client *cmd_lookup_client(const char *name) {
-struct session *cmd_lookup_session_id(const char *arg) {
+struct session *
+cmd_lookup_session_id(const char *arg)
+{
@@ -366 +437,2 @@ struct session *cmd_lookup_session_id(const char *arg) {
-  if (arg[0] != '$') return (NULL);
+ if (arg[0] != '$')
+  return (NULL);
@@ -368 +440,2 @@ struct session *cmd_lookup_session_id(const char *arg) {
-  if (arg[1] != '\0' && *endptr == '\0') return (session_find_by_id(id));
+ if (arg[1] != '\0' && *endptr == '\0')
+  return (session_find_by_id(id));
@@ -371 +444,3 @@ struct session *cmd_lookup_session_id(const char *arg) {
-struct session *cmd_lookup_session(const char *name, int *ambiguous) {
+struct session *
+cmd_lookup_session(const char *name, int *ambiguous)
+{
@@ -374,2 +449,4 @@ struct session *cmd_lookup_session(const char *name, int *ambiguous) {
-  if ((s = cmd_lookup_session_id(name)) != NULL) return (s);
-  if ((s = session_find(name)) != NULL) return (s);
+ if ((s = cmd_lookup_session_id(name)) != NULL)
+  return (s);
+ if ((s = session_find(name)) != NULL)
+  return (s);
@@ -389,2 +466,3 @@ struct session *cmd_lookup_session(const char *name, int *ambiguous) {
-struct winlink *cmd_lookup_window(struct session *s, const char *name,
-                                  int *ambiguous) {
+struct winlink *
+cmd_lookup_window(struct session *s, const char *name, int *ambiguous)
+{
@@ -395 +473,2 @@ struct winlink *cmd_lookup_window(struct session *s, const char *name,
-  if ((wl = cmd_lookup_winlink_windowid(s, name)) != NULL) return (wl);
+ if ((wl = cmd_lookup_winlink_windowid(s, name)) != NULL)
+     return (wl);
@@ -398 +477,2 @@ struct winlink *cmd_lookup_window(struct session *s, const char *name,
-    if ((wl = winlink_find_by_index(&s->windows, idx)) != NULL) return (wl);
+  if ((wl = winlink_find_by_index(&s->windows, idx)) != NULL)
+   return (wl);
@@ -410 +490,2 @@ struct winlink *cmd_lookup_window(struct session *s, const char *name,
-  if (wlfound != NULL) return (wlfound);
+ if (wlfound != NULL)
+  return (wlfound);
@@ -422 +503,2 @@ struct winlink *cmd_lookup_window(struct session *s, const char *name,
-  if (wlfound != NULL) return (wlfound);
+ if (wlfound != NULL)
+  return (wlfound);
@@ -425 +507,3 @@ struct winlink *cmd_lookup_window(struct session *s, const char *name,
-int cmd_lookup_index(struct session *s, const char *name, int *ambiguous) {
+int
+cmd_lookup_index(struct session *s, const char *name, int *ambiguous)
+{
@@ -429,2 +513,4 @@ int cmd_lookup_index(struct session *s, const char *name, int *ambiguous) {
-  if ((wl = cmd_lookup_window(s, name, ambiguous)) != NULL) return (wl->idx);
-  if (*ambiguous) return (-1);
+ if ((wl = cmd_lookup_window(s, name, ambiguous)) != NULL)
+  return (wl->idx);
+ if (*ambiguous)
+  return (-1);
@@ -432 +518,2 @@ int cmd_lookup_index(struct session *s, const char *name, int *ambiguous) {
-  if (errstr == NULL) return (idx);
+ if (errstr == NULL)
+  return (idx);
@@ -435 +522,3 @@ int cmd_lookup_index(struct session *s, const char *name, int *ambiguous) {
-struct window_pane *cmd_lookup_paneid(const char *arg) {
+struct window_pane *
+cmd_lookup_paneid(const char *arg)
+{
@@ -438 +527,2 @@ struct window_pane *cmd_lookup_paneid(const char *arg) {
-  if (*arg != '%') return (NULL);
+ if (*arg != '%')
+  return (NULL);
@@ -440 +530,2 @@ struct window_pane *cmd_lookup_paneid(const char *arg) {
-  if (errstr != NULL) return (NULL);
+ if (errstr != NULL)
+  return (NULL);
@@ -443,2 +534,3 @@ struct window_pane *cmd_lookup_paneid(const char *arg) {
-struct winlink *cmd_lookup_winlink_windowid(struct session *s,
-                                            const char *arg) {
+struct winlink *
+cmd_lookup_winlink_windowid(struct session *s, const char *arg)
+{
@@ -447 +539,2 @@ struct winlink *cmd_lookup_winlink_windowid(struct session *s,
-  if (*arg != '@') return (NULL);
+ if (*arg != '@')
+  return (NULL);
@@ -449 +542,2 @@ struct winlink *cmd_lookup_winlink_windowid(struct session *s,
-  if (errstr != NULL) return (NULL);
+ if (errstr != NULL)
+  return (NULL);
@@ -452 +546,3 @@ struct winlink *cmd_lookup_winlink_windowid(struct session *s,
-struct window *cmd_lookup_windowid(const char *arg) {
+struct window *
+cmd_lookup_windowid(const char *arg)
+{
@@ -455 +551,2 @@ struct window *cmd_lookup_windowid(const char *arg) {
-  if (*arg != '@') return (NULL);
+ if (*arg != '@')
+  return (NULL);
@@ -457 +554,2 @@ struct window *cmd_lookup_windowid(const char *arg) {
-  if (errstr != NULL) return (NULL);
+ if (errstr != NULL)
+  return (NULL);
@@ -460,2 +558,3 @@ struct window *cmd_lookup_windowid(const char *arg) {
-struct session *cmd_window_session(struct cmd_q *cmdq, struct window *w,
-                                   struct winlink **wlp) {
+struct session *
+cmd_window_session(struct cmd_q *cmdq, struct window *w, struct winlink **wlp)
+{
@@ -469 +568,2 @@ struct session *cmd_window_session(struct cmd_q *cmdq, struct window *w,
-      if (wlp != NULL) *wlp = wl;
+   if (wlp != NULL)
+    *wlp = wl;
@@ -475 +575,2 @@ struct session *cmd_window_session(struct cmd_q *cmdq, struct window *w,
-    if (winlink_find_by_window(&s->windows, w) != NULL) ARRAY_ADD(&ss, s);
+  if (winlink_find_by_window(&s->windows, w) != NULL)
+   ARRAY_ADD(&ss, s);
@@ -479 +580,2 @@ struct session *cmd_window_session(struct cmd_q *cmdq, struct window *w,
-  if (wlp != NULL) *wlp = winlink_find_by_window(&s->windows, w);
+ if (wlp != NULL)
+  *wlp = winlink_find_by_window(&s->windows, w);
@@ -482,2 +584,3 @@ struct session *cmd_window_session(struct cmd_q *cmdq, struct window *w,
-struct session *cmd_find_session(struct cmd_q *cmdq, const char *arg,
-                                 int prefer_unattached) {
+struct session *
+cmd_find_session(struct cmd_q *cmdq, const char *arg, int prefer_unattached)
+{
@@ -491 +594,2 @@ struct session *cmd_find_session(struct cmd_q *cmdq, const char *arg,
-  if (arg == NULL) return (cmd_current_session(cmdq, prefer_unattached));
+ if (arg == NULL)
+  return (cmd_current_session(cmdq, prefer_unattached));
@@ -498 +602,2 @@ struct session *cmd_find_session(struct cmd_q *cmdq, const char *arg,
-  if (arglen != 0 && tmparg[arglen - 1] == ':') tmparg[arglen - 1] = '\0';
+ if (arglen != 0 && tmparg[arglen - 1] == ':')
+  tmparg[arglen - 1] = '\0';
@@ -504 +609,2 @@ struct session *cmd_find_session(struct cmd_q *cmdq, const char *arg,
-  if (s == NULL && (c = cmd_lookup_client(tmparg)) != NULL) s = c->session;
+ if (s == NULL && (c = cmd_lookup_client(tmparg)) != NULL)
+  s = c->session;
@@ -514,2 +620,3 @@ struct session *cmd_find_session(struct cmd_q *cmdq, const char *arg,
-struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-                                struct session **sp) {
+struct winlink *
+cmd_find_window(struct cmd_q *cmdq, const char *arg, struct session **sp)
+{
@@ -527 +634,2 @@ struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-    if (sp != NULL) *sp = s;
+  if (sp != NULL)
+   *sp = s;
@@ -532 +640,2 @@ struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-    if (sp != NULL) *sp = s;
+  if (sp != NULL)
+   *sp = s;
@@ -535 +644,2 @@ struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-  if (*arg == '\0') goto not_found;
+ if (*arg == '\0')
+  goto not_found;
@@ -537 +647,2 @@ struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-  if (winptr == NULL) goto no_colon;
+ if (winptr == NULL)
+  goto no_colon;
@@ -542 +653,2 @@ struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-    if ((s = cmd_lookup_session(sessptr, &ambiguous)) == NULL) goto no_session;
+  if ((s = cmd_lookup_session(sessptr, &ambiguous)) == NULL)
+   goto no_session;
@@ -544 +656,2 @@ struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-  if (sp != NULL) *sp = s;
+ if (sp != NULL)
+  *sp = s;
@@ -557,2 +670,4 @@ struct winlink *cmd_find_window(struct cmd_q *cmdq, const char *arg,
-  if (wl == NULL) goto not_found;
-  if (sessptr != NULL) free(sessptr);
+ if (wl == NULL)
+  goto not_found;
+ if (sessptr != NULL)
+  free(sessptr);
@@ -562 +677,2 @@ no_colon:
-    if ((wl = TAILQ_FIRST(&s->lastw)) == NULL) goto not_found;
+  if ((wl = TAILQ_FIRST(&s->lastw)) == NULL)
+   goto not_found;
@@ -568 +684,2 @@ no_colon:
-  if (sp != NULL) *sp = s;
+ if (sp != NULL)
+  *sp = s;
@@ -571 +688,2 @@ lookup_session:
-  if (ambiguous) goto not_found;
+ if (ambiguous)
+  goto not_found;
@@ -574 +692,2 @@ lookup_session:
-  if (sp != NULL) *sp = s;
+ if (sp != NULL)
+  *sp = s;
@@ -591,2 +710,3 @@ not_found:
-struct winlink *cmd_find_window_offset(const char *winptr, struct session *s,
-                                       int *ambiguous) {
+struct winlink *
+cmd_find_window_offset(const char *winptr, struct session *s, int *ambiguous)
+{
@@ -595 +715,2 @@ struct winlink *cmd_find_window_offset(const char *winptr, struct session *s,
-  if (winptr[1] != '\0') offset = strtonum(winptr + 1, 1, INT_MAX, NULL);
+ if (winptr[1] != '\0')
+  offset = strtonum(winptr + 1, 1, INT_MAX, NULL);
@@ -606 +727,3 @@ struct winlink *cmd_find_window_offset(const char *winptr, struct session *s,
-int cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp) {
+int
+cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp)
+{
@@ -617 +740,2 @@ int cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp) {
-    if (sp != NULL) *sp = s;
+  if (sp != NULL)
+   *sp = s;
@@ -620 +744,2 @@ int cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp) {
-  if (*arg == '\0') goto not_found;
+ if (*arg == '\0')
+  goto not_found;
@@ -622 +747,2 @@ int cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp) {
-  if (winptr == NULL) goto no_colon;
+ if (winptr == NULL)
+  goto no_colon;
@@ -627 +753,2 @@ int cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp) {
-    if ((s = cmd_lookup_session(sessptr, &ambiguous)) == NULL) goto no_session;
+  if ((s = cmd_lookup_session(sessptr, &ambiguous)) == NULL)
+   goto no_session;
@@ -629 +756,2 @@ int cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp) {
-  if (sp != NULL) *sp = s;
+ if (sp != NULL)
+  *sp = s;
@@ -633 +761,2 @@ int cmd_find_index(struct cmd_q *cmdq, const char *arg, struct session **sp) {
-    if ((wl = TAILQ_FIRST(&s->lastw)) == NULL) goto not_found;
+  if ((wl = TAILQ_FIRST(&s->lastw)) == NULL)
+   goto not_found;
@@ -644 +773,2 @@ no_colon:
-    if ((wl = TAILQ_FIRST(&s->lastw)) == NULL) goto not_found;
+  if ((wl = TAILQ_FIRST(&s->lastw)) == NULL)
+   goto not_found;
@@ -651 +781,2 @@ no_colon:
-  if (sp != NULL) *sp = s;
+ if (sp != NULL)
+  *sp = s;
@@ -654 +785,2 @@ lookup_session:
-  if (ambiguous) goto not_found;
+ if (ambiguous)
+  goto not_found;
@@ -657 +789,2 @@ lookup_session:
-  if (sp != NULL) *sp = s;
+ if (sp != NULL)
+  *sp = s;
@@ -667 +800,2 @@ invalid_index:
-  if (ambiguous) goto not_found;
+ if (ambiguous)
+  goto not_found;
@@ -679,2 +813,3 @@ not_found:
-int cmd_find_index_offset(const char *winptr, struct session *s,
-                          int *ambiguous) {
+int
+cmd_find_index_offset(const char *winptr, struct session *s, int *ambiguous)
+{
@@ -682 +817,2 @@ int cmd_find_index_offset(const char *winptr, struct session *s,
-  if (winptr[1] != '\0') offset = strtonum(winptr + 1, 1, INT_MAX, NULL);
+ if (winptr[1] != '\0')
+  offset = strtonum(winptr + 1, 1, INT_MAX, NULL);
@@ -700,2 +836,4 @@ int cmd_find_index_offset(const char *winptr, struct session *s,
-struct winlink *cmd_find_pane(struct cmd_q *cmdq, const char *arg,
-                              struct session **sp, struct window_pane **wpp) {
+struct winlink *
+cmd_find_pane(struct cmd_q *cmdq,
+    const char *arg, struct session **sp, struct window_pane **wpp)
+{
@@ -711 +849,2 @@ struct winlink *cmd_find_pane(struct cmd_q *cmdq, const char *arg,
-  if (sp != NULL) *sp = s;
+ if (sp != NULL)
+  *sp = s;
@@ -718 +857,2 @@ struct winlink *cmd_find_pane(struct cmd_q *cmdq, const char *arg,
-    if (sp != NULL) *sp = s;
+  if (sp != NULL)
+   *sp = s;
@@ -721 +861,2 @@ struct winlink *cmd_find_pane(struct cmd_q *cmdq, const char *arg,
-  if ((period = strrchr(arg, '.')) == NULL) goto no_period;
+ if ((period = strrchr(arg, '.')) == NULL)
+  goto no_period;
@@ -735 +876,2 @@ struct winlink *cmd_find_pane(struct cmd_q *cmdq, const char *arg,
-    if (errstr != NULL) goto lookup_string;
+  if (errstr != NULL)
+   goto lookup_string;
@@ -737 +879,2 @@ struct winlink *cmd_find_pane(struct cmd_q *cmdq, const char *arg,
-    if (*wpp == NULL) goto lookup_string;
+  if (*wpp == NULL)
+   goto lookup_string;
@@ -750 +893,2 @@ no_period:
-  if (errstr != NULL) goto lookup_window;
+ if (errstr != NULL)
+  goto lookup_window;
@@ -757 +901,2 @@ lookup_window:
-  if ((wl = cmd_find_window(cmdq, arg, sp)) != NULL) *wpp = wl->window->active;
+ if ((wl = cmd_find_window(cmdq, arg, sp)) != NULL)
+  *wpp = wl->window->active;
@@ -763,2 +908,3 @@ error:
-struct window_pane *cmd_find_pane_offset(const char *paneptr,
-                                         struct winlink *wl) {
+struct window_pane *
+cmd_find_pane_offset(const char *paneptr, struct winlink *wl)
+{
@@ -768 +914,2 @@ struct window_pane *cmd_find_pane_offset(const char *paneptr,
-  if (paneptr[1] != '\0') offset = strtonum(paneptr + 1, 1, INT_MAX, NULL);
+ if (paneptr[1] != '\0')
+  offset = strtonum(paneptr + 1, 1, INT_MAX, NULL);
@@ -777 +924,3 @@ struct window_pane *cmd_find_pane_offset(const char *paneptr,
-char *cmd_template_replace(const char *template, const char *s, int idx) {
+char *
+cmd_template_replace(const char *template, const char *s, int idx)
+{
@@ -782 +931,2 @@ char *cmd_template_replace(const char *template, const char *s, int idx) {
-  if (strchr(template, '%') == NULL) return (xstrdup(template));
+ if (strchr(template, '%') == NULL)
+  return (xstrdup(template));
@@ -792 +942,2 @@ char *cmd_template_replace(const char *template, const char *s, int idx) {
-          if (*ptr != '%' || replaced) break;
+    if (*ptr != '%' || replaced)
+     break;
@@ -807 +958,3 @@ char *cmd_template_replace(const char *template, const char *s, int idx) {
-const char *cmd_get_default_path(struct cmd_q *cmdq, const char *cwd) {
+const char *
+cmd_get_default_path(struct cmd_q *cmdq, const char *cwd)
+{
@@ -817,2 +970,4 @@ const char *cmd_get_default_path(struct cmd_q *cmdq, const char *cwd) {
-  if ((s = cmd_current_session(cmdq, 0)) == NULL) return (NULL);
-  if (cwd == NULL) cwd = options_get_string(&s->options, "default-path");
+ if ((s = cmd_current_session(cmdq, 0)) == NULL)
+  return (NULL);
+ if (cwd == NULL)
+  cwd = options_get_string(&s->options, "default-path");
@@ -837,11 +991,0 @@ const char *cmd_get_default_path(struct cmd_q *cmdq, const char *cwd) {
-<<<<<<< HEAD
-    if (ctx->cmdclient != NULL && ctx->cmdclient->cwd != NULL)
-      root = ctx->cmdclient->cwd;
-    else if (ctx->curclient != NULL && s->curw != NULL)
-      root = osdep_get_cwd(s->curw->window->active->fd);
-|||||||
-    if (ctx->cmdclient != NULL && ctx->cmdclient->cwd != NULL)
-      root = ctx->cmdclient->cwd;
-    else if (ctx->curclient != NULL && s->curw != NULL)
-      root = get_proc_cwd(s->curw->window->active->fd);
-=======
@@ -852 +995,0 @@ const char *cmd_get_default_path(struct cmd_q *cmdq, const char *cwd) {
->>>>>>> 58bb6f8c5650d496fb3b872766c0278aa024631d
@@ -856 +999,2 @@ const char *cmd_get_default_path(struct cmd_q *cmdq, const char *cwd) {
-    if (root != NULL) goto complete_path;
+  if (root != NULL)
+   goto complete_path;
@@ -873 +1017,2 @@ complete_path:
-  if (n > 0 && (size_t)n < sizeof path) return (path);
+ if (n > 0 && (size_t)n < sizeof path)
+  return (path);
