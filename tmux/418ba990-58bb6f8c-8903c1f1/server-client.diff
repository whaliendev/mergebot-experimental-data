diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/server-client.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/server-client.no_comments_merged.c
index 280ff8a..3579fcf 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/server-client.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/server-client.no_comments_merged.c
@@ -4 +3,0 @@
-#include <paths.h>
@@ -5,0 +5 @@
+#include <paths.h>
@@ -22,2 +22,2 @@ void server_client_msg_command(struct client *, struct msg_command_data *);
-void server_client_msg_identify(struct client *, struct msg_identify_data *,
-                                int);
+void server_client_msg_identify(
+     struct client *, struct msg_identify_data *, int);
@@ -25 +25,3 @@ void server_client_msg_shell(struct client *);
-void server_client_create(int fd) {
+void
+server_client_create(int fd)
+{
@@ -33 +35,2 @@ void server_client_create(int fd) {
-  if (gettimeofday(&c->creation_time, NULL) != 0) fatal("gettimeofday failed");
+ if (gettimeofday(&c->creation_time, NULL) != 0)
+  fatal("gettimeofday failed");
@@ -71 +74,3 @@ void server_client_create(int fd) {
-int server_client_open(struct client *c, struct session *s, char **cause) {
+int
+server_client_open(struct client *c, struct session *s, char **cause)
+{
@@ -74 +79,2 @@ int server_client_open(struct client *c, struct session *s, char **cause) {
-  if (c->flags & CLIENT_CONTROL) return (0);
+ if (c->flags & CLIENT_CONTROL)
+  return (0);
@@ -80 +86,2 @@ int server_client_open(struct client *c, struct session *s, char **cause) {
-  if (tty_open(&c->tty, overrides, cause) != 0) return (-1);
+ if (tty_open(&c->tty, overrides, cause) != 0)
+  return (-1);
@@ -83 +90,3 @@ int server_client_open(struct client *c, struct session *s, char **cause) {
-void server_client_lost(struct client *c) {
+void
+server_client_lost(struct client *c)
+{
@@ -87 +96,2 @@ void server_client_lost(struct client *c) {
-    if (ARRAY_ITEM(&clients, i) == c) ARRAY_SET(&clients, i, NULL);
+  if (ARRAY_ITEM(&clients, i) == c)
+   ARRAY_SET(&clients, i, NULL);
@@ -90 +100,2 @@ void server_client_lost(struct client *c) {
-  if (c->flags & CLIENT_TERMINAL) tty_free(&c->tty);
+ if (c->flags & CLIENT_TERMINAL)
+  tty_free(&c->tty);
@@ -93 +104,2 @@ void server_client_lost(struct client *c) {
-  if (c->stderr_data != c->stdout_data) evbuffer_free(c->stderr_data);
+ if (c->stderr_data != c->stdout_data)
+  evbuffer_free (c->stderr_data);
@@ -99 +111,2 @@ void server_client_lost(struct client *c) {
-  if (event_initialized(&c->identify_timer)) evtimer_del(&c->identify_timer);
+ if (event_initialized(&c->identify_timer))
+  evtimer_del(&c->identify_timer);
@@ -101 +114,2 @@ void server_client_lost(struct client *c) {
-  if (event_initialized(&c->message_timer)) evtimer_del(&c->message_timer);
+ if (event_initialized (&c->message_timer))
+  evtimer_del(&c->message_timer);
@@ -116 +130,2 @@ void server_client_lost(struct client *c) {
-  if (event_initialized(&c->event)) event_del(&c->event);
+ if (event_initialized(&c->event))
+  event_del(&c->event);
@@ -123 +138,2 @@ void server_client_lost(struct client *c) {
-  if (i == ARRAY_LENGTH(&dead_clients)) ARRAY_ADD(&dead_clients, c);
+ if (i == ARRAY_LENGTH(&dead_clients))
+  ARRAY_ADD(&dead_clients, c);
@@ -130 +146,3 @@ void server_client_lost(struct client *c) {
-void server_client_callback(int fd, short events, void *data) {
+void
+server_client_callback(int fd, short events, void *data)
+{
@@ -132 +150,2 @@ void server_client_callback(int fd, short events, void *data) {
-  if (c->flags & CLIENT_DEAD) return;
+ if (c->flags & CLIENT_DEAD)
+  return;
@@ -134 +153,2 @@ void server_client_callback(int fd, short events, void *data) {
-    if (events & EV_WRITE && msgbuf_write(&c->ibuf.w) < 0) goto client_lost;
+  if (events & EV_WRITE && msgbuf_write(&c->ibuf.w) < 0)
+   goto client_lost;
@@ -136 +156,2 @@ void server_client_callback(int fd, short events, void *data) {
-      if (c->ibuf.w.queued == 0) goto client_lost;
+   if (c->ibuf.w.queued == 0)
+    goto client_lost;
@@ -149 +170,3 @@ client_lost:
-void server_client_status_timer(void) {
+void
+server_client_status_timer(void)
+{
@@ -156 +179,2 @@ void server_client_status_timer(void) {
-  if (gettimeofday(&tv, NULL) != 0) fatal("gettimeofday failed");
+ if (gettimeofday(&tv, NULL) != 0)
+  fatal("gettimeofday failed");
@@ -159 +183,2 @@ void server_client_status_timer(void) {
-    if (c == NULL || c->session == NULL) continue;
+  if (c == NULL || c->session == NULL)
+   continue;
@@ -164 +189,2 @@ void server_client_status_timer(void) {
-    if (!options_get_number(&s->options, "status")) continue;
+  if (!options_get_number(&s->options, "status"))
+   continue;
@@ -173 +199,3 @@ void server_client_status_timer(void) {
-void server_client_check_mouse(struct client *c, struct window_pane *wp) {
+void
+server_client_check_mouse(struct client *c, struct window_pane *wp)
+{
@@ -203 +231,2 @@ void server_client_check_mouse(struct client *c, struct window_pane *wp) {
-  if (options_get_number(oo, "mouse-resize-pane")) layout_resize_pane_mouse(c);
+ if (options_get_number(oo, "mouse-resize-pane"))
+  layout_resize_pane_mouse(c);
@@ -206 +235,3 @@ void server_client_check_mouse(struct client *c, struct window_pane *wp) {
-int server_client_assume_paste(struct session *s) {
+int
+server_client_assume_paste(struct session *s)
+{
@@ -212 +243,2 @@ int server_client_assume_paste(struct session *s) {
-  if (tv.tv_sec == 0 && tv.tv_usec < t * 1000) return (1);
+ if (tv.tv_sec == 0 && tv.tv_usec < t * 1000)
+  return (1);
@@ -215 +247,3 @@ int server_client_assume_paste(struct session *s) {
-void server_client_handle_key(struct client *c, int key) {
+void
+server_client_handle_key(struct client *c, int key)
+{
@@ -222,2 +256,4 @@ void server_client_handle_key(struct client *c, int key) {
-  if ((c->flags & (CLIENT_DEAD | CLIENT_SUSPENDED)) != 0) return;
-  if (c->session == NULL) return;
+ if ((c->flags & (CLIENT_DEAD|CLIENT_SUSPENDED)) != 0)
+  return;
+ if (c->session == NULL)
+  return;
@@ -225 +261,2 @@ void server_client_handle_key(struct client *c, int key) {
-  if (gettimeofday(&c->activity_time, NULL) != 0) fatal("gettimeofday failed");
+ if (gettimeofday(&c->activity_time, NULL) != 0)
+  fatal("gettimeofday failed");
@@ -232 +269,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (c->flags & CLIENT_READONLY) return;
+  if (c->flags & CLIENT_READONLY)
+   return;
@@ -235 +273,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (wp != NULL && window_pane_visible(wp)) window_set_active_pane(w, wp);
+  if (wp != NULL && window_pane_visible(wp))
+   window_set_active_pane(w, wp);
@@ -244 +283,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (!(c->flags & CLIENT_READONLY)) status_prompt_key(c, key);
+  if (!(c->flags & CLIENT_READONLY))
+   status_prompt_key(c, key);
@@ -248 +288,2 @@ void server_client_handle_key(struct client *c, int key) {
-    if (c->flags & CLIENT_READONLY) return;
+  if (c->flags & CLIENT_READONLY)
+   return;
@@ -259 +300,2 @@ void server_client_handle_key(struct client *c, int key) {
-  if (ispaste) isprefix = 0;
+ if (ispaste)
+  isprefix = 0;
@@ -267 +309,2 @@ void server_client_handle_key(struct client *c, int key) {
-      if (!(c->flags & CLIENT_READONLY)) window_pane_key(wp, s, key);
+   if (!(c->flags & CLIENT_READONLY))
+    window_pane_key(wp, s, key);
@@ -302 +345,3 @@ void server_client_handle_key(struct client *c, int key) {
-void server_client_loop(void) {
+void
+server_client_loop(void)
+{
@@ -309 +354,2 @@ void server_client_loop(void) {
-    if (c == NULL) continue;
+  if (c == NULL)
+   continue;
@@ -318 +364,2 @@ void server_client_loop(void) {
-    if (w == NULL) continue;
+  if (w == NULL)
+   continue;
@@ -327 +374,3 @@ void server_client_loop(void) {
-voidserver_client_check_resize(struct window_pane *wp) {
+void
+server_client_check_resize(struct window_pane *wp)
+{
@@ -329 +378,2 @@ voidserver_client_check_resize(struct window_pane *wp) {
-  if (wp->fd == -1 || !(wp->flags & PANE_RESIZE)) return;
+ if (wp->fd == -1 || !(wp->flags & PANE_RESIZE))
+  return;
@@ -341 +391,3 @@ voidserver_client_check_resize(struct window_pane *wp) {
-voidserver_client_check_focus(struct window_pane *wp) {
+void
+server_client_check_focus(struct window_pane *wp)
+{
@@ -344,3 +396,6 @@ voidserver_client_check_focus(struct window_pane *wp) {
-  if (!(wp->base.mode & MODE_FOCUSON)) return;
-  if (wp->window->active != wp) goto not_focused;
-  if (wp->screen != &wp->base) goto not_focused;
+ if (!(wp->base.mode & MODE_FOCUSON))
+  return;
+ if (wp->window->active != wp)
+  goto not_focused;
+ if (wp->screen != &wp->base)
+  goto not_focused;
@@ -349,4 +404,8 @@ voidserver_client_check_focus(struct window_pane *wp) {
-    if (c == NULL || c->session == NULL) continue;
-    if (!(c->flags & CLIENT_FOCUSED)) continue;
-    if (c->session->flags & SESSION_UNATTACHED) continue;
-    if (c->session->curw->window == wp->window) goto focused;
+  if (c == NULL || c->session == NULL)
+   continue;
+  if (!(c->flags & CLIENT_FOCUSED))
+   continue;
+  if (c->session->flags & SESSION_UNATTACHED)
+   continue;
+  if (c->session->curw->window == wp->window)
+   goto focused;
@@ -355 +414,2 @@ not_focused:
-  if (wp->flags & PANE_FOCUSED) bufferevent_write(wp->event, "\033[O", 3);
+ if (wp->flags & PANE_FOCUSED)
+  bufferevent_write(wp->event, "\033[O", 3);
@@ -359 +419,2 @@ focused:
-  if (!(wp->flags & PANE_FOCUSED)) bufferevent_write(wp->event, "\033[I", 3);
+ if (!(wp->flags & PANE_FOCUSED))
+  bufferevent_write(wp->event, "\033[I", 3);
@@ -362 +423,3 @@ focused:
-void server_client_reset_state(struct client *c) {
+void
+server_client_reset_state(struct client *c)
+{
@@ -369,2 +432,4 @@ void server_client_reset_state(struct client *c) {
-  if (c->flags & CLIENT_SUSPENDED) return;
-  if (c->flags & CLIENT_CONTROL) return;
+ if (c->flags & CLIENT_SUSPENDED)
+  return;
+ if (c->flags & CLIENT_CONTROL)
+  return;
@@ -394,2 +459,2 @@ void server_client_reset_state(struct client *c) {
-  if ((c->tty.flags & TTY_UTF8) && (mode & ALL_MOUSE_MODES) &&
-      options_get_number(oo, "mouse-utf8"))
+ if ((c->tty.flags & TTY_UTF8) &&
+     (mode & ALL_MOUSE_MODES) && options_get_number(oo, "mouse-utf8"))
@@ -402,2 +467,3 @@ void server_client_reset_state(struct client *c) {
-void server_client_repeat_timer(unused int fd, unused short events,
-                                void *data) {
+void
+server_client_repeat_timer(unused int fd, unused short events, void *data)
+{
@@ -406 +472,2 @@ void server_client_repeat_timer(unused int fd, unused short events,
-    if (c->flags & CLIENT_PREFIX) server_status_client(c);
+  if (c->flags & CLIENT_PREFIX)
+   server_status_client(c);
@@ -410 +477,3 @@ void server_client_repeat_timer(unused int fd, unused short events,
-void server_client_check_exit(struct client *c) {
+void
+server_client_check_exit(struct client *c)
+{
@@ -412,4 +481,8 @@ void server_client_check_exit(struct client *c) {
-  if (!(c->flags & CLIENT_EXIT)) return;
-  if (EVBUFFER_LENGTH(c->stdin_data) != 0) return;
-  if (EVBUFFER_LENGTH(c->stdout_data) != 0) return;
-  if (EVBUFFER_LENGTH(c->stderr_data) != 0) return;
+ if (!(c->flags & CLIENT_EXIT))
+  return;
+ if (EVBUFFER_LENGTH(c->stdin_data) != 0)
+  return;
+ if (EVBUFFER_LENGTH(c->stdout_data) != 0)
+  return;
+ if (EVBUFFER_LENGTH(c->stderr_data) != 0)
+  return;
@@ -420 +493,3 @@ void server_client_check_exit(struct client *c) {
-void server_client_check_redraw(struct client *c) {
+void
+server_client_check_redraw(struct client *c)
+{
@@ -424 +499,2 @@ void server_client_check_redraw(struct client *c) {
-  if (c->flags & (CLIENT_CONTROL | CLIENT_SUSPENDED)) return;
+ if (c->flags & (CLIENT_CONTROL|CLIENT_SUSPENDED))
+  return;
@@ -436 +512,2 @@ void server_client_check_redraw(struct client *c) {
-    if (!redraw) c->flags &= ~CLIENT_STATUS;
+  if (!redraw)
+   c->flags &= ~CLIENT_STATUS;
@@ -447 +524,2 @@ void server_client_check_redraw(struct client *c) {
-      if (wp->flags & PANE_REDRAW) screen_redraw_pane(c, wp);
+   if (wp->flags & PANE_REDRAW)
+    screen_redraw_pane(c, wp);
@@ -450,2 +528,4 @@ void server_client_check_redraw(struct client *c) {
-  if (c->flags & CLIENT_BORDERS) screen_redraw_screen(c, 0, 1);
-  if (c->flags & CLIENT_STATUS) screen_redraw_screen(c, 1, 0);
+ if (c->flags & CLIENT_BORDERS)
+  screen_redraw_screen(c, 0, 1);
+ if (c->flags & CLIENT_STATUS)
+  screen_redraw_screen(c, 1, 0);
@@ -455 +535,3 @@ void server_client_check_redraw(struct client *c) {
-void server_client_set_title(struct client *c) {
+void
+server_client_set_title(struct client *c)
+{
@@ -468 +550,3 @@ void server_client_set_title(struct client *c) {
-int server_client_msg_dispatch(struct client *c) {
+int
+server_client_msg_dispatch(struct client *c)
+{
@@ -475 +559,2 @@ int server_client_msg_dispatch(struct client *c) {
-  if ((n = imsg_read(&c->ibuf)) == -1 || n == 0) return (-1);
+ if ((n = imsg_read(&c->ibuf)) == -1 || n == 0)
+  return (-1);
@@ -477,2 +562,4 @@ int server_client_msg_dispatch(struct client *c) {
-    if ((n = imsg_get(&c->ibuf, &imsg)) == -1) return (-1);
-    if (n == 0) return (0);
+  if ((n = imsg_get(&c->ibuf, &imsg)) == -1)
+   return (-1);
+  if (n == 0)
+   return (0);
@@ -489 +576,2 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != sizeof commanddata) fatalx("bad MSG_COMMAND size");
+   if (datalen != sizeof commanddata)
+    fatalx("bad MSG_COMMAND size");
@@ -494,2 +582,4 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != sizeof identifydata) fatalx("bad MSG_IDENTIFY size");
-        if (imsg.fd == -1) fatalx("MSG_IDENTIFY missing fd");
+   if (datalen != sizeof identifydata)
+    fatalx("bad MSG_IDENTIFY size");
+   if (imsg.fd == -1)
+    fatalx("MSG_IDENTIFY missing fd");
@@ -500 +590,2 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != sizeof stdindata) fatalx("bad MSG_STDIN size");
+   if (datalen != sizeof stdindata)
+    fatalx("bad MSG_STDIN size");
@@ -502 +593,2 @@ int server_client_msg_dispatch(struct client *c) {
-        if (c->stdin_callback == NULL) break;
+   if (c->stdin_callback == NULL)
+    break;
@@ -506 +598,2 @@ int server_client_msg_dispatch(struct client *c) {
-          evbuffer_add(c->stdin_data, stdindata.data, stdindata.size);
+    evbuffer_add(c->stdin_data, stdindata.data,
+        stdindata.size);
@@ -508 +601,2 @@ int server_client_msg_dispatch(struct client *c) {
-        c->stdin_callback(c, c->stdin_closed, c->stdin_callback_data);
+   c->stdin_callback(c, c->stdin_closed,
+       c->stdin_callback_data);
@@ -511,2 +605,4 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != 0) fatalx("bad MSG_RESIZE size");
-        if (c->flags & CLIENT_CONTROL) break;
+   if (datalen != 0)
+    fatalx("bad MSG_RESIZE size");
+   if (c->flags & CLIENT_CONTROL)
+    break;
@@ -519 +615,2 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != 0) fatalx("bad MSG_EXITING size");
+   if (datalen != 0)
+    fatalx("bad MSG_EXITING size");
@@ -526,2 +623,4 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != 0) fatalx("bad MSG_WAKEUP size");
-        if (!(c->flags & CLIENT_SUSPENDED)) break;
+   if (datalen != 0)
+    fatalx("bad MSG_WAKEUP size");
+   if (!(c->flags & CLIENT_SUSPENDED))
+    break;
@@ -529,2 +628,4 @@ int server_client_msg_dispatch(struct client *c) {
-        if (gettimeofday(&c->activity_time, NULL) != 0) fatal("gettimeofday");
-        if (c->session != NULL) session_update_activity(c->session);
+   if (gettimeofday(&c->activity_time, NULL) != 0)
+    fatal("gettimeofday");
+   if (c->session != NULL)
+    session_update_activity(c->session);
@@ -536 +637,2 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != sizeof environdata) fatalx("bad MSG_ENVIRON size");
+   if (datalen != sizeof environdata)
+    fatalx("bad MSG_ENVIRON size");
@@ -543 +645,2 @@ int server_client_msg_dispatch(struct client *c) {
-        if (datalen != 0) fatalx("bad MSG_SHELL size");
+   if (datalen != 0)
+    fatalx("bad MSG_SHELL size");
@@ -552,2 +655,3 @@ int server_client_msg_dispatch(struct client *c) {
-void server_client_msg_command(struct client *c,
-                               struct msg_command_data *data) {
+void
+server_client_msg_command(struct client *c, struct msg_command_data *data)
+{
@@ -578 +682,2 @@ error:
-  if (cmdlist != NULL) cmd_list_free(cmdlist);
+ if (cmdlist != NULL)
+  cmd_list_free(cmdlist);
@@ -581,2 +686,4 @@ error:
-void server_client_msg_identify(struct client *c,
-                                struct msg_identify_data *data, int fd) {
+void
+server_client_msg_identify(
+    struct client *c, struct msg_identify_data *data, int fd)
+{
@@ -585 +692,2 @@ void server_client_msg_identify(struct client *c,
-  if (*data->cwd != '\0') c->cwd = xstrdup(data->cwd);
+ if (*data->cwd != '\0')
+  c->cwd = xstrdup(data->cwd);
@@ -605 +713,2 @@ void server_client_msg_identify(struct client *c,
-  if (data->flags & IDENTIFY_UTF8) c->tty.flags |= TTY_UTF8;
+ if (data->flags & IDENTIFY_UTF8)
+  c->tty.flags |= TTY_UTF8;
@@ -611 +720,2 @@ void server_client_msg_identify(struct client *c,
-  if (!(data->flags & IDENTIFY_CONTROL)) c->flags |= CLIENT_TERMINAL;
+ if (!(data->flags & IDENTIFY_CONTROL))
+  c->flags |= CLIENT_TERMINAL;
@@ -613 +723,3 @@ void server_client_msg_identify(struct client *c,
-void server_client_msg_shell(struct client *c) {
+void
+server_client_msg_shell(struct client *c)
+{
@@ -617 +729,2 @@ void server_client_msg_shell(struct client *c) {
-  if (*shell == '\0' || areshell(shell)) shell = _PATH_BSHELL;
+ if (*shell == '\0' || areshell(shell))
+  shell = _PATH_BSHELL;
