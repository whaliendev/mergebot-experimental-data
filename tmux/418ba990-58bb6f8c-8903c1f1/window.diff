diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/window.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/window.no_comments_merged.c
index 010c40d..e323525 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/window.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/418ba990-58bb6f8c-8903c1f1/window.no_comments_merged.c
@@ -6,2 +5,0 @@
-#include <paths.h>
-#include <stdint.h>
@@ -10 +7,0 @@
-#include <util.h>
@@ -23 +20,4 @@ void window_pane_error_callback(struct bufferevent *, short, void *);
-int winlink_cmp(struct winlink *wl1, struct winlink *wl2) {
+RB_GENERATE(winlinks, winlink, entry, winlink_cmp);
+int
+winlink_cmp(struct winlink *wl1, struct winlink *wl2)
+{
@@ -26 +26,4 @@ int winlink_cmp(struct winlink *wl1, struct winlink *wl2) {
-int window_pane_cmp(struct window_pane *wp1, struct window_pane *wp2) {
+RB_GENERATE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
+int
+window_pane_cmp(struct window_pane *wp1, struct window_pane *wp2)
+{
@@ -29 +32,3 @@ int window_pane_cmp(struct window_pane *wp1, struct window_pane *wp2) {
-struct winlink *winlink_find_by_window(struct winlinks *wwl, struct window *w) {
+struct winlink *
+winlink_find_by_window(struct winlinks *wwl, struct window *w)
+{
@@ -32 +37,2 @@ struct winlink *winlink_find_by_window(struct winlinks *wwl, struct window *w) {
-    if (wl->window == w) return (wl);
+  if (wl->window == w)
+   return (wl);
@@ -36 +42,3 @@ struct winlink *winlink_find_by_window(struct winlinks *wwl, struct window *w) {
-struct winlink *winlink_find_by_index(struct winlinks *wwl, int idx) {
+struct winlink *
+winlink_find_by_index(struct winlinks *wwl, int idx)
+{
@@ -38 +46,2 @@ struct winlink *winlink_find_by_index(struct winlinks *wwl, int idx) {
-  if (idx < 0) fatalx("bad index");
+ if (idx < 0)
+  fatalx("bad index");
@@ -42 +51,3 @@ struct winlink *winlink_find_by_index(struct winlinks *wwl, int idx) {
-struct winlink *winlink_find_by_window_id(struct winlinks *wwl, u_int id) {
+struct winlink *
+winlink_find_by_window_id(struct winlinks *wwl, u_int id)
+{
@@ -45 +56,2 @@ struct winlink *winlink_find_by_window_id(struct winlinks *wwl, u_int id) {
-    if (wl->window->id == id) return (wl);
+  if (wl->window->id == id)
+   return (wl);
@@ -49 +61,3 @@ struct winlink *winlink_find_by_window_id(struct winlinks *wwl, u_int id) {
-int winlink_next_index(struct winlinks *wwl, int idx) {
+int
+winlink_next_index(struct winlinks *wwl, int idx)
+{
@@ -53 +67,2 @@ int winlink_next_index(struct winlinks *wwl, int idx) {
-    if (winlink_find_by_index(wwl, i) == NULL) return (i);
+  if (winlink_find_by_index(wwl, i) == NULL)
+   return (i);
@@ -61 +76,3 @@ int winlink_next_index(struct winlinks *wwl, int idx) {
-u_int winlink_count(struct winlinks *wwl) {
+u_int
+winlink_count(struct winlinks *wwl)
+{
@@ -69 +86,3 @@ u_int winlink_count(struct winlinks *wwl) {
-struct winlink *winlink_add(struct winlinks *wwl, int idx) {
+struct winlink *
+winlink_add(struct winlinks *wwl, int idx)
+{
@@ -72 +91,2 @@ struct winlink *winlink_add(struct winlinks *wwl, int idx) {
-    if ((idx = winlink_next_index(wwl, -idx - 1)) == -1) return (NULL);
+  if ((idx = winlink_next_index(wwl, -idx - 1)) == -1)
+   return (NULL);
@@ -80 +100,3 @@ struct winlink *winlink_add(struct winlinks *wwl, int idx) {
-void winlink_set_window(struct winlink *wl, struct window *w) {
+void
+winlink_set_window(struct winlink *wl, struct window *w)
+{
@@ -84 +106,3 @@ void winlink_set_window(struct winlink *wl, struct window *w) {
-void winlink_remove(struct winlinks *wwl, struct winlink *wl) {
+void
+winlink_remove(struct winlinks *wwl, struct winlink *wl)
+{
@@ -89 +113,2 @@ void winlink_remove(struct winlinks *wwl, struct winlink *wl) {
-  if (w != NULL) window_remove_ref(w);
+ if (w != NULL)
+  window_remove_ref(w);
@@ -91 +116,3 @@ void winlink_remove(struct winlinks *wwl, struct winlink *wl) {
-struct winlink *winlink_next(struct winlink *wl) {
+struct winlink *
+winlink_next(struct winlink *wl)
+{
@@ -94 +121,3 @@ struct winlink *winlink_next(struct winlink *wl) {
-struct winlink *winlink_previous(struct winlink *wl) {
+struct winlink *
+winlink_previous(struct winlink *wl)
+{
@@ -97,2 +126,3 @@ struct winlink *winlink_previous(struct winlink *wl) {
-struct winlink *winlink_next_by_number(struct winlink *wl, struct session *s,
-                                       int n) {
+struct winlink *
+winlink_next_by_number(struct winlink *wl, struct session *s, int n)
+{
@@ -105,2 +135,3 @@ struct winlink *winlink_next_by_number(struct winlink *wl, struct session *s,
-struct winlink *winlink_previous_by_number(struct winlink *wl,
-                                           struct session *s, int n) {
+struct winlink *
+winlink_previous_by_number(struct winlink *wl, struct session *s, int n)
+{
@@ -113,2 +144,5 @@ struct winlink *winlink_previous_by_number(struct winlink *wl,
-void winlink_stack_push(struct winlink_stack *stack, struct winlink *wl) {
-  if (wl == NULL) return;
+void
+winlink_stack_push(struct winlink_stack *stack, struct winlink *wl)
+{
+ if (wl == NULL)
+  return;
@@ -118 +152,3 @@ void winlink_stack_push(struct winlink_stack *stack, struct winlink *wl) {
-void winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl) {
+void
+winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl)
+{
@@ -120 +156,2 @@ void winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl) {
-  if (wl == NULL) return;
+ if (wl == NULL)
+  return;
@@ -128 +165,3 @@ void winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl) {
-int window_index(struct window *s, u_int *i) {
+int
+window_index(struct window *s, u_int *i)
+{
@@ -130 +169,2 @@ int window_index(struct window *s, u_int *i) {
-    if (s == ARRAY_ITEM(&windows, *i)) return (0);
+  if (s == ARRAY_ITEM(&windows, *i))
+   return (0);
@@ -134 +174,3 @@ int window_index(struct window *s, u_int *i) {
-struct window *window_find_by_id(u_int id) {
+struct window *
+window_find_by_id(u_int id)
+{
@@ -139 +181,2 @@ struct window *window_find_by_id(u_int id) {
-    if (w->id == id) return (w);
+  if (w->id == id)
+   return (w);
@@ -143 +186,3 @@ struct window *window_find_by_id(u_int id) {
-struct window *window_create1(u_int sx, u_int sy) {
+struct window *
+window_create1(u_int sx, u_int sy)
+{
@@ -157 +202,2 @@ struct window *window_create1(u_int sx, u_int sy) {
-  if (options_get_number(&w->options, "automatic-rename")) queue_window_name(w);
+ if (options_get_number(&w->options, "automatic-rename"))
+  queue_window_name(w);
@@ -164 +210,2 @@ struct window *window_create1(u_int sx, u_int sy) {
-  if (i == ARRAY_LENGTH(&windows)) ARRAY_ADD(&windows, w);
+ if (i == ARRAY_LENGTH(&windows))
+  ARRAY_ADD(&windows, w);
@@ -168,4 +215,5 @@ struct window *window_create1(u_int sx, u_int sy) {
-struct window *window_create(const char *name, const char *cmd,
-                             const char *shell, const char *cwd,
-                             struct environ *env, struct termios *tio, u_int sx,
-                             u_int sy, u_int hlimit, char **cause) {
+struct window *
+window_create(const char *name, const char *cmd, const char *shell,
+    const char *cwd, struct environ *env, struct termios *tio,
+    u_int sx, u_int sy, u_int hlimit, char **cause)
+{
@@ -198 +246,3 @@ struct window *window_create(const char *name, const char *cmd,
-void window_destroy(struct window *w) {
+void
+window_destroy(struct window *w)
+{
@@ -201 +251,2 @@ void window_destroy(struct window *w) {
-  if (window_index(w, &i) != 0) fatalx("index not found");
+ if (window_index(w, &i) != 0)
+  fatalx("index not found");
@@ -205,2 +256,4 @@ void window_destroy(struct window *w) {
-  if (w->layout_root != NULL) layout_free(w);
-  if (event_initialized(&w->name_timer)) evtimer_del(&w->name_timer);
+ if (w->layout_root != NULL)
+  layout_free(w);
+ if (event_initialized(&w->name_timer))
+  evtimer_del(&w->name_timer);
@@ -212,2 +265,5 @@ void window_destroy(struct window *w) {
-void window_remove_ref(struct window *w) {
-  if (w->references == 0) fatal("bad reference count");
+void
+window_remove_ref(struct window *w)
+{
+ if (w->references == 0)
+  fatal("bad reference count");
@@ -215 +271,2 @@ void window_remove_ref(struct window *w) {
-  if (w->references == 0) window_destroy(w);
+ if (w->references == 0)
+  window_destroy(w);
@@ -217 +274,3 @@ void window_remove_ref(struct window *w) {
-void window_set_name(struct window *w, const char *new_name) {
+void
+window_set_name(struct window *w, const char *new_name)
+{
@@ -222 +281,3 @@ void window_set_name(struct window *w, const char *new_name) {
-void window_resize(struct window *w, u_int sx, u_int sy) {
+void
+window_resize(struct window *w, u_int sx, u_int sy)
+{
@@ -226,2 +287,5 @@ void window_resize(struct window *w, u_int sx, u_int sy) {
-void window_set_active_pane(struct window *w, struct window_pane *wp) {
-  if (wp == w->active) return;
+void
+window_set_active_pane(struct window *w, struct window_pane *wp)
+{
+ if (wp == w->active)
+  return;
@@ -232,2 +296,4 @@ void window_set_active_pane(struct window *w, struct window_pane *wp) {
-    if (w->active == NULL) w->active = TAILQ_LAST(&w->panes, window_panes);
-    if (w->active == wp) return;
+  if (w->active == NULL)
+   w->active = TAILQ_LAST(&w->panes, window_panes);
+  if (w->active == wp)
+   return;
@@ -236 +302,3 @@ void window_set_active_pane(struct window *w, struct window_pane *wp) {
-struct window_pane *window_get_active_at(struct window *w, u_int x, u_int y) {
+struct window_pane *
+window_get_active_at(struct window *w, u_int x, u_int y)
+{
@@ -239,3 +307,6 @@ struct window_pane *window_get_active_at(struct window *w, u_int x, u_int y) {
-    if (!window_pane_visible(wp)) continue;
-    if (x < wp->xoff || x > wp->xoff + wp->sx) continue;
-    if (y < wp->yoff || y > wp->yoff + wp->sy) continue;
+  if (!window_pane_visible(wp))
+   continue;
+  if (x < wp->xoff || x > wp->xoff + wp->sx)
+   continue;
+  if (y < wp->yoff || y > wp->yoff + wp->sy)
+   continue;
@@ -246 +317,3 @@ struct window_pane *window_get_active_at(struct window *w, u_int x, u_int y) {
-void window_set_active_at(struct window *w, u_int x, u_int y) {
+void
+window_set_active_at(struct window *w, u_int x, u_int y)
+{
@@ -249 +322,2 @@ void window_set_active_at(struct window *w, u_int x, u_int y) {
-  if (wp != NULL && wp != w->active) window_set_active_pane(w, wp);
+ if (wp != NULL && wp != w->active)
+  window_set_active_pane(w, wp);
@@ -251 +325,3 @@ void window_set_active_at(struct window *w, u_int x, u_int y) {
-struct window_pane *window_find_string(struct window *w, const char *s) {
+struct window_pane *
+window_find_string(struct window *w, const char *s)
+{
@@ -279 +355,3 @@ struct window_pane *window_find_string(struct window *w, const char *s) {
-intwindow_zoom(struct window_pane *wp) {
+int
+window_zoom(struct window_pane *wp)
+{
@@ -282,4 +360,8 @@ intwindow_zoom(struct window_pane *wp) {
-  if (w->flags & WINDOW_ZOOMED) return (-1);
-  if (!window_pane_visible(wp)) return (-1);
-  if (window_count_panes(w) == 1) return (-1);
-  if (w->active != wp) window_set_active_pane(w, wp);
+ if (w->flags & WINDOW_ZOOMED)
+  return (-1);
+ if (!window_pane_visible(wp))
+  return (-1);
+ if (window_count_panes(w) == 1)
+  return (-1);
+ if (w->active != wp)
+  window_set_active_pane(w, wp);
@@ -295 +377,3 @@ intwindow_zoom(struct window_pane *wp) {
-intwindow_unzoom(struct window *w) {
+int
+window_unzoom(struct window *w)
+{
@@ -297 +381,2 @@ intwindow_unzoom(struct window *w) {
-  if (!(w->flags & WINDOW_ZOOMED)) return (-1);
+ if (!(w->flags & WINDOW_ZOOMED))
+  return (-1);
@@ -309 +394,3 @@ intwindow_unzoom(struct window *w) {
-struct window_pane *window_add_pane(struct window *w, u_int hlimit) {
+struct window_pane *
+window_add_pane(struct window *w, u_int hlimit)
+{
@@ -318 +405,3 @@ struct window_pane *window_add_pane(struct window *w, u_int hlimit) {
-void window_remove_pane(struct window *w, struct window_pane *wp) {
+void
+window_remove_pane(struct window *w, struct window_pane *wp)
+{
@@ -324 +413,2 @@ void window_remove_pane(struct window *w, struct window_pane *wp) {
-      if (w->active == NULL) w->active = TAILQ_NEXT(wp, entry);
+   if (w->active == NULL)
+    w->active = TAILQ_NEXT(wp, entry);
@@ -331 +421,3 @@ void window_remove_pane(struct window *w, struct window_pane *wp) {
-struct window_pane *window_pane_at_index(struct window *w, u_int idx) {
+struct window_pane *
+window_pane_at_index(struct window *w, u_int idx)
+{
@@ -336 +428,2 @@ struct window_pane *window_pane_at_index(struct window *w, u_int idx) {
-    if (n == idx) return (wp);
+  if (n == idx)
+   return (wp);
@@ -341,3 +434,3 @@ struct window_pane *window_pane_at_index(struct window *w, u_int idx) {
-struct window_pane *window_pane_next_by_number(struct window *w,
-                                               struct window_pane *wp,
-                                               u_int n) {
+struct window_pane *
+window_pane_next_by_number(struct window *w, struct window_pane *wp, u_int n)
+{
@@ -345 +438,2 @@ struct window_pane *window_pane_next_by_number(struct window *w,
-    if ((wp = TAILQ_NEXT(wp, entry)) == NULL) wp = TAILQ_FIRST(&w->panes);
+  if ((wp = TAILQ_NEXT(wp, entry)) == NULL)
+   wp = TAILQ_FIRST(&w->panes);
@@ -349,3 +443,4 @@ struct window_pane *window_pane_next_by_number(struct window *w,
-struct window_pane *window_pane_previous_by_number(struct window *w,
-                                                   struct window_pane *wp,
-                                                   u_int n) {
+struct window_pane *
+window_pane_previous_by_number(struct window *w, struct window_pane *wp,
+    u_int n)
+{
@@ -358 +453,3 @@ struct window_pane *window_pane_previous_by_number(struct window *w,
-int window_pane_index(struct window_pane *wp, u_int *i) {
+int
+window_pane_index(struct window_pane *wp, u_int *i)
+{
@@ -370 +467,3 @@ int window_pane_index(struct window_pane *wp, u_int *i) {
-u_int window_count_panes(struct window *w) {
+u_int
+window_count_panes(struct window *w)
+{
@@ -378 +477,3 @@ u_int window_count_panes(struct window *w) {
-void window_destroy_panes(struct window *w) {
+void
+window_destroy_panes(struct window *w)
+{
@@ -386 +487,3 @@ void window_destroy_panes(struct window *w) {
-char *window_printable_flags(struct session *s, struct winlink *wl) {
+char *
+window_printable_flags(struct session *s, struct winlink *wl)
+{
@@ -390,8 +493,16 @@ char *window_printable_flags(struct session *s, struct winlink *wl) {
-  if (wl->flags & WINLINK_ACTIVITY) flags[pos++] = '#';
-  if (wl->flags & WINLINK_BELL) flags[pos++] = '!';
-  if (wl->flags & WINLINK_CONTENT) flags[pos++] = '+';
-  if (wl->flags & WINLINK_SILENCE) flags[pos++] = '~';
-  if (wl == s->curw) flags[pos++] = '*';
-  if (wl == TAILQ_FIRST(&s->lastw)) flags[pos++] = '-';
-  if (wl->window->flags & WINDOW_ZOOMED) flags[pos++] = 'Z';
-  if (pos == 0) flags[pos++] = ' ';
+ if (wl->flags & WINLINK_ACTIVITY)
+  flags[pos++] = '#';
+ if (wl->flags & WINLINK_BELL)
+  flags[pos++] = '!';
+ if (wl->flags & WINLINK_CONTENT)
+  flags[pos++] = '+';
+ if (wl->flags & WINLINK_SILENCE)
+  flags[pos++] = '~';
+ if (wl == s->curw)
+  flags[pos++] = '*';
+ if (wl == TAILQ_FIRST(&s->lastw))
+  flags[pos++] = '-';
+ if (wl->window->flags & WINDOW_ZOOMED)
+  flags[pos++] = 'Z';
+ if (pos == 0)
+  flags[pos++] = ' ';
@@ -401 +512,3 @@ char *window_printable_flags(struct session *s, struct winlink *wl) {
-struct window_pane *window_pane_find_by_id(u_int id) {
+struct window_pane *
+window_pane_find_by_id(u_int id)
+{
@@ -406,2 +519,3 @@ struct window_pane *window_pane_find_by_id(u_int id) {
-struct window_pane *window_pane_create(struct window *w, u_int sx, u_int sy,
-                                       u_int hlimit) {
+struct window_pane *
+window_pane_create(struct window *w, u_int sx, u_int sy, u_int hlimit)
+{
@@ -433 +547,3 @@ struct window_pane *window_pane_create(struct window *w, u_int sx, u_int sy,
-void window_pane_destroy(struct window_pane *wp) {
+void
+window_pane_destroy(struct window_pane *wp)
+{
@@ -435 +551,2 @@ void window_pane_destroy(struct window_pane *wp) {
-  if (event_initialized(&wp->changes_timer)) evtimer_del(&wp->changes_timer);
+ if (event_initialized(&wp->changes_timer))
+  evtimer_del(&wp->changes_timer);
@@ -442 +559,2 @@ void window_pane_destroy(struct window_pane *wp) {
-  if (wp->saved_grid != NULL) grid_destroy(wp->saved_grid);
+ if (wp->saved_grid != NULL)
+  grid_destroy(wp->saved_grid);
@@ -453,3 +571,4 @@ void window_pane_destroy(struct window_pane *wp) {
-int window_pane_spawn(struct window_pane *wp, const char *cmd,
-                      const char *shell, const char *cwd, struct environ *env,
-                      struct termios *tio, char **cause) {
+int
+window_pane_spawn(struct window_pane *wp, const char *cmd, const char *shell,
+    const char *cwd, struct environ *env, struct termios *tio, char **cause)
+{
@@ -486,3 +605,6 @@ int window_pane_spawn(struct window_pane *wp, const char *cmd,
-      if (chdir(wp->cwd) != 0) chdir("/");
-      if (tcgetattr(STDIN_FILENO, &tio2) != 0) fatal("tcgetattr failed");
-      if (tio != NULL) memcpy(tio2.c_cc, tio->c_cc, sizeof tio2.c_cc);
+  if (chdir(wp->cwd) != 0)
+   chdir("/");
+  if (tcgetattr(STDIN_FILENO, &tio2) != 0)
+   fatal("tcgetattr failed");
+  if (tio != NULL)
+   memcpy(tio2.c_cc, tio->c_cc, sizeof tio2.c_cc);
@@ -520,2 +642,2 @@ int window_pane_spawn(struct window_pane *wp, const char *cmd,
-  wp->event = bufferevent_new(wp->fd, window_pane_read_callback, NULL,
-                              window_pane_error_callback, wp);
+ wp->event = bufferevent_new(wp->fd,
+     window_pane_read_callback, NULL, window_pane_error_callback, wp);
@@ -525 +647,3 @@ int window_pane_spawn(struct window_pane *wp, const char *cmd,
-void window_pane_timer_start(struct window_pane *wp) {
+void
+window_pane_timer_start(struct window_pane *wp)
+{
@@ -533,2 +657,3 @@ void window_pane_timer_start(struct window_pane *wp) {
-void window_pane_timer_callback(unused int fd, unused short events,
-                                void *data) {
+void
+window_pane_timer_callback(unused int fd, unused short events, void *data)
+{
@@ -551 +676,3 @@ void window_pane_timer_callback(unused int fd, unused short events,
-void window_pane_read_callback(unused struct bufferevent *bufev, void *data) {
+void
+window_pane_read_callback(unused struct bufferevent *bufev, void *data)
+{
@@ -566,2 +693,4 @@ void window_pane_read_callback(unused struct bufferevent *bufev, void *data) {
-void window_pane_error_callback(unused struct bufferevent *bufev,
-                                unused short what, void *data) {
+void
+window_pane_error_callback(
+    unused struct bufferevent *bufev, unused short what, void *data)
+{
@@ -571,2 +700,5 @@ void window_pane_error_callback(unused struct bufferevent *bufev,
-void window_pane_resize(struct window_pane *wp, u_int sx, u_int sy) {
-  if (sx == wp->sx && sy == wp->sy) return;
+void
+window_pane_resize(struct window_pane *wp, u_int sx, u_int sy)
+{
+ if (sx == wp->sx && sy == wp->sy)
+  return;
@@ -576,11 +708,2 @@ void window_pane_resize(struct window_pane *wp, u_int sx, u_int sy) {
-  if (wp->mode != NULL) wp->mode->resize(wp, sx, sy);
-<<<<<<< HEAD
-  if (wp->fd != -1 && ioctl(wp->fd, TIOCSWINSZ, &ws) == -1)
-#ifdef __sun
-    if (errno != EINVAL)
-#endif
-      fatal("ioctl failed");
-|||||||
-  if (wp->fd != -1 && ioctl(wp->fd, TIOCSWINSZ, &ws) == -1)
-    fatal("ioctl failed");
-=======
+ if (wp->mode != NULL)
+  wp->mode->resize(wp, sx, sy);
@@ -588 +710,0 @@ void window_pane_resize(struct window_pane *wp, u_int sx, u_int sy) {
->>>>>>> 58bb6f8c5650d496fb3b872766c0278aa024631d
@@ -590,2 +712,4 @@ void window_pane_resize(struct window_pane *wp, u_int sx, u_int sy) {
-void window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
-                              int cursor) {
+void
+window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
+    int cursor)
+{
@@ -594,2 +718,4 @@ void window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
-  if (wp->saved_grid != NULL) return;
-  if (!options_get_number(&wp->window->options, "alternate-screen")) return;
+ if (wp->saved_grid != NULL)
+  return;
+ if (!options_get_number(&wp->window->options, "alternate-screen"))
+  return;
@@ -609,2 +735,4 @@ void window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
-void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-                               int cursor) {
+void
+window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
+    int cursor)
+{
@@ -613,2 +741,4 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-  if (wp->saved_grid == NULL) return;
-  if (!options_get_number(&wp->window->options, "alternate-screen")) return;
+ if (wp->saved_grid == NULL)
+  return;
+ if (!options_get_number(&wp->window->options, "alternate-screen"))
+  return;
@@ -617 +747,2 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-  if (sy > wp->saved_grid->sy) screen_resize(s, sx, wp->saved_grid->sy, 1);
+ if (sy > wp->saved_grid->sy)
+  screen_resize(s, sx, wp->saved_grid->sy, 1);
@@ -619,4 +750,8 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-  if (cursor) s->cx = wp->saved_cx;
-  if (s->cx > screen_size_x(s) - 1) s->cx = screen_size_x(s) - 1;
-  if (cursor) s->cy = wp->saved_cy;
-  if (s->cy > screen_size_y(s) - 1) s->cy = screen_size_y(s) - 1;
+ if (cursor)
+  s->cx = wp->saved_cx;
+ if (s->cx > screen_size_x(s) - 1)
+  s->cx = screen_size_x(s) - 1;
+ if (cursor)
+  s->cy = wp->saved_cy;
+ if (s->cy > screen_size_y(s) - 1)
+  s->cy = screen_size_y(s) - 1;
@@ -631,2 +766,3 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-int window_pane_set_mode(struct window_pane *wp,
-                         const struct window_mode *mode) {
+int
+window_pane_set_mode(struct window_pane *wp, const struct window_mode *mode)
+{
@@ -634 +770,2 @@ int window_pane_set_mode(struct window_pane *wp,
-  if (wp->mode != NULL) return (1);
+ if (wp->mode != NULL)
+  return (1);
@@ -636 +773,2 @@ int window_pane_set_mode(struct window_pane *wp,
-  if ((s = wp->mode->init(wp)) != NULL) wp->screen = s;
+ if ((s = wp->mode->init(wp)) != NULL)
+  wp->screen = s;
@@ -640,2 +778,5 @@ int window_pane_set_mode(struct window_pane *wp,
-void window_pane_reset_mode(struct window_pane *wp) {
-  if (wp->mode == NULL) return;
+void
+window_pane_reset_mode(struct window_pane *wp)
+{
+ if (wp->mode == NULL)
+  return;
@@ -647 +788,3 @@ void window_pane_reset_mode(struct window_pane *wp) {
-void window_pane_key(struct window_pane *wp, struct session *sess, int key) {
+void
+window_pane_key(struct window_pane *wp, struct session *sess, int key)
+{
@@ -649 +792,2 @@ void window_pane_key(struct window_pane *wp, struct session *sess, int key) {
-  if (!window_pane_visible(wp)) return;
+ if (!window_pane_visible(wp))
+  return;
@@ -651 +795,2 @@ void window_pane_key(struct window_pane *wp, struct session *sess, int key) {
-    if (wp->mode->key != NULL) wp->mode->key(wp, sess, key);
+  if (wp->mode->key != NULL)
+   wp->mode->key(wp, sess, key);
@@ -654 +799,2 @@ void window_pane_key(struct window_pane *wp, struct session *sess, int key) {
-  if (wp->fd == -1) return;
+ if (wp->fd == -1)
+  return;
@@ -658,2 +804,4 @@ void window_pane_key(struct window_pane *wp, struct session *sess, int key) {
-      if (wp2 == wp || wp2->mode != NULL) continue;
-      if (wp2->fd != -1 && window_pane_visible(wp2)) input_key(wp2, key);
+   if (wp2 == wp || wp2->mode != NULL)
+    continue;
+   if (wp2->fd != -1 && window_pane_visible(wp2))
+    input_key(wp2, key);
@@ -663,5 +811,10 @@ void window_pane_key(struct window_pane *wp, struct session *sess, int key) {
-void window_pane_mouse(struct window_pane *wp, struct session *sess,
-                       struct mouse_event *m) {
-  if (!window_pane_visible(wp)) return;
-  if (m->x < wp->xoff || m->x >= wp->xoff + wp->sx) return;
-  if (m->y < wp->yoff || m->y >= wp->yoff + wp->sy) return;
+void
+window_pane_mouse(
+    struct window_pane *wp, struct session *sess, struct mouse_event *m)
+{
+ if (!window_pane_visible(wp))
+  return;
+ if (m->x < wp->xoff || m->x >= wp->xoff + wp->sx)
+  return;
+ if (m->y < wp->yoff || m->y >= wp->yoff + wp->sy)
+  return;
@@ -677 +830,3 @@ void window_pane_mouse(struct window_pane *wp, struct session *sess,
-int window_pane_visible(struct window_pane *wp) {
+int
+window_pane_visible(struct window_pane *wp)
+{
@@ -679,3 +834,6 @@ int window_pane_visible(struct window_pane *wp) {
-  if (wp->layout_cell == NULL) return (0);
-  if (wp->xoff >= w->sx || wp->yoff >= w->sy) return (0);
-  if (wp->xoff + wp->sx > w->sx || wp->yoff + wp->sy > w->sy) return (0);
+ if (wp->layout_cell == NULL)
+  return (0);
+ if (wp->xoff >= w->sx || wp->yoff >= w->sy)
+  return (0);
+ if (wp->xoff + wp->sx > w->sx || wp->yoff + wp->sy > w->sy)
+  return (0);
@@ -684,2 +842,3 @@ int window_pane_visible(struct window_pane *wp) {
-char *window_pane_search(struct window_pane *wp, const char *searchstr,
-                         u_int *lineno) {
+char *
+window_pane_search(struct window_pane *wp, const char *searchstr, u_int *lineno)
+{
@@ -695 +854,2 @@ char *window_pane_search(struct window_pane *wp, const char *searchstr,
-      if (lineno != NULL) *lineno = i;
+   if (lineno != NULL)
+    *lineno = i;
@@ -703 +863,3 @@ char *window_pane_search(struct window_pane *wp, const char *searchstr,
-struct window_pane *window_pane_find_up(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_up(struct window_pane *wp)
+{
@@ -706 +868,2 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -708 +871,2 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-  if (top == 0) top = wp->window->sy + 1;
+ if (top == 0)
+  top = wp->window->sy + 1;
@@ -711,3 +875,6 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-    if (!window_pane_visible(wp2)) continue;
-    if (wp2->yoff + wp2->sy + 1 != top) continue;
-    if (left >= wp2->xoff && left <= wp2->xoff + wp2->sx) return (wp2);
+  if (!window_pane_visible(wp2))
+   continue;
+  if (wp2->yoff + wp2->sy + 1 != top)
+   continue;
+  if (left >= wp2->xoff && left <= wp2->xoff + wp2->sx)
+   return (wp2);
@@ -717 +884,3 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-struct window_pane *window_pane_find_down(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_down(struct window_pane *wp)
+{
@@ -720 +889,2 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -722 +892,2 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-  if (bottom >= wp->window->sy) bottom = 0;
+ if (bottom >= wp->window->sy)
+  bottom = 0;
@@ -725,3 +896,6 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-    if (!window_pane_visible(wp2)) continue;
-    if (wp2->yoff != bottom) continue;
-    if (left >= wp2->xoff && left <= wp2->xoff + wp2->sx) return (wp2);
+  if (!window_pane_visible(wp2))
+   continue;
+  if (wp2->yoff != bottom)
+   continue;
+  if (left >= wp2->xoff && left <= wp2->xoff + wp2->sx)
+   return (wp2);
@@ -731 +905,3 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-struct window_pane *window_pane_find_left(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_left(struct window_pane *wp)
+{
@@ -734 +910,2 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -736 +913,2 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-  if (left == 0) left = wp->window->sx + 1;
+ if (left == 0)
+  left = wp->window->sx + 1;
@@ -739,3 +917,6 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-    if (!window_pane_visible(wp2)) continue;
-    if (wp2->xoff + wp2->sx + 1 != left) continue;
-    if (top >= wp2->yoff && top <= wp2->yoff + wp2->sy) return (wp2);
+  if (!window_pane_visible(wp2))
+   continue;
+  if (wp2->xoff + wp2->sx + 1 != left)
+   continue;
+  if (top >= wp2->yoff && top <= wp2->yoff + wp2->sy)
+   return (wp2);
@@ -745 +926,3 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-struct window_pane *window_pane_find_right(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_right(struct window_pane *wp)
+{
@@ -748 +931,2 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -750 +934,2 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-  if (right >= wp->window->sx) right = 0;
+ if (right >= wp->window->sx)
+  right = 0;
@@ -753,3 +938,6 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-    if (!window_pane_visible(wp2)) continue;
-    if (wp2->xoff != right) continue;
-    if (top >= wp2->yoff && top <= wp2->yoff + wp2->sy) return (wp2);
+  if (!window_pane_visible(wp2))
+   continue;
+  if (wp2->xoff != right)
+   continue;
+  if (top >= wp2->yoff && top <= wp2->yoff + wp2->sy)
+   return (wp2);
@@ -759 +947,3 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-void winlink_clear_flags(struct winlink *wl) {
+void
+winlink_clear_flags(struct winlink *wl)
+{
@@ -765 +955,2 @@ void winlink_clear_flags(struct winlink *wl) {
-    if ((w = ARRAY_ITEM(&windows, i)) == NULL) continue;
+  if ((w = ARRAY_ITEM(&windows, i)) == NULL)
+   continue;
@@ -767,3 +958,6 @@ void winlink_clear_flags(struct winlink *wl) {
-      if ((wm = session_has(s, w)) == NULL) continue;
-      if (wm->window != wl->window) continue;
-      if ((wm->flags & WINLINK_ALERTFLAGS) == 0) continue;
+   if ((wm = session_has(s, w)) == NULL)
+    continue;
+   if (wm->window != wl->window)
+    continue;
+   if ((wm->flags & WINLINK_ALERTFLAGS) == 0)
+    continue;
@@ -775 +969,3 @@ void winlink_clear_flags(struct winlink *wl) {
-void window_mode_attrs(struct grid_cell *gc, struct options *oo) {
+void
+window_mode_attrs(struct grid_cell *gc, struct options *oo)
+{
