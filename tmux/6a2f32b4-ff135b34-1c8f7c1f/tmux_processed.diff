--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/6a2f32b4-ff135b34-1c8f7c1f/tmux.no_comments_merged.h
@@ -4,4 +3,0 @@
-#include <sys/queue.h>
-#include <sys/tree.h>
-#include <bitstring.h>
-#include <stdint.h>
@@ -51,0 +48 @@ struct winlink;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -73,0 +71,2 @@ struct winlink;
+#define KEYC_IS_MOUSE(key) (((key) & KEYC_MASK_KEY) >= KEYC_MOUSE && \
+    ((key) & KEYC_MASK_KEY) < KEYC_BSPACE)
@@ -74,0 +74,14 @@ struct winlink;
+#define KEYC_MOUSE_KEY(name) \
+ KEYC_ ## name ## _PANE, \
+ KEYC_ ## name ## _STATUS, \
+ KEYC_ ## name ## _STATUS_LEFT, \
+ KEYC_ ## name ## _STATUS_RIGHT, \
+ KEYC_ ## name ## _STATUS_DEFAULT, \
+ KEYC_ ## name ## _BORDER
+#define KEYC_MOUSE_STRING(name,s) \
+ { #s "Pane", KEYC_ ## name ## _PANE }, \
+ { #s "Status", KEYC_ ## name ## _STATUS }, \
+ { #s "StatusLeft", KEYC_ ## name ## _STATUS_LEFT }, \
+ { #s "StatusRight", KEYC_ ## name ## _STATUS_RIGHT }, \
+ { #s "StatusDefault", KEYC_ ## name ## _STATUS_DEFAULT }, \
+ { #s "Border", KEYC_ ## name ## _BORDER }
@@ -448,2 +461 @@ struct msg_write_close {
-#define ALL_MOUSE_MODES \
-  (MODE_MOUSE_STANDARD | MODE_MOUSE_BUTTON | MODE_MOUSE_ALL)
+#define ALL_MOUSE_MODES (MODE_MOUSE_STANDARD|MODE_MOUSE_BUTTON|MODE_MOUSE_ALL)
@@ -460,0 +477 @@ enum utf8_state { UTF8_MORE, UTF8_DONE, UTF8_ERROR };
+#define COLOUR_DEFAULT(c) ((c) == 8 || (c) == 9)
@@ -476,2 +493,5 @@ enum utf8_state { UTF8_MORE, UTF8_DONE, UTF8_ERROR };
-  (GRID_ATTR_UNDERSCORE | GRID_ATTR_UNDERSCORE_2 | GRID_ATTR_UNDERSCORE_3 | \
-   GRID_ATTR_UNDERSCORE_4 | GRID_ATTR_UNDERSCORE_5)
+ (GRID_ATTR_UNDERSCORE| \
+  GRID_ATTR_UNDERSCORE_2| \
+  GRID_ATTR_UNDERSCORE_3| \
+  GRID_ATTR_UNDERSCORE_4| \
+  GRID_ATTR_UNDERSCORE_5)
@@ -551,0 +572 @@ struct style_range {
+TAILQ_HEAD(style_ranges, style_range);
@@ -610,0 +632,4 @@ struct screen_redraw_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -699,5 +727,2 @@ struct window_pane {
-  RB_ENTRY(window_pane)
-  tree_entry;
-  entry;
-  RB_ENTRY(window_pane)
-  RB_ENTRY(window_pane)
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -704,0 +730,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -736,0 +764,3 @@ struct window {
+ RB_ENTRY(window) entry;
+};
+RB_HEAD(windows, window);
@@ -746 +776 @@ struct window {
-    TAILQ_ENTRY(winlink) sentry;
+ RB_ENTRY(winlink) entry;
@@ -749,0 +780,2 @@ struct window {
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
@@ -757 +789,6 @@ struct window {
-  enum layout_type { LAYOUT_LEFTRIGHT, LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE };
+enum layout_type {
+ LAYOUT_LEFTRIGHT,
+ LAYOUT_TOPBOTTOM,
+ LAYOUT_WINDOWPANE
+};
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -774,3 +811 @@ struct window {
-    entry;
-    entry;
-    entry;
+ RB_ENTRY(environ_entry) entry;
@@ -781,3 +816 @@ struct window {
-    entry;
-    entry;
-    entry;
+ RB_ENTRY(session_group) entry;
@@ -784,0 +818 @@ struct window {
+RB_HEAD(session_groups, session_group);
@@ -807,2 +841 @@ struct window {
-    RB_ENTRY(session) entry;
-    RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -810,0 +844 @@ struct window {
+RB_HEAD(sessions, session);
@@ -818,0 +853,4 @@ struct window {
+#define MOUSE_BUTTONS(b) ((b) & MOUSE_MASK_BUTTONS)
+#define MOUSE_WHEEL(b) ((b) & MOUSE_MASK_WHEEL)
+#define MOUSE_DRAG(b) ((b) & MOUSE_MASK_DRAG)
+#define MOUSE_RELEASE(b) (((b) & MOUSE_MASK_BUTTONS) == 3)
@@ -854 +892 @@ struct window {
-    LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -863,0 +902 @@ struct window {
+LIST_HEAD(tty_terms, tty_term);
@@ -944,0 +986 @@ struct window {
+RB_HEAD(args_tree, args_entry);
@@ -981,0 +1024 @@ struct window {
+TAILQ_HEAD(cmds, cmd);
@@ -1046,0 +1094 @@ struct window {
+TAILQ_HEAD(cmdq_list, cmdq_item);
@@ -1097,0 +1146 @@ struct window {
+RB_HEAD(client_files, client_file);
@@ -1160,2 +1209,5 @@ struct window {
-  (CLIENT_REDRAWWINDOW | CLIENT_REDRAWSTATUS | CLIENT_REDRAWSTATUSALWAYS | \
-   CLIENT_REDRAWBORDERS | CLIENT_REDRAWOVERLAY)
+ (CLIENT_REDRAWWINDOW| \
+  CLIENT_REDRAWSTATUS| \
+  CLIENT_REDRAWSTATUSALWAYS| \
+  CLIENT_REDRAWBORDERS| \
+  CLIENT_REDRAWOVERLAY)
@@ -1163,2 +1215,7 @@ struct window {
-  (CLIENT_DEAD | CLIENT_SUSPENDED | CLIENT_DETACHING)
-#define CLIENT_NOSIZEFLAGS (CLIENT_DEAD | CLIENT_SUSPENDED | CLIENT_DETACHING)
+ (CLIENT_DEAD| \
+  CLIENT_SUSPENDED| \
+  CLIENT_DETACHING)
+#define CLIENT_NOSIZEFLAGS \
+ (CLIENT_DEAD| \
+  CLIENT_SUSPENDED| \
+  CLIENT_DETACHING)
@@ -1201,0 +1259 @@ struct window {
+TAILQ_HEAD(clients, client);
@@ -1209,0 +1268 @@ struct window {
+RB_HEAD(key_bindings, key_binding);
@@ -1215,0 +1275,2 @@ struct window {
+RB_HEAD(key_tables, key_table);
+RB_HEAD(options_array, options_array_item);
@@ -1359 +1420,4 @@ struct window {
-  char *format_single(struct cmdq_item *, const char *, struct client *,
+char *format_single(struct cmdq_item *, const char *,
+       struct client *, struct session *, struct winlink *,
+       struct window_pane *);
+void format_defaults(struct format_tree *, struct client *,
@@ -1361,2 +1424,0 @@ struct window {
-  void format_defaults(struct format_tree *, struct client *, struct session *,
-                       struct winlink *, struct window_pane *);
@@ -1399 +1463,3 @@ struct window {
-  int options_array_set(struct options_entry *, u_int, const char *, int,
+int options_array_set(struct options_entry *, u_int, const char *,
+       int, char **);
+int options_array_assign(struct options_entry *, const char *,
@@ -1401 +1466,0 @@ struct window {
-  int options_array_assign(struct options_entry *, const char *, char **);
@@ -1529,2 +1593 @@ struct window {
-  const char *tty_term_string2(struct tty_term *, enum tty_code_code, int, int);
-  const char *tty_term_string3(struct tty_term *, enum tty_code_code, int, int,
+const char *tty_term_string2(struct tty_term *, enum tty_code_code, int,
@@ -1531,0 +1595,2 @@ struct window {
+const char *tty_term_string3(struct tty_term *, enum tty_code_code, int,
+       int, int);
@@ -1563,7 +1629,13 @@ struct window {
-  void cmd_find_copy_state(struct cmd_find_state *, struct cmd_find_state *);
-  void cmd_find_from_session(struct cmd_find_state *, struct session *, int);
-  void cmd_find_from_winlink(struct cmd_find_state *, struct winlink *, int);
-  int cmd_find_from_session_window(struct cmd_find_state *, struct session *,
-                                   struct window *, int);
-  int cmd_find_from_window(struct cmd_find_state *, struct window *, int);
-  void cmd_find_from_winlink_pane(struct cmd_find_state *, struct winlink *,
+void cmd_find_copy_state(struct cmd_find_state *,
+       struct cmd_find_state *);
+void cmd_find_from_session(struct cmd_find_state *,
+       struct session *, int);
+void cmd_find_from_winlink(struct cmd_find_state *,
+       struct winlink *, int);
+int cmd_find_from_session_window(struct cmd_find_state *,
+       struct session *, struct window *, int);
+int cmd_find_from_window(struct cmd_find_state *, struct window *,
+       int);
+void cmd_find_from_winlink_pane(struct cmd_find_state *,
+       struct winlink *, struct window_pane *, int);
+int cmd_find_from_pane(struct cmd_find_state *,
@@ -1571,3 +1643,4 @@ struct window {
-  int cmd_find_from_pane(struct cmd_find_state *, struct window_pane *, int);
-  int cmd_find_from_client(struct cmd_find_state *, struct client *, int);
-  int cmd_find_from_mouse(struct cmd_find_state *, struct mouse_event *, int);
+int cmd_find_from_client(struct cmd_find_state *, struct client *,
+       int);
+int cmd_find_from_mouse(struct cmd_find_state *,
+       struct mouse_event *, int);
@@ -1611,0 +1684 @@ struct window {
+#define cmdq_get_callback(cb,data) cmdq_get_callback1(#cb, cb, data)
@@ -1649,0 +1721 @@ struct window {
+RB_PROTOTYPE(client_files, client_file, entry, file_cmp);
@@ -1816,5 +1891 @@ struct window {
-  void printflike(3, 4)
-      screen_write_puts(struct screen_write_ctx *, const struct grid_cell *,
-                        const char *, ...);
-  void printflike(4, 5)
-      screen_write_nputs(struct screen_write_ctx *, ssize_t,
+void printflike(3, 4) screen_write_puts(struct screen_write_ctx *,
@@ -1821,0 +1893,2 @@ struct window {
+void printflike(4, 5) screen_write_nputs(struct screen_write_ctx *,
+      ssize_t, const struct grid_cell *, const char *, ...);
@@ -1895,0 +1968 @@ struct window {
+RB_PROTOTYPE(windows, window, entry, window_cmp);
@@ -1896,0 +1970 @@ struct window {
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1897,0 +1972 @@ struct window {
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1980 +2061,2 @@ struct window {
-  struct layout_cell *layout_search_by_border(struct layout_cell *, u_int,
+struct layout_cell *layout_search_by_border(struct layout_cell *, u_int, u_int);
+void layout_set_size(struct layout_cell *, u_int, u_int, u_int,
@@ -1982 +2063,0 @@ struct window {
-  void layout_set_size(struct layout_cell *, u_int, u_int, u_int, u_int);
@@ -2073,0 +2153 @@ struct window {
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -2127 +2206,3 @@ struct window {
-  char *get_proc_cwd(int);
+char *osdep_get_name(int, char *);
+char *osdep_get_cwd(int);
+struct event_base *osdep_event_init(void);
@@ -2151,5 +2232 @@ struct window {
-  u_int popup_width(struct cmdq_item *, u_int, const char **, struct client *,
-                    struct cmd_find_state *);
-  u_int popup_height(u_int, const char **);
-  int popup_display(int, struct cmdq_item *, u_int, u_int, u_int, u_int, u_int,
-                    const char **, const char *, const char *, const char *,
+u_int popup_width(struct cmdq_item *, u_int, const char **,
@@ -2157 +2234,6 @@ struct window {
-  int style_parse(struct style *, const struct grid_cell *, const char *);
+u_int popup_height(u_int, const char **);
+int popup_display(int, struct cmdq_item *, u_int, u_int, u_int,
+      u_int, u_int, const char **, const char *, const char *,
+      const char *, struct client *, struct cmd_find_state *);
+int style_parse(struct style *,const struct grid_cell *,
+       const char *);
