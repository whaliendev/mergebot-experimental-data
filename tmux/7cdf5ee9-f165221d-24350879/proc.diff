diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/proc.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/proc.no_comments_merged.c
index cece507..6ebb3c1 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/proc.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/proc.no_comments_merged.c
@@ -2 +1,0 @@
-#include <sys/queue.h>
@@ -5 +3,0 @@
-#include <imsg.h>
@@ -36 +34,3 @@ static void proc_update_event(struct tmuxpeer *);
-static void proc_event_cb(__unused int fd, short events, void *arg) {
+static void
+proc_event_cb(__unused int fd, short events, void *arg)
+{
@@ -41 +41,2 @@ static void proc_event_cb(__unused int fd, short events, void *arg) {
-    if (((n = imsg_read(&peer->ibuf)) == -1 && errno != EAGAIN) || n == 0) {
+  if (((n = imsg_read(&peer->ibuf)) == -1 && errno != EAGAIN) ||
+      n == 0) {
@@ -50 +51,2 @@ static void proc_event_cb(__unused int fd, short events, void *arg) {
-      if (n == 0) break;
+   if (n == 0)
+    break;
@@ -53 +55,2 @@ static void proc_event_cb(__unused int fd, short events, void *arg) {
-        if (imsg.fd != -1) close(imsg.fd);
+    if (imsg.fd != -1)
+     close(imsg.fd);
@@ -73 +76,3 @@ static void proc_event_cb(__unused int fd, short events, void *arg) {
-static void proc_signal_cb(int signo, __unused short events, void *arg) {
+static void
+proc_signal_cb(int signo, __unused short events, void *arg)
+{
@@ -77 +82,3 @@ static void proc_signal_cb(int signo, __unused short events, void *arg) {
-static int peer_check_version(struct tmuxpeer *peer, struct imsg *imsg) {
+static int
+peer_check_version(struct tmuxpeer *peer, struct imsg *imsg)
+{
@@ -88 +95,3 @@ static int peer_check_version(struct tmuxpeer *peer, struct imsg *imsg) {
-static void proc_update_event(struct tmuxpeer *peer) {
+static void
+proc_update_event(struct tmuxpeer *peer)
+{
@@ -92 +101,2 @@ static void proc_update_event(struct tmuxpeer *peer) {
-  if (peer->ibuf.w.queued > 0) events |= EV_WRITE;
+ if (peer->ibuf.w.queued > 0)
+  events |= EV_WRITE;
@@ -96,2 +106,4 @@ static void proc_update_event(struct tmuxpeer *peer) {
-int proc_send(struct tmuxpeer *peer, enum msgtype type, int fd, const void *buf,
-              size_t len) {
+int
+proc_send(struct tmuxpeer *peer, enum msgtype type, int fd, const void *buf,
+    size_t len)
+{
@@ -101 +113,2 @@ int proc_send(struct tmuxpeer *peer, enum msgtype type, int fd, const void *buf,
-  if (peer->flags & PEER_BAD) return (-1);
+ if (peer->flags & PEER_BAD)
+  return (-1);
@@ -104 +117,2 @@ int proc_send(struct tmuxpeer *peer, enum msgtype type, int fd, const void *buf,
-  if (retval != 1) return (-1);
+ if (retval != 1)
+  return (-1);
@@ -108 +122,3 @@ int proc_send(struct tmuxpeer *peer, enum msgtype type, int fd, const void *buf,
-struct tmuxproc *proc_start(const char *name) {
+struct tmuxproc *
+proc_start(const char *name)
+{
@@ -113,8 +129,2 @@ struct tmuxproc *proc_start(const char *name) {
-  if (uname(&u) < 0) memset(&u, 0, sizeof u);
-<<<<<<< HEAD
-  log_debug("%s started (%ld): version %s, socket %s, protocol %d", name,
-            (long)getpid(), VERSION, socket_path, PROTOCOL_VERSION);
-|||||||
-  log_debug("%s started (%ld): socket %s, protocol %d", name, (long)getpid(),
-            socket_path, PROTOCOL_VERSION);
-=======
+ if (uname(&u) < 0)
+  memset(&u, 0, sizeof u);
@@ -123,3 +133,2 @@ struct tmuxproc *proc_start(const char *name) {
->>>>>>> f165221dc4641837ee9f589bb666d310a495904c
-  log_debug("on %s %s %s; libevent %s (%s)", u.sysname, u.release, u.version,
-            event_get_version(), event_get_method());
+ log_debug("on %s %s %s; libevent %s (%s)", u.sysname, u.release,
+     u.version, event_get_version(), event_get_method());
@@ -130 +139,3 @@ struct tmuxproc *proc_start(const char *name) {
-void proc_loop(struct tmuxproc *tp, int (*loopcb)(void)) {
+void
+proc_loop(struct tmuxproc *tp, int (*loopcb)(void))
+{
@@ -132 +143,2 @@ void proc_loop(struct tmuxproc *tp, int (*loopcb)(void)) {
-  do event_loop(EVLOOP_ONCE);
+ do
+  event_loop(EVLOOP_ONCE);
@@ -136,2 +148,8 @@ void proc_loop(struct tmuxproc *tp, int (*loopcb)(void)) {
-void proc_exit(struct tmuxproc *tp) { tp->exit = 1; }
-void proc_set_signals(struct tmuxproc *tp, void (*signalcb)(int)) {
+void
+proc_exit(struct tmuxproc *tp)
+{
+ tp->exit = 1;
+}
+void
+proc_set_signals(struct tmuxproc *tp, void (*signalcb)(int))
+{
@@ -162 +180,3 @@ void proc_set_signals(struct tmuxproc *tp, void (*signalcb)(int)) {
-void proc_clear_signals(struct tmuxproc *tp, int defaults) {
+void
+proc_clear_signals(struct tmuxproc *tp, int defaults)
+{
@@ -188,3 +208,4 @@ void proc_clear_signals(struct tmuxproc *tp, int defaults) {
-struct tmuxpeer *proc_add_peer(struct tmuxproc *tp, int fd,
-                               void (*dispatchcb)(struct imsg *, void *),
-                               void *arg) {
+struct tmuxpeer *
+proc_add_peer(struct tmuxproc *tp, int fd,
+    void (*dispatchcb)(struct imsg *, void *), void *arg)
+{
@@ -202 +223,3 @@ struct tmuxpeer *proc_add_peer(struct tmuxproc *tp, int fd,
-void proc_remove_peer(struct tmuxpeer *peer) {
+void
+proc_remove_peer(struct tmuxpeer *peer)
+{
@@ -209,2 +232,10 @@ void proc_remove_peer(struct tmuxpeer *peer) {
-void proc_kill_peer(struct tmuxpeer *peer) { peer->flags |= PEER_BAD; }
-void proc_toggle_log(struct tmuxproc *tp) { log_toggle(tp->name); }
+void
+proc_kill_peer(struct tmuxpeer *peer)
+{
+ peer->flags |= PEER_BAD;
+}
+void
+proc_toggle_log(struct tmuxproc *tp)
+{
+ log_toggle(tp->name);
+}
