diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/tmux.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/tmux.no_comments_merged.c
index 80881ba..0c9a8f8 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/tmux.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/7cdf5ee9-f165221d-24350879/tmux.no_comments_merged.c
@@ -4 +3,0 @@
-#include <err.h>
@@ -7 +5,0 @@
-#include <paths.h>
@@ -11 +8,0 @@
-#include <util.h>
@@ -30 +27,3 @@ static int checkshell(const char *);
-static __dead void usage(void) {
+static __dead void
+usage(void)
+{
@@ -37 +36,3 @@ static __dead void usage(void) {
-static const char *getshell(void) {
+static const char *
+getshell(void)
+{
@@ -41 +42,2 @@ static const char *getshell(void) {
-  if (checkshell(shell)) return (shell);
+ if (checkshell(shell))
+  return (shell);
@@ -43 +45,2 @@ static const char *getshell(void) {
-  if (pw != NULL && checkshell(pw->pw_shell)) return (pw->pw_shell);
+ if (pw != NULL && checkshell(pw->pw_shell))
+  return (pw->pw_shell);
@@ -46,4 +49,9 @@ static const char *getshell(void) {
-static int checkshell(const char *shell) {
-  if (shell == NULL || *shell != '/') return (0);
-  if (areshell(shell)) return (0);
-  if (access(shell, X_OK) != 0) return (0);
+static int
+checkshell(const char *shell)
+{
+ if (shell == NULL || *shell != '/')
+  return (0);
+ if (areshell(shell))
+  return (0);
+ if (access(shell, X_OK) != 0)
+  return (0);
@@ -52 +60,3 @@ static int checkshell(const char *shell) {
-int areshell(const char *shell) {
+int
+areshell(const char *shell)
+{
@@ -59,2 +69,4 @@ int areshell(const char *shell) {
-  if (*progname == '-') progname++;
-  if (strcmp(ptr, progname) == 0) return (1);
+ if (*progname == '-')
+  progname++;
+ if (strcmp(ptr, progname) == 0)
+  return (1);
@@ -63 +75,3 @@ int areshell(const char *shell) {
-static char *make_label(const char *label, char **cause) {
+static char *
+make_label(const char *label, char **cause)
+{
@@ -68 +82,2 @@ static char *make_label(const char *label, char **cause) {
-  if (label == NULL) label = "default";
+ if (label == NULL)
+  label = "default";
@@ -81,2 +96,4 @@ static char *make_label(const char *label, char **cause) {
-  if (mkdir(resolved, S_IRWXU) != 0 && errno != EEXIST) goto fail;
-  if (lstat(resolved, &sb) != 0) goto fail;
+ if (mkdir(resolved, S_IRWXU) != 0 && errno != EEXIST)
+  goto fail;
+ if (lstat(resolved, &sb) != 0)
+  goto fail;
@@ -97 +114,3 @@ fail:
-void setblocking(int fd, int state) {
+void
+setblocking(int fd, int state)
+{
@@ -107 +126,3 @@ void setblocking(int fd, int state) {
-const char *find_cwd(void) {
+const char *
+find_cwd(void)
+{
@@ -111,5 +132,10 @@ const char *find_cwd(void) {
-  if (getcwd(cwd, sizeof cwd) == NULL) return (NULL);
-  if ((pwd = getenv("PWD")) == NULL || *pwd == '\0') return (cwd);
-  if (realpath(pwd, resolved1) == NULL) return (cwd);
-  if (realpath(cwd, resolved2) == NULL) return (cwd);
-  if (strcmp(resolved1, resolved2) != 0) return (cwd);
+ if (getcwd(cwd, sizeof cwd) == NULL)
+  return (NULL);
+ if ((pwd = getenv("PWD")) == NULL || *pwd == '\0')
+  return (cwd);
+ if (realpath(pwd, resolved1) == NULL)
+  return (cwd);
+ if (realpath(cwd, resolved2) == NULL)
+  return (cwd);
+ if (strcmp(resolved1, resolved2) != 0)
+  return (cwd);
@@ -118 +144,3 @@ const char *find_cwd(void) {
-const char *find_home(void) {
+const char *
+find_home(void)
+{
@@ -121 +149,2 @@ const char *find_home(void) {
-  if (home != NULL) return (home);
+ if (home != NULL)
+  return (home);
@@ -132 +161,3 @@ const char *find_home(void) {
-const char *getversion(void) {
+const char *
+getversion(void)
+{
@@ -136 +167,2 @@ const char *getversion(void) {
-    if (uname(&u) < 0) fatalx("uname failed");
+  if (uname(&u) < 0)
+   fatalx("uname failed");
@@ -141 +173,3 @@ const char *getversion(void) {
-int main(int argc, char **argv) {
+int
+main(int argc, char **argv)
+{
@@ -161,5 +194,0 @@ int main(int argc, char **argv) {
-<<<<<<< HEAD
-  while ((opt = getopt(argc, argv, "2c:Cdf:lL:qS:uUVv")) != -1) {
-|||||||
-  while ((opt = getopt(argc, argv, "2c:Cdf:lL:qS:uUv")) != -1) {
-=======
@@ -167 +195,0 @@ int main(int argc, char **argv) {
->>>>>>> f165221dc4641837ee9f589bb666d310a495904c
@@ -215,2 +243,4 @@ int main(int argc, char **argv) {
-  if (shell_command != NULL && argc != 0) usage();
-  if ((ptm_fd = getptmfd()) == -1) err(1, "getptmfd");
+ if (shell_command != NULL && argc != 0)
+  usage();
+ if ((ptm_fd = getptmfd()) == -1)
+  err(1, "getptmfd");
@@ -218,2 +248 @@ int main(int argc, char **argv) {
-             "recvfd proc exec tty ps",
-             NULL) != 0)
+     "recvfd proc exec tty ps", NULL) != 0)
@@ -225,4 +254,8 @@ int main(int argc, char **argv) {
-    if (s == NULL || *s == '\0') s = getenv("LC_CTYPE");
-    if (s == NULL || *s == '\0') s = getenv("LANG");
-    if (s == NULL || *s == '\0') s = "";
-    if (strcasestr(s, "UTF-8") != NULL || strcasestr(s, "UTF8") != NULL)
+  if (s == NULL || *s == '\0')
+   s = getenv("LC_CTYPE");
+  if (s == NULL || *s == '\0')
+   s = getenv("LANG");
+  if (s == NULL || *s == '\0')
+   s = "";
+  if (strcasestr(s, "UTF-8") != NULL ||
+      strcasestr(s, "UTF8") != NULL)
@@ -232,2 +265,4 @@ int main(int argc, char **argv) {
-  for (var = environ; *var != NULL; var++) environ_put(global_environ, *var);
-  if ((cwd = find_cwd()) != NULL) environ_set(global_environ, "PWD", "%s", cwd);
+ for (var = environ; *var != NULL; var++)
+  environ_put(global_environ, *var);
+ if ((cwd = find_cwd()) != NULL)
+  environ_set(global_environ, "PWD", "%s", cwd);
@@ -238 +273,2 @@ int main(int argc, char **argv) {
-    if (oe->scope & OPTIONS_TABLE_SERVER) options_default(global_options, oe);
+  if (oe->scope & OPTIONS_TABLE_SERVER)
+   options_default(global_options, oe);
@@ -241 +277,2 @@ int main(int argc, char **argv) {
-    if (oe->scope & OPTIONS_TABLE_WINDOW) options_default(global_w_options, oe);
+  if (oe->scope & OPTIONS_TABLE_WINDOW)
+   options_default(global_w_options, oe);
@@ -246 +283,2 @@ int main(int argc, char **argv) {
-    if (strrchr(s, '/') != NULL) s = strrchr(s, '/') + 1;
+  if (strrchr(s, '/') != NULL)
+   s = strrchr(s, '/') + 1;
