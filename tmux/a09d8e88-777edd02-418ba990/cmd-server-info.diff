diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/a09d8e88-777edd02-418ba990/cmd-server-info.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/a09d8e88-777edd02-418ba990/cmd-server-info.no_comments_merged.c
index fb43acb..51e0726 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/a09d8e88-777edd02-418ba990/cmd-server-info.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/a09d8e88-777edd02-418ba990/cmd-server-info.no_comments_merged.c
@@ -10,24 +10,42 @@ const struct cmd_entry cmd_server_info_entry = {
-    "server-info", "info", "", 0, 0, "", 0, NULL, NULL, cmd_server_info_exec};
-enum cmd_retvalcmd_server_info_exec(unused struct cmd *self, struct cmd_q *cmdq,
-                                    struct cmd_ctx *ctx) {
-  struct tty_term *term; struct client * c; struct session * s;
-  struct winlink * wl; struct window * w; struct window_pane * wp;
-  struct tty_code * code; const struct tty_term_code_entry * ent;
-  struct utsname un; struct job * job; struct grid * gd; struct grid_line * gl;
-  u_int i, j, k, lines; size_t size; char out[80]; char * tim; time_t t;
-  tim = ctime(&start_time); *strchr(tim, '\n') = '\0';
-<<<<<<< HEAD
-  cmdq_print(cmdq, "tmux " VERSION ", pid %ld, started %s", (long)getpid(),
-             tim);
-  cmdq_print(cmdq, "socket path %s, debug level %d", socket_path, debug_level);
-|||||||
-  ctx->print(ctx, "tmux " VERSION ", pid %ld, started %s", (long)getpid(), tim);
-  ctx->print(ctx, "socket path %s, debug level %d", socket_path, debug_level);
-=======
-  cmdq_print(cmdq, "pid %ld, started %s", (long)getpid(), tim);
-  cmdq_print(cmdq, "socket path %s, debug level %d", socket_path, debug_level);
->>>>>>> 777edd02691cbcf6ae44d78c5577a1c3e25d4fed
-  if (uname(&un) >= 0){cmdq_print(cmdq, "system is %s %s %s %s", un.sysname,
-                                  un.release, un.version, un.machine);}
-if (cfg_file != NULL) cmdq_print(cmdq, "configuration file is %s", cfg_file);
-else cmdq_print(cmdq, "configuration file not specified");
+ "server-info", "info",
+ "", 0, 0,
+ "",
+ 0,
+ NULL,
+ NULL,
+ cmd_server_info_exec
+};
+enum cmd_retval
+cmd_server_info_exec(unused struct cmd *self, struct cmd_q *cmdq)
+{
+ struct tty_term *term;
+ struct client *c;
+ struct session *s;
+ struct winlink *wl;
+ struct window *w;
+ struct window_pane *wp;
+ struct tty_code *code;
+ const struct tty_term_code_entry *ent;
+ struct utsname un;
+ struct job *job;
+ struct grid *gd;
+ struct grid_line *gl;
+ u_int i, j, k, lines;
+ size_t size;
+ char out[80];
+ char *tim;
+ time_t t;
+ tim = ctime(&start_time);
+ *strchr(tim, '\n') = '\0';
+ cmdq_print(cmdq,
+     "tmux " VERSION ", pid %ld, started %s", (long) getpid(), tim);
+ cmdq_print(cmdq, "socket path %s, debug level %d", socket_path,
+     debug_level);
+ if (uname(&un) >= 0) {
+  cmdq_print(cmdq, "system is %s %s %s %s",
+      un.sysname, un.release, un.version, un.machine);
+ }
+ if (cfg_file != NULL)
+  cmdq_print(cmdq, "configuration file is %s", cfg_file);
+ else
+  cmdq_print(cmdq, "configuration file not specified");
@@ -39,6 +57,7 @@ for (i = 0; i < ARRAY_LENGTH(&clients); i++) {
-  if (c == NULL || c->session == NULL) continue;
-  cmdq_print(cmdq,
-             "%2d: %s (%d, %d): %s [%ux%u %s bs=%hho "
-             "class=%u] [flags=0x%x/0x%x, references=%u]",
-             i, c->tty.path, c->ibuf.fd, c->tty.fd, c->session->name, c->tty.sx,
-             c->tty.sy, c->tty.termname, c->tty.tio.c_cc[VERASE], c->tty.class,
+  if (c == NULL || c->session == NULL)
+   continue;
+  cmdq_print(cmdq,"%2d: %s (%d, %d): %s [%ux%u %s bs=%hho "
+      "class=%u] [flags=0x%x/0x%x, references=%u]", i,
+      c->tty.path, c->ibuf.fd, c->tty.fd, c->session->name,
+      c->tty.sx, c->tty.sy, c->tty.termname,
+      c->tty.tio.c_cc[VERASE], c->tty.class,
@@ -53,5 +72,3 @@ RB_FOREACH(s, sessions, &sessions) {
-  cmdq_print(cmdq,
-             "%2u: %s: %u windows (created %s) [%ux%u] "
-             "[flags=0x%x]",
-             s->id, s->name, winlink_count(&s->windows), tim, s->sx, s->sy,
-             s->flags);
+  cmdq_print(cmdq, "%2u: %s: %u windows (created %s) [%ux%u] "
+      "[flags=0x%x]", s->id, s->name,
+      winlink_count(&s->windows), tim, s->sx, s->sy, s->flags);
@@ -60,4 +77,3 @@ RB_FOREACH(s, sessions, &sessions) {
-    cmdq_print(cmdq,
-               "%4u: %s [%ux%u] [flags=0x%x, "
-               "references=%u, last layout=%d]",
-               wl->idx, w->name, w->sx, w->sy, w->flags, w->references,
+   cmdq_print(cmdq, "%4u: %s [%ux%u] [flags=0x%x, "
+       "references=%u, last layout=%d]", wl->idx, w->name,
+       w->sx, w->sy, w->flags, w->references,
@@ -71 +87,2 @@ RB_FOREACH(s, sessions, &sessions) {
-        if (gl->celldata == NULL) continue;
+     if (gl->celldata == NULL)
+      continue;
@@ -73 +90,2 @@ RB_FOREACH(s, sessions, &sessions) {
-        size += gl->cellsize * sizeof *gl->celldata;
+     size += gl->cellsize *
+         sizeof *gl->celldata;
@@ -75,2 +93,4 @@ RB_FOREACH(s, sessions, &sessions) {
-      cmdq_print(cmdq, "%6u: %s %lu %d %u/%u, %zu bytes", j, wp->tty,
-                 (u_long)wp->pid, wp->fd, lines, gd->hsize + gd->sy, size);
+    cmdq_print(cmdq,
+        "%6u: %s %lu %d %u/%u, %zu bytes", j,
+        wp->tty, (u_long) wp->pid, wp->fd, lines,
+        gd->hsize + gd->sy, size);
@@ -84,2 +104,2 @@ LIST_FOREACH(term, &tty_terms, entry) {
-  cmdq_print(cmdq, "%s [references=%u, flags=0x%x]:", term->name,
-             term->references, term->flags);
+  cmdq_print(cmdq, "%s [references=%u, flags=0x%x]:",
+      term->name, term->references, term->flags);
@@ -91 +111,2 @@ LIST_FOREACH(term, &tty_terms, entry) {
-        cmdq_print(cmdq, "%2u: %s: [missing]", ent->code, ent->name);
+    cmdq_print(cmdq, "%2u: %s: [missing]",
+        ent->code, ent->name);
@@ -96 +117,2 @@ LIST_FOREACH(term, &tty_terms, entry) {
-        cmdq_print(cmdq, "%2u: %s: (string) %s", ent->code, ent->name, out);
+    cmdq_print(cmdq, "%2u: %s: (string) %s",
+        ent->code, ent->name, out);
@@ -99,2 +121,2 @@ LIST_FOREACH(term, &tty_terms, entry) {
-        cmdq_print(cmdq, "%2u: %s: (number) %d", ent->code, ent->name,
-                   code->value.number);
+    cmdq_print(cmdq, "%2u: %s: (number) %d",
+        ent->code, ent->name, code->value.number);
@@ -103 +125,2 @@ LIST_FOREACH(term, &tty_terms, entry) {
-        cmdq_print(cmdq, "%2u: %s: (flag) %s", ent->code, ent->name,
+    cmdq_print(cmdq, "%2u: %s: (flag) %s",
+        ent->code, ent->name,
@@ -112,2 +135,2 @@ LIST_FOREACH(job, &all_jobs, lentry) {
-  cmdq_print(cmdq, "%s [fd=%d, pid=%d, status=%d]", job->cmd, job->fd, job->pid,
-             job->status);
+  cmdq_print(cmdq, "%s [fd=%d, pid=%d, status=%d]",
+      job->cmd, job->fd, job->pid, job->status);
