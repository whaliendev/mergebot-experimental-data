--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/a09d8e88-777edd02-418ba990/cmd-server-info.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/a09d8e88-777edd02-418ba990/cmd-server-info.no_comments_merged.c
@@ -10,24 +10,42 @@ const struct cmd_entry cmd_server_info_entry = {
-    "server-info", "info", "", 0, 0, "", 0, NULL, NULL, cmd_server_info_exec};
-enum cmd_retvalcmd_server_info_exec(unused struct cmd *self, struct cmd_q *cmdq,
-                                    struct cmd_ctx *ctx) {
-  struct tty_term *term; struct client * c; struct session * s;
-  struct winlink * wl; struct window * w; struct window_pane * wp;
-  struct tty_code * code; const struct tty_term_code_entry * ent;
-  struct utsname un; struct job * job; struct grid * gd; struct grid_line * gl;
-  u_int i, j, k, lines; size_t size; char out[80]; char * tim; time_t t;
-  tim = ctime(&start_time); *strchr(tim, '\n') = '\0';
-<<<<<<< HEAD
-  cmdq_print(cmdq, "tmux " VERSION ", pid %ld, started %s", (long)getpid(),
-             tim);
-  cmdq_print(cmdq, "socket path %s, debug level %d", socket_path, debug_level);
-|||||||
-  ctx->print(ctx, "tmux " VERSION ", pid %ld, started %s", (long)getpid(), tim);
-  ctx->print(ctx, "socket path %s, debug level %d", socket_path, debug_level);
-=======
-  cmdq_print(cmdq, "pid %ld, started %s", (long)getpid(), tim);
-  cmdq_print(cmdq, "socket path %s, debug level %d", socket_path, debug_level);
->>>>>>> 777edd02691cbcf6ae44d78c5577a1c3e25d4fed
-  if (uname(&un) >= 0){cmdq_print(cmdq, "system is %s %s %s %s", un.sysname,
-                                  un.release, un.version, un.machine);}
-if (cfg_file != NULL) cmdq_print(cmdq, "configuration file is %s", cfg_file);
-else cmdq_print(cmdq, "configuration file not specified");
+ "server-info", "info",
+ "", 0, 0,
+ "",
+ 0,
+ NULL,
+ NULL,
+ cmd_server_info_exec
+};
+enum cmd_retval
+cmd_server_info_exec(unused struct cmd *self, struct cmd_q *cmdq)
+{
+ struct tty_term *term;
+ struct client *c;
+ struct session *s;
+ struct winlink *wl;
+ struct window *w;
+ struct window_pane *wp;
+ struct tty_code *code;
+ const struct tty_term_code_entry *ent;
+ struct utsname un;
+ struct job *job;
+ struct grid *gd;
+ struct grid_line *gl;
+ u_int i, j, k, lines;
+ size_t size;
+ char out[80];
+ char *tim;
+ time_t t;
+ tim = ctime(&start_time);
+ *strchr(tim, '\n') = '\0';
+ cmdq_print(cmdq,
+     "tmux " VERSION ", pid %ld, started %s", (long) getpid(), tim);
+ cmdq_print(cmdq, "socket path %s, debug level %d", socket_path,
+     debug_level);
+ if (uname(&un) >= 0) {
+  cmdq_print(cmdq, "system is %s %s %s %s",
+      un.sysname, un.release, un.version, un.machine);
+ }
+ if (cfg_file != NULL)
+  cmdq_print(cmdq, "configuration file is %s", cfg_file);
+ else
+  cmdq_print(cmdq, "configuration file not specified");
