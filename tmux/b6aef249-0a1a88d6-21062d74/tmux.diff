diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/tmux.no_comments_mergebot.h b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/tmux.no_comments_merged.h
index c58e350..62d7921 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/tmux.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/tmux.no_comments_merged.h
@@ -4 +3,0 @@
-#include <sys/param.h>
@@ -6,6 +4,0 @@
-#include <sys/queue.h>
-#include <bitstring.h>
-#include <imsg.h>
-#include <sys/tree.h>
-#include <stdint.h>
-#include <getopt.h>
@@ -15 +7,0 @@
-#include <signal.h>
@@ -29,0 +22,2 @@ extern char **environ;
+#define fatal(msg) log_fatal("%s: %s", __func__, msg);
+#define fatalx(msg) log_fatalx("%s: %s", __func__, msg);
@@ -30,0 +25 @@ extern char **environ;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -310,0 +306 @@ struct tty_term_code_entry {
+ARRAY_DECL(causelist, char *);
@@ -470,0 +467 @@ struct mode_key_binding {
+RB_HEAD(mode_key_tree, mode_key_binding);
@@ -511,9 +508,7 @@ struct utf8_data {
-struct grid_line {
-  u_int cellsize;
-  struct grid_cell *celldata;
-  int flags;
-} __packed;
-struct grid_line {
-  u_int cellsize;
-  struct grid_cell *celldata;
-  int flags;
+struct grid_cell {
+ u_char attr;
+ u_char flags;
+ u_char fg;
+ u_char bg;
+ u_char xstate;
+ u_char xdata[UTF8_SIZE];
@@ -537 +532,5 @@ struct options_entry {
-  enum { OPTIONS_STRING, OPTIONS_NUMBER, OPTIONS_STYLE } type;
+ enum {
+  OPTIONS_STRING,
+  OPTIONS_NUMBER,
+  OPTIONS_STYLE
+ } type;
@@ -557,0 +557 @@ struct job {
+LIST_HEAD(joblist, job);
@@ -584,0 +585,4 @@ struct screen_write_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -624 +628,2 @@ struct window_mode {
-  void (*mouse)(struct window_pane *, struct session *, struct mouse_event *);
+ void (*mouse)(struct window_pane *,
+      struct session *, struct mouse_event *);
@@ -689,4 +694,2 @@ struct window_pane {
-  RB_ENTRY(window_pane)
-  tree_entry;
-  RB_ENTRY(window_pane)
-  RB_ENTRY(window_pane)
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -693,0 +697,3 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
+ARRAY_DECL(window_pane_list, struct window_pane *);
@@ -716,0 +723 @@ struct window {
+ARRAY_DECL(windows, struct window *);
@@ -731 +738,8 @@ struct winlink {
-enum layout_type { LAYOUT_LEFTRIGHT, LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE };
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
+enum layout_type {
+ LAYOUT_LEFTRIGHT,
+ LAYOUT_TOPBOTTOM,
+ LAYOUT_WINDOWPANE
+};
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -749,6 +763,2 @@ struct paste_buffer {
-  time_entry;
-  time_entry;
-  name_entry;
-  time_entry;
-  time_entry;
-  time_entry;
+ RB_ENTRY(paste_buffer) name_entry;
+ RB_ENTRY(paste_buffer) time_entry;
@@ -760,0 +771 @@ struct environ_entry {
+RB_HEAD(environ, environ_entry);
@@ -764,0 +776 @@ struct session_group {
+TAILQ_HEAD(session_groups, session_group);
@@ -784,2 +796 @@ struct session {
-  RB_ENTRY(session) entry;
-  RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -787,0 +799,2 @@ struct session {
+RB_HEAD(sessions, session);
+ARRAY_DECL(sessionslist, struct session *);
@@ -798 +811 @@ struct tty_term {
-  LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -804,0 +818 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -893,0 +908 @@ struct status_out {
+RB_HEAD(status_out_tree, status_out);
@@ -957,0 +973 @@ struct client {
+ARRAY_DECL(clients, struct client *);
@@ -962,0 +979 @@ struct args_entry {
+RB_HEAD(args_tree, args_entry);
@@ -979,0 +997 @@ struct cmd_list {
+};
@@ -989,0 +1008 @@ struct cmd_list {
+TAILQ_HEAD(cmd_q_items, cmd_q_item);
@@ -1021,3 +1040 @@ struct cmd_list {
-    entry;
-    entry;
-    entry;
+ RB_ENTRY(key_binding) entry;
@@ -1024,0 +1042 @@ struct cmd_list {
+RB_HEAD(key_bindings, key_binding);
@@ -1049,0 +1068 @@ struct cmd_list {
+RB_HEAD(format_tree, format_entry);
@@ -1085,0 +1105 @@ struct cmd_list {
+RB_PROTOTYPE(format_tree, format_entry, entry, format_cmp);
@@ -1088,2 +1108,2 @@ struct cmd_list {
-  void printflike(3, 4)
-      format_add(struct format_tree *, const char *, const char *, ...);
+void printflike(3, 4) format_add(struct format_tree *, const char *,
+       const char *, ...);
@@ -1095,3 +1115,6 @@ struct cmd_list {
-  void format_winlink(struct format_tree *, struct session *, struct winlink *);
-  void format_window_pane(struct format_tree *, struct window_pane *);
-  void format_paste_buffer(struct format_tree *, struct paste_buffer *, int);
+void format_winlink(struct format_tree *, struct session *,
+       struct winlink *);
+void format_window_pane(struct format_tree *,
+       struct window_pane *);
+void format_paste_buffer(struct format_tree *,
+       struct paste_buffer *, int);
@@ -1105,0 +1129 @@ struct cmd_list {
+RB_PROTOTYPE(mode_key_tree, mode_key_binding, entry, mode_key_cmp);
@@ -1125,0 +1150 @@ struct cmd_list {
+RB_PROTOTYPE(options_tree, options_entry, entry, options_cmp);
@@ -1131,2 +1156,2 @@ struct cmd_list {
-  struct options_entry *printflike(3, 4)
-      options_set_string(struct options *, const char *, const char *, ...);
+struct options_entry *printflike(3, 4) options_set_string(struct options *,
+     const char *, const char *, ...);
@@ -1150,2 +1175,2 @@ struct cmd_list {
-  struct job *job_run(const char *, struct session *, void (*)(struct job *),
-                      void (*)(void *), void *);
+struct job *job_run(const char *, struct session *,
+     void (*)(struct job *), void (*)(void *), void *);
@@ -1154,0 +1180 @@ struct cmd_list {
+RB_PROTOTYPE(environ, environ_entry, entry, environ_cmp);
@@ -1194,2 +1220,2 @@ struct cmd_list {
-  void tty_write(void (*)(struct tty *, const struct tty_ctx *),
-                 struct tty_ctx *);
+void tty_write(
+     void (*)(struct tty *, const struct tty_ctx *), struct tty_ctx *);
@@ -1223,5 +1249,6 @@ struct cmd_list {
-  const char *tty_term_string2(struct tty_term *, enum tty_code_code, int, int);
-  const char *tty_term_ptr1(struct tty_term *, enum tty_code_code,
-                            const void *);
-  const char *tty_term_ptr2(struct tty_term *, enum tty_code_code, const void *,
-                            const void *);
+const char *tty_term_string2(
+       struct tty_term *, enum tty_code_code, int, int);
+const char *tty_term_ptr1(
+       struct tty_term *, enum tty_code_code, const void *);
+const char *tty_term_ptr2(struct tty_term *, enum tty_code_code,
+       const void *, const void *);
@@ -1245,0 +1273 @@ struct cmd_list {
+RB_PROTOTYPE(args_tree, args_entry, entry, args_cmp);
@@ -1253 +1281,2 @@ struct cmd_list {
-  long long args_strtonum(struct args *, u_char, long long, long long, char **);
+long long args_strtonum(
+      struct args *, u_char, long long, long long, char **);
@@ -1267 +1296,2 @@ struct cmd_list {
-  int cmd_find_index(struct cmd_q *, const char *, struct session **);
+int cmd_find_index(struct cmd_q *, const char *,
+       struct session **);
@@ -1374,2 +1404,2 @@ struct cmd_list {
-  int cmd_string_parse(const char *, struct cmd_list **, const char *, u_int,
-                       char **);
+int cmd_string_parse(const char *, struct cmd_list **, const char *,
+     u_int, char **);
@@ -1379,0 +1410 @@ struct cmd_list {
+RB_PROTOTYPE(key_bindings, key_binding, entry, key_bindings_cmp);
@@ -1402 +1433,2 @@ struct cmd_list {
-  int server_write_client(struct client *, enum msgtype, const void *, size_t);
+int server_write_client(struct client *, enum msgtype, const void *,
+      size_t);
@@ -1419,2 +1451,2 @@ struct cmd_list {
-  int server_link_window(struct session *, struct winlink *, struct session *,
-                         int, int, int, char **);
+int server_link_window(struct session *,
+      struct winlink *, struct session *, int, int, int, char **);
@@ -1431,3 +1463,2 @@ struct cmd_list {
-  int server_set_stdin_callback(struct client *,
-                                void (*)(struct client *, int, void *), void *,
-                                char **);
+int server_set_stdin_callback(struct client *, void (*)(struct client *,
+      int, void *), void *, char **);
@@ -1435,0 +1467 @@ struct cmd_list {
+RB_PROTOTYPE(status_out_tree, status_out, entry, status_out_cmp);
@@ -1447,2 +1479 @@ struct cmd_list {
-                         int (*)(void *, const char *), void (*)(void *),
-                         void *, int);
+      int (*)(void *, const char *), void (*)(void *), void *, int);
@@ -1488 +1519,2 @@ struct cmd_list {
-  void grid_duplicate_lines(struct grid *, u_int, struct grid *, u_int, u_int);
+void grid_duplicate_lines(
+      struct grid *, u_int, struct grid *, u_int, u_int);
@@ -1496,2 +1528,2 @@ struct cmd_list {
-  void grid_view_set_cell(struct grid *, u_int, u_int,
-                          const struct grid_cell *);
+void grid_view_set_cell(
+      struct grid *, u_int, u_int, const struct grid_cell *);
@@ -1509,2 +1541,2 @@ struct cmd_list {
-  void screen_write_start(struct screen_write_ctx *, struct window_pane *,
-                          struct screen *);
+void screen_write_start(
+      struct screen_write_ctx *, struct window_pane *, struct screen *);
@@ -1514,3 +1546,2 @@ struct cmd_list {
-  void printflike(5, 6)
-      screen_write_cnputs(struct screen_write_ctx *, ssize_t,
-                          struct grid_cell *, int, const char *, ...);
+void printflike(5, 6) screen_write_cnputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, ...);
@@ -1518,11 +1549,10 @@ struct cmd_list {
-  void printflike(3, 4)
-      screen_write_puts(struct screen_write_ctx *, struct grid_cell *,
-                        const char *, ...);
-  void printflike(5, 6)
-      screen_write_nputs(struct screen_write_ctx *, ssize_t, struct grid_cell *,
-                         int, const char *, ...);
-  void screen_write_vnputs(struct screen_write_ctx *, ssize_t,
-                           struct grid_cell *, int, const char *, va_list);
-  void screen_write_putc(struct screen_write_ctx *, struct grid_cell *, u_char);
-  void screen_write_copy(struct screen_write_ctx *, struct screen *, u_int,
-                         u_int, u_int, u_int);
+void printflike(3, 4) screen_write_puts(struct screen_write_ctx *,
+      struct grid_cell *, const char *, ...);
+void printflike(5, 6) screen_write_nputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, ...);
+void screen_write_vnputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, va_list);
+void screen_write_putc(
+      struct screen_write_ctx *, struct grid_cell *, u_char);
+void screen_write_copy(struct screen_write_ctx *,
+      struct screen *, u_int, u_int, u_int, u_int);
@@ -1568,2 +1598,2 @@ struct cmd_list {
-  void screen_set_selection(struct screen *, u_int, u_int, u_int, u_int, u_int,
-                            struct grid_cell *);
+void screen_set_selection(struct screen *,
+      u_int, u_int, u_int, u_int, u_int, struct grid_cell *);
@@ -1575,0 +1606 @@ struct cmd_list {
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1576,0 +1608 @@ struct cmd_list {
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1597,2 +1629,2 @@ struct cmd_list {
-                               const char *, int, struct environ *,
-                               struct termios *, u_int, u_int, u_int, char **);
+       const char *, int, struct environ *, struct termios *,
+       u_int, u_int, u_int, char **);
@@ -1614,2 +1646 @@ struct cmd_list {
-                                                     struct window_pane *,
-                                                     u_int);
+          struct window_pane *, u_int);
@@ -1623,3 +1654,3 @@ struct cmd_list {
-  int window_pane_spawn(struct window_pane *, int, char **, const char *,
-                        const char *, int, struct environ *, struct termios *,
-                        char **);
+int window_pane_spawn(struct window_pane *, int, char **,
+       const char *, const char *, int, struct environ *,
+       struct termios *, char **);
@@ -1627,3 +1658,6 @@ struct cmd_list {
-  void window_pane_alternate_on(struct window_pane *, struct grid_cell *, int);
-  void window_pane_alternate_off(struct window_pane *, struct grid_cell *, int);
-  int window_pane_set_mode(struct window_pane *, const struct window_mode *);
+void window_pane_alternate_on(struct window_pane *,
+       struct grid_cell *, int);
+void window_pane_alternate_off(struct window_pane *,
+       struct grid_cell *, int);
+int window_pane_set_mode(
+       struct window_pane *, const struct window_mode *);
@@ -1632,2 +1666,2 @@ struct cmd_list {
-  void window_pane_mouse(struct window_pane *, struct session *,
-                         struct mouse_event *);
+void window_pane_mouse(struct window_pane *,
+       struct session *, struct mouse_event *);
@@ -1635 +1669,2 @@ struct cmd_list {
-  char *window_pane_search(struct window_pane *, const char *, u_int *);
+char *window_pane_search(
+       struct window_pane *, const char *, u_int *);
@@ -1649,2 +1684,4 @@ struct cmd_list {
-  void layout_set_size(struct layout_cell *, u_int, u_int, u_int, u_int);
-  void layout_make_leaf(struct layout_cell *, struct window_pane *);
+void layout_set_size(
+       struct layout_cell *, u_int, u_int, u_int, u_int);
+void layout_make_leaf(
+       struct layout_cell *, struct window_pane *);
@@ -1655 +1692,2 @@ struct cmd_list {
-  void layout_resize_adjust(struct layout_cell *, enum layout_type, int);
+void layout_resize_adjust(
+       struct layout_cell *, enum layout_type, int);
@@ -1659,2 +1697,4 @@ struct cmd_list {
-  void layout_resize_pane(struct window_pane *, enum layout_type, int);
-  void layout_resize_pane_to(struct window_pane *, enum layout_type, u_int);
+void layout_resize_pane(struct window_pane *, enum layout_type,
+       int);
+void layout_resize_pane_to(struct window_pane *, enum layout_type,
+       u_int);
@@ -1663,2 +1703,2 @@ struct cmd_list {
-  struct layout_cell *layout_split_pane(struct window_pane *, enum layout_type,
-                                        int, int);
+struct layout_cell *layout_split_pane(
+       struct window_pane *, enum layout_type, int, int);
@@ -1679,2 +1719 @@ struct cmd_list {
-  void printflike(2, 3)
-      window_copy_add(struct window_pane *, const char *, ...);
+void printflike(2, 3) window_copy_add(struct window_pane *, const char *, ...);
@@ -1684,5 +1723,6 @@ struct cmd_list {
-  void window_choose_add(struct window_pane *, struct window_choose_data *);
-  void window_choose_ready(struct window_pane *, u_int,
-                           void (*)(struct window_choose_data *));
-  struct window_choose_data *window_choose_data_create(int, struct client *,
-                                                       struct session *);
+void window_choose_add(struct window_pane *,
+    struct window_choose_data *);
+void window_choose_ready(struct window_pane *,
+       u_int, void (*)(struct window_choose_data *));
+struct window_choose_data *window_choose_data_create (int,
+       struct client *, struct session *);
@@ -1691,2 +1731,2 @@ struct cmd_list {
-  struct window_choose_data *window_choose_add_window(
-      struct window_pane *, struct client *, struct session *, struct winlink *,
+struct window_choose_data *window_choose_add_window(struct window_pane *,
+   struct client *, struct session *, struct winlink *,
@@ -1695,3 +1735 @@ struct cmd_list {
-                                                       struct client *,
-                                                       struct session *,
-                                                       const char *,
+   struct client *, struct session *, const char *,
@@ -1700,4 +1738,2 @@ struct cmd_list {
-                                                    struct client *,
-                                                    struct winlink *,
-                                                    const char *, const char *,
-                                                    u_int);
+   struct client *, struct winlink *, const char *,
+   const char *, u_int);
@@ -1729,0 +1766 @@ struct cmd_list {
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1733,2 +1770,2 @@ struct cmd_list {
-  struct session *session_create(const char *, int, char **, const char *, int,
-                                 struct environ *, struct termios *, int, u_int,
+struct session *session_create(const char *, int, char **, const char *,
+       int, struct environ *, struct termios *, int, u_int,
@@ -1788 +1825,2 @@ struct cmd_list {
-  int style_parse(const struct grid_cell *, struct grid_cell *, const char *);
+int style_parse(const struct grid_cell *,
+       struct grid_cell *, const char *);
@@ -1791,3 +1829,6 @@ struct cmd_list {
-  void style_update_old(struct options *, const char *, struct grid_cell *);
-  void style_apply(struct grid_cell *, struct options *, const char *);
-  void style_apply_update(struct grid_cell *, struct options *, const char *);
+void style_update_old(struct options *, const char *,
+       struct grid_cell *);
+void style_apply(struct grid_cell *, struct options *,
+       const char *);
+void style_apply_update(struct grid_cell *, struct options *,
+       const char *);
