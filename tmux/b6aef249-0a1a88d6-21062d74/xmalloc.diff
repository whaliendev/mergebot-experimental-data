diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/xmalloc.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/xmalloc.no_comments_merged.c
index a6fbc26..8a5056b 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/xmalloc.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/b6aef249-0a1a88d6-21062d74/xmalloc.no_comments_merged.c
@@ -1,3 +1 @@
-#include <sys/param.h>
-#include <errno.h>
-#include <libgen.h>
+#include <sys/types.h>
@@ -7 +4,0 @@
-#include <sys/types.h>
@@ -9 +6,3 @@
-char *xstrdup(const char *s) {
+char *
+xstrdup(const char *s)
+{
@@ -17 +16,3 @@ char *xstrdup(const char *s) {
-void *xcalloc(size_t nmemb, size_t size) {
+void *
+xcalloc(size_t nmemb, size_t size)
+{
@@ -19,3 +20,6 @@ void *xcalloc(size_t nmemb, size_t size) {
-  if (size == 0 || nmemb == 0) fatalx("zero size");
-  if (SIZE_MAX / nmemb < size) fatalx("nmemb * size > SIZE_MAX");
-  if ((ptr = calloc(nmemb, size)) == NULL) fatal("xcalloc failed");
+ if (size == 0 || nmemb == 0)
+  fatalx("zero size");
+ if (SIZE_MAX / nmemb < size)
+  fatalx("nmemb * size > SIZE_MAX");
+ if ((ptr = calloc(nmemb, size)) == NULL)
+  fatal("xcalloc failed");
@@ -24 +28,3 @@ void *xcalloc(size_t nmemb, size_t size) {
-void *xmalloc(size_t size) {
+void *
+xmalloc(size_t size)
+{
@@ -26,2 +32,4 @@ void *xmalloc(size_t size) {
-  if (size == 0) fatalx("zero size");
-  if ((ptr = malloc(size)) == NULL) fatal("xmalloc failed");
+ if (size == 0)
+  fatalx("zero size");
+ if ((ptr = malloc(size)) == NULL)
+  fatal("xmalloc failed");
@@ -30 +38,3 @@ void *xmalloc(size_t size) {
-void *xrealloc(void *oldptr, size_t newsize) {
+void *
+xrealloc(void *oldptr, size_t newsize)
+{
@@ -32,2 +42,4 @@ void *xrealloc(void *oldptr, size_t newsize) {
-  if (newsize == 0) fatalx("zero size");
-  if ((newptr = realloc(oldptr, newsize)) == NULL) fatal("xrealloc failed");
+ if (newsize == 0)
+  fatalx("zero size");
+ if ((newptr = realloc(oldptr, newsize)) == NULL)
+  fatal("xrealloc failed");
@@ -36 +48,3 @@ void *xrealloc(void *oldptr, size_t newsize) {
-void *xreallocarray(void *oldptr, size_t nmemb, size_t size) {
+void *
+xreallocarray(void *oldptr, size_t nmemb, size_t size)
+{
@@ -39,2 +53,4 @@ void *xreallocarray(void *oldptr, size_t nmemb, size_t size) {
-  if (newsize == 0) fatalx("zero size");
-  if (SIZE_MAX / nmemb < size) fatalx("nmemb * size > SIZE_MAX");
+ if (newsize == 0)
+  fatalx("zero size");
+ if (SIZE_MAX / nmemb < size)
+  fatalx("nmemb * size > SIZE_MAX");
@@ -45 +61,3 @@ void *xreallocarray(void *oldptr, size_t nmemb, size_t size) {
-int xasprintf(char **ret, const char *fmt, ...) {
+int
+xasprintf(char **ret, const char *fmt, ...)
+{
@@ -53 +71,3 @@ int xasprintf(char **ret, const char *fmt, ...) {
-int xvasprintf(char **ret, const char *fmt, va_list ap) {
+int
+xvasprintf(char **ret, const char *fmt, va_list ap)
+{
@@ -56 +76,2 @@ int xvasprintf(char **ret, const char *fmt, va_list ap) {
-  if (i < 0 || *ret == NULL) fatal("xvasprintf failed");
+ if (i < 0 || *ret == NULL)
+  fatal("xvasprintf failed");
@@ -59 +80,3 @@ int xvasprintf(char **ret, const char *fmt, va_list ap) {
-int xsnprintf(char *buf, size_t len, const char *fmt, ...) {
+int
+xsnprintf(char *buf, size_t len, const char *fmt, ...)
+{
@@ -67 +90,3 @@ int xsnprintf(char *buf, size_t len, const char *fmt, ...) {
-int xvsnprintf(char *buf, size_t len, const char *fmt, va_list ap) {
+int
+xvsnprintf(char *buf, size_t len, const char *fmt, va_list ap)
+{
@@ -69 +94,2 @@ int xvsnprintf(char *buf, size_t len, const char *fmt, va_list ap) {
-  if (len > INT_MAX) fatalx("len > INT_MAX");
+ if (len > INT_MAX)
+  fatalx("len > INT_MAX");
@@ -71 +97,2 @@ int xvsnprintf(char *buf, size_t len, const char *fmt, va_list ap) {
-  if (i < 0) fatal("vsnprintf failed");
+ if (i < 0)
+  fatal("vsnprintf failed");
