diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/client.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/client.no_comments_merged.c
index 7f44fb5..5b9a4a2 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/client.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/client.no_comments_merged.c
@@ -45 +45,3 @@ const char *client_exit_message(void);
-int client_get_lock(char *lockfile) {
+int
+client_get_lock(char *lockfile)
+{
@@ -50 +52,2 @@ int client_get_lock(char *lockfile) {
-    while (lockf(lockfd, F_LOCK, 0) == -1 && errno == EINTR) ;
+  while (lockf(lockfd, F_LOCK, 0) == -1 && errno == EINTR)
+                ;
@@ -56 +59,3 @@ int client_get_lock(char *lockfile) {
-int client_connect(char *path, int start_server) {
+int
+client_connect(char *path, int start_server)
+{
@@ -69 +74,2 @@ retry:
-  if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) == -1) fatal("socket failed");
+ if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) == -1)
+  fatal("socket failed");
@@ -71,2 +77,4 @@ retry:
-    if (errno != ECONNREFUSED && errno != ENOENT) goto failed;
-    if (!start_server) goto failed;
+  if (errno != ECONNREFUSED && errno != ENOENT)
+   goto failed;
+  if (!start_server)
+   goto failed;
@@ -75,2 +83,4 @@ retry:
-    if ((lockfd = client_get_lock(lockfile)) == -1) goto retry;
-    if (unlink(path) != 0 && errno != ENOENT) return (-1);
+  if ((lockfd = client_get_lock(lockfile)) == -1)
+   goto retry;
+  if (unlink(path) != 0 && errno != ENOENT)
+   return (-1);
@@ -87 +97,3 @@ failed:
-const char *client_exit_message(void) {
+const char *
+client_exit_message(void)
+{
@@ -94,4 +106,2 @@ const char *client_exit_message(void) {
-        xsnprintf(msg, sizeof msg,
-                  "detached "
-                  "(from session %s)",
-                  client_exitsession);
+   xsnprintf(msg, sizeof msg, "detached "
+       "(from session %s)", client_exitsession);
@@ -103,4 +113,2 @@ const char *client_exit_message(void) {
-        xsnprintf(msg, sizeof msg,
-                  "detached and SIGHUP "
-                  "(from session %s)",
-                  client_exitsession);
+   xsnprintf(msg, sizeof msg, "detached and SIGHUP "
+       "(from session %s)", client_exitsession);
@@ -123 +131,3 @@ const char *client_exit_message(void) {
-int client_main(int argc, char **argv, int flags) {
+int
+client_main(int argc, char **argv, int flags)
+{
@@ -149,2 +159,4 @@ int client_main(int argc, char **argv, int flags) {
-      if (cmd->entry->flags & CMD_STARTSERVER) cmdflags |= CMD_STARTSERVER;
-      if (cmd->entry->flags & CMD_CANTNEST) cmdflags |= CMD_CANTNEST;
+   if (cmd->entry->flags & CMD_STARTSERVER)
+    cmdflags |= CMD_STARTSERVER;
+   if (cmd->entry->flags & CMD_CANTNEST)
+    cmdflags |= CMD_CANTNEST;
@@ -154 +166,2 @@ int client_main(int argc, char **argv, int flags) {
-  if (shell_cmd == NULL && environ_path != NULL && (cmdflags & CMD_CANTNEST) &&
+ if (shell_cmd == NULL && environ_path != NULL &&
+     (cmdflags & CMD_CANTNEST) &&
@@ -156,2 +169 @@ int client_main(int argc, char **argv, int flags) {
-    fprintf(stderr,
-            "sessions should be nested with care, "
+  fprintf(stderr, "sessions should be nested with care, "
@@ -177 +189,2 @@ int client_main(int argc, char **argv, int flags) {
-      fprintf(stderr, "tcgetattr failed: %s\n", strerror(errno));
+   fprintf(stderr, "tcgetattr failed: %s\n",
+       strerror(errno));
@@ -197 +210,2 @@ int client_main(int argc, char **argv, int flags) {
-    for (i = 0; i < argc; i++) size += strlen(argv[i]) + 1;
+  for (i = 0; i < argc; i++)
+   size += strlen(argv[i]) + 1;
@@ -220 +234,2 @@ int client_main(int argc, char **argv, int flags) {
-    if (client_exittype == MSG_DETACHKILL && ppid > 1) kill(ppid, SIGHUP);
+  if (client_exittype == MSG_DETACHKILL && ppid > 1)
+   kill(ppid, SIGHUP);
@@ -232 +247,3 @@ int client_main(int argc, char **argv, int flags) {
-void client_send_identify(int flags) {
+void
+client_send_identify(int flags)
+{
@@ -237 +254,2 @@ void client_send_identify(int flags) {
-  if ((s = getenv("TERM")) == NULL) s = "";
+ if ((s = getenv("TERM")) == NULL)
+  s = "";
@@ -239 +257,2 @@ void client_send_identify(int flags) {
-  if ((s = ttyname(STDIN_FILENO)) == NULL) s = "";
+ if ((s = ttyname(STDIN_FILENO)) == NULL)
+  s = "";
@@ -241 +260,2 @@ void client_send_identify(int flags) {
-  if ((fd = open(".", O_RDONLY)) == -1) fd = open("/", O_RDONLY);
+ if ((fd = open(".", O_RDONLY)) == -1)
+  fd = open("/", O_RDONLY);
@@ -244 +264,2 @@ void client_send_identify(int flags) {
-  snprintf(&data.ttyname, sizeof data.ttyname, "%s", ttyname(STDIN_FILENO));
+ snprintf(&data.ttyname, sizeof data.ttyname, "%s",
+     ttyname(STDIN_FILENO));
@@ -246,9 +267,2 @@ void client_send_identify(int flags) {
-  if ((fd = dup(STDIN_FILENO)) == -1) fatal("dup failed");
-<<<<<<< HEAD
-#endif
-  imsg_compose(&client_ibuf, MSG_IDENTIFY, PROTOCOL_VERSION, -1, fd, &data,
-               sizeof data);
-|||||||
-  imsg_compose(&client_ibuf, MSG_IDENTIFY, PROTOCOL_VERSION, -1, fd, &data,
-               sizeof data);
-=======
+ if ((fd = dup(STDIN_FILENO)) == -1)
+  fatal("dup failed");
@@ -259 +272,0 @@ void client_send_identify(int flags) {
->>>>>>> 4901d9ddc8d8c33ecdca363dcb67e66482745fa5
@@ -262 +275,3 @@ void client_send_identify(int flags) {
-intclient_write_one(enum msgtype type, int fd, const void *buf, size_t len) {
+int
+client_write_one(enum msgtype type, int fd, const void *buf, size_t len)
+{
@@ -266 +281,2 @@ intclient_write_one(enum msgtype type, int fd, const void *buf, size_t len) {
-  if (retval != 1) return (-1);
+ if (retval != 1)
+  return (-1);
@@ -269 +285,3 @@ intclient_write_one(enum msgtype type, int fd, const void *buf, size_t len) {
-int client_write_server(enum msgtype type, const void *buf, size_t len) {
+int
+client_write_server(enum msgtype type, const void *buf, size_t len)
+{
@@ -272 +290,2 @@ int client_write_server(enum msgtype type, const void *buf, size_t len) {
-  if (retval == 0) client_update_event();
+ if (retval == 0)
+  client_update_event();
@@ -275 +294,3 @@ int client_write_server(enum msgtype type, const void *buf, size_t len) {
-void client_update_event(void) {
+void
+client_update_event(void)
+{
@@ -279,2 +300,4 @@ void client_update_event(void) {
-  if (client_ibuf.w.queued > 0) events |= EV_WRITE;
-  event_set(&client_event, client_ibuf.fd, events, client_callback, shell_cmd);
+ if (client_ibuf.w.queued > 0)
+  events |= EV_WRITE;
+ event_set(
+     &client_event, client_ibuf.fd, events, client_callback, shell_cmd);
@@ -283 +306,3 @@ void client_update_event(void) {
-void client_signal(int sig, unused short events, unused void *data) {
+void
+client_signal(int sig, unused short events, unused void *data)
+{
@@ -315 +340,2 @@ void client_signal(int sig, unused short events, unused void *data) {
-        if (sigaction(SIGTSTP, &sigact, NULL) != 0) fatal("sigaction failed");
+   if (sigaction(SIGTSTP, &sigact, NULL) != 0)
+    fatal("sigaction failed");
@@ -322 +348,3 @@ void client_signal(int sig, unused short events, unused void *data) {
-void client_callback(unused int fd, short events, void *data) {
+void
+client_callback(unused int fd, short events, void *data)
+{
@@ -326 +354,2 @@ void client_callback(unused int fd, short events, void *data) {
-    if ((n = imsg_read(&client_ibuf)) == -1 || n == 0) goto lost_server;
+  if ((n = imsg_read(&client_ibuf)) == -1 || n == 0)
+   goto lost_server;
@@ -337 +366,2 @@ void client_callback(unused int fd, short events, void *data) {
-    if (msgbuf_write(&client_ibuf.w) < 0) goto lost_server;
+  if (msgbuf_write(&client_ibuf.w) < 0)
+   goto lost_server;
@@ -346,2 +376,3 @@ lost_server:
-void client_stdin_callback(unused int fd, unused short events,
-                           unused void *data1) {
+void
+client_stdin_callback(unused int fd, unused short events, unused void *data1)
+{
@@ -350 +381,2 @@ void client_stdin_callback(unused int fd, unused short events,
-  if (data.size < 0 && (errno == EINTR || errno == EAGAIN)) return;
+ if (data.size < 0 && (errno == EINTR || errno == EAGAIN))
+  return;
@@ -352 +384,2 @@ void client_stdin_callback(unused int fd, unused short events,
-  if (data.size <= 0) event_del(&client_stdin);
+ if (data.size <= 0)
+  event_del(&client_stdin);
@@ -355 +388,3 @@ void client_stdin_callback(unused int fd, unused short events,
-void client_write(int fd, const char *data, size_t size) {
+void
+client_write(int fd, const char *data, size_t size)
+{
@@ -360 +395,2 @@ void client_write(int fd, const char *data, size_t size) {
-      if (errno == EINTR || errno == EAGAIN) continue;
+   if (errno == EINTR || errno == EAGAIN)
+    continue;
@@ -367 +403,3 @@ void client_write(int fd, const char *data, size_t size) {
-int client_dispatch_wait(void *data0) {
+int
+client_dispatch_wait(void *data0)
+{
@@ -375,2 +413,4 @@ int client_dispatch_wait(void *data0) {
-    if ((n = imsg_get(&client_ibuf, &imsg)) == -1) fatalx("imsg_get failed");
-    if (n == 0) return (0);
+  if ((n = imsg_get(&client_ibuf, &imsg)) == -1)
+   fatalx("imsg_get failed");
+  if (n == 0)
+   return (0);
@@ -392 +432,2 @@ int client_dispatch_wait(void *data0) {
-        if (datalen != 0) fatalx("bad MSG_READY size");
+   if (datalen != 0)
+    fatalx("bad MSG_READY size");
@@ -398 +439,2 @@ int client_dispatch_wait(void *data0) {
-        if (datalen != 0) fatalx("bad MSG_STDIN size");
+   if (datalen != 0)
+    fatalx("bad MSG_STDIN size");
@@ -402 +444,2 @@ int client_dispatch_wait(void *data0) {
-        if (datalen != sizeof stdoutdata) fatalx("bad MSG_STDOUT size");
+   if (datalen != sizeof stdoutdata)
+    fatalx("bad MSG_STDOUT size");
@@ -404 +447,2 @@ int client_dispatch_wait(void *data0) {
-        client_write(STDOUT_FILENO, stdoutdata.data, stdoutdata.size);
+   client_write(STDOUT_FILENO, stdoutdata.data,
+       stdoutdata.size);
@@ -407 +451,2 @@ int client_dispatch_wait(void *data0) {
-        if (datalen != sizeof stderrdata) fatalx("bad MSG_STDERR size");
+   if (datalen != sizeof stderrdata)
+    fatalx("bad MSG_STDERR size");
@@ -409 +454,2 @@ int client_dispatch_wait(void *data0) {
-        client_write(STDERR_FILENO, stderrdata.data, stderrdata.size);
+   client_write(STDERR_FILENO, stderrdata.data,
+       stderrdata.size);
@@ -412,5 +458,5 @@ int client_dispatch_wait(void *data0) {
-        if (datalen != 0) fatalx("bad MSG_VERSION size");
-        fprintf(stderr,
-                "protocol version mismatch "
-                "(client %u, server %u)\n",
-                PROTOCOL_VERSION, imsg.hdr.peerid);
+   if (datalen != 0)
+    fatalx("bad MSG_VERSION size");
+   fprintf(stderr, "protocol version mismatch "
+       "(client %u, server %u)\n", PROTOCOL_VERSION,
+       imsg.hdr.peerid);
@@ -436 +482,3 @@ int client_dispatch_wait(void *data0) {
-int client_dispatch_attached(void) {
+int
+client_dispatch_attached(void)
+{
@@ -442,2 +490,4 @@ int client_dispatch_attached(void) {
-    if ((n = imsg_get(&client_ibuf, &imsg)) == -1) fatalx("imsg_get failed");
-    if (n == 0) return (0);
+  if ((n = imsg_get(&client_ibuf, &imsg)) == -1)
+   fatalx("imsg_get failed");
+  if (n == 0)
+   return (0);
@@ -461 +511,2 @@ int client_dispatch_attached(void) {
-        if (datalen != 0 && datalen != sizeof(int)) fatalx("bad MSG_EXIT size");
+   if (datalen != 0 && datalen != sizeof (int))
+    fatalx("bad MSG_EXIT size");
@@ -466 +517,2 @@ int client_dispatch_attached(void) {
-        if (datalen != 0) fatalx("bad MSG_EXITED size");
+   if (datalen != 0)
+    fatalx("bad MSG_EXITED size");
@@ -470 +522,2 @@ int client_dispatch_attached(void) {
-        if (datalen != 0) fatalx("bad MSG_SHUTDOWN size");
+   if (datalen != 0)
+    fatalx("bad MSG_SHUTDOWN size");
@@ -476 +529,2 @@ int client_dispatch_attached(void) {
-        if (datalen != 0) fatalx("bad MSG_SUSPEND size");
+   if (datalen != 0)
+    fatalx("bad MSG_SUSPEND size");
@@ -481 +535,2 @@ int client_dispatch_attached(void) {
-        if (sigaction(SIGTSTP, &sigact, NULL) != 0) fatal("sigaction failed");
+   if (sigaction(SIGTSTP, &sigact, NULL) != 0)
+    fatal("sigaction failed");
