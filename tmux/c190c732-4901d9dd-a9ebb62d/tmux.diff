diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/tmux.no_comments_mergebot.h b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/tmux.no_comments_merged.h
index d79efd1..1013e9a 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/tmux.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/c190c732-4901d9dd-a9ebb62d/tmux.no_comments_merged.h
@@ -3 +3 @@
-#define PROTOCOL_VERSION 7
+#define PROTOCOL_VERSION 8
@@ -6,6 +5,0 @@
-#include <sys/queue.h>
-#include <bitstring.h>
-#include <getopt.h>
-#include <imsg.h>
-#include <sys/tree.h>
-#include <stdint.h>
@@ -14 +7,0 @@
-#define PROTOCOL_VERSION 8
@@ -27,0 +21,2 @@ extern char **environ;
+#define fatal(msg) log_fatal("%s: %s", __func__, msg);
+#define fatalx(msg) log_fatalx("%s: %s", __func__, msg);
@@ -329,0 +325 @@ struct tty_term_code_entry {
+ARRAY_DECL(causelist, char *);
@@ -482,0 +479 @@ struct mode_key_binding {
+RB_HEAD(mode_key_tree, mode_key_binding);
@@ -505,2 +502 @@ struct mode_key_table {
-#define ALL_MOUSE_MODES \
-  (MODE_MOUSE_STANDARD | MODE_MOUSE_BUTTON | MODE_MOUSE_ANY)
+#define ALL_MOUSE_MODES (MODE_MOUSE_STANDARD|MODE_MOUSE_BUTTON|MODE_MOUSE_ANY)
@@ -512,0 +509,8 @@ struct utf8_data {
+#if defined(DEBUG) && \
+    ((defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
+     (defined(__GNUC__) && __GNUC__ >= 3))
+#define GRID_DEBUG(gd,fmt,...) log_debug2("%s: (sx=%u, sy=%u, hsize=%u) " \
+    fmt, __func__, (gd)->sx, (gd)->sy, (gd)->hsize, ## __VA_ARGS__)
+#else
+#define GRID_DEBUG(...) 
+#endif
@@ -525,9 +529,7 @@ struct utf8_data {
-struct grid_line {
-  u_int cellsize;
-  struct grid_cell *celldata;
-  int flags;
-} __packed;
-struct grid_line {
-  u_int cellsize;
-  struct grid_cell *celldata;
-  int flags;
+struct grid_cell {
+ u_char attr;
+ u_char flags;
+ u_char fg;
+ u_char bg;
+ u_char xstate;
+ u_char xdata[UTF8_SIZE];
@@ -574,0 +577 @@ struct job {
+LIST_HEAD(joblist, job);
@@ -600,0 +604,4 @@ struct screen_write_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -631 +638,2 @@ struct window_mode {
-  void (*mouse)(struct window_pane *, struct session *, struct mouse_event *);
+ void (*mouse)(struct window_pane *,
+      struct session *, struct mouse_event *);
@@ -693,4 +701,2 @@ struct window_pane {
-  RB_ENTRY(window_pane)
-  tree_entry;
-  RB_ENTRY(window_pane)
-  RB_ENTRY(window_pane)
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -697,0 +704,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -720,0 +729 @@ struct window {
+ARRAY_DECL(windows, struct window *);
@@ -737 +746,8 @@ struct winlink {
-enum layout_type { LAYOUT_LEFTRIGHT, LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE };
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
+enum layout_type {
+ LAYOUT_LEFTRIGHT,
+ LAYOUT_TOPBOTTOM,
+ LAYOUT_WINDOWPANE
+};
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -752,0 +769 @@ struct paste_buffer {
+ARRAY_DECL(paste_stack, struct paste_buffer *);
@@ -757,0 +775 @@ struct environ_entry {
+RB_HEAD(environ, environ_entry);
@@ -761,0 +780 @@ struct session_group {
+TAILQ_HEAD(session_groups, session_group);
@@ -780,2 +799 @@ struct session {
-  RB_ENTRY(session) entry;
-  RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -783,0 +802,2 @@ struct session {
+RB_HEAD(sessions, session);
+ARRAY_DECL(sessionslist, struct session *);
@@ -794 +814 @@ struct tty_term {
-  LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -800,0 +821 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -881,0 +903 @@ struct status_out {
+RB_HEAD(status_out_tree, status_out);
@@ -945,0 +968 @@ struct client {
+ARRAY_DECL(clients, struct client *);
@@ -950,0 +974 @@ struct args_entry {
+RB_HEAD(args_tree, args_entry);
@@ -967,0 +992 @@ struct cmd_list {
+};
@@ -977,0 +1003 @@ struct cmd_list {
+TAILQ_HEAD(cmd_q_items, cmd_q_item);
@@ -1010,3 +1036 @@ struct cmd_list {
-    entry;
-    entry;
-    entry;
+ RB_ENTRY(key_binding) entry;
@@ -1013,0 +1038 @@ struct cmd_list {
+RB_HEAD(key_bindings, key_binding);
@@ -1036,0 +1062 @@ struct cmd_list {
+RB_HEAD(format_tree, format_entry);
@@ -1071,0 +1098 @@ struct cmd_list {
+RB_PROTOTYPE(format_tree, format_entry, entry, format_cmp);
@@ -1081,3 +1108,6 @@ struct cmd_list {
-  void format_winlink(struct format_tree *, struct session *, struct winlink *);
-  void format_window_pane(struct format_tree *, struct window_pane *);
-  void format_paste_buffer(struct format_tree *, struct paste_buffer *);
+void format_winlink(struct format_tree *, struct session *,
+       struct winlink *);
+void format_window_pane(struct format_tree *,
+       struct window_pane *);
+void format_paste_buffer(struct format_tree *,
+       struct paste_buffer *);
@@ -1091,0 +1122 @@ struct cmd_list {
+RB_PROTOTYPE(mode_key_tree, mode_key_binding, entry, mode_key_cmp);
@@ -1111,0 +1143 @@ struct cmd_list {
+RB_PROTOTYPE(options_tree, options_entry, entry, options_cmp);
@@ -1117,3 +1149,2 @@ struct cmd_list {
-  struct options_entry *printflike3 options_set_string(struct options *,
-                                                       const char *,
-                                                       const char *, ...);
+struct options_entry *printflike3 options_set_string(
+     struct options *, const char *, const char *, ...);
@@ -1121,2 +1152,2 @@ struct cmd_list {
-  struct options_entry *options_set_number(struct options *, const char *,
-                                           long long);
+struct options_entry *options_set_number(
+     struct options *, const char *, long long);
@@ -1134,2 +1165,2 @@ struct cmd_list {
-  struct job *job_run(const char *, struct session *, void (*)(struct job *),
-                      void (*)(void *), void *);
+struct job *job_run(const char *, struct session *,
+     void (*)(struct job *), void (*)(void *), void *);
@@ -1138,0 +1170 @@ struct cmd_list {
+RB_PROTOTYPE(environ, environ_entry, entry, environ_cmp);
@@ -1178,2 +1210,2 @@ struct cmd_list {
-  void tty_write(void (*)(struct tty *, const struct tty_ctx *),
-                 struct tty_ctx *);
+void tty_write(
+     void (*)(struct tty *, const struct tty_ctx *), struct tty_ctx *);
@@ -1207,5 +1239,6 @@ struct cmd_list {
-  const char *tty_term_string2(struct tty_term *, enum tty_code_code, int, int);
-  const char *tty_term_ptr1(struct tty_term *, enum tty_code_code,
-                            const void *);
-  const char *tty_term_ptr2(struct tty_term *, enum tty_code_code, const void *,
-                            const void *);
+const char *tty_term_string2(
+       struct tty_term *, enum tty_code_code, int, int);
+const char *tty_term_ptr1(
+       struct tty_term *, enum tty_code_code, const void *);
+const char *tty_term_ptr2(struct tty_term *, enum tty_code_code,
+       const void *, const void *);
@@ -1230,0 +1264 @@ struct cmd_list {
+RB_PROTOTYPE(args_tree, args_entry, entry, args_cmp);
@@ -1238 +1272,2 @@ struct cmd_list {
-  long long args_strtonum(struct args *, u_char, long long, long long, char **);
+long long args_strtonum(
+      struct args *, u_char, long long, long long, char **);
@@ -1251 +1286,2 @@ struct cmd_list {
-  int cmd_find_index(struct cmd_q *, const char *, struct session **);
+int cmd_find_index(struct cmd_q *, const char *,
+       struct session **);
@@ -1255,86 +1291 @@ struct cmd_list {
-  const struct cmd_entry *cmd_table[] = {&cmd_attach_session_entry,
-                                         &cmd_bind_key_entry,
-                                         &cmd_break_pane_entry,
-                                         &cmd_capture_pane_entry,
-                                         &cmd_choose_buffer_entry,
-                                         &cmd_choose_client_entry,
-                                         &cmd_choose_list_entry,
-                                         &cmd_choose_session_entry,
-                                         &cmd_choose_tree_entry,
-                                         &cmd_choose_window_entry,
-                                         &cmd_clear_history_entry,
-                                         &cmd_clock_mode_entry,
-                                         &cmd_command_prompt_entry,
-                                         &cmd_confirm_before_entry,
-                                         &cmd_copy_mode_entry,
-                                         &cmd_delete_buffer_entry,
-                                         &cmd_detach_client_entry,
-                                         &cmd_display_message_entry,
-                                         &cmd_display_panes_entry,
-                                         &cmd_find_window_entry,
-                                         &cmd_has_session_entry,
-                                         &cmd_if_shell_entry,
-                                         &cmd_join_pane_entry,
-                                         &cmd_kill_pane_entry,
-                                         &cmd_kill_server_entry,
-                                         &cmd_kill_session_entry,
-                                         &cmd_kill_window_entry,
-                                         &cmd_last_pane_entry,
-                                         &cmd_last_window_entry,
-                                         &cmd_link_window_entry,
-                                         &cmd_list_buffers_entry,
-                                         &cmd_list_clients_entry,
-                                         &cmd_list_commands_entry,
-                                         &cmd_list_keys_entry,
-                                         &cmd_list_panes_entry,
-                                         &cmd_list_sessions_entry,
-                                         &cmd_list_windows_entry,
-                                         &cmd_load_buffer_entry,
-                                         &cmd_lock_client_entry,
-                                         &cmd_lock_server_entry,
-                                         &cmd_lock_session_entry,
-                                         &cmd_move_pane_entry,
-                                         &cmd_move_window_entry,
-                                         &cmd_new_session_entry,
-                                         &cmd_new_window_entry,
-                                         &cmd_next_layout_entry,
-                                         &cmd_next_window_entry,
-                                         &cmd_paste_buffer_entry,
-                                         &cmd_pipe_pane_entry,
-                                         &cmd_previous_layout_entry,
-                                         &cmd_previous_window_entry,
-                                         &cmd_refresh_client_entry,
-                                         &cmd_rename_session_entry,
-                                         &cmd_rename_window_entry,
-                                         &cmd_resize_pane_entry,
-                                         &cmd_respawn_pane_entry,
-                                         &cmd_respawn_window_entry,
-                                         &cmd_rotate_window_entry,
-                                         &cmd_run_shell_entry,
-                                         &cmd_save_buffer_entry,
-                                         &cmd_select_layout_entry,
-                                         &cmd_select_pane_entry,
-                                         &cmd_select_window_entry,
-                                         &cmd_send_keys_entry,
-                                         &cmd_send_prefix_entry,
-                                         &cmd_server_info_entry,
-                                         &cmd_set_buffer_entry,
-                                         &cmd_set_environment_entry,
-                                         &cmd_set_option_entry,
-                                         &cmd_set_window_option_entry,
-                                         &cmd_show_buffer_entry,
-                                         &cmd_show_environment_entry,
-                                         &cmd_show_messages_entry,
-                                         &cmd_show_options_entry,
-                                         &cmd_show_window_options_entry,
-                                         &cmd_source_file_entry,
-                                         &cmd_split_window_entry,
-                                         &cmd_start_server_entry,
-                                         &cmd_suspend_client_entry,
-                                         &cmd_swap_pane_entry,
-                                         &cmd_swap_window_entry,
-                                         &cmd_switch_client_entry,
-                                         &cmd_unbind_key_entry,
-                                         &cmd_unlink_window_entry,
-                                         &cmd_wait_for_entry,
-                                         NULL};
+extern const struct cmd_entry *cmd_table[];
@@ -1401,11 +1352 @@ struct cmd_list {
-  const struct cmd_entry cmd_save_buffer_entry = {"save-buffer",
-                                                  "saveb",
-                                                  "ab:",
-                                                  1,
-                                                  1,
-                                                  "[-a] " CMD_BUFFER_USAGE
-                                                  " path",
-                                                  0,
-                                                  NULL,
-                                                  NULL,
-                                                  cmd_save_buffer_exec};
+extern const struct cmd_entry cmd_save_buffer_entry;
@@ -1422,3 +1363 @@ struct cmd_list {
-  const struct cmd_entry cmd_show_buffer_entry = {
-      "show-buffer", "showb", "b:", 0, 0,
-      CMD_BUFFER_USAGE, 0, NULL, NULL, cmd_save_buffer_exec};
+extern const struct cmd_entry cmd_show_buffer_entry;
@@ -1430,11 +1369 @@ struct cmd_list {
-  const struct cmd_entry cmd_split_window_entry = {
-      "split-window",
-      "splitw",
-      "c:dF:l:hp:Pt:v",
-      0,
-      1,
-      "[-dhvP] [-c start-directory] [-F format] [-p percentage|-l "
-      "size] " CMD_TARGET_PANE_USAGE " [command]",
-      0,
-      cmd_split_window_key_binding,
-      cmd_split_window_exec};
+extern const struct cmd_entry cmd_split_window_entry;
@@ -1465,2 +1394,2 @@ struct cmd_list {
-  int cmd_string_parse(const char *, struct cmd_list **, const char *, u_int,
-                       char **);
+int cmd_string_parse(const char *, struct cmd_list **, const char *,
+     u_int, char **);
@@ -1469,0 +1399 @@ struct cmd_list {
+RB_PROTOTYPE(key_bindings, key_binding, entry, key_bindings_cmp);
@@ -1494 +1424,2 @@ struct cmd_list {
-  int server_write_client(struct client *, enum msgtype, const void *, size_t);
+int server_write_client(struct client *, enum msgtype, const void *,
+      size_t);
@@ -1511,2 +1442,2 @@ struct cmd_list {
-  int server_link_window(struct session *, struct winlink *, struct session *,
-                         int, int, int, char **);
+int server_link_window(struct session *,
+      struct winlink *, struct session *, int, int, int, char **);
@@ -1523,3 +1454,2 @@ struct cmd_list {
-  int server_set_stdin_callback(struct client *,
-                                void (*)(struct client *, int, void *), void *,
-                                char **);
+int server_set_stdin_callback(struct client *, void (*)(struct client *,
+      int, void *), void *, char **);
@@ -1527,0 +1458 @@ struct cmd_list {
+RB_PROTOTYPE(status_out_tree, status_out, entry, status_out_cmp);
@@ -1533,2 +1464,2 @@ struct cmd_list {
-  char *status_replace(struct client *, struct session *, struct winlink *,
-                       struct window_pane *, const char *, time_t, int);
+char *status_replace(struct client *, struct session *,
+      struct winlink *, struct window_pane *, const char *, time_t, int);
@@ -1539,2 +1470 @@ struct cmd_list {
-                         int (*)(void *, const char *), void (*)(void *),
-                         void *, int);
+      int (*)(void *, const char *), void (*)(void *), void *, int);
@@ -1580 +1510,2 @@ struct cmd_list {
-  void grid_duplicate_lines(struct grid *, u_int, struct grid *, u_int, u_int);
+void grid_duplicate_lines(
+      struct grid *, u_int, struct grid *, u_int, u_int);
@@ -1588,2 +1519,2 @@ struct cmd_list {
-  void grid_view_set_cell(struct grid *, u_int, u_int,
-                          const struct grid_cell *);
+void grid_view_set_cell(
+      struct grid *, u_int, u_int, const struct grid_cell *);
@@ -1601,2 +1532,2 @@ struct cmd_list {
-  void screen_write_start(struct screen_write_ctx *, struct window_pane *,
-                          struct screen *);
+void screen_write_start(
+      struct screen_write_ctx *, struct window_pane *, struct screen *);
@@ -1606,3 +1537,2 @@ struct cmd_list {
-  void printflike5 screen_write_cnputs(struct screen_write_ctx *, ssize_t,
-                                       struct grid_cell *, int, const char *,
-                                       ...);
+void printflike5 screen_write_cnputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, ...);
@@ -1612,10 +1542,10 @@ struct cmd_list {
-  void printflike5 screen_write_nputs(struct screen_write_ctx *, ssize_t,
-                                      struct grid_cell *, int, const char *,
-                                      ...);
-  void screen_write_vnputs(struct screen_write_ctx *, ssize_t,
-                           struct grid_cell *, int, const char *, va_list);
-  void screen_write_parsestyle(struct grid_cell *, struct grid_cell *,
-                               const char *);
-  void screen_write_putc(struct screen_write_ctx *, struct grid_cell *, u_char);
-  void screen_write_copy(struct screen_write_ctx *, struct screen *, u_int,
-                         u_int, u_int, u_int);
+void printflike5 screen_write_nputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, ...);
+void screen_write_vnputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, va_list);
+void screen_write_parsestyle(
+      struct grid_cell *, struct grid_cell *, const char *);
+void screen_write_putc(
+      struct screen_write_ctx *, struct grid_cell *, u_char);
+void screen_write_copy(struct screen_write_ctx *,
+      struct screen *, u_int, u_int, u_int, u_int);
@@ -1661,2 +1591,2 @@ struct cmd_list {
-  void screen_set_selection(struct screen *, u_int, u_int, u_int, u_int, u_int,
-                            struct grid_cell *);
+void screen_set_selection(struct screen *,
+      u_int, u_int, u_int, u_int, u_int, struct grid_cell *);
@@ -1668,0 +1599 @@ struct cmd_list {
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1669,0 +1601 @@ struct cmd_list {
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1690,2 +1622,2 @@ struct cmd_list {
-                               struct environ *, struct termios *, u_int, u_int,
-                               u_int, char **);
+       struct environ *, struct termios *, u_int, u_int, u_int,
+       char **);
@@ -1706,2 +1638 @@ struct cmd_list {
-                                                     struct window_pane *,
-                                                     u_int);
+          struct window_pane *, u_int);
@@ -1715,2 +1646,3 @@ struct cmd_list {
-  int window_pane_spawn(struct window_pane *, const char *, const char *, int,
-                        struct environ *, struct termios *, char **);
+int window_pane_spawn(struct window_pane *, const char *,
+       const char *, int, struct environ *, struct termios *,
+       char **);
@@ -1718,3 +1650,6 @@ struct cmd_list {
-  void window_pane_alternate_on(struct window_pane *, struct grid_cell *, int);
-  void window_pane_alternate_off(struct window_pane *, struct grid_cell *, int);
-  int window_pane_set_mode(struct window_pane *, const struct window_mode *);
+void window_pane_alternate_on(struct window_pane *,
+       struct grid_cell *, int);
+void window_pane_alternate_off(struct window_pane *,
+       struct grid_cell *, int);
+int window_pane_set_mode(
+       struct window_pane *, const struct window_mode *);
@@ -1723,2 +1658,2 @@ struct cmd_list {
-  void window_pane_mouse(struct window_pane *, struct session *,
-                         struct mouse_event *);
+void window_pane_mouse(struct window_pane *,
+       struct session *, struct mouse_event *);
@@ -1726 +1661,2 @@ struct cmd_list {
-  char *window_pane_search(struct window_pane *, const char *, u_int *);
+char *window_pane_search(
+       struct window_pane *, const char *, u_int *);
@@ -1741,2 +1677,4 @@ struct cmd_list {
-  void layout_set_size(struct layout_cell *, u_int, u_int, u_int, u_int);
-  void layout_make_leaf(struct layout_cell *, struct window_pane *);
+void layout_set_size(
+       struct layout_cell *, u_int, u_int, u_int, u_int);
+void layout_make_leaf(
+       struct layout_cell *, struct window_pane *);
@@ -1747 +1685,2 @@ struct cmd_list {
-  void layout_resize_adjust(struct layout_cell *, enum layout_type, int);
+void layout_resize_adjust(
+       struct layout_cell *, enum layout_type, int);
@@ -1751,2 +1690,4 @@ struct cmd_list {
-  void layout_resize_pane(struct window_pane *, enum layout_type, int);
-  void layout_resize_pane_to(struct window_pane *, enum layout_type, u_int);
+void layout_resize_pane(struct window_pane *, enum layout_type,
+       int);
+void layout_resize_pane_to(struct window_pane *, enum layout_type,
+       u_int);
@@ -1755,2 +1696,2 @@ struct cmd_list {
-  struct layout_cell *layout_split_pane(struct window_pane *, enum layout_type,
-                                        int, int);
+struct layout_cell *layout_split_pane(
+       struct window_pane *, enum layout_type, int, int);
@@ -1774,5 +1715,6 @@ struct cmd_list {
-  void window_choose_add(struct window_pane *, struct window_choose_data *);
-  void window_choose_ready(struct window_pane *, u_int,
-                           void (*)(struct window_choose_data *));
-  struct window_choose_data *window_choose_data_create(int, struct client *,
-                                                       struct session *);
+void window_choose_add(struct window_pane *,
+    struct window_choose_data *);
+void window_choose_ready(struct window_pane *,
+       u_int, void (*)(struct window_choose_data *));
+struct window_choose_data *window_choose_data_create (int,
+       struct client *, struct session *);
@@ -1781,2 +1723,2 @@ struct cmd_list {
-  struct window_choose_data *window_choose_add_window(
-      struct window_pane *, struct client *, struct session *, struct winlink *,
+struct window_choose_data *window_choose_add_window(struct window_pane *,
+   struct client *, struct session *, struct winlink *,
@@ -1785,3 +1727 @@ struct cmd_list {
-                                                       struct client *,
-                                                       struct session *,
-                                                       const char *,
+   struct client *, struct session *, const char *,
@@ -1790,4 +1730,2 @@ struct cmd_list {
-                                                    struct client *,
-                                                    struct winlink *,
-                                                    const char *, const char *,
-                                                    u_int);
+   struct client *, struct winlink *, const char *,
+   const char *, u_int);
@@ -1819,0 +1758 @@ struct cmd_list {
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1824,2 +1763,2 @@ struct cmd_list {
-                                 struct environ *, struct termios *, int, u_int,
-                                 u_int, char **);
+       struct environ *, struct termios *, int, u_int, u_int,
+       char **);
@@ -1833,2 +1772,2 @@ struct cmd_list {
-  struct winlink *session_attach(struct session *, struct window *, int,
-                                 char **);
+struct winlink *session_attach(
+       struct session *, struct window *, int, char **);
@@ -1855,3 +1794 @@ struct cmd_list {
-  char *osdep_get_name(int, char *);
-  char *osdep_get_cwd(int);
-  struct event_base *osdep_event_init(void);
+char *get_proc_name(int, char *);
