diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/d785c37e-84612a81-b2a9f411/tmux.no_comments_mergebot.h b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/d785c37e-84612a81-b2a9f411/tmux.no_comments_merged.h
index 1f6fa9d..6daa153 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/d785c37e-84612a81-b2a9f411/tmux.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/d785c37e-84612a81-b2a9f411/tmux.no_comments_merged.h
@@ -6,6 +5,0 @@
-#include <sys/queue.h>
-#include <bitstring.h>
-#include <getopt.h>
-#include <imsg.h>
-#include <sys/tree.h>
-#include <stdint.h>
@@ -31,0 +26,2 @@ extern char **environ;
+#define fatal(msg) log_fatal("%s: %s", __func__, msg);
+#define fatalx(msg) log_fatalx("%s: %s", __func__, msg);
@@ -492,0 +489 @@ struct mode_key_binding {
+RB_HEAD(mode_key_tree, mode_key_binding);
@@ -513,2 +510 @@ struct mode_key_table {
-#define ALL_MOUSE_MODES \
-  (MODE_MOUSE_STANDARD | MODE_MOUSE_BUTTON | MODE_MOUSE_ANY)
+#define ALL_MOUSE_MODES (MODE_MOUSE_STANDARD|MODE_MOUSE_BUTTON|MODE_MOUSE_ANY)
@@ -520,0 +517,8 @@ struct utf8_data {
+#if defined(DEBUG) && \
+    ((defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \
+     (defined(__GNUC__) && __GNUC__ >= 3))
+#define GRID_DEBUG(gd,fmt,...) log_debug2("%s: (sx=%u, sy=%u, hsize=%u) " \
+    fmt, __func__, (gd)->sx, (gd)->sy, (gd)->hsize, ## __VA_ARGS__)
+#else
+#define GRID_DEBUG(...) 
+#endif
@@ -541,6 +545,3 @@ struct grid_cell {
-struct grid_cell {
-  u_char attr;
-  u_char flags;
-  u_char fg;
-  u_char bg;
-  u_char data;
+struct grid_utf8 {
+ u_char width;
+ u_char data[UTF8_SIZE];
@@ -548,6 +549,6 @@ struct grid_cell {
-struct grid_cell {
-  u_char attr;
-  u_char flags;
-  u_char fg;
-  u_char bg;
-  u_char data;
+struct grid_line {
+ u_int cellsize;
+ struct grid_cell *celldata;
+ u_int utf8size;
+ struct grid_utf8 *utf8data;
+ int flags;
@@ -589,0 +591 @@ struct job {
+LIST_HEAD(joblist, job);
@@ -615,0 +618,4 @@ struct screen_write_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -646 +652,2 @@ struct window_mode {
-  void (*mouse)(struct window_pane *, struct session *, struct mouse_event *);
+ void (*mouse)(struct window_pane *,
+      struct session *, struct mouse_event *);
@@ -697,4 +704,2 @@ struct window_pane {
-  RB_ENTRY(window_pane)
-  tree_entry;
-  RB_ENTRY(window_pane)
-  RB_ENTRY(window_pane)
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -701,0 +707,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -728,0 +736 @@ struct window {
+ARRAY_DECL(windows, struct window *);
@@ -745 +753,8 @@ struct winlink {
-enum layout_type { LAYOUT_LEFTRIGHT, LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE };
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
+enum layout_type {
+ LAYOUT_LEFTRIGHT,
+ LAYOUT_TOPBOTTOM,
+ LAYOUT_WINDOWPANE
+};
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -760,0 +776 @@ struct paste_buffer {
+ARRAY_DECL(paste_stack, struct paste_buffer *);
@@ -765,0 +782 @@ struct environ_entry {
+RB_HEAD(environ, environ_entry);
@@ -769,0 +787 @@ struct session_group {
+TAILQ_HEAD(session_groups, session_group);
@@ -787,2 +805 @@ struct session {
-  RB_ENTRY(session) entry;
-  RB_ENTRY(session) entry;
+ TAILQ_ENTRY(session) gentry;
@@ -790,0 +808,2 @@ struct session {
+RB_HEAD(sessions, session);
+ARRAY_DECL(sessionslist, struct session *);
@@ -817 +836 @@ struct tty_term {
-  LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -824,0 +844 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -881,0 +902 @@ struct status_out {
+RB_HEAD(status_out_tree, status_out);
@@ -937,0 +959 @@ struct client {
+ARRAY_DECL(clients, struct client *);
@@ -947,0 +970,9 @@ struct cmd_ctx {
+#if defined(__GNUC__) && __GNUC__ >= 3
+ void printflike2 (*print)(struct cmd_ctx *, const char *, ...);
+ void printflike2 (*info)(struct cmd_ctx *, const char *, ...);
+ void printflike2 (*error)(struct cmd_ctx *, const char *, ...);
+#else
+ void (*print)(struct cmd_ctx *, const char *, ...);
+ void (*info)(struct cmd_ctx *, const char *, ...);
+ void (*error)(struct cmd_ctx *, const char *, ...);
+#endif
@@ -956,0 +988 @@ struct cmd_list {
+};
@@ -984,0 +1017 @@ struct cmd_list {
+RB_HEAD(key_bindings, key_binding);
@@ -1007,0 +1041,2 @@ struct cmd_list {
+RB_HEAD(format_tree, format_entry);
+ARRAY_DECL(causelist, char *);
@@ -1042,0 +1078 @@ struct cmd_list {
+RB_PROTOTYPE(format_tree, format_entry, entry, format_cmp);
@@ -1045,2 +1081,2 @@ struct cmd_list {
-  void printflike3 format_add(struct format_tree *, const char *, const char *,
-                              ...);
+void printflike3 format_add(
+       struct format_tree *, const char *, const char *, ...);
@@ -1051 +1087,2 @@ struct cmd_list {
-  void format_winlink(struct format_tree *, struct session *, struct winlink *);
+void format_winlink(
+       struct format_tree *, struct session *, struct winlink *);
@@ -1061,0 +1099 @@ struct cmd_list {
+RB_PROTOTYPE(mode_key_tree, mode_key_binding, entry, mode_key_cmp);
@@ -1080,0 +1119 @@ struct cmd_list {
+RB_PROTOTYPE(options_tree, options_entry, entry, options_cmp);
@@ -1086,3 +1125,2 @@ struct cmd_list {
-  struct options_entry *printflike3 options_set_string(struct options *,
-                                                       const char *,
-                                                       const char *, ...);
+struct options_entry *printflike3 options_set_string(
+     struct options *, const char *, const char *, ...);
@@ -1090,2 +1128,2 @@ struct cmd_list {
-  struct options_entry *options_set_number(struct options *, const char *,
-                                           long long);
+struct options_entry *options_set_number(
+     struct options *, const char *, long long);
@@ -1096,5 +1134,6 @@ struct cmd_list {
-  void options_table_populate_tree(const struct options_table_entry *,
-                                   struct options *);
-  const char *options_table_print_entry(const struct options_table_entry *,
-                                        struct options_entry *);
-  int options_table_find(const char *, const struct options_table_entry **,
+void options_table_populate_tree(
+     const struct options_table_entry *, struct options *);
+const char *options_table_print_entry(
+     const struct options_table_entry *, struct options_entry *);
+int options_table_find(
+     const char *, const struct options_table_entry **,
@@ -1103,2 +1142,2 @@ struct cmd_list {
-  struct job *job_run(const char *, void (*)(struct job *), void (*)(void *),
-                      void *);
+struct job *job_run(
+     const char *, void (*)(struct job *), void (*)(void *), void *);
@@ -1107,0 +1147 @@ struct cmd_list {
+RB_PROTOTYPE(environ, environ_entry, entry, environ_cmp);
@@ -1129,2 +1169 @@ struct cmd_list {
-  void tty_putcode_ptr2(struct tty *, enum tty_code_code, const void *,
-                        const void *);
+void tty_putcode_ptr2(struct tty *, enum tty_code_code, const void *, const void *);
@@ -1147,2 +1186,2 @@ struct cmd_list {
-  void tty_write(void (*)(struct tty *, const struct tty_ctx *),
-                 struct tty_ctx *);
+void tty_write(
+     void (*)(struct tty *, const struct tty_ctx *), struct tty_ctx *);
@@ -1175,5 +1214,6 @@ struct cmd_list {
-  const char *tty_term_string2(struct tty_term *, enum tty_code_code, int, int);
-  const char *tty_term_ptr1(struct tty_term *, enum tty_code_code,
-                            const void *);
-  const char *tty_term_ptr2(struct tty_term *, enum tty_code_code, const void *,
-                            const void *);
+const char *tty_term_string2(
+       struct tty_term *, enum tty_code_code, int, int);
+const char *tty_term_ptr1(
+       struct tty_term *, enum tty_code_code, const void *);
+const char *tty_term_ptr2(
+       struct tty_term *, enum tty_code_code, const void *, const void *);
@@ -1203 +1243,2 @@ struct cmd_list {
-  long long args_strtonum(struct args *, u_char, long long, long long, char **);
+long long args_strtonum(
+      struct args *, u_char, long long, long long, char **);
@@ -1216,5 +1257,6 @@ struct cmd_list {
-  struct winlink *cmd_find_window(struct cmd_ctx *, const char *,
-                                  struct session **);
-  int cmd_find_index(struct cmd_ctx *, const char *, struct session **);
-  struct winlink *cmd_find_pane(struct cmd_ctx *, const char *,
-                                struct session **, struct window_pane **);
+struct winlink *cmd_find_window(
+       struct cmd_ctx *, const char *, struct session **);
+int cmd_find_index(
+       struct cmd_ctx *, const char *, struct session **);
+struct winlink *cmd_find_pane(struct cmd_ctx *,
+       const char *, struct session **, struct window_pane **);
@@ -1223,85 +1265 @@ struct cmd_list {
-  const struct cmd_entry *cmd_table[] = {&cmd_attach_session_entry,
-                                         &cmd_bind_key_entry,
-                                         &cmd_break_pane_entry,
-                                         &cmd_capture_pane_entry,
-                                         &cmd_choose_buffer_entry,
-                                         &cmd_choose_client_entry,
-                                         &cmd_choose_list_entry,
-                                         &cmd_choose_session_entry,
-                                         &cmd_choose_tree_entry,
-                                         &cmd_choose_window_entry,
-                                         &cmd_clear_history_entry,
-                                         &cmd_clock_mode_entry,
-                                         &cmd_command_prompt_entry,
-                                         &cmd_confirm_before_entry,
-                                         &cmd_copy_mode_entry,
-                                         &cmd_delete_buffer_entry,
-                                         &cmd_detach_client_entry,
-                                         &cmd_display_message_entry,
-                                         &cmd_display_panes_entry,
-                                         &cmd_find_window_entry,
-                                         &cmd_has_session_entry,
-                                         &cmd_if_shell_entry,
-                                         &cmd_join_pane_entry,
-                                         &cmd_kill_pane_entry,
-                                         &cmd_kill_server_entry,
-                                         &cmd_kill_session_entry,
-                                         &cmd_kill_window_entry,
-                                         &cmd_last_pane_entry,
-                                         &cmd_last_window_entry,
-                                         &cmd_link_window_entry,
-                                         &cmd_list_buffers_entry,
-                                         &cmd_list_clients_entry,
-                                         &cmd_list_commands_entry,
-                                         &cmd_list_keys_entry,
-                                         &cmd_list_panes_entry,
-                                         &cmd_list_sessions_entry,
-                                         &cmd_list_windows_entry,
-                                         &cmd_load_buffer_entry,
-                                         &cmd_lock_client_entry,
-                                         &cmd_lock_server_entry,
-                                         &cmd_lock_session_entry,
-                                         &cmd_move_pane_entry,
-                                         &cmd_move_window_entry,
-                                         &cmd_new_session_entry,
-                                         &cmd_new_window_entry,
-                                         &cmd_next_layout_entry,
-                                         &cmd_next_window_entry,
-                                         &cmd_paste_buffer_entry,
-                                         &cmd_pipe_pane_entry,
-                                         &cmd_previous_layout_entry,
-                                         &cmd_previous_window_entry,
-                                         &cmd_refresh_client_entry,
-                                         &cmd_rename_session_entry,
-                                         &cmd_rename_window_entry,
-                                         &cmd_resize_pane_entry,
-                                         &cmd_respawn_pane_entry,
-                                         &cmd_respawn_window_entry,
-                                         &cmd_rotate_window_entry,
-                                         &cmd_run_shell_entry,
-                                         &cmd_save_buffer_entry,
-                                         &cmd_select_layout_entry,
-                                         &cmd_select_pane_entry,
-                                         &cmd_select_window_entry,
-                                         &cmd_send_keys_entry,
-                                         &cmd_send_prefix_entry,
-                                         &cmd_server_info_entry,
-                                         &cmd_set_buffer_entry,
-                                         &cmd_set_environment_entry,
-                                         &cmd_set_option_entry,
-                                         &cmd_set_window_option_entry,
-                                         &cmd_show_buffer_entry,
-                                         &cmd_show_environment_entry,
-                                         &cmd_show_messages_entry,
-                                         &cmd_show_options_entry,
-                                         &cmd_show_window_options_entry,
-                                         &cmd_source_file_entry,
-                                         &cmd_split_window_entry,
-                                         &cmd_start_server_entry,
-                                         &cmd_suspend_client_entry,
-                                         &cmd_swap_pane_entry,
-                                         &cmd_swap_window_entry,
-                                         &cmd_switch_client_entry,
-                                         &cmd_unbind_key_entry,
-                                         &cmd_unlink_window_entry,
-                                         NULL};
+extern const struct cmd_entry *cmd_table[];
@@ -1401,0 +1360 @@ struct cmd_list {
+RB_PROTOTYPE(key_bindings, key_binding, entry, key_bindings_cmp);
@@ -1429,3 +1388,4 @@ struct cmd_list {
-  int server_write_client(struct client *, enum msgtype, const void *, size_t);
-  void server_write_session(struct session *, enum msgtype, const void *,
-                            size_t);
+int server_write_client(
+      struct client *, enum msgtype, const void *, size_t);
+void server_write_session(
+      struct session *, enum msgtype, const void *, size_t);
@@ -1446,2 +1406,2 @@ struct cmd_list {
-  int server_link_window(struct session *, struct winlink *, struct session *,
-                         int, int, int, char **);
+int server_link_window(struct session *,
+      struct winlink *, struct session *, int, int, int, char **);
@@ -1458,3 +1418,2 @@ struct cmd_list {
-  int server_set_stdin_callback(struct client *,
-                                void (*)(struct client *, int, void *), void *,
-                                char **);
+int server_set_stdin_callback(struct client *, void (*)(struct client *,
+      int, void *), void *, char **);
@@ -1461,0 +1421 @@ struct cmd_list {
+RB_PROTOTYPE(status_out_tree, status_out, entry, status_out_cmp);
@@ -1467,2 +1427,2 @@ struct cmd_list {
-  char *status_replace(struct client *, struct session *, struct winlink *,
-                       struct window_pane *, const char *, time_t, int);
+char *status_replace(struct client *, struct session *,
+      struct winlink *, struct window_pane *, const char *, time_t, int);
@@ -1473,2 +1433 @@ struct cmd_list {
-                         int (*)(void *, const char *), void (*)(void *),
-                         void *, int);
+      int (*)(void *, const char *), void (*)(void *), void *, int);
@@ -1516 +1475,2 @@ struct cmd_list {
-  void grid_duplicate_lines(struct grid *, u_int, struct grid *, u_int, u_int);
+void grid_duplicate_lines(
+      struct grid *, u_int, struct grid *, u_int, u_int);
@@ -1524,2 +1484,2 @@ struct cmd_list {
-  void grid_view_set_cell(struct grid *, u_int, u_int,
-                          const struct grid_cell *);
+void grid_view_set_cell(
+      struct grid *, u_int, u_int, const struct grid_cell *);
@@ -1528,2 +1488,2 @@ struct cmd_list {
-  void grid_view_set_utf8(struct grid *, u_int, u_int,
-                          const struct grid_utf8 *);
+void grid_view_set_utf8(
+      struct grid *, u_int, u_int, const struct grid_utf8 *);
@@ -1541,2 +1501,2 @@ struct cmd_list {
-  void screen_write_start(struct screen_write_ctx *, struct window_pane *,
-                          struct screen *);
+void screen_write_start(
+      struct screen_write_ctx *, struct window_pane *, struct screen *);
@@ -1546,3 +1506,2 @@ struct cmd_list {
-  void printflike5 screen_write_cnputs(struct screen_write_ctx *, ssize_t,
-                                       struct grid_cell *, int, const char *,
-                                       ...);
+void printflike5 screen_write_cnputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, ...);
@@ -1552,10 +1511,10 @@ struct cmd_list {
-  void printflike5 screen_write_nputs(struct screen_write_ctx *, ssize_t,
-                                      struct grid_cell *, int, const char *,
-                                      ...);
-  void screen_write_vnputs(struct screen_write_ctx *, ssize_t,
-                           struct grid_cell *, int, const char *, va_list);
-  void screen_write_parsestyle(struct grid_cell *, struct grid_cell *,
-                               const char *);
-  void screen_write_putc(struct screen_write_ctx *, struct grid_cell *, u_char);
-  void screen_write_copy(struct screen_write_ctx *, struct screen *, u_int,
-                         u_int, u_int, u_int);
+void printflike5 screen_write_nputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, ...);
+void screen_write_vnputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, int, const char *, va_list);
+void screen_write_parsestyle(
+      struct grid_cell *, struct grid_cell *, const char *);
+void screen_write_putc(
+      struct screen_write_ctx *, struct grid_cell *, u_char);
+void screen_write_copy(struct screen_write_ctx *,
+      struct screen *, u_int, u_int, u_int, u_int);
@@ -1592,2 +1551,2 @@ struct cmd_list {
-  void screen_write_cell(struct screen_write_ctx *, const struct grid_cell *,
-                         const struct utf8_data *);
+void screen_write_cell(struct screen_write_ctx *,
+      const struct grid_cell *, const struct utf8_data *);
@@ -1607,2 +1566,2 @@ struct cmd_list {
-  void screen_set_selection(struct screen *, u_int, u_int, u_int, u_int, u_int,
-                            struct grid_cell *);
+void screen_set_selection(struct screen *,
+      u_int, u_int, u_int, u_int, u_int, struct grid_cell *);
@@ -1613,0 +1573 @@ struct cmd_list {
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1614,0 +1575 @@ struct cmd_list {
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1649,2 +1610 @@ struct cmd_list {
-                                                     struct window_pane *,
-                                                     u_int);
+          struct window_pane *, u_int);
@@ -1658,3 +1618,3 @@ struct cmd_list {
-  int window_pane_spawn(struct window_pane *, const char *, const char *,
-                        const char *, struct environ *, struct termios *,
-                        char **);
+int window_pane_spawn(struct window_pane *, const char *,
+       const char *, const char *, struct environ *,
+       struct termios *, char **);
@@ -1662,3 +1622,6 @@ struct cmd_list {
-  void window_pane_alternate_on(struct window_pane *, struct grid_cell *);
-  void window_pane_alternate_off(struct window_pane *, struct grid_cell *);
-  int window_pane_set_mode(struct window_pane *, const struct window_mode *);
+void window_pane_alternate_on(
+       struct window_pane *, struct grid_cell *);
+void window_pane_alternate_off(
+       struct window_pane *, struct grid_cell *);
+int window_pane_set_mode(
+       struct window_pane *, const struct window_mode *);
@@ -1667,2 +1630,2 @@ struct cmd_list {
-  void window_pane_mouse(struct window_pane *, struct session *,
-                         struct mouse_event *);
+void window_pane_mouse(struct window_pane *,
+       struct session *, struct mouse_event *);
@@ -1670 +1633,2 @@ struct cmd_list {
-  char *window_pane_search(struct window_pane *, const char *, u_int *);
+char *window_pane_search(
+       struct window_pane *, const char *, u_int *);
@@ -1684,3 +1648,6 @@ struct cmd_list {
-  void layout_destroy_cell(struct layout_cell *, struct layout_cell **);
-  void layout_set_size(struct layout_cell *, u_int, u_int, u_int, u_int);
-  void layout_make_leaf(struct layout_cell *, struct window_pane *);
+void layout_destroy_cell(
+       struct layout_cell *, struct layout_cell **);
+void layout_set_size(
+       struct layout_cell *, u_int, u_int, u_int, u_int);
+void layout_make_leaf(
+       struct layout_cell *, struct window_pane *);
@@ -1691 +1658,2 @@ struct cmd_list {
-  void layout_resize_adjust(struct layout_cell *, enum layout_type, int);
+void layout_resize_adjust(
+       struct layout_cell *, enum layout_type, int);
@@ -1695,2 +1663,4 @@ struct cmd_list {
-  void layout_resize_pane(struct window_pane *, enum layout_type, int);
-  void layout_resize_pane_mouse(struct client *c, struct mouse_event *mouse);
+void layout_resize_pane(
+       struct window_pane *, enum layout_type, int);
+void layout_resize_pane_mouse(
+       struct client *c, struct mouse_event *mouse);
@@ -1698,2 +1668,2 @@ struct cmd_list {
-  struct layout_cell *layout_split_pane(struct window_pane *, enum layout_type,
-                                        int, int);
+struct layout_cell *layout_split_pane(
+       struct window_pane *, enum layout_type, int, int);
@@ -1720,3 +1690,4 @@ struct cmd_list {
-  void window_choose_add(struct window_pane *, struct window_choose_data *);
-  void window_choose_ready(struct window_pane *, u_int,
-                           void (*)(struct window_choose_data *),
+void window_choose_add(struct window_pane *,
+    struct window_choose_data *);
+void window_choose_ready(struct window_pane *,
+       u_int, void (*)(struct window_choose_data *),
@@ -1726,3 +1697,3 @@ struct cmd_list {
-  struct window_choose_data *window_choose_add_window(
-      struct window_pane *, struct cmd_ctx *, struct session *,
-      struct winlink *, const char *, char *, u_int);
+struct window_choose_data *window_choose_add_window(struct window_pane *,
+   struct cmd_ctx *, struct session *, struct winlink *,
+   const char *, char *, u_int);
@@ -1730,4 +1701,2 @@ struct cmd_list {
-                                                       struct cmd_ctx *,
-                                                       struct session *,
-                                                       const char *, char *,
-                                                       u_int);
+   struct cmd_ctx *, struct session *, const char *,
+   char *, u_int);
@@ -1735,4 +1704,2 @@ struct cmd_list {
-                                                    struct cmd_ctx *,
-                                                    struct winlink *,
-                                                    const char *, char *,
-                                                    u_int);
+   struct cmd_ctx *, struct winlink *, const char *,
+   char *, u_int);
@@ -1757,0 +1725 @@ struct cmd_list {
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1762,2 +1730,2 @@ struct cmd_list {
-                                 struct environ *, struct termios *, int, u_int,
-                                 u_int, char **);
+       struct environ *, struct termios *, int, u_int, u_int,
+       char **);
@@ -1769,4 +1737,4 @@ struct cmd_list {
-  struct winlink *session_new(struct session *, const char *, const char *,
-                              const char *, int, char **);
-  struct winlink *session_attach(struct session *, struct window *, int,
-                                 char **);
+struct winlink *session_new(struct session *,
+       const char *, const char *, const char *, int, char **);
+struct winlink *session_attach(
+       struct session *, struct window *, int, char **);
@@ -1791,0 +1760,3 @@ struct cmd_list {
+char *osdep_get_name(int, char *);
+char *osdep_get_cwd(pid_t);
+struct event_base *osdep_event_init(void);
@@ -1809,11 +1779,0 @@ struct cmd_list {
-  struct grid_utf8 {
-    u_char width;
-    u_char data[UTF8_SIZE];
-  } __packed;
-  struct grid_line {
-    u_int cellsize;
-    struct grid_cell *celldata;
-    u_int utf8size;
-    struct grid_utf8 *utf8data;
-    int flags;
-  } __packed;
