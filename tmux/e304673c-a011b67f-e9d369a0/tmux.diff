diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_mergebot.h b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_merged.h
index 108913e..dca1353 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_merged.h
@@ -32,0 +33 @@ struct tmuxproc;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -47,0 +49,10 @@ struct tmuxproc;
+#define KEYC_IS_MOUSE(key) (((key) & KEYC_MASK_KEY) >= KEYC_MOUSE && \
+    ((key) & KEYC_MASK_KEY) < KEYC_BSPACE)
+#define KEYC_MOUSE_KEY(name) \
+ KEYC_ ## name ## _PANE, \
+ KEYC_ ## name ## _STATUS, \
+ KEYC_ ## name ## _BORDER
+#define KEYC_MOUSE_STRING(name,s) \
+ { #s "Pane", KEYC_ ## name ## _PANE }, \
+ { #s "Status", KEYC_ ## name ## _STATUS }, \
+ { #s "Border", KEYC_ ## name ## _BORDER }
@@ -465,0 +477 @@ struct mode_key_binding {
+RB_HEAD(mode_key_tree, mode_key_binding);
@@ -497 +509,5 @@ struct utf8_data {
-enum utf8_state { UTF8_MORE, UTF8_DONE, UTF8_ERROR };
+enum utf8_state {
+ UTF8_MORE,
+ UTF8_DONE,
+ UTF8_ERROR
+};
@@ -522,2 +538,2 @@ struct grid_cell {
-    u_char bg;
-    struct grid_cell_rgb bg_rgb;
+  u_char fg;
+  struct grid_cell_rgb fg_rgb;
@@ -567 +583,5 @@ struct options_entry {
-  enum { OPTIONS_STRING, OPTIONS_NUMBER, OPTIONS_STYLE } type;
+ enum {
+  OPTIONS_STRING,
+  OPTIONS_NUMBER,
+  OPTIONS_STYLE
+ } type;
@@ -574 +594,5 @@ struct job {
-  enum { JOB_RUNNING, JOB_DEAD, JOB_CLOSED } state;
+ enum {
+  JOB_RUNNING,
+  JOB_DEAD,
+  JOB_CLOSED
+ } state;
@@ -584,0 +609 @@ struct job {
+LIST_HEAD(joblist, job);
@@ -616,0 +642,4 @@ struct screen_write_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -621,2 +650,2 @@ struct window_mode {
-  void (*key)(struct window_pane *, struct client *, struct session *, key_code,
-              struct mouse_event *);
+ void (*key)(struct window_pane *, struct client *, struct session *,
+      key_code, struct mouse_event *);
@@ -680 +709,2 @@ struct window_pane {
-  RB_ENTRY(window_pane) RB_ENTRY(window_pane) tree_entry;
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -681,0 +712,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -710,0 +743 @@ struct window {
+RB_HEAD(windows, window);
@@ -725 +758,8 @@ struct winlink {
-enum layout_type { LAYOUT_LEFTRIGHT, LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE };
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
+enum layout_type {
+ LAYOUT_LEFTRIGHT,
+ LAYOUT_TOPBOTTOM,
+ LAYOUT_WINDOWPANE
+};
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -745,0 +786 @@ struct session_group {
+TAILQ_HEAD(session_groups, session_group);
@@ -771,0 +813 @@ struct session {
+RB_HEAD(sessions, session);
@@ -779,0 +822,4 @@ struct session {
+#define MOUSE_BUTTONS(b) ((b) & MOUSE_MASK_BUTTONS)
+#define MOUSE_WHEEL(b) ((b) & MOUSE_MASK_WHEEL)
+#define MOUSE_DRAG(b) ((b) & MOUSE_MASK_DRAG)
+#define MOUSE_RELEASE(b) (((b) & MOUSE_MASK_BUTTONS) == 3)
@@ -807 +853 @@ struct tty_term {
-  LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -813,0 +860 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -843,2 +890,4 @@ struct tty {
-  void (*mouse_drag_update)(struct client *, struct mouse_event *);
-  void (*mouse_drag_release)(struct client *, struct mouse_event *);
+ void (*mouse_drag_update)(struct client *,
+       struct mouse_event *);
+ void (*mouse_drag_release)(struct client *,
+       struct mouse_event *);
@@ -933,0 +983 @@ struct client {
+TAILQ_HEAD(clients, client);
@@ -934,0 +985 @@ struct args_entry;
+RB_HEAD(args_tree, args_entry);
@@ -977,0 +1029 @@ struct cmd_list {
+};
@@ -988,0 +1041 @@ struct cmd_list {
+TAILQ_HEAD(cmd_q_items, cmd_q_item);
@@ -1048,0 +1102 @@ struct cmd_list {
+RB_HEAD(key_bindings, key_binding);
@@ -1054,0 +1109 @@ struct cmd_list {
+RB_HEAD(key_tables, key_table);
@@ -1139,2 +1194,2 @@ struct cmd_list {
-  void printflike(3, 4)
-      format_add(struct format_tree *, const char *, const char *, ...);
+void printflike(3, 4) format_add(struct format_tree *, const char *,
+       const char *, ...);
@@ -1143,2 +1198,2 @@ struct cmd_list {
-  void format_defaults(struct format_tree *, struct client *, struct session *,
-                       struct winlink *, struct window_pane *);
+void format_defaults(struct format_tree *, struct client *,
+       struct session *, struct winlink *, struct window_pane *);
@@ -1146 +1201,2 @@ struct cmd_list {
-  void format_defaults_pane(struct format_tree *, struct window_pane *);
+void format_defaults_pane(struct format_tree *,
+       struct window_pane *);
@@ -1170,0 +1227 @@ struct cmd_list {
+RB_PROTOTYPE(mode_key_tree, mode_key_binding, entry, mode_key_cmp);
@@ -1198,2 +1255,2 @@ struct cmd_list {
-  struct options_entry *printflike(3, 4)
-      options_set_string(struct options *, const char *, const char *, ...);
+struct options_entry *printflike(3, 4) options_set_string(struct options *,
+     const char *, const char *, ...);
@@ -1223,2 +1280,2 @@ struct cmd_list {
-  void printflike(3, 4)
-      environ_set(struct environ *, const char *, const char *, ...);
+void printflike(3, 4) environ_set(struct environ *, const char *, const char *,
+     ...);
@@ -1293 +1350,2 @@ struct cmd_list {
-  const char *tty_term_string2(struct tty_term *, enum tty_code_code, int, int);
+const char *tty_term_string2(struct tty_term *, enum tty_code_code, int,
+       int);
@@ -1296,2 +1354,2 @@ struct cmd_list {
-  const char *tty_term_ptr2(struct tty_term *, enum tty_code_code, const void *,
-                            const void *);
+const char *tty_term_ptr2(struct tty_term *, enum tty_code_code,
+       const void *, const void *);
@@ -1305,0 +1364 @@ struct cmd_list {
+RB_PROTOTYPE(args_tree, args_entry, entry, args_cmp);
@@ -1313,4 +1372,7 @@ struct cmd_list {
-  long long args_strtonum(struct args *, u_char, long long, long long, char **);
-  int cmd_find_current(struct cmd_find_state *, struct cmd_q *, int);
-  int cmd_find_target(struct cmd_find_state *, struct cmd_find_state *,
-                      struct cmd_q *, const char *, enum cmd_find_type, int);
+long long args_strtonum(struct args *, u_char, long long, long long,
+       char **);
+int cmd_find_current(struct cmd_find_state *, struct cmd_q *,
+       int);
+int cmd_find_target(struct cmd_find_state *,
+       struct cmd_find_state *, struct cmd_q *, const char *,
+       enum cmd_find_type, int);
@@ -1318 +1380,2 @@ struct cmd_list {
-  void cmd_find_clear_state(struct cmd_find_state *, struct cmd_q *, int);
+void cmd_find_clear_state(struct cmd_find_state *, struct cmd_q *,
+       int);
@@ -1320 +1383,2 @@ struct cmd_list {
-  void cmd_find_copy_state(struct cmd_find_state *, struct cmd_find_state *);
+void cmd_find_copy_state(struct cmd_find_state *,
+       struct cmd_find_state *);
@@ -1322,3 +1386,4 @@ struct cmd_list {
-  int cmd_find_from_session(struct cmd_find_state *, struct session *);
-  int cmd_find_from_winlink(struct cmd_find_state *, struct session *,
-                            struct winlink *);
+int cmd_find_from_session(struct cmd_find_state *,
+       struct session *);
+int cmd_find_from_winlink(struct cmd_find_state *,
+       struct session *, struct winlink *);
@@ -1326 +1391,2 @@ struct cmd_list {
-  int cmd_find_from_pane(struct cmd_find_state *, struct window_pane *);
+int cmd_find_from_pane(struct cmd_find_state *,
+       struct window_pane *);
@@ -1333 +1399,2 @@ struct cmd_list {
-  int cmd_prepare_state(struct cmd *, struct cmd_q *, struct cmd_q *);
+int cmd_prepare_state(struct cmd *, struct cmd_q *,
+       struct cmd_q *);
@@ -1335,2 +1402,2 @@ struct cmd_list {
-  int cmd_mouse_at(struct window_pane *, struct mouse_event *, u_int *, u_int *,
-                   int);
+int cmd_mouse_at(struct window_pane *, struct mouse_event *,
+       u_int *, u_int *, int);
@@ -1352,2 +1419,4 @@ struct cmd_list {
-  void cmdq_run(struct cmd_q *, struct cmd_list *, struct mouse_event *);
-  void cmdq_append(struct cmd_q *, struct cmd_list *, struct mouse_event *);
+void cmdq_run(struct cmd_q *, struct cmd_list *,
+       struct mouse_event *);
+void cmdq_append(struct cmd_q *, struct cmd_list *,
+       struct mouse_event *);
@@ -1356,2 +1425,2 @@ struct cmd_list {
-  int cmd_string_parse(const char *, struct cmd_list **, const char *, u_int,
-                       char **);
+int cmd_string_parse(const char *, struct cmd_list **, const char *,
+     u_int, char **);
@@ -1359,0 +1429,2 @@ struct cmd_list {
+RB_PROTOTYPE(key_bindings, key_binding, entry, key_bindings_cmp);
+RB_PROTOTYPE(key_tables, key_table, entry, key_table_cmp);
@@ -1414,2 +1485,2 @@ struct cmd_list {
-  int server_link_window(struct session *, struct winlink *, struct session *,
-                         int, int, int, char **);
+int server_link_window(struct session *,
+      struct winlink *, struct session *, int, int, int, char **);
@@ -1423,3 +1494,2 @@ struct cmd_list {
-  int server_set_stdin_callback(struct client *,
-                                void (*)(struct client *, int, void *), void *,
-                                char **);
+int server_set_stdin_callback(struct client *, void (*)(struct client *,
+      int, void *), void *, char **);
@@ -1436,2 +1506 @@ struct cmd_list {
-                         int (*)(void *, const char *), void (*)(void *),
-                         void *, int);
+      int (*)(void *, const char *), void (*)(void *), void *, int);
@@ -1479 +1548,2 @@ struct cmd_list {
-  void grid_duplicate_lines(struct grid *, u_int, struct grid *, u_int, u_int);
+void grid_duplicate_lines(struct grid *, u_int, struct grid *, u_int,
+      u_int);
@@ -1500,3 +1570,2 @@ struct cmd_list {
-  void printflike(4, 5)
-      screen_write_cnputs(struct screen_write_ctx *, ssize_t,
-                          struct grid_cell *, const char *, ...);
+void printflike(4, 5) screen_write_cnputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, const char *, ...);
@@ -1504,6 +1573,4 @@ struct cmd_list {
-  void printflike(3, 4)
-      screen_write_puts(struct screen_write_ctx *, struct grid_cell *,
-                        const char *, ...);
-  void printflike(4, 5)
-      screen_write_nputs(struct screen_write_ctx *, ssize_t, struct grid_cell *,
-                         const char *, ...);
+void printflike(3, 4) screen_write_puts(struct screen_write_ctx *,
+      struct grid_cell *, const char *, ...);
+void printflike(4, 5) screen_write_nputs(struct screen_write_ctx *,
+      ssize_t, struct grid_cell *, const char *, ...);
@@ -1512 +1579,2 @@ struct cmd_list {
-  void screen_write_putc(struct screen_write_ctx *, struct grid_cell *, u_char);
+void screen_write_putc(struct screen_write_ctx *, struct grid_cell *,
+      u_char);
@@ -1553,2 +1621,2 @@ struct cmd_list {
-  void screen_set_selection(struct screen *, u_int, u_int, u_int, u_int, u_int,
-                            struct grid_cell *);
+void screen_set_selection(struct screen *,
+      u_int, u_int, u_int, u_int, u_int, struct grid_cell *);
@@ -1560,0 +1629 @@ struct cmd_list {
+RB_PROTOTYPE(windows, window, entry, window_cmp);
@@ -1561,0 +1631 @@ struct cmd_list {
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1562,0 +1633 @@ struct cmd_list {
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1591 +1662,2 @@ struct cmd_list {
-  void window_redraw_active_switch(struct window *, struct window_pane *);
+void window_redraw_active_switch(struct window *,
+       struct window_pane *);
@@ -1602,2 +1674 @@ struct cmd_list {
-                                                     struct window_pane *,
-                                                     u_int);
+   struct window_pane *, u_int);
@@ -1611,2 +1682,2 @@ struct cmd_list {
-  int window_pane_spawn(struct window_pane *, int, char **, const char *,
-                        const char *, const char *, struct environ *,
+int window_pane_spawn(struct window_pane *, int, char **,
+       const char *, const char *, const char *, struct environ *,
@@ -1615,3 +1686,6 @@ struct cmd_list {
-  void window_pane_alternate_on(struct window_pane *, struct grid_cell *, int);
-  void window_pane_alternate_off(struct window_pane *, struct grid_cell *, int);
-  int window_pane_set_mode(struct window_pane *, const struct window_mode *);
+void window_pane_alternate_on(struct window_pane *,
+       struct grid_cell *, int);
+void window_pane_alternate_off(struct window_pane *,
+       struct grid_cell *, int);
+int window_pane_set_mode(struct window_pane *,
+       const struct window_mode *);
@@ -1619,2 +1693,2 @@ struct cmd_list {
-  void window_pane_key(struct window_pane *, struct client *, struct session *,
-                       key_code, struct mouse_event *);
+void window_pane_key(struct window_pane *, struct client *,
+       struct session *, key_code, struct mouse_event *);
@@ -1622 +1696,2 @@ struct cmd_list {
-  char *window_pane_search(struct window_pane *, const char *, u_int *);
+char *window_pane_search(struct window_pane *, const char *,
+       u_int *);
@@ -1636,2 +1711,4 @@ struct cmd_list {
-  void layout_destroy_cell(struct layout_cell *, struct layout_cell **);
-  void layout_set_size(struct layout_cell *, u_int, u_int, u_int, u_int);
+void layout_destroy_cell(struct layout_cell *,
+       struct layout_cell **);
+void layout_set_size(struct layout_cell *, u_int, u_int, u_int,
+       u_int);
@@ -1643 +1720,2 @@ struct cmd_list {
-  void layout_resize_adjust(struct layout_cell *, enum layout_type, int);
+void layout_resize_adjust(struct layout_cell *, enum layout_type,
+       int);
@@ -1647,2 +1725,4 @@ struct cmd_list {
-  void layout_resize_pane(struct window_pane *, enum layout_type, int);
-  void layout_resize_pane_to(struct window_pane *, enum layout_type, u_int);
+void layout_resize_pane(struct window_pane *, enum layout_type,
+       int);
+void layout_resize_pane_to(struct window_pane *, enum layout_type,
+       u_int);
@@ -1664,2 +1744 @@ struct cmd_list {
-  void printflike(2, 3)
-      window_copy_add(struct window_pane *, const char *, ...);
+void printflike(2, 3) window_copy_add(struct window_pane *, const char *, ...);
@@ -1671,5 +1750,6 @@ struct cmd_list {
-  void window_choose_add(struct window_pane *, struct window_choose_data *);
-  void window_choose_ready(struct window_pane *, u_int,
-                           void (*)(struct window_choose_data *));
-  struct window_choose_data *window_choose_data_create(int, struct client *,
-                                                       struct session *);
+void window_choose_add(struct window_pane *,
+    struct window_choose_data *);
+void window_choose_ready(struct window_pane *,
+       u_int, void (*)(struct window_choose_data *));
+struct window_choose_data *window_choose_data_create (int,
+       struct client *, struct session *);
@@ -1678,2 +1758,2 @@ struct cmd_list {
-  struct window_choose_data *window_choose_add_window(
-      struct window_pane *, struct client *, struct session *, struct winlink *,
+struct window_choose_data *window_choose_add_window(struct window_pane *,
+   struct client *, struct session *, struct winlink *,
@@ -1682,3 +1762 @@ struct cmd_list {
-                                                       struct client *,
-                                                       struct session *,
-                                                       const char *,
+   struct client *, struct session *, const char *,
@@ -1710,0 +1789 @@ struct cmd_list {
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1716,2 +1795,2 @@ struct cmd_list {
-                                 const char *, struct environ *,
-                                 struct termios *, int, u_int, u_int, char **);
+       const char *, struct environ *, struct termios *, int,
+       u_int, u_int, char **);
@@ -1749 +1827,0 @@ struct cmd_list {
-<<<<<<< HEAD
@@ -1751,5 +1828,0 @@ struct cmd_list {
-|||||||
-  u_int utf8_combine(const struct utf8_data *);
-=======
-  wchar_t utf8_combine(const struct utf8_data *);
->>>>>>> a011b67f56448b38e251418f0af67ff12411a0a0
@@ -1775 +1848,2 @@ struct cmd_list {
-  int style_parse(const struct grid_cell *, struct grid_cell *, const char *);
+int style_parse(const struct grid_cell *,
+       struct grid_cell *, const char *);
@@ -1778,4 +1852,8 @@ struct cmd_list {
-  void style_update_old(struct options *, const char *, struct grid_cell *);
-  void style_apply(struct grid_cell *, struct options *, const char *);
-  void style_apply_update(struct grid_cell *, struct options *, const char *);
-  int style_equal(const struct grid_cell *, const struct grid_cell *);
+void style_update_old(struct options *, const char *,
+       struct grid_cell *);
+void style_apply(struct grid_cell *, struct options *,
+       const char *);
+void style_apply_update(struct grid_cell *, struct options *,
+       const char *);
+int style_equal(const struct grid_cell *,
+       const struct grid_cell *);
