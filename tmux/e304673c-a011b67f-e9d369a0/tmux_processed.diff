--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_mergebot.h
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/tmux.no_comments_merged.h
@@ -32,0 +33 @@ struct tmuxproc;
+#define printflike(a,b) __attribute__ ((format (printf, a, b)))
@@ -47,0 +49,10 @@ struct tmuxproc;
+#define KEYC_IS_MOUSE(key) (((key) & KEYC_MASK_KEY) >= KEYC_MOUSE && \
+    ((key) & KEYC_MASK_KEY) < KEYC_BSPACE)
+#define KEYC_MOUSE_KEY(name) \
+ KEYC_ ## name ## _PANE, \
+ KEYC_ ## name ## _STATUS, \
+ KEYC_ ## name ## _BORDER
+#define KEYC_MOUSE_STRING(name,s) \
+ { #s "Pane", KEYC_ ## name ## _PANE }, \
+ { #s "Status", KEYC_ ## name ## _STATUS }, \
+ { #s "Border", KEYC_ ## name ## _BORDER }
@@ -465,0 +477 @@ struct mode_key_binding {
+RB_HEAD(mode_key_tree, mode_key_binding);
@@ -522,2 +538,2 @@ struct grid_cell {
-    u_char bg;
-    struct grid_cell_rgb bg_rgb;
+  u_char fg;
+  struct grid_cell_rgb fg_rgb;
@@ -584,0 +609 @@ struct job {
+LIST_HEAD(joblist, job);
@@ -616,0 +642,4 @@ struct screen_write_ctx {
+#define screen_size_x(s) ((s)->grid->sx)
+#define screen_size_y(s) ((s)->grid->sy)
+#define screen_hsize(s) ((s)->grid->hsize)
+#define screen_hlimit(s) ((s)->grid->hlimit)
@@ -680 +709,2 @@ struct window_pane {
-  RB_ENTRY(window_pane) RB_ENTRY(window_pane) tree_entry;
+ TAILQ_ENTRY(window_pane) entry;
+ RB_ENTRY(window_pane) tree_entry;
@@ -681,0 +712,2 @@ struct window_pane {
+TAILQ_HEAD(window_panes, window_pane);
+RB_HEAD(window_pane_tree, window_pane);
@@ -710,0 +743 @@ struct window {
+RB_HEAD(windows, window);
@@ -725 +758,8 @@ struct winlink {
-enum layout_type { LAYOUT_LEFTRIGHT, LAYOUT_TOPBOTTOM, LAYOUT_WINDOWPANE };
+RB_HEAD(winlinks, winlink);
+TAILQ_HEAD(winlink_stack, winlink);
+enum layout_type {
+ LAYOUT_LEFTRIGHT,
+ LAYOUT_TOPBOTTOM,
+ LAYOUT_WINDOWPANE
+};
+TAILQ_HEAD(layout_cells, layout_cell);
@@ -745,0 +786 @@ struct session_group {
+TAILQ_HEAD(session_groups, session_group);
@@ -771,0 +813 @@ struct session {
+RB_HEAD(sessions, session);
@@ -779,0 +822,4 @@ struct session {
+#define MOUSE_BUTTONS(b) ((b) & MOUSE_MASK_BUTTONS)
+#define MOUSE_WHEEL(b) ((b) & MOUSE_MASK_WHEEL)
+#define MOUSE_DRAG(b) ((b) & MOUSE_MASK_DRAG)
+#define MOUSE_RELEASE(b) (((b) & MOUSE_MASK_BUTTONS) == 3)
@@ -807 +853 @@ struct tty_term {
-  LIST_ENTRY(tty_term) entry;
+ char acs[UCHAR_MAX + 1][2];
@@ -813,0 +860 @@ struct tty_term {
+LIST_HEAD(tty_terms, tty_term);
@@ -933,0 +983 @@ struct client {
+TAILQ_HEAD(clients, client);
@@ -934,0 +985 @@ struct args_entry;
+RB_HEAD(args_tree, args_entry);
@@ -977,0 +1029 @@ struct cmd_list {
+};
@@ -988,0 +1041 @@ struct cmd_list {
+TAILQ_HEAD(cmd_q_items, cmd_q_item);
@@ -1048,0 +1102 @@ struct cmd_list {
+RB_HEAD(key_bindings, key_binding);
@@ -1054,0 +1109 @@ struct cmd_list {
+RB_HEAD(key_tables, key_table);
@@ -1170,0 +1227 @@ struct cmd_list {
+RB_PROTOTYPE(mode_key_tree, mode_key_binding, entry, mode_key_cmp);
@@ -1305,0 +1364 @@ struct cmd_list {
+RB_PROTOTYPE(args_tree, args_entry, entry, args_cmp);
@@ -1359,0 +1429,2 @@ struct cmd_list {
+RB_PROTOTYPE(key_bindings, key_binding, entry, key_bindings_cmp);
+RB_PROTOTYPE(key_tables, key_table, entry, key_table_cmp);
@@ -1560,0 +1629 @@ struct cmd_list {
+RB_PROTOTYPE(windows, window, entry, window_cmp);
@@ -1561,0 +1631 @@ struct cmd_list {
+RB_PROTOTYPE(winlinks, winlink, entry, winlink_cmp);
@@ -1562,0 +1633 @@ struct cmd_list {
+RB_PROTOTYPE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
@@ -1710,0 +1789 @@ struct cmd_list {
+RB_PROTOTYPE(sessions, session, entry, session_cmp);
@@ -1749 +1827,0 @@ struct cmd_list {
-<<<<<<< HEAD
@@ -1751,5 +1828,0 @@ struct cmd_list {
-|||||||
-  u_int utf8_combine(const struct utf8_data *);
-=======
-  wchar_t utf8_combine(const struct utf8_data *);
->>>>>>> a011b67f56448b38e251418f0af67ff12411a0a0
