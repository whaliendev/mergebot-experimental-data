--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/utf8.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e304673c-a011b67f-e9d369a0/utf8.no_comments_merged.c
@@ -4 +3,0 @@
-#include <wchar.h>
@@ -53 +71,0 @@ static intutf8_width(wchar_t wc) {
-<<<<<<< HEAD
@@ -55,7 +73,2 @@ enum utf8_state
-|||||||
-u_int
-=======
-wchar_t
->>>>>>> a011b67f56448b38e251418f0af67ff12411a0a0
-utf8_combine(const struct utf8_data *ud, wchar_t *wc) {
-<<<<<<< HEAD
+utf8_combine(const struct utf8_data *ud, wchar_t *wc)
+{
@@ -71,22 +83,0 @@ utf8_combine(const struct utf8_data *ud, wchar_t *wc) {
-|||||||
-  u_int uc;
-  uc = 0xfffd;
-  switch (ud->size) {
-    case 1:
-      uc = ud->data[0];
-      break;
-    case 2:
-      uc = ud->data[1] & 0x3f;
-      uc |= (ud->data[0] & 0x1f) << 6;
-      break;
-    case 3:
-      uc = ud->data[2] & 0x3f;
-      uc |= (ud->data[1] & 0x3f) << 6;
-      uc |= (ud->data[0] & 0xf) << 12;
-      break;
-    case 4:
-      uc = ud->data[3] & 0x3f;
-      uc |= (ud->data[2] & 0x3f) << 6;
-      uc |= (ud->data[1] & 0x3f) << 12;
-      uc |= (ud->data[0] & 0x7) << 18;
-      break;
@@ -94,35 +85,5 @@ utf8_combine(const struct utf8_data *ud, wchar_t *wc) {
-  return (uc);
-=======
-  wchar_t wc;
-  if (mbtowc(&wc, ud->data, ud->size) <= 0) return (0xfffd);
-  return (wc);
->>>>>>> a011b67f56448b38e251418f0af67ff12411a0a0
-}
-enum utf8_stateutf8_split(u_int uc, wchar_t wc, struct utf8_data *ud) {
-<<<<<<< HEAD
-  char s[MB_LEN_MAX]; int slen;
-  slen = wctomb(s, wc);
-  if (slen <= 0 || slen > (int)sizeof ud->data)
-|||||||
-  if (uc < 0x7f){ud->size = 1; ud->data[0] = uc;}
-else if (uc < 0x7ff) {
-  ud->size = 2;
-  ud->data[0] = 0xc0 | ((uc >> 6) & 0x1f);
-  ud->data[1] = 0x80 | (uc & 0x3f);
-}
-else if (uc < 0xffff) {
-  ud->size = 3;
-  ud->data[0] = 0xe0 | ((uc >> 12) & 0xf);
-  ud->data[1] = 0x80 | ((uc >> 6) & 0x3f);
-  ud->data[2] = 0x80 | (uc & 0x3f);
-}
-else if (uc < 0x1fffff) {
-  ud->size = 4;
-  ud->data[0] = 0xf0 | ((uc >> 18) & 0x7);
-  ud->data[1] = 0x80 | ((uc >> 12) & 0x3f);
-  ud->data[2] = 0x80 | ((uc >> 6) & 0x3f);
-  ud->data[3] = 0x80 | (uc & 0x3f);
-}
-else
-=======
-  char s[MB_CUR_MAX]; int slen;
+enum utf8_state
+utf8_split(wchar_t wc, struct utf8_data *ud)
+{
+ char s[MB_LEN_MAX];
+ int slen;
@@ -131 +91,0 @@ else
->>>>>>> a011b67f56448b38e251418f0af67ff12411a0a0
