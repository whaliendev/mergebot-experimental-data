diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e588ddb5-d518067b-c190c732/format.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e588ddb5-d518067b-c190c732/format.no_comments_merged.c
index d87ff0f..6b4b414 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e588ddb5-d518067b-c190c732/format.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e588ddb5-d518067b-c190c732/format.no_comments_merged.c
@@ -15 +15,4 @@ void format_window_pane_tabs(struct format_tree *, struct window_pane *);
-int format_cmp(struct format_entry *fe1, struct format_entry *fe2) {
+RB_GENERATE(format_tree, format_entry, entry, format_cmp);
+int
+format_cmp(struct format_entry *fe1, struct format_entry *fe2)
+{
@@ -74 +77,3 @@ const char *format_lower[] = {
-struct format_tree *format_create(void) {
+struct format_tree *
+format_create(void)
+{
@@ -81 +86,2 @@ struct format_tree *format_create(void) {
-    if ((ptr = strchr(host, '.')) != NULL) *ptr = '\0';
+  if ((ptr = strchr(host, '.')) != NULL)
+   *ptr = '\0';
@@ -86 +92,3 @@ struct format_tree *format_create(void) {
-void format_free(struct format_tree *ft) {
+void
+format_free(struct format_tree *ft)
+{
@@ -99 +107,3 @@ void format_free(struct format_tree *ft) {
-void format_add(struct format_tree *ft, const char *key, const char *fmt, ...) {
+void
+format_add(struct format_tree *ft, const char *key, const char *fmt, ...)
+{
@@ -116 +126,3 @@ void format_add(struct format_tree *ft, const char *key, const char *fmt, ...) {
-const char *format_find(struct format_tree *ft, const char *key) {
+const char *
+format_find(struct format_tree *ft, const char *key)
+{
@@ -120 +132,2 @@ const char *format_find(struct format_tree *ft, const char *key) {
-  if (fe == NULL) return (NULL);
+ if (fe == NULL)
+  return (NULL);
@@ -123,2 +136,4 @@ const char *format_find(struct format_tree *ft, const char *key) {
-intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-                  char **buf, size_t *len, size_t *off) {
+int
+format_replace(struct format_tree *ft, const char *key, size_t keylen,
+    char **buf, size_t *len, size_t *off)
+{
@@ -138 +153,2 @@ intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-          if (errno == ERANGE && limit == ULONG_MAX) goto fail;
+    if (errno == ERANGE && limit == ULONG_MAX)
+     goto fail;
@@ -146 +162,2 @@ intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-    if (*copy != ':') goto fail;
+  if (*copy != ':')
+   goto fail;
@@ -151 +168,2 @@ intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-    if (ptr == NULL) goto fail;
+  if (ptr == NULL)
+   goto fail;
@@ -157 +175,2 @@ intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-      if (ptr == NULL) goto fail;
+   if (ptr == NULL)
+    goto fail;
@@ -161 +180,2 @@ intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-      if (ptr == NULL) goto fail;
+   if (ptr == NULL)
+    goto fail;
@@ -168 +188,2 @@ intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-    if (value == NULL) value = "";
+  if (value == NULL)
+   value = "";
@@ -172 +193,2 @@ intformat_replace(struct format_tree *ft, const char *key, size_t keylen,
-  if (valuelen > limit) valuelen = limit;
+ if (valuelen > limit)
+  valuelen = limit;
@@ -186 +208,3 @@ fail:
-char *format_expand(struct format_tree *ft, const char *fmt) {
+char *
+format_expand(struct format_tree *ft, const char *fmt)
+{
@@ -209,2 +233,4 @@ char *format_expand(struct format_tree *ft, const char *fmt) {
-          if (*ptr == '{') brackets++;
-          if (*ptr == '}' && --brackets == 0) break;
+    if (*ptr == '{')
+     brackets++;
+    if (*ptr == '}' && --brackets == 0)
+     break;
@@ -212 +238,2 @@ char *format_expand(struct format_tree *ft, const char *fmt) {
-        if (*ptr != '}' || brackets != 0) break;
+   if (*ptr != '}' || brackets != 0)
+    break;
@@ -214 +241,2 @@ char *format_expand(struct format_tree *ft, const char *fmt) {
-        if (format_replace(ft, fmt, n, &buf, &len, &off) != 0) break;
+   if (format_replace(ft, fmt, n, &buf, &len, &off) != 0)
+    break;
@@ -233 +261,2 @@ char *format_expand(struct format_tree *ft, const char *fmt) {
-        if (format_replace(ft, s, n, &buf, &len, &off) != 0) break;
+   if (format_replace(ft, s, n, &buf, &len, &off) != 0)
+    break;
@@ -241 +270,3 @@ char *format_expand(struct format_tree *ft, const char *fmt) {
-char *format_get_command(struct window_pane *wp) {
+char *
+format_get_command(struct window_pane *wp)
+{
@@ -256 +287,3 @@ char *format_get_command(struct window_pane *wp) {
-void format_session(struct format_tree *ft, struct session *s) {
+void
+format_session(struct format_tree *ft, struct session *s)
+{
@@ -279 +312,3 @@ void format_session(struct format_tree *ft, struct session *s) {
-void format_client(struct format_tree *ft, struct client *c) {
+void
+format_client(struct format_tree *ft, struct client *c)
+{
@@ -285 +320,2 @@ void format_client(struct format_tree *ft, struct client *c) {
-  if (c->tty.path != NULL) format_add(ft, "client_tty", "%s", c->tty.path);
+ if (c->tty.path != NULL)
+  format_add(ft, "client_tty", "%s", c->tty.path);
@@ -308 +344,2 @@ void format_client(struct format_tree *ft, struct client *c) {
-  if (s != NULL) format_add(ft, "client_session", "%s", s->name);
+ if (s != NULL)
+  format_add(ft, "client_session", "%s", s->name);
@@ -313 +350,3 @@ void format_client(struct format_tree *ft, struct client *c) {
-voidformat_window(struct format_tree *ft, struct window *w) {
+void
+format_window(struct format_tree *ft, struct window *w)
+{
@@ -324,2 +363,3 @@ voidformat_window(struct format_tree *ft, struct window *w) {
-void format_winlink(struct format_tree *ft, struct session *s,
-                    struct winlink *wl) {
+void
+format_winlink(struct format_tree *ft, struct session *s, struct winlink *wl)
+{
@@ -333,2 +373,4 @@ void format_winlink(struct format_tree *ft, struct session *s,
-  format_add(ft, "window_bell_flag", "%u", !!(wl->flags & WINLINK_BELL));
-  format_add(ft, "window_content_flag", "%u", !!(wl->flags & WINLINK_CONTENT));
+ format_add(ft, "window_bell_flag", "%u",
+     !!(wl->flags & WINLINK_BELL));
+ format_add(ft, "window_content_flag", "%u",
+     !!(wl->flags & WINLINK_CONTENT));
@@ -337 +379,2 @@ void format_winlink(struct format_tree *ft, struct session *s,
-  format_add(ft, "window_silence_flag", "%u", !!(wl->flags & WINLINK_SILENCE));
+ format_add(ft, "window_silence_flag", "%u",
+     !!(wl->flags & WINLINK_SILENCE));
@@ -340 +383,3 @@ void format_winlink(struct format_tree *ft, struct session *s,
-void format_window_pane_tabs(struct format_tree *ft, struct window_pane *wp) {
+void
+format_window_pane_tabs(struct format_tree *ft, struct window_pane *wp)
+{
@@ -345,2 +390,4 @@ void format_window_pane_tabs(struct format_tree *ft, struct window_pane *wp) {
-    if (!bit_test(wp->base.tabs, i)) continue;
-    if (EVBUFFER_LENGTH(buffer) > 0) evbuffer_add(buffer, ",", 1);
+  if (!bit_test(wp->base.tabs, i))
+   continue;
+  if (EVBUFFER_LENGTH(buffer) > 0)
+   evbuffer_add(buffer, ",", 1);
@@ -353 +400,3 @@ void format_window_pane_tabs(struct format_tree *ft, struct window_pane *wp) {
-void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
+void
+format_window_pane(struct format_tree *ft, struct window_pane *wp)
+{
@@ -357,0 +407 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
+ const char *cmd;
@@ -368 +418,2 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
-  if (window_pane_index(wp, &idx) != 0) fatalx("index not found");
+ if (window_pane_index(wp, &idx) != 0)
+  fatalx("index not found");
@@ -379 +430,2 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
-  if (wp->tty != NULL) format_add(ft, "pane_tty", "%s", wp->tty);
+ if (wp->tty != NULL)
+  format_add(ft, "pane_tty", "%s", wp->tty);
@@ -381,7 +433,2 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
-  if (wp->cmd != NULL) format_add(ft, "pane_start_command", "%s", wp->cmd);
-<<<<<<< HEAD
-  if ((cwd = osdep_get_cwd(wp->fd)) != NULL)
-    format_add(ft, "pane_current_path", "%s", cwd);
-  if ((cmd = format_get_command(wp)) != NULL) {
-|||||||
-  if (wp->cwd != NULL) format_add(ft, "pane_start_path", "%s", wp->cwd);
+ if (wp->cmd != NULL)
+  format_add(ft, "pane_start_command", "%s", wp->cmd);
@@ -390,2 +436,0 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
-  if ((cmd = osdep_get_name(wp->fd, wp->tty)) != NULL) {
-=======
@@ -393 +437,0 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
->>>>>>> d518067be6220757a9101ca27fff14d5f599c410
@@ -406,5 +450,10 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
-  format_add(ft, "cursor_flag", "%d", !!(wp->base.mode & MODE_CURSOR));
-  format_add(ft, "insert_flag", "%d", !!(wp->base.mode & MODE_INSERT));
-  format_add(ft, "keypad_cursor_flag", "%d", !!(wp->base.mode & MODE_KCURSOR));
-  format_add(ft, "keypad_flag", "%d", !!(wp->base.mode & MODE_KKEYPAD));
-  format_add(ft, "wrap_flag", "%d", !!(wp->base.mode & MODE_WRAP));
+ format_add(ft, "cursor_flag", "%d",
+     !!(wp->base.mode & MODE_CURSOR));
+ format_add(ft, "insert_flag", "%d",
+     !!(wp->base.mode & MODE_INSERT));
+ format_add(ft, "keypad_cursor_flag", "%d",
+     !!(wp->base.mode & MODE_KCURSOR));
+ format_add(ft, "keypad_flag", "%d",
+     !!(wp->base.mode & MODE_KKEYPAD));
+ format_add(ft, "wrap_flag", "%d",
+     !!(wp->base.mode & MODE_WRAP));
@@ -415,2 +464,4 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
-  format_add(ft, "mouse_any_flag", "%d", !!(wp->base.mode & MODE_MOUSE_ANY));
-  format_add(ft, "mouse_utf8_flag", "%d", !!(wp->base.mode & MODE_MOUSE_UTF8));
+ format_add(ft, "mouse_any_flag", "%d",
+     !!(wp->base.mode & MODE_MOUSE_ANY));
+ format_add(ft, "mouse_utf8_flag", "%d",
+     !!(wp->base.mode & MODE_MOUSE_UTF8));
@@ -419 +470,3 @@ void format_window_pane(struct format_tree *ft, struct window_pane *wp) {
-void format_paste_buffer(struct format_tree *ft, struct paste_buffer *pb) {
+void
+format_paste_buffer(struct format_tree *ft, struct paste_buffer *pb)
+{
