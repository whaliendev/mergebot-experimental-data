--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e588ddb5-d518067b-c190c732/osdep-openbsd.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/e588ddb5-d518067b-c190c732/osdep-openbsd.no_comments_merged.c
@@ -18,15 +18,32 @@ struct kinfo_proc *cmp_procs(struct kinfo_proc *, struct kinfo_proc *);
-char *get_proc_name(int, char *);
-struct kinfo_proc *cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2) {
-  if (is_runnable(p1) && !is_runnable(p2)) return (p1);
-  if (!is_runnable(p1) && is_runnable(p2)) return (p2);
-  if (is_stopped(p1) && !is_stopped(p2)) return (p1);
-  if (!is_stopped(p1) && is_stopped(p2)) return (p2);
-  if (p1->p_estcpu > p2->p_estcpu) return (p1);
-  if (p1->p_estcpu < p2->p_estcpu) return (p2);
-  if (p1->p_slptime < p2->p_slptime) return (p1);
-  if (p1->p_slptime > p2->p_slptime) return (p2);
-  if ((p1->p_flag & P_SINTR) && !(p2->p_flag & P_SINTR)) return (p1);
-  if (!(p1->p_flag & P_SINTR) && (p2->p_flag & P_SINTR)) return (p2);
-  if (strcmp(p1->p_comm, p2->p_comm) < 0) return (p1);
-  if (strcmp(p1->p_comm, p2->p_comm) > 0) return (p2);
-  if (p1->p_pid > p2->p_pid) return (p1);
+char *osdep_get_name(int, char *);
+char *osdep_get_cwd(int);
+struct event_base *osdep_event_init(void);
+struct kinfo_proc *
+cmp_procs(struct kinfo_proc *p1, struct kinfo_proc *p2)
+{
+ if (is_runnable(p1) && !is_runnable(p2))
+  return (p1);
+ if (!is_runnable(p1) && is_runnable(p2))
+  return (p2);
+ if (is_stopped(p1) && !is_stopped(p2))
+  return (p1);
+ if (!is_stopped(p1) && is_stopped(p2))
+  return (p2);
+ if (p1->p_estcpu > p2->p_estcpu)
+  return (p1);
+ if (p1->p_estcpu < p2->p_estcpu)
+  return (p2);
+ if (p1->p_slptime < p2->p_slptime)
+  return (p1);
+ if (p1->p_slptime > p2->p_slptime)
+  return (p2);
+ if ((p1->p_flag & P_SINTR) && !(p2->p_flag & P_SINTR))
+  return (p1);
+ if (!(p1->p_flag & P_SINTR) && (p2->p_flag & P_SINTR))
+  return (p2);
+ if (strcmp(p1->p_comm, p2->p_comm) < 0)
+  return (p1);
+ if (strcmp(p1->p_comm, p2->p_comm) > 0)
+  return (p2);
+ if (p1->p_pid > p2->p_pid)
+  return (p1);
@@ -71,0 +98,17 @@ error:
+char *
+osdep_get_cwd(int fd)
+{
+ int name[] = { CTL_KERN, KERN_PROC_CWD, 0 };
+ static char path[MAXPATHLEN];
+ size_t pathlen = sizeof path;
+ if ((name[2] = tcgetpgrp(fd)) == -1)
+  return (NULL);
+ if (sysctl(name, 3, path, &pathlen, NULL, 0) != 0)
+  return (NULL);
+ return (path);
+}
+struct event_base *
+osdep_event_init(void)
+{
+ return (event_init());
+}
