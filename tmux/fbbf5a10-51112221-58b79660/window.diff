diff --git a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/fbbf5a10-51112221-58b79660/window.no_comments_mergebot.c b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/fbbf5a10-51112221-58b79660/window.no_comments_merged.c
index c8b0420..2d3fe93 100644
--- a/home/whalien/codebase/cpp/mergebot/eva/output/tmux/fbbf5a10-51112221-58b79660/window.no_comments_mergebot.c
+++ b/home/whalien/codebase/cpp/mergebot/eva/output/tmux/fbbf5a10-51112221-58b79660/window.no_comments_merged.c
@@ -13,2 +12,0 @@
-#include <util.h>
-#include <vis.h>
@@ -30 +28,6 @@ static struct window_pane *window_pane_choose_best(struct window_pane **,
-int window_cmp(struct window *w1, struct window *w2) {
+RB_GENERATE(windows, window, entry, window_cmp);
+RB_GENERATE(winlinks, winlink, entry, winlink_cmp);
+RB_GENERATE(window_pane_tree, window_pane, tree_entry, window_pane_cmp);
+int
+window_cmp(struct window *w1, struct window *w2)
+{
@@ -33 +36,3 @@ int window_cmp(struct window *w1, struct window *w2) {
-int winlink_cmp(struct winlink *wl1, struct winlink *wl2) {
+int
+winlink_cmp(struct winlink *wl1, struct winlink *wl2)
+{
@@ -36 +41,3 @@ int winlink_cmp(struct winlink *wl1, struct winlink *wl2) {
-int window_pane_cmp(struct window_pane *wp1, struct window_pane *wp2) {
+int
+window_pane_cmp(struct window_pane *wp1, struct window_pane *wp2)
+{
@@ -39 +46,3 @@ int window_pane_cmp(struct window_pane *wp1, struct window_pane *wp2) {
-struct winlink *winlink_find_by_window(struct winlinks *wwl, struct window *w) {
+struct winlink *
+winlink_find_by_window(struct winlinks *wwl, struct window *w)
+{
@@ -42 +51,2 @@ struct winlink *winlink_find_by_window(struct winlinks *wwl, struct window *w) {
-    if (wl->window == w) return (wl);
+  if (wl->window == w)
+   return (wl);
@@ -46 +56,3 @@ struct winlink *winlink_find_by_window(struct winlinks *wwl, struct window *w) {
-struct winlink *winlink_find_by_index(struct winlinks *wwl, int idx) {
+struct winlink *
+winlink_find_by_index(struct winlinks *wwl, int idx)
+{
@@ -48 +60,2 @@ struct winlink *winlink_find_by_index(struct winlinks *wwl, int idx) {
-  if (idx < 0) fatalx("bad index");
+ if (idx < 0)
+  fatalx("bad index");
@@ -52 +65,3 @@ struct winlink *winlink_find_by_index(struct winlinks *wwl, int idx) {
-struct winlink *winlink_find_by_window_id(struct winlinks *wwl, u_int id) {
+struct winlink *
+winlink_find_by_window_id(struct winlinks *wwl, u_int id)
+{
@@ -55 +70,2 @@ struct winlink *winlink_find_by_window_id(struct winlinks *wwl, u_int id) {
-    if (wl->window->id == id) return (wl);
+  if (wl->window->id == id)
+   return (wl);
@@ -59 +75,3 @@ struct winlink *winlink_find_by_window_id(struct winlinks *wwl, u_int id) {
-static int winlink_next_index(struct winlinks *wwl, int idx) {
+static int
+winlink_next_index(struct winlinks *wwl, int idx)
+{
@@ -63 +81,2 @@ static int winlink_next_index(struct winlinks *wwl, int idx) {
-    if (winlink_find_by_index(wwl, i) == NULL) return (i);
+  if (winlink_find_by_index(wwl, i) == NULL)
+   return (i);
@@ -71 +90,3 @@ static int winlink_next_index(struct winlinks *wwl, int idx) {
-u_int winlink_count(struct winlinks *wwl) {
+u_int
+winlink_count(struct winlinks *wwl)
+{
@@ -79 +100,3 @@ u_int winlink_count(struct winlinks *wwl) {
-struct winlink *winlink_add(struct winlinks *wwl, int idx) {
+struct winlink *
+winlink_add(struct winlinks *wwl, int idx)
+{
@@ -82 +105,2 @@ struct winlink *winlink_add(struct winlinks *wwl, int idx) {
-    if ((idx = winlink_next_index(wwl, -idx - 1)) == -1) return (NULL);
+  if ((idx = winlink_next_index(wwl, -idx - 1)) == -1)
+   return (NULL);
@@ -90 +114,3 @@ struct winlink *winlink_add(struct winlinks *wwl, int idx) {
-void winlink_set_window(struct winlink *wl, struct window *w) {
+void
+winlink_set_window(struct winlink *wl, struct window *w)
+{
@@ -99 +125,3 @@ void winlink_set_window(struct winlink *wl, struct window *w) {
-void winlink_remove(struct winlinks *wwl, struct winlink *wl) {
+void
+winlink_remove(struct winlinks *wwl, struct winlink *wl)
+{
@@ -109 +137,3 @@ void winlink_remove(struct winlinks *wwl, struct winlink *wl) {
-struct winlink *winlink_next(struct winlink *wl) {
+struct winlink *
+winlink_next(struct winlink *wl)
+{
@@ -112 +142,3 @@ struct winlink *winlink_next(struct winlink *wl) {
-struct winlink *winlink_previous(struct winlink *wl) {
+struct winlink *
+winlink_previous(struct winlink *wl)
+{
@@ -115,2 +147,3 @@ struct winlink *winlink_previous(struct winlink *wl) {
-struct winlink *winlink_next_by_number(struct winlink *wl, struct session *s,
-                                       int n) {
+struct winlink *
+winlink_next_by_number(struct winlink *wl, struct session *s, int n)
+{
@@ -123,2 +156,3 @@ struct winlink *winlink_next_by_number(struct winlink *wl, struct session *s,
-struct winlink *winlink_previous_by_number(struct winlink *wl,
-                                           struct session *s, int n) {
+struct winlink *
+winlink_previous_by_number(struct winlink *wl, struct session *s, int n)
+{
@@ -131,2 +165,5 @@ struct winlink *winlink_previous_by_number(struct winlink *wl,
-void winlink_stack_push(struct winlink_stack *stack, struct winlink *wl) {
-  if (wl == NULL) return;
+void
+winlink_stack_push(struct winlink_stack *stack, struct winlink *wl)
+{
+ if (wl == NULL)
+  return;
@@ -136 +173,3 @@ void winlink_stack_push(struct winlink_stack *stack, struct winlink *wl) {
-void winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl) {
+void
+winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl)
+{
@@ -138 +177,2 @@ void winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl) {
-  if (wl == NULL) return;
+ if (wl == NULL)
+  return;
@@ -146 +186,3 @@ void winlink_stack_remove(struct winlink_stack *stack, struct winlink *wl) {
-struct window *window_find_by_id_str(const char *s) {
+struct window *
+window_find_by_id_str(const char *s)
+{
@@ -149 +191,2 @@ struct window *window_find_by_id_str(const char *s) {
-  if (*s != '@') return (NULL);
+ if (*s != '@')
+  return (NULL);
@@ -151 +194,2 @@ struct window *window_find_by_id_str(const char *s) {
-  if (errstr != NULL) return (NULL);
+ if (errstr != NULL)
+  return (NULL);
@@ -154 +198,3 @@ struct window *window_find_by_id_str(const char *s) {
-struct window *window_find_by_id(u_int id) {
+struct window *
+window_find_by_id(u_int id)
+{
@@ -159 +205,3 @@ struct window *window_find_by_id(u_int id) {
-void window_update_activity(struct window *w) {
+void
+window_update_activity(struct window *w)
+{
@@ -163 +211,3 @@ void window_update_activity(struct window *w) {
-struct window *window_create(u_int sx, u_int sy) {
+struct window *
+window_create(u_int sx, u_int sy)
+{
@@ -182,5 +232,5 @@ struct window *window_create(u_int sx, u_int sy) {
-struct window *window_create_spawn(const char *name, int argc, char **argv,
-                                   const char *path, const char *shell,
-                                   const char *cwd, struct environ *env,
-                                   struct termios *tio, u_int sx, u_int sy,
-                                   u_int hlimit, char **cause) {
+struct window *
+window_create_spawn(const char *name, int argc, char **argv, const char *path,
+    const char *shell, const char *cwd, struct environ *env,
+    struct termios *tio, u_int sx, u_int sy, u_int hlimit, char **cause)
+{
@@ -192,2 +242,2 @@ struct window *window_create_spawn(const char *name, int argc, char **argv,
-  if (window_pane_spawn(wp, argc, argv, path, shell, cwd, env, tio, cause) !=
-      0) {
+ if (window_pane_spawn(wp, argc, argv, path, shell, cwd,
+     env, tio, cause) != 0) {
@@ -206 +256,3 @@ struct window *window_create_spawn(const char *name, int argc, char **argv,
-static void window_destroy(struct window *w) {
+static void
+window_destroy(struct window *w)
+{
@@ -209,2 +261,4 @@ static void window_destroy(struct window *w) {
-  if (w->layout_root != NULL) layout_free_cell(w->layout_root);
-  if (w->saved_layout_root != NULL) layout_free_cell(w->saved_layout_root);
+ if (w->layout_root != NULL)
+  layout_free_cell(w->layout_root);
+ if (w->saved_layout_root != NULL)
+  layout_free_cell(w->saved_layout_root);
@@ -212,2 +266,4 @@ static void window_destroy(struct window *w) {
-  if (event_initialized(&w->name_event)) evtimer_del(&w->name_event);
-  if (event_initialized(&w->alerts_timer)) evtimer_del(&w->alerts_timer);
+ if (event_initialized(&w->name_event))
+  evtimer_del(&w->name_event);
+ if (event_initialized(&w->alerts_timer))
+  evtimer_del(&w->alerts_timer);
@@ -219 +275,3 @@ static void window_destroy(struct window *w) {
-int window_pane_destroy_ready(struct window_pane *wp) {
+int
+window_pane_destroy_ready(struct window_pane *wp)
+{
@@ -222,2 +280,4 @@ int window_pane_destroy_ready(struct window_pane *wp) {
-    if (EVBUFFER_LENGTH(wp->pipe_event->output) != 0) return (0);
-    if (ioctl(wp->fd, FIONREAD, &n) != -1 && n > 0) return (0);
+  if (EVBUFFER_LENGTH(wp->pipe_event->output) != 0)
+   return (0);
+  if (ioctl(wp->fd, FIONREAD, &n) != -1 && n > 0)
+   return (0);
@@ -225 +285,2 @@ int window_pane_destroy_ready(struct window_pane *wp) {
-  if (~wp->flags & PANE_EXITED) return (0);
+ if (~wp->flags & PANE_EXITED)
+  return (0);
@@ -228 +289,3 @@ int window_pane_destroy_ready(struct window_pane *wp) {
-void window_add_ref(struct window *w, const char *from) {
+void
+window_add_ref(struct window *w, const char *from)
+{
@@ -232 +295,3 @@ void window_add_ref(struct window *w, const char *from) {
-void window_remove_ref(struct window *w, const char *from) {
+void
+window_remove_ref(struct window *w, const char *from)
+{
@@ -235 +300,2 @@ void window_remove_ref(struct window *w, const char *from) {
-  if (w->references == 0) window_destroy(w);
+ if (w->references == 0)
+  window_destroy(w);
@@ -237 +303,3 @@ void window_remove_ref(struct window *w, const char *from) {
-void window_set_name(struct window *w, const char *new_name) {
+void
+window_set_name(struct window *w, const char *new_name)
+{
@@ -242 +310,3 @@ void window_set_name(struct window *w, const char *new_name) {
-void window_resize(struct window *w, u_int sx, u_int sy) {
+void
+window_resize(struct window *w, u_int sx, u_int sy)
+{
@@ -246 +316,3 @@ void window_resize(struct window *w, u_int sx, u_int sy) {
-int window_has_pane(struct window *w, struct window_pane *wp) {
+int
+window_has_pane(struct window *w, struct window_pane *wp)
+{
@@ -249 +321,2 @@ int window_has_pane(struct window *w, struct window_pane *wp) {
-    if (wp1 == wp) return (1);
+  if (wp1 == wp)
+   return (1);
@@ -253 +326,3 @@ int window_has_pane(struct window *w, struct window_pane *wp) {
-int window_set_active_pane(struct window *w, struct window_pane *wp) {
+int
+window_set_active_pane(struct window *w, struct window_pane *wp)
+{
@@ -255 +330,2 @@ int window_set_active_pane(struct window *w, struct window_pane *wp) {
-  if (wp == w->active) return (0);
+ if (wp == w->active)
+  return (0);
@@ -260 +336,2 @@ int window_set_active_pane(struct window *w, struct window_pane *wp) {
-    if (w->active == NULL) w->active = TAILQ_LAST(&w->panes, window_panes);
+  if (w->active == NULL)
+   w->active = TAILQ_LAST(&w->panes, window_panes);
@@ -271 +348,3 @@ int window_set_active_pane(struct window *w, struct window_pane *wp) {
-void window_redraw_active_switch(struct window *w, struct window_pane *wp) {
+void
+window_redraw_active_switch(struct window *w, struct window_pane *wp)
+{
@@ -273 +352,2 @@ void window_redraw_active_switch(struct window *w, struct window_pane *wp) {
-  if (wp == w->active) return;
+ if (wp == w->active)
+  return;
@@ -275 +355,2 @@ void window_redraw_active_switch(struct window *w, struct window_pane *wp) {
-  if (style_equal(gc, options_get_style(w->options, "window-style"))) return;
+ if (style_equal(gc, options_get_style(w->options, "window-style")))
+  return;
@@ -285 +366,3 @@ void window_redraw_active_switch(struct window *w, struct window_pane *wp) {
-struct window_pane *window_get_active_at(struct window *w, u_int x, u_int y) {
+struct window_pane *
+window_get_active_at(struct window *w, u_int x, u_int y)
+{
@@ -288,3 +371,6 @@ struct window_pane *window_get_active_at(struct window *w, u_int x, u_int y) {
-    if (!window_pane_visible(wp)) continue;
-    if (x < wp->xoff || x > wp->xoff + wp->sx) continue;
-    if (y < wp->yoff || y > wp->yoff + wp->sy) continue;
+  if (!window_pane_visible(wp))
+   continue;
+  if (x < wp->xoff || x > wp->xoff + wp->sx)
+   continue;
+  if (y < wp->yoff || y > wp->yoff + wp->sy)
+   continue;
@@ -295 +381,3 @@ struct window_pane *window_get_active_at(struct window *w, u_int x, u_int y) {
-struct window_pane *window_find_string(struct window *w, const char *s) {
+struct window_pane *
+window_find_string(struct window *w, const char *s)
+{
@@ -323 +411,3 @@ struct window_pane *window_find_string(struct window *w, const char *s) {
-int window_zoom(struct window_pane *wp) {
+int
+window_zoom(struct window_pane *wp)
+{
@@ -326,4 +416,8 @@ int window_zoom(struct window_pane *wp) {
-  if (w->flags & WINDOW_ZOOMED) return (-1);
-  if (!window_pane_visible(wp)) return (-1);
-  if (window_count_panes(w) == 1) return (-1);
-  if (w->active != wp) window_set_active_pane(w, wp);
+ if (w->flags & WINDOW_ZOOMED)
+  return (-1);
+ if (!window_pane_visible(wp))
+  return (-1);
+ if (window_count_panes(w) == 1)
+  return (-1);
+ if (w->active != wp)
+  window_set_active_pane(w, wp);
@@ -340 +434,3 @@ int window_zoom(struct window_pane *wp) {
-int window_unzoom(struct window *w) {
+int
+window_unzoom(struct window *w)
+{
@@ -342 +438,2 @@ int window_unzoom(struct window *w) {
-  if (!(w->flags & WINDOW_ZOOMED)) return (-1);
+ if (!(w->flags & WINDOW_ZOOMED))
+  return (-1);
@@ -355,2 +452,4 @@ int window_unzoom(struct window *w) {
-struct window_pane *window_add_pane(struct window *w, struct window_pane *other,
-                                    int before, u_int hlimit) {
+struct window_pane *
+window_add_pane(struct window *w, struct window_pane *other, int before,
+    u_int hlimit)
+{
@@ -358 +457,2 @@ struct window_pane *window_add_pane(struct window *w, struct window_pane *other,
-  if (other == NULL) other = w->active;
+ if (other == NULL)
+  other = w->active;
@@ -372,2 +472,5 @@ struct window_pane *window_add_pane(struct window *w, struct window_pane *other,
-void window_lost_pane(struct window *w, struct window_pane *wp) {
-  if (wp == marked_pane.wp) server_clear_marked();
+void
+window_lost_pane(struct window *w, struct window_pane *wp)
+{
+ if (wp == marked_pane.wp)
+  server_clear_marked();
@@ -379 +482,2 @@ void window_lost_pane(struct window *w, struct window_pane *wp) {
-      if (w->active == NULL) w->active = TAILQ_NEXT(wp, entry);
+   if (w->active == NULL)
+    w->active = TAILQ_NEXT(wp, entry);
@@ -388 +492,3 @@ void window_lost_pane(struct window *w, struct window_pane *wp) {
-void window_remove_pane(struct window *w, struct window_pane *wp) {
+void
+window_remove_pane(struct window *w, struct window_pane *wp)
+{
@@ -393 +499,3 @@ void window_remove_pane(struct window *w, struct window_pane *wp) {
-struct window_pane *window_pane_at_index(struct window *w, u_int idx) {
+struct window_pane *
+window_pane_at_index(struct window *w, u_int idx)
+{
@@ -398 +506,2 @@ struct window_pane *window_pane_at_index(struct window *w, u_int idx) {
-    if (n == idx) return (wp);
+  if (n == idx)
+   return (wp);
@@ -403,3 +512,3 @@ struct window_pane *window_pane_at_index(struct window *w, u_int idx) {
-struct window_pane *window_pane_next_by_number(struct window *w,
-                                               struct window_pane *wp,
-                                               u_int n) {
+struct window_pane *
+window_pane_next_by_number(struct window *w, struct window_pane *wp, u_int n)
+{
@@ -407 +516,2 @@ struct window_pane *window_pane_next_by_number(struct window *w,
-    if ((wp = TAILQ_NEXT(wp, entry)) == NULL) wp = TAILQ_FIRST(&w->panes);
+  if ((wp = TAILQ_NEXT(wp, entry)) == NULL)
+   wp = TAILQ_FIRST(&w->panes);
@@ -411,3 +521,4 @@ struct window_pane *window_pane_next_by_number(struct window *w,
-struct window_pane *window_pane_previous_by_number(struct window *w,
-                                                   struct window_pane *wp,
-                                                   u_int n) {
+struct window_pane *
+window_pane_previous_by_number(struct window *w, struct window_pane *wp,
+    u_int n)
+{
@@ -420 +531,3 @@ struct window_pane *window_pane_previous_by_number(struct window *w,
-int window_pane_index(struct window_pane *wp, u_int *i) {
+int
+window_pane_index(struct window_pane *wp, u_int *i)
+{
@@ -432 +545,3 @@ int window_pane_index(struct window_pane *wp, u_int *i) {
-u_int window_count_panes(struct window *w) {
+u_int
+window_count_panes(struct window *w)
+{
@@ -440 +555,3 @@ u_int window_count_panes(struct window *w) {
-void window_destroy_panes(struct window *w) {
+void
+window_destroy_panes(struct window *w)
+{
@@ -448 +565,3 @@ void window_destroy_panes(struct window *w) {
-const char *window_printable_flags(struct winlink *wl) {
+const char *
+window_printable_flags(struct winlink *wl)
+{
@@ -453,7 +572,14 @@ const char *window_printable_flags(struct winlink *wl) {
-  if (wl->flags & WINLINK_ACTIVITY) flags[pos++] = '#';
-  if (wl->flags & WINLINK_BELL) flags[pos++] = '!';
-  if (wl->flags & WINLINK_SILENCE) flags[pos++] = '~';
-  if (wl == s->curw) flags[pos++] = '*';
-  if (wl == TAILQ_FIRST(&s->lastw)) flags[pos++] = '-';
-  if (server_check_marked() && wl == marked_pane.wl) flags[pos++] = 'M';
-  if (wl->window->flags & WINDOW_ZOOMED) flags[pos++] = 'Z';
+ if (wl->flags & WINLINK_ACTIVITY)
+  flags[pos++] = '#';
+ if (wl->flags & WINLINK_BELL)
+  flags[pos++] = '!';
+ if (wl->flags & WINLINK_SILENCE)
+  flags[pos++] = '~';
+ if (wl == s->curw)
+  flags[pos++] = '*';
+ if (wl == TAILQ_FIRST(&s->lastw))
+  flags[pos++] = '-';
+ if (server_check_marked() && wl == marked_pane.wl)
+  flags[pos++] = 'M';
+ if (wl->window->flags & WINDOW_ZOOMED)
+  flags[pos++] = 'Z';
@@ -463 +589,3 @@ const char *window_printable_flags(struct winlink *wl) {
-struct window_pane *window_pane_find_by_id_str(const char *s) {
+struct window_pane *
+window_pane_find_by_id_str(const char *s)
+{
@@ -466 +594,2 @@ struct window_pane *window_pane_find_by_id_str(const char *s) {
-  if (*s != '%') return (NULL);
+ if (*s != '%')
+  return (NULL);
@@ -468 +597,2 @@ struct window_pane *window_pane_find_by_id_str(const char *s) {
-  if (errstr != NULL) return (NULL);
+ if (errstr != NULL)
+  return (NULL);
@@ -471 +601,3 @@ struct window_pane *window_pane_find_by_id_str(const char *s) {
-struct window_pane *window_pane_find_by_id(u_int id) {
+struct window_pane *
+window_pane_find_by_id(u_int id)
+{
@@ -476,2 +608,3 @@ struct window_pane *window_pane_find_by_id(u_int id) {
-static struct window_pane *window_pane_create(struct window *w, u_int sx,
-                                              u_int sy, u_int hlimit) {
+static struct window_pane *
+window_pane_create(struct window *w, u_int sx, u_int sy, u_int hlimit)
+{
@@ -505 +638,2 @@ static struct window_pane *window_pane_create(struct window *w, u_int sx,
-  if (gethostname(host, sizeof host) == 0) screen_set_title(&wp->base, host);
+ if (gethostname(host, sizeof host) == 0)
+  screen_set_title(&wp->base, host);
@@ -509 +643,3 @@ static struct window_pane *window_pane_create(struct window *w, u_int sx,
-static void window_pane_destroy(struct window_pane *wp) {
+static void
+window_pane_destroy(struct window_pane *wp)
+{
@@ -521 +657,2 @@ static void window_pane_destroy(struct window_pane *wp) {
-  if (wp->saved_grid != NULL) grid_destroy(wp->saved_grid);
+ if (wp->saved_grid != NULL)
+  grid_destroy(wp->saved_grid);
@@ -526 +663,2 @@ static void window_pane_destroy(struct window_pane *wp) {
-  if (event_initialized(&wp->resize_timer)) event_del(&wp->resize_timer);
+ if (event_initialized(&wp->resize_timer))
+  event_del(&wp->resize_timer);
@@ -534,3 +672,5 @@ static void window_pane_destroy(struct window_pane *wp) {
-int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
-                      const char *path, const char *shell, const char *cwd,
-                      struct environ *env, struct termios *tio, char **cause) {
+int
+window_pane_spawn(struct window_pane *wp, int argc, char **argv,
+    const char *path, const char *shell, const char *cwd, struct environ *env,
+    struct termios *tio, char **cause)
+{
@@ -584 +724,2 @@ int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
-        if ((home = find_home()) == NULL || chdir(home) != 0) chdir("/");
+   if ((home = find_home()) == NULL || chdir(home) != 0)
+    chdir("/");
@@ -586,2 +727,4 @@ int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
-      if (tcgetattr(STDIN_FILENO, &tio2) != 0) fatal("tcgetattr failed");
-      if (tio != NULL) memcpy(tio2.c_cc, tio->c_cc, sizeof tio2.c_cc);
+  if (tcgetattr(STDIN_FILENO, &tio2) != 0)
+   fatal("tcgetattr failed");
+  if (tio != NULL)
+   memcpy(tio2.c_cc, tio->c_cc, sizeof tio2.c_cc);
@@ -596 +739,2 @@ int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
-      if (path != NULL) environ_set(env, "PATH", "%s", path);
+  if (path != NULL)
+   environ_set(env, "PATH", "%s", path);
@@ -622 +765,0 @@ int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
-<<<<<<< HEAD
@@ -628,2 +770,0 @@ int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
-  |||||||
-=======
@@ -631 +771,0 @@ int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
->>>>>>> 51112221eeb31ced907f0dfcf077582996c20c07
@@ -640,2 +780,3 @@ int window_pane_spawn(struct window_pane *wp, int argc, char **argv,
-static void window_pane_read_callback(__unused struct bufferevent *bufev,
-                                      void *data) {
+static void
+window_pane_read_callback(__unused struct bufferevent *bufev, void *data)
+{
@@ -656,2 +797,4 @@ static void window_pane_read_callback(__unused struct bufferevent *bufev,
-static void window_pane_error_callback(__unused struct bufferevent *bufev,
-                                       __unused short what, void *data) {
+static void
+window_pane_error_callback(__unused struct bufferevent *bufev,
+    __unused short what, void *data)
+{
@@ -661 +804,2 @@ static void window_pane_error_callback(__unused struct bufferevent *bufev,
-  if (window_pane_destroy_ready(wp)) server_destroy_pane(wp, 1);
+ if (window_pane_destroy_ready(wp))
+  server_destroy_pane(wp, 1);
@@ -663,2 +807,5 @@ static void window_pane_error_callback(__unused struct bufferevent *bufev,
-void window_pane_resize(struct window_pane *wp, u_int sx, u_int sy) {
-  if (sx == wp->sx && sy == wp->sy) return;
+void
+window_pane_resize(struct window_pane *wp, u_int sx, u_int sy)
+{
+ if (sx == wp->sx && sy == wp->sy)
+  return;
@@ -668 +815,2 @@ void window_pane_resize(struct window_pane *wp, u_int sx, u_int sy) {
-  if (wp->mode != NULL) wp->mode->resize(wp, sx, sy);
+ if (wp->mode != NULL)
+  wp->mode->resize(wp, sx, sy);
@@ -671,2 +819,4 @@ void window_pane_resize(struct window_pane *wp, u_int sx, u_int sy) {
-void window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
-                              int cursor) {
+void
+window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
+    int cursor)
+{
@@ -675,2 +825,4 @@ void window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
-  if (wp->saved_grid != NULL) return;
-  if (!options_get_number(wp->window->options, "alternate-screen")) return;
+ if (wp->saved_grid != NULL)
+  return;
+ if (!options_get_number(wp->window->options, "alternate-screen"))
+  return;
@@ -690,2 +842,4 @@ void window_pane_alternate_on(struct window_pane *wp, struct grid_cell *gc,
-void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-                               int cursor) {
+void
+window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
+    int cursor)
+{
@@ -694,2 +848,4 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-  if (wp->saved_grid == NULL) return;
-  if (!options_get_number(wp->window->options, "alternate-screen")) return;
+ if (wp->saved_grid == NULL)
+  return;
+ if (!options_get_number(wp->window->options, "alternate-screen"))
+  return;
@@ -698 +854,2 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-  if (sy > wp->saved_grid->sy) screen_resize(s, sx, wp->saved_grid->sy, 1);
+ if (sy > wp->saved_grid->sy)
+  screen_resize(s, sx, wp->saved_grid->sy, 1);
@@ -700,4 +857,8 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-  if (cursor) s->cx = wp->saved_cx;
-  if (s->cx > screen_size_x(s) - 1) s->cx = screen_size_x(s) - 1;
-  if (cursor) s->cy = wp->saved_cy;
-  if (s->cy > screen_size_y(s) - 1) s->cy = screen_size_y(s) - 1;
+ if (cursor)
+  s->cx = wp->saved_cx;
+ if (s->cx > screen_size_x(s) - 1)
+  s->cx = screen_size_x(s) - 1;
+ if (cursor)
+  s->cy = wp->saved_cy;
+ if (s->cy > screen_size_y(s) - 1)
+  s->cy = screen_size_y(s) - 1;
@@ -712,3 +873,7 @@ void window_pane_alternate_off(struct window_pane *wp, struct grid_cell *gc,
-void window_pane_set_palette(struct window_pane *wp, u_int n, int colour) {
-  if (n > 0xff) return;
-  if (wp->palette == NULL) wp->palette = xcalloc(0x100, sizeof *wp->palette);
+void
+window_pane_set_palette(struct window_pane *wp, u_int n, int colour)
+{
+ if (n > 0xff)
+  return;
+ if (wp->palette == NULL)
+  wp->palette = xcalloc(0x100, sizeof *wp->palette);
@@ -718,2 +883,5 @@ void window_pane_set_palette(struct window_pane *wp, u_int n, int colour) {
-void window_pane_unset_palette(struct window_pane *wp, u_int n) {
-  if (n > 0xff || wp->palette == NULL) return;
+void
+window_pane_unset_palette(struct window_pane *wp, u_int n)
+{
+ if (n > 0xff || wp->palette == NULL)
+  return;
@@ -723,2 +891,5 @@ void window_pane_unset_palette(struct window_pane *wp, u_int n) {
-void window_pane_reset_palette(struct window_pane *wp) {
-  if (wp->palette == NULL) return;
+void
+window_pane_reset_palette(struct window_pane *wp)
+{
+ if (wp->palette == NULL)
+  return;
@@ -729 +900,3 @@ void window_pane_reset_palette(struct window_pane *wp) {
-int window_pane_get_palette(const struct window_pane *wp, int c) {
+int
+window_pane_get_palette(const struct window_pane *wp, int c)
+{
@@ -731 +904,2 @@ int window_pane_get_palette(const struct window_pane *wp, int c) {
-  if (wp == NULL || wp->palette == NULL) return (-1);
+ if (wp == NULL || wp->palette == NULL)
+  return (-1);
@@ -739 +913,2 @@ int window_pane_get_palette(const struct window_pane *wp, int c) {
-  if (new == 0) return (-1);
+ if (new == 0)
+  return (-1);
@@ -742,2 +917,3 @@ int window_pane_get_palette(const struct window_pane *wp, int c) {
-static void window_pane_mode_timer(__unused int fd, __unused short events,
-                                   void *arg) {
+static void
+window_pane_mode_timer(__unused int fd, __unused short events, void *arg)
+{
@@ -751 +927,2 @@ static void window_pane_mode_timer(__unused int fd, __unused short events,
-    if (ioctl(wp->fd, FIONREAD, &n) == -1 || n > 0) window_pane_reset_mode(wp);
+  if (ioctl(wp->fd, FIONREAD, &n) == -1 || n > 0)
+   window_pane_reset_mode(wp);
@@ -754,2 +931,4 @@ static void window_pane_mode_timer(__unused int fd, __unused short events,
-int window_pane_set_mode(struct window_pane *wp, const struct window_mode *mode,
-                         struct cmd_find_state *fs, struct args *args) {
+int
+window_pane_set_mode(struct window_pane *wp, const struct window_mode *mode,
+    struct cmd_find_state *fs, struct args *args)
+{
@@ -758 +937,2 @@ int window_pane_set_mode(struct window_pane *wp, const struct window_mode *mode,
-  if (wp->mode != NULL) return (1);
+ if (wp->mode != NULL)
+  return (1);
@@ -763 +943,2 @@ int window_pane_set_mode(struct window_pane *wp, const struct window_mode *mode,
-  if ((s = wp->mode->init(wp, fs, args)) != NULL) wp->screen = s;
+ if ((s = wp->mode->init(wp, fs, args)) != NULL)
+  wp->screen = s;
@@ -769,2 +950,5 @@ int window_pane_set_mode(struct window_pane *wp, const struct window_mode *mode,
-void window_pane_reset_mode(struct window_pane *wp) {
-  if (wp->mode == NULL) return;
+void
+window_pane_reset_mode(struct window_pane *wp)
+{
+ if (wp->mode == NULL)
+  return;
@@ -780,2 +964,4 @@ void window_pane_reset_mode(struct window_pane *wp) {
-void window_pane_key(struct window_pane *wp, struct client *c,
-                     struct session *s, key_code key, struct mouse_event *m) {
+void
+window_pane_key(struct window_pane *wp, struct client *c, struct session *s,
+    key_code key, struct mouse_event *m)
+{
@@ -783 +969,2 @@ void window_pane_key(struct window_pane *wp, struct client *c,
-  if (KEYC_IS_MOUSE(key) && m == NULL) return;
+ if (KEYC_IS_MOUSE(key) && m == NULL)
+  return;
@@ -786 +973,2 @@ void window_pane_key(struct window_pane *wp, struct client *c,
-    if (wp->mode->key != NULL) wp->mode->key(wp, c, s, (key & ~KEYC_XTERM), m);
+  if (wp->mode->key != NULL)
+   wp->mode->key(wp, c, s, (key & ~KEYC_XTERM), m);
@@ -789 +977,2 @@ void window_pane_key(struct window_pane *wp, struct client *c,
-  if (wp->fd == -1 || wp->flags & PANE_INPUTOFF) return;
+ if (wp->fd == -1 || wp->flags & PANE_INPUTOFF)
+  return;
@@ -791 +980,2 @@ void window_pane_key(struct window_pane *wp, struct client *c,
-  if (KEYC_IS_MOUSE(key)) return;
+ if (KEYC_IS_MOUSE(key))
+  return;
@@ -794,3 +984,6 @@ void window_pane_key(struct window_pane *wp, struct client *c,
-      if (wp2 == wp || wp2->mode != NULL) continue;
-      if (wp2->fd == -1 || wp2->flags & PANE_INPUTOFF) continue;
-      if (window_pane_visible(wp2)) input_key(wp2, key, NULL);
+   if (wp2 == wp || wp2->mode != NULL)
+    continue;
+   if (wp2->fd == -1 || wp2->flags & PANE_INPUTOFF)
+    continue;
+   if (window_pane_visible(wp2))
+    input_key(wp2, key, NULL);
@@ -800 +993,3 @@ void window_pane_key(struct window_pane *wp, struct client *c,
-int window_pane_outside(struct window_pane *wp) {
+int
+window_pane_outside(struct window_pane *wp)
+{
@@ -802,2 +997,4 @@ int window_pane_outside(struct window_pane *wp) {
-  if (wp->xoff >= w->sx || wp->yoff >= w->sy) return (1);
-  if (wp->xoff + wp->sx > w->sx || wp->yoff + wp->sy > w->sy) return (1);
+ if (wp->xoff >= w->sx || wp->yoff >= w->sy)
+  return (1);
+ if (wp->xoff + wp->sx > w->sx || wp->yoff + wp->sy > w->sy)
+  return (1);
@@ -806,2 +1003,5 @@ int window_pane_outside(struct window_pane *wp) {
-int window_pane_visible(struct window_pane *wp) {
-  if (wp->layout_cell == NULL) return (0);
+int
+window_pane_visible(struct window_pane *wp)
+{
+ if (wp->layout_cell == NULL)
+  return (0);
@@ -810 +1010,3 @@ int window_pane_visible(struct window_pane *wp) {
-u_int window_pane_search(struct window_pane *wp, const char *searchstr) {
+u_int
+window_pane_search(struct window_pane *wp, const char *searchstr)
+{
@@ -824 +1026,2 @@ u_int window_pane_search(struct window_pane *wp, const char *searchstr) {
-  if (i == screen_size_y(s)) return (0);
+ if (i == screen_size_y(s))
+  return (0);
@@ -827,2 +1030,3 @@ u_int window_pane_search(struct window_pane *wp, const char *searchstr) {
-static struct window_pane *window_pane_choose_best(struct window_pane **list,
-                                                   u_int size) {
+static struct window_pane *
+window_pane_choose_best(struct window_pane **list, u_int size)
+{
@@ -831 +1035,2 @@ static struct window_pane *window_pane_choose_best(struct window_pane **list,
-  if (size == 0) return (NULL);
+ if (size == 0)
+  return (NULL);
@@ -835 +1040,2 @@ static struct window_pane *window_pane_choose_best(struct window_pane **list,
-    if (next->active_point > best->active_point) best = next;
+  if (next->active_point > best->active_point)
+   best = next;
@@ -839 +1045,3 @@ static struct window_pane *window_pane_choose_best(struct window_pane **list,
-struct window_pane *window_pane_find_up(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_up(struct window_pane *wp)
+{
@@ -843 +1051,2 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -853,2 +1062,4 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-    if (next == wp || !window_pane_visible(next)) continue;
-    if (next->yoff + next->sy + 1 != edge) continue;
+  if (next == wp || !window_pane_visible(next))
+   continue;
+  if (next->yoff + next->sy + 1 != edge)
+   continue;
@@ -863 +1074,2 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-    if (!found) continue;
+  if (!found)
+   continue;
@@ -871 +1083,3 @@ struct window_pane *window_pane_find_up(struct window_pane *wp) {
-struct window_pane *window_pane_find_down(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_down(struct window_pane *wp)
+{
@@ -875 +1089,2 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -885,2 +1100,4 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-    if (next == wp || !window_pane_visible(next)) continue;
-    if (next->yoff != edge) continue;
+  if (next == wp || !window_pane_visible(next))
+   continue;
+  if (next->yoff != edge)
+   continue;
@@ -895 +1112,2 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-    if (!found) continue;
+  if (!found)
+   continue;
@@ -903 +1121,3 @@ struct window_pane *window_pane_find_down(struct window_pane *wp) {
-struct window_pane *window_pane_find_left(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_left(struct window_pane *wp)
+{
@@ -907 +1127,2 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -911 +1132,2 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-  if (edge == 0) edge = wp->window->sx + 1;
+ if (edge == 0)
+  edge = wp->window->sx + 1;
@@ -915,2 +1137,4 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-    if (next == wp || !window_pane_visible(next)) continue;
-    if (next->xoff + next->sx + 1 != edge) continue;
+  if (next == wp || !window_pane_visible(next))
+   continue;
+  if (next->xoff + next->sx + 1 != edge)
+   continue;
@@ -925 +1149,2 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-    if (!found) continue;
+  if (!found)
+   continue;
@@ -933 +1158,3 @@ struct window_pane *window_pane_find_left(struct window_pane *wp) {
-struct window_pane *window_pane_find_right(struct window_pane *wp) {
+struct window_pane *
+window_pane_find_right(struct window_pane *wp)
+{
@@ -937 +1164,2 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-  if (wp == NULL || !window_pane_visible(wp)) return (NULL);
+ if (wp == NULL || !window_pane_visible(wp))
+  return (NULL);
@@ -941 +1169,2 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-  if (edge >= wp->window->sx) edge = 0;
+ if (edge >= wp->window->sx)
+  edge = 0;
@@ -945,2 +1174,4 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-    if (next == wp || !window_pane_visible(next)) continue;
-    if (next->xoff != edge) continue;
+  if (next == wp || !window_pane_visible(next))
+   continue;
+  if (next->xoff != edge)
+   continue;
@@ -955 +1186,2 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-    if (!found) continue;
+  if (!found)
+   continue;
@@ -963 +1195,3 @@ struct window_pane *window_pane_find_right(struct window_pane *wp) {
-void winlink_clear_flags(struct winlink *wl) {
+void
+winlink_clear_flags(struct winlink *wl)
+{
@@ -973 +1207,3 @@ void winlink_clear_flags(struct winlink *wl) {
-int winlink_shuffle_up(struct session *s, struct winlink *wl) {
+int
+winlink_shuffle_up(struct session *s, struct winlink *wl)
+{
@@ -977 +1213,2 @@ int winlink_shuffle_up(struct session *s, struct winlink *wl) {
-    if (winlink_find_by_index(&s->windows, last) == NULL) break;
+  if (winlink_find_by_index(&s->windows, last) == NULL)
+   break;
@@ -979 +1216,2 @@ int winlink_shuffle_up(struct session *s, struct winlink *wl) {
-  if (last == INT_MAX) return (-1);
+ if (last == INT_MAX)
+  return (-1);
